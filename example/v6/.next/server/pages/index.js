module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./pages/index.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../dist/index.js":
/*!************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/dist/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./web3-react-connector.cjs.development.js */ \"../../dist/web3-react-connector.cjs.development.js\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3IvZGlzdC9pbmRleC5qcz80YWE0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDWTs7QUFFWixJQUFJLEtBQXFDLEVBQUUsRUFFMUM7QUFDRCxtQkFBbUIsbUJBQU8sQ0FBQyxxR0FBMkM7QUFDdEUiLCJmaWxlIjoiLi4vLi4vZGlzdC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuJ3VzZSBzdHJpY3QnXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi93ZWIzLXJlYWN0LWNvbm5lY3Rvci5janMucHJvZHVjdGlvbi5taW4uanMnKVxufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3dlYjMtcmVhY3QtY29ubmVjdG9yLmNqcy5kZXZlbG9wbWVudC5qcycpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../dist/index.js\n");

/***/ }),

/***/ "../../dist/web3-react-connector.cjs.development.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/dist/web3-react-connector.cjs.development.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) { return e; } else {\n    var n = {};\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      });\n    }\n    n['default'] = e;\n    return n;\n  }\n}\n\nvar abstractConnector = __webpack_require__(/*! @web3-react/abstract-connector */ \"../../node_modules/@web3-react/abstract-connector/dist/index.js\");\nvar invariant = _interopDefault(__webpack_require__(/*! tiny-invariant */ \"../../node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\"));\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar chainIdToNetwork = {\n  1: 'mainnet',\n  4: 'rinkeby',\n  137: 'polygon',\n  80001: 'mumbai'\n};\nvar BitskiConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(BitskiConnector, _AbstractConnector);\n\n  function BitskiConnector(_ref) {\n    var _this;\n\n    var clientId = _ref.clientId,\n        chainId = _ref.chainId,\n        callbackUrl = _ref.callbackUrl;\n    !Object.keys(chainIdToNetwork).includes(chainId.toString()) ?  invariant(false, \"Unsupported chainId \" + chainId)  : void 0;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: [chainId]\n    }) || this;\n    _this.clientId = clientId;\n    _this.chainId = chainId;\n    _this.callbackUrl = callbackUrl;\n    return _this;\n  }\n\n  var _proto = BitskiConnector.prototype;\n\n  _proto.activate = function activate() {\n    try {\n      var _temp3 = function _temp3() {\n        var network = {\n          networkName: chainIdToNetwork[_this3.chainId]\n        };\n        return Promise.resolve(_this3.bitski.signIn().then(function (accounts) {\n          return accounts[0];\n        })).then(function (account) {\n          return {\n            provider: _this3.bitski.getProvider(network),\n            chainId: _this3.chainId,\n            account: account\n          };\n        });\n      };\n\n      var _this3 = this;\n\n      var _temp4 = function () {\n        if (!_this3.bitski) {\n          return Promise.resolve(new Promise(function (resolve) { resolve(_interopNamespace(__webpack_require__(/*! bitski */ \"../../node_modules/bitski/lib/bitski.js\"))); })).then(function (_ref2) {\n            var Bitski = _ref2.Bitski;\n            _this3.bitski = new Bitski(_this3.clientId, _this3.callbackUrl);\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getProvider = function getProvider(chainId) {\n    try {\n      var _this5 = this;\n\n      var network = {\n        networkName: chainIdToNetwork[chainId || _this5.chainId]\n      };\n      return Promise.resolve(_this5.bitski.getProvider(network));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n\n      return Promise.resolve(_this7.chainId);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n\n      return Promise.resolve(_this9.bitski.getProvider().send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.deactivate = function deactivate() {};\n\n  _proto.close = function close() {\n    try {\n      var _this11 = this;\n\n      return Promise.resolve(_this11.bitski.signOut()).then(function () {\n        _this11.emitDeactivate();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return BitskiConnector;\n}(abstractConnector.AbstractConnector);\n\nexports.BitskiConnector = BitskiConnector;\n//# sourceMappingURL=web3-react-connector.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3IvZGlzdC93ZWIzLXJlYWN0LWNvbm5lY3Rvci5janMuZGV2ZWxvcG1lbnQuanM/MzA4NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiwrQkFBK0IsaUZBQWlGOztBQUVoSDtBQUNBLDBCQUEwQixVQUFVLEVBQUU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QixtQkFBTyxDQUFDLHVHQUFnQztBQUNoRSxnQ0FBZ0MsbUJBQU8sQ0FBQyxvRkFBZ0I7O0FBRXhEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxpRUFBaUUsMkJBQTJCLG1CQUFPLENBQUMsdURBQVEsSUFBSSxFQUFFO0FBQ2xIO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPOztBQUVQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBIiwiZmlsZSI6Ii4uLy4uL2Rpc3Qvd2ViMy1yZWFjdC1jb25uZWN0b3IuY2pzLmRldmVsb3BtZW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQgKGV4KSB7IHJldHVybiAoZXggJiYgKHR5cGVvZiBleCA9PT0gJ29iamVjdCcpICYmICdkZWZhdWx0JyBpbiBleCkgPyBleFsnZGVmYXVsdCddIDogZXg7IH1cblxuZnVuY3Rpb24gX2ludGVyb3BOYW1lc3BhY2UoZSkge1xuICBpZiAoZSAmJiBlLl9fZXNNb2R1bGUpIHsgcmV0dXJuIGU7IH0gZWxzZSB7XG4gICAgdmFyIG4gPSB7fTtcbiAgICBpZiAoZSkge1xuICAgICAgT2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbiAoaykge1xuICAgICAgICB2YXIgZCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgayk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCBrLCBkLmdldCA/IGQgOiB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBlW2tdO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgblsnZGVmYXVsdCddID0gZTtcbiAgICByZXR1cm4gbjtcbiAgfVxufVxuXG52YXIgYWJzdHJhY3RDb25uZWN0b3IgPSByZXF1aXJlKCdAd2ViMy1yZWFjdC9hYnN0cmFjdC1jb25uZWN0b3InKTtcbnZhciBpbnZhcmlhbnQgPSBfaW50ZXJvcERlZmF1bHQocmVxdWlyZSgndGlueS1pbnZhcmlhbnQnKSk7XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcblxuICBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxuXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cblxudmFyIGNoYWluSWRUb05ldHdvcmsgPSB7XG4gIDE6ICdtYWlubmV0JyxcbiAgNDogJ3JpbmtlYnknLFxuICAxMzc6ICdwb2x5Z29uJyxcbiAgODAwMDE6ICdtdW1iYWknXG59O1xudmFyIEJpdHNraUNvbm5lY3RvciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Fic3RyYWN0Q29ubmVjdG9yKSB7XG4gIF9pbmhlcml0c0xvb3NlKEJpdHNraUNvbm5lY3RvciwgX0Fic3RyYWN0Q29ubmVjdG9yKTtcblxuICBmdW5jdGlvbiBCaXRza2lDb25uZWN0b3IoX3JlZikge1xuICAgIHZhciBfdGhpcztcblxuICAgIHZhciBjbGllbnRJZCA9IF9yZWYuY2xpZW50SWQsXG4gICAgICAgIGNoYWluSWQgPSBfcmVmLmNoYWluSWQsXG4gICAgICAgIGNhbGxiYWNrVXJsID0gX3JlZi5jYWxsYmFja1VybDtcbiAgICAhT2JqZWN0LmtleXMoY2hhaW5JZFRvTmV0d29yaykuaW5jbHVkZXMoY2hhaW5JZC50b1N0cmluZygpKSA/ICBpbnZhcmlhbnQoZmFsc2UsIFwiVW5zdXBwb3J0ZWQgY2hhaW5JZCBcIiArIGNoYWluSWQpICA6IHZvaWQgMDtcbiAgICBfdGhpcyA9IF9BYnN0cmFjdENvbm5lY3Rvci5jYWxsKHRoaXMsIHtcbiAgICAgIHN1cHBvcnRlZENoYWluSWRzOiBbY2hhaW5JZF1cbiAgICB9KSB8fCB0aGlzO1xuICAgIF90aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XG4gICAgX3RoaXMuY2hhaW5JZCA9IGNoYWluSWQ7XG4gICAgX3RoaXMuY2FsbGJhY2tVcmwgPSBjYWxsYmFja1VybDtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQml0c2tpQ29ubmVjdG9yLnByb3RvdHlwZTtcblxuICBfcHJvdG8uYWN0aXZhdGUgPSBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIF90ZW1wMyA9IGZ1bmN0aW9uIF90ZW1wMygpIHtcbiAgICAgICAgdmFyIG5ldHdvcmsgPSB7XG4gICAgICAgICAgbmV0d29ya05hbWU6IGNoYWluSWRUb05ldHdvcmtbX3RoaXMzLmNoYWluSWRdXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoX3RoaXMzLmJpdHNraS5zaWduSW4oKS50aGVuKGZ1bmN0aW9uIChhY2NvdW50cykge1xuICAgICAgICAgIHJldHVybiBhY2NvdW50c1swXTtcbiAgICAgICAgfSkpLnRoZW4oZnVuY3Rpb24gKGFjY291bnQpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcHJvdmlkZXI6IF90aGlzMy5iaXRza2kuZ2V0UHJvdmlkZXIobmV0d29yayksXG4gICAgICAgICAgICBjaGFpbklkOiBfdGhpczMuY2hhaW5JZCxcbiAgICAgICAgICAgIGFjY291bnQ6IGFjY291bnRcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RlbXA0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIV90aGlzMy5iaXRza2kpIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUoX2ludGVyb3BOYW1lc3BhY2UocmVxdWlyZSgnYml0c2tpJykpKTsgfSkpLnRoZW4oZnVuY3Rpb24gKF9yZWYyKSB7XG4gICAgICAgICAgICB2YXIgQml0c2tpID0gX3JlZjIuQml0c2tpO1xuICAgICAgICAgICAgX3RoaXMzLmJpdHNraSA9IG5ldyBCaXRza2koX3RoaXMzLmNsaWVudElkLCBfdGhpczMuY2FsbGJhY2tVcmwpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KCk7XG5cbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoX3RlbXA0ICYmIF90ZW1wNC50aGVuID8gX3RlbXA0LnRoZW4oX3RlbXAzKSA6IF90ZW1wMyhfdGVtcDQpKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5nZXRQcm92aWRlciA9IGZ1bmN0aW9uIGdldFByb3ZpZGVyKGNoYWluSWQpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIHZhciBuZXR3b3JrID0ge1xuICAgICAgICBuZXR3b3JrTmFtZTogY2hhaW5JZFRvTmV0d29ya1tjaGFpbklkIHx8IF90aGlzNS5jaGFpbklkXVxuICAgICAgfTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoX3RoaXM1LmJpdHNraS5nZXRQcm92aWRlcihuZXR3b3JrKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGUpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uZ2V0Q2hhaW5JZCA9IGZ1bmN0aW9uIGdldENoYWluSWQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKF90aGlzNy5jaGFpbklkKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5nZXRBY2NvdW50ID0gZnVuY3Rpb24gZ2V0QWNjb3VudCgpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIF90aGlzOSA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoX3RoaXM5LmJpdHNraS5nZXRQcm92aWRlcigpLnNlbmQoJ2V0aF9hY2NvdW50cycpLnRoZW4oZnVuY3Rpb24gKGFjY291bnRzKSB7XG4gICAgICAgIHJldHVybiBhY2NvdW50c1swXTtcbiAgICAgIH0pKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5kZWFjdGl2YXRlID0gZnVuY3Rpb24gZGVhY3RpdmF0ZSgpIHt9O1xuXG4gIF9wcm90by5jbG9zZSA9IGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgIHRyeSB7XG4gICAgICB2YXIgX3RoaXMxMSA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoX3RoaXMxMS5iaXRza2kuc2lnbk91dCgpKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMxMS5lbWl0RGVhY3RpdmF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGUpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gQml0c2tpQ29ubmVjdG9yO1xufShhYnN0cmFjdENvbm5lY3Rvci5BYnN0cmFjdENvbm5lY3Rvcik7XG5cbmV4cG9ydHMuQml0c2tpQ29ubmVjdG9yID0gQml0c2tpQ29ubmVjdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2ViMy1yZWFjdC1jb25uZWN0b3IuY2pzLmRldmVsb3BtZW50LmpzLm1hcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../dist/web3-react-connector.cjs.development.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/base-provider.js":
/*!******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/base-provider.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst provider_engine_error_1 = __webpack_require__(/*! ./errors/provider-engine-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/provider-engine-error.js\");\nconst create_payload_1 = __webpack_require__(/*! ./util/create-payload */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js\");\n// The base class which ProviderEngine will extend from that provides the basic Web3 Provider interface\nclass BaseProvider extends events_1.EventEmitter {\n    // Modern send method\n    send(method, params = []) {\n        const payload = create_payload_1.createPayload({ method, params });\n        return this.sendPayload(payload).then((response) => {\n            return response.result;\n        });\n    }\n    // Legacy sendAsync method\n    sendAsync(payload, cb) {\n        this.sendPayload(payload).then((response) => {\n            cb(null, response);\n        }).catch((error) => {\n            cb(error, null);\n        });\n    }\n    // Whether or not this provider supports subscriptions\n    supportsSubscriptions() {\n        // Override this in your subclass if you support subscriptions\n        return false;\n    }\n    // Method to subscribe to a given subscription type\n    subscribe(_subscribeMethod, _subscriptionMethod, _parameters) {\n        // Override this with subscription implementation\n        return Promise.reject(new provider_engine_error_1.ProviderEngineError('Subscriptions are not supported', provider_engine_error_1.ProviderEngineErrorCode.UnsupportedFeature));\n    }\n    // Method to unsubscribe\n    unsubscribe(_subscriptionId, _unsubscribeMethod) {\n        // Override this with unsubscribe implementation\n        return Promise.reject(new provider_engine_error_1.ProviderEngineError('Subscriptions are not supported', provider_engine_error_1.ProviderEngineErrorCode.UnsupportedFeature));\n    }\n}\nexports.default = BaseProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvYmFzZS1wcm92aWRlci5qcz85Yzg3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsZ0NBQWdDLG1CQUFPLENBQUMsZ0lBQWdDO0FBQ3hFLHlCQUF5QixtQkFBTyxDQUFDLDhHQUF1QjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxpQkFBaUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy9iYXNlLXByb3ZpZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBldmVudHNfMSA9IHJlcXVpcmUoXCJldmVudHNcIik7XG5jb25zdCBwcm92aWRlcl9lbmdpbmVfZXJyb3JfMSA9IHJlcXVpcmUoXCIuL2Vycm9ycy9wcm92aWRlci1lbmdpbmUtZXJyb3JcIik7XG5jb25zdCBjcmVhdGVfcGF5bG9hZF8xID0gcmVxdWlyZShcIi4vdXRpbC9jcmVhdGUtcGF5bG9hZFwiKTtcbi8vIFRoZSBiYXNlIGNsYXNzIHdoaWNoIFByb3ZpZGVyRW5naW5lIHdpbGwgZXh0ZW5kIGZyb20gdGhhdCBwcm92aWRlcyB0aGUgYmFzaWMgV2ViMyBQcm92aWRlciBpbnRlcmZhY2VcbmNsYXNzIEJhc2VQcm92aWRlciBleHRlbmRzIGV2ZW50c18xLkV2ZW50RW1pdHRlciB7XG4gICAgLy8gTW9kZXJuIHNlbmQgbWV0aG9kXG4gICAgc2VuZChtZXRob2QsIHBhcmFtcyA9IFtdKSB7XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBjcmVhdGVfcGF5bG9hZF8xLmNyZWF0ZVBheWxvYWQoeyBtZXRob2QsIHBhcmFtcyB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VuZFBheWxvYWQocGF5bG9hZCkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5yZXN1bHQ7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBMZWdhY3kgc2VuZEFzeW5jIG1ldGhvZFxuICAgIHNlbmRBc3luYyhwYXlsb2FkLCBjYikge1xuICAgICAgICB0aGlzLnNlbmRQYXlsb2FkKHBheWxvYWQpLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICBjYihudWxsLCByZXNwb25zZSk7XG4gICAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgY2IoZXJyb3IsIG51bGwpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gV2hldGhlciBvciBub3QgdGhpcyBwcm92aWRlciBzdXBwb3J0cyBzdWJzY3JpcHRpb25zXG4gICAgc3VwcG9ydHNTdWJzY3JpcHRpb25zKCkge1xuICAgICAgICAvLyBPdmVycmlkZSB0aGlzIGluIHlvdXIgc3ViY2xhc3MgaWYgeW91IHN1cHBvcnQgc3Vic2NyaXB0aW9uc1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIE1ldGhvZCB0byBzdWJzY3JpYmUgdG8gYSBnaXZlbiBzdWJzY3JpcHRpb24gdHlwZVxuICAgIHN1YnNjcmliZShfc3Vic2NyaWJlTWV0aG9kLCBfc3Vic2NyaXB0aW9uTWV0aG9kLCBfcGFyYW1ldGVycykge1xuICAgICAgICAvLyBPdmVycmlkZSB0aGlzIHdpdGggc3Vic2NyaXB0aW9uIGltcGxlbWVudGF0aW9uXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgcHJvdmlkZXJfZW5naW5lX2Vycm9yXzEuUHJvdmlkZXJFbmdpbmVFcnJvcignU3Vic2NyaXB0aW9ucyBhcmUgbm90IHN1cHBvcnRlZCcsIHByb3ZpZGVyX2VuZ2luZV9lcnJvcl8xLlByb3ZpZGVyRW5naW5lRXJyb3JDb2RlLlVuc3VwcG9ydGVkRmVhdHVyZSkpO1xuICAgIH1cbiAgICAvLyBNZXRob2QgdG8gdW5zdWJzY3JpYmVcbiAgICB1bnN1YnNjcmliZShfc3Vic2NyaXB0aW9uSWQsIF91bnN1YnNjcmliZU1ldGhvZCkge1xuICAgICAgICAvLyBPdmVycmlkZSB0aGlzIHdpdGggdW5zdWJzY3JpYmUgaW1wbGVtZW50YXRpb25cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBwcm92aWRlcl9lbmdpbmVfZXJyb3JfMS5Qcm92aWRlckVuZ2luZUVycm9yKCdTdWJzY3JpcHRpb25zIGFyZSBub3Qgc3VwcG9ydGVkJywgcHJvdmlkZXJfZW5naW5lX2Vycm9yXzEuUHJvdmlkZXJFbmdpbmVFcnJvckNvZGUuVW5zdXBwb3J0ZWRGZWF0dXJlKSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gQmFzZVByb3ZpZGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/base-provider.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/errors/block-tracker-error.js":
/*!*******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/errors/block-tracker-error.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BlockTrackerErrorCode;\n(function (BlockTrackerErrorCode) {\n    // Block data was not found after retries\n    BlockTrackerErrorCode[BlockTrackerErrorCode[\"BlockNotFound\"] = 3000] = \"BlockNotFound\";\n})(BlockTrackerErrorCode = exports.BlockTrackerErrorCode || (exports.BlockTrackerErrorCode = {}));\n/**\n * Represents errors that occur in the block tracker\n */\nclass BlockTrackerError extends Error {\n    static BlockNotFound(blockNumber) {\n        return new BlockTrackerError(`Could not load block ${blockNumber}`, BlockTrackerErrorCode.BlockNotFound);\n    }\n    constructor(message, code) {\n        super(message);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, BlockTrackerError);\n        }\n        this.code = code;\n    }\n}\nexports.BlockTrackerError = BlockTrackerError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvZXJyb3JzL2Jsb2NrLXRyYWNrZXItZXJyb3IuanM/YzRhZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4RkFBOEY7QUFDL0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxZQUFZO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvZXJyb3JzL2Jsb2NrLXRyYWNrZXItZXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBCbG9ja1RyYWNrZXJFcnJvckNvZGU7XG4oZnVuY3Rpb24gKEJsb2NrVHJhY2tlckVycm9yQ29kZSkge1xuICAgIC8vIEJsb2NrIGRhdGEgd2FzIG5vdCBmb3VuZCBhZnRlciByZXRyaWVzXG4gICAgQmxvY2tUcmFja2VyRXJyb3JDb2RlW0Jsb2NrVHJhY2tlckVycm9yQ29kZVtcIkJsb2NrTm90Rm91bmRcIl0gPSAzMDAwXSA9IFwiQmxvY2tOb3RGb3VuZFwiO1xufSkoQmxvY2tUcmFja2VyRXJyb3JDb2RlID0gZXhwb3J0cy5CbG9ja1RyYWNrZXJFcnJvckNvZGUgfHwgKGV4cG9ydHMuQmxvY2tUcmFja2VyRXJyb3JDb2RlID0ge30pKTtcbi8qKlxuICogUmVwcmVzZW50cyBlcnJvcnMgdGhhdCBvY2N1ciBpbiB0aGUgYmxvY2sgdHJhY2tlclxuICovXG5jbGFzcyBCbG9ja1RyYWNrZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBzdGF0aWMgQmxvY2tOb3RGb3VuZChibG9ja051bWJlcikge1xuICAgICAgICByZXR1cm4gbmV3IEJsb2NrVHJhY2tlckVycm9yKGBDb3VsZCBub3QgbG9hZCBibG9jayAke2Jsb2NrTnVtYmVyfWAsIEJsb2NrVHJhY2tlckVycm9yQ29kZS5CbG9ja05vdEZvdW5kKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgY29kZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgLy8gTWFpbnRhaW5zIHByb3BlciBzdGFjayB0cmFjZSBmb3Igd2hlcmUgb3VyIGVycm9yIHdhcyB0aHJvd24gKG9ubHkgYXZhaWxhYmxlIG9uIFY4KVxuICAgICAgICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICAgICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEJsb2NrVHJhY2tlckVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxvY2tUcmFja2VyRXJyb3IgPSBCbG9ja1RyYWNrZXJFcnJvcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/errors/block-tracker-error.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/errors/gas-price-error.js":
/*!***************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/errors/gas-price-error.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar GasPriceErrorCode;\n(function (GasPriceErrorCode) {\n    GasPriceErrorCode[GasPriceErrorCode[\"BlockNotFound\"] = 4000] = \"BlockNotFound\";\n})(GasPriceErrorCode = exports.GasPriceErrorCode || (exports.GasPriceErrorCode = {}));\n/**\n * Represents errors that occur in the gas price subprovider\n */\nclass GasPriceError extends Error {\n    static BlockNotFound(blockNumber) {\n        const msg = `Could not calculate gas. Block ${blockNumber} was not found`;\n        return new GasPriceError(msg, GasPriceErrorCode.BlockNotFound);\n    }\n    constructor(message, code) {\n        super(message);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, GasPriceError);\n        }\n        this.code = code;\n    }\n}\nexports.GasPriceError = GasPriceError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvZXJyb3JzL2dhcy1wcmljZS1lcnJvci5qcz9kZWRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrRkFBa0Y7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxZQUFZO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy9lcnJvcnMvZ2FzLXByaWNlLWVycm9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgR2FzUHJpY2VFcnJvckNvZGU7XG4oZnVuY3Rpb24gKEdhc1ByaWNlRXJyb3JDb2RlKSB7XG4gICAgR2FzUHJpY2VFcnJvckNvZGVbR2FzUHJpY2VFcnJvckNvZGVbXCJCbG9ja05vdEZvdW5kXCJdID0gNDAwMF0gPSBcIkJsb2NrTm90Rm91bmRcIjtcbn0pKEdhc1ByaWNlRXJyb3JDb2RlID0gZXhwb3J0cy5HYXNQcmljZUVycm9yQ29kZSB8fCAoZXhwb3J0cy5HYXNQcmljZUVycm9yQ29kZSA9IHt9KSk7XG4vKipcbiAqIFJlcHJlc2VudHMgZXJyb3JzIHRoYXQgb2NjdXIgaW4gdGhlIGdhcyBwcmljZSBzdWJwcm92aWRlclxuICovXG5jbGFzcyBHYXNQcmljZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIHN0YXRpYyBCbG9ja05vdEZvdW5kKGJsb2NrTnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IG1zZyA9IGBDb3VsZCBub3QgY2FsY3VsYXRlIGdhcy4gQmxvY2sgJHtibG9ja051bWJlcn0gd2FzIG5vdCBmb3VuZGA7XG4gICAgICAgIHJldHVybiBuZXcgR2FzUHJpY2VFcnJvcihtc2csIEdhc1ByaWNlRXJyb3JDb2RlLkJsb2NrTm90Rm91bmQpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb2RlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICAvLyBNYWludGFpbnMgcHJvcGVyIHN0YWNrIHRyYWNlIGZvciB3aGVyZSBvdXIgZXJyb3Igd2FzIHRocm93biAob25seSBhdmFpbGFibGUgb24gVjgpXG4gICAgICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgICAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgR2FzUHJpY2VFcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB9XG59XG5leHBvcnRzLkdhc1ByaWNlRXJyb3IgPSBHYXNQcmljZUVycm9yO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/errors/gas-price-error.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/errors/provider-engine-error.js":
/*!*********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/errors/provider-engine-error.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ProviderEngineErrorCode;\n(function (ProviderEngineErrorCode) {\n    ProviderEngineErrorCode[ProviderEngineErrorCode[\"UnhandledRequest\"] = 1000] = \"UnhandledRequest\";\n    ProviderEngineErrorCode[ProviderEngineErrorCode[\"MissingImplementation\"] = 1001] = \"MissingImplementation\";\n    ProviderEngineErrorCode[ProviderEngineErrorCode[\"UnsupportedFeature\"] = 1002] = \"UnsupportedFeature\";\n})(ProviderEngineErrorCode = exports.ProviderEngineErrorCode || (exports.ProviderEngineErrorCode = {}));\n/**\n * Represents errors specific to ProviderEngine\n */\nclass ProviderEngineError extends Error {\n    constructor(message, code) {\n        super(message);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ProviderEngineError);\n        }\n        this.code = code;\n    }\n}\nexports.ProviderEngineError = ProviderEngineError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvZXJyb3JzL3Byb3ZpZGVyLWVuZ2luZS1lcnJvci5qcz9mMTM4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0dBQW9HO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvZXJyb3JzL3Byb3ZpZGVyLWVuZ2luZS1lcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFByb3ZpZGVyRW5naW5lRXJyb3JDb2RlO1xuKGZ1bmN0aW9uIChQcm92aWRlckVuZ2luZUVycm9yQ29kZSkge1xuICAgIFByb3ZpZGVyRW5naW5lRXJyb3JDb2RlW1Byb3ZpZGVyRW5naW5lRXJyb3JDb2RlW1wiVW5oYW5kbGVkUmVxdWVzdFwiXSA9IDEwMDBdID0gXCJVbmhhbmRsZWRSZXF1ZXN0XCI7XG4gICAgUHJvdmlkZXJFbmdpbmVFcnJvckNvZGVbUHJvdmlkZXJFbmdpbmVFcnJvckNvZGVbXCJNaXNzaW5nSW1wbGVtZW50YXRpb25cIl0gPSAxMDAxXSA9IFwiTWlzc2luZ0ltcGxlbWVudGF0aW9uXCI7XG4gICAgUHJvdmlkZXJFbmdpbmVFcnJvckNvZGVbUHJvdmlkZXJFbmdpbmVFcnJvckNvZGVbXCJVbnN1cHBvcnRlZEZlYXR1cmVcIl0gPSAxMDAyXSA9IFwiVW5zdXBwb3J0ZWRGZWF0dXJlXCI7XG59KShQcm92aWRlckVuZ2luZUVycm9yQ29kZSA9IGV4cG9ydHMuUHJvdmlkZXJFbmdpbmVFcnJvckNvZGUgfHwgKGV4cG9ydHMuUHJvdmlkZXJFbmdpbmVFcnJvckNvZGUgPSB7fSkpO1xuLyoqXG4gKiBSZXByZXNlbnRzIGVycm9ycyBzcGVjaWZpYyB0byBQcm92aWRlckVuZ2luZVxuICovXG5jbGFzcyBQcm92aWRlckVuZ2luZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGNvZGUpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIC8vIE1haW50YWlucyBwcm9wZXIgc3RhY2sgdHJhY2UgZm9yIHdoZXJlIG91ciBlcnJvciB3YXMgdGhyb3duIChvbmx5IGF2YWlsYWJsZSBvbiBWOClcbiAgICAgICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBQcm92aWRlckVuZ2luZUVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIH1cbn1cbmV4cG9ydHMuUHJvdmlkZXJFbmdpbmVFcnJvciA9IFByb3ZpZGVyRW5naW5lRXJyb3I7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/errors/provider-engine-error.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/errors/subscription-error.js":
/*!******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/errors/subscription-error.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SubscriptionErrorCode;\n(function (SubscriptionErrorCode) {\n    SubscriptionErrorCode[SubscriptionErrorCode[\"UnsupportedType\"] = 2000] = \"UnsupportedType\";\n    SubscriptionErrorCode[SubscriptionErrorCode[\"NotFound\"] = 2001] = \"NotFound\";\n})(SubscriptionErrorCode = exports.SubscriptionErrorCode || (exports.SubscriptionErrorCode = {}));\n/**\n * Represents an error that occurs in the subscriptions subprovider\n */\nclass SubscriptionError extends Error {\n    static UnsupportedType(type) {\n        return new SubscriptionError(`Unsupported subscription type: ${type}`, SubscriptionErrorCode.UnsupportedType);\n    }\n    static NotFound(subscriptionId) {\n        return new SubscriptionError(`Subscription with id ${subscriptionId} not found`, SubscriptionErrorCode.NotFound);\n    }\n    constructor(message, code) {\n        super(message);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, SubscriptionError);\n        }\n        this.code = code;\n    }\n}\nexports.SubscriptionError = SubscriptionError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvZXJyb3JzL3N1YnNjcmlwdGlvbi1lcnJvci5qcz9iMTczIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhGQUE4RjtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLEtBQUs7QUFDNUU7QUFDQTtBQUNBLDZEQUE2RCxlQUFlO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvZXJyb3JzL3N1YnNjcmlwdGlvbi1lcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFN1YnNjcmlwdGlvbkVycm9yQ29kZTtcbihmdW5jdGlvbiAoU3Vic2NyaXB0aW9uRXJyb3JDb2RlKSB7XG4gICAgU3Vic2NyaXB0aW9uRXJyb3JDb2RlW1N1YnNjcmlwdGlvbkVycm9yQ29kZVtcIlVuc3VwcG9ydGVkVHlwZVwiXSA9IDIwMDBdID0gXCJVbnN1cHBvcnRlZFR5cGVcIjtcbiAgICBTdWJzY3JpcHRpb25FcnJvckNvZGVbU3Vic2NyaXB0aW9uRXJyb3JDb2RlW1wiTm90Rm91bmRcIl0gPSAyMDAxXSA9IFwiTm90Rm91bmRcIjtcbn0pKFN1YnNjcmlwdGlvbkVycm9yQ29kZSA9IGV4cG9ydHMuU3Vic2NyaXB0aW9uRXJyb3JDb2RlIHx8IChleHBvcnRzLlN1YnNjcmlwdGlvbkVycm9yQ29kZSA9IHt9KSk7XG4vKipcbiAqIFJlcHJlc2VudHMgYW4gZXJyb3IgdGhhdCBvY2N1cnMgaW4gdGhlIHN1YnNjcmlwdGlvbnMgc3VicHJvdmlkZXJcbiAqL1xuY2xhc3MgU3Vic2NyaXB0aW9uRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgc3RhdGljIFVuc3VwcG9ydGVkVHlwZSh0eXBlKSB7XG4gICAgICAgIHJldHVybiBuZXcgU3Vic2NyaXB0aW9uRXJyb3IoYFVuc3VwcG9ydGVkIHN1YnNjcmlwdGlvbiB0eXBlOiAke3R5cGV9YCwgU3Vic2NyaXB0aW9uRXJyb3JDb2RlLlVuc3VwcG9ydGVkVHlwZSk7XG4gICAgfVxuICAgIHN0YXRpYyBOb3RGb3VuZChzdWJzY3JpcHRpb25JZCkge1xuICAgICAgICByZXR1cm4gbmV3IFN1YnNjcmlwdGlvbkVycm9yKGBTdWJzY3JpcHRpb24gd2l0aCBpZCAke3N1YnNjcmlwdGlvbklkfSBub3QgZm91bmRgLCBTdWJzY3JpcHRpb25FcnJvckNvZGUuTm90Rm91bmQpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb2RlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICAvLyBNYWludGFpbnMgcHJvcGVyIHN0YWNrIHRyYWNlIGZvciB3aGVyZSBvdXIgZXJyb3Igd2FzIHRocm93biAob25seSBhdmFpbGFibGUgb24gVjgpXG4gICAgICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgICAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgU3Vic2NyaXB0aW9uRXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgfVxufVxuZXhwb3J0cy5TdWJzY3JpcHRpb25FcnJvciA9IFN1YnNjcmlwdGlvbkVycm9yO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/errors/subscription-error.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/index.js":
/*!**********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/index.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst provider_engine_1 = __importDefault(__webpack_require__(/*! ./provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/provider-engine.js\"));\nconst subprovider_1 = __importDefault(__webpack_require__(/*! ./subprovider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\"));\nexports.Subprovider = subprovider_1.default;\nexports.default = provider_engine_1.default;\n// Errors\nvar block_tracker_error_1 = __webpack_require__(/*! ./errors/block-tracker-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/block-tracker-error.js\");\nexports.BlockTrackerError = block_tracker_error_1.BlockTrackerError;\nexports.BlockTrackerErrorCode = block_tracker_error_1.BlockTrackerErrorCode;\nvar gas_price_error_1 = __webpack_require__(/*! ./errors/gas-price-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/gas-price-error.js\");\nexports.GasPriceError = gas_price_error_1.GasPriceError;\nexports.GasPriceErrorCode = gas_price_error_1.GasPriceErrorCode;\nvar provider_engine_error_1 = __webpack_require__(/*! ./errors/provider-engine-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/provider-engine-error.js\");\nexports.ProviderEngineError = provider_engine_error_1.ProviderEngineError;\nexports.ProviderEngineErrorCode = provider_engine_error_1.ProviderEngineErrorCode;\nvar subscription_error_1 = __webpack_require__(/*! ./errors/subscription-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/subscription-error.js\");\nexports.SubscriptionError = subscription_error_1.SubscriptionError;\nexports.SubscriptionErrorCode = subscription_error_1.SubscriptionErrorCode;\n__export(__webpack_require__(/*! ./subproviders/index */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvaW5kZXguanM/NGY3YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsMENBQTBDLG1CQUFPLENBQUMsc0dBQW1CO0FBQ3JFLHNDQUFzQyxtQkFBTyxDQUFDLDhGQUFlO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQkFBTyxDQUFDLDRIQUE4QjtBQUNsRTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFPLENBQUMsb0hBQTBCO0FBQzFEO0FBQ0E7QUFDQSw4QkFBOEIsbUJBQU8sQ0FBQyxnSUFBZ0M7QUFDdEU7QUFDQTtBQUNBLDJCQUEyQixtQkFBTyxDQUFDLDBIQUE2QjtBQUNoRTtBQUNBO0FBQ0EsU0FBUyxtQkFBTyxDQUFDLDRHQUFzQiIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHByb3ZpZGVyX2VuZ2luZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3Byb3ZpZGVyLWVuZ2luZVwiKSk7XG5jb25zdCBzdWJwcm92aWRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3N1YnByb3ZpZGVyXCIpKTtcbmV4cG9ydHMuU3VicHJvdmlkZXIgPSBzdWJwcm92aWRlcl8xLmRlZmF1bHQ7XG5leHBvcnRzLmRlZmF1bHQgPSBwcm92aWRlcl9lbmdpbmVfMS5kZWZhdWx0O1xuLy8gRXJyb3JzXG52YXIgYmxvY2tfdHJhY2tlcl9lcnJvcl8xID0gcmVxdWlyZShcIi4vZXJyb3JzL2Jsb2NrLXRyYWNrZXItZXJyb3JcIik7XG5leHBvcnRzLkJsb2NrVHJhY2tlckVycm9yID0gYmxvY2tfdHJhY2tlcl9lcnJvcl8xLkJsb2NrVHJhY2tlckVycm9yO1xuZXhwb3J0cy5CbG9ja1RyYWNrZXJFcnJvckNvZGUgPSBibG9ja190cmFja2VyX2Vycm9yXzEuQmxvY2tUcmFja2VyRXJyb3JDb2RlO1xudmFyIGdhc19wcmljZV9lcnJvcl8xID0gcmVxdWlyZShcIi4vZXJyb3JzL2dhcy1wcmljZS1lcnJvclwiKTtcbmV4cG9ydHMuR2FzUHJpY2VFcnJvciA9IGdhc19wcmljZV9lcnJvcl8xLkdhc1ByaWNlRXJyb3I7XG5leHBvcnRzLkdhc1ByaWNlRXJyb3JDb2RlID0gZ2FzX3ByaWNlX2Vycm9yXzEuR2FzUHJpY2VFcnJvckNvZGU7XG52YXIgcHJvdmlkZXJfZW5naW5lX2Vycm9yXzEgPSByZXF1aXJlKFwiLi9lcnJvcnMvcHJvdmlkZXItZW5naW5lLWVycm9yXCIpO1xuZXhwb3J0cy5Qcm92aWRlckVuZ2luZUVycm9yID0gcHJvdmlkZXJfZW5naW5lX2Vycm9yXzEuUHJvdmlkZXJFbmdpbmVFcnJvcjtcbmV4cG9ydHMuUHJvdmlkZXJFbmdpbmVFcnJvckNvZGUgPSBwcm92aWRlcl9lbmdpbmVfZXJyb3JfMS5Qcm92aWRlckVuZ2luZUVycm9yQ29kZTtcbnZhciBzdWJzY3JpcHRpb25fZXJyb3JfMSA9IHJlcXVpcmUoXCIuL2Vycm9ycy9zdWJzY3JpcHRpb24tZXJyb3JcIik7XG5leHBvcnRzLlN1YnNjcmlwdGlvbkVycm9yID0gc3Vic2NyaXB0aW9uX2Vycm9yXzEuU3Vic2NyaXB0aW9uRXJyb3I7XG5leHBvcnRzLlN1YnNjcmlwdGlvbkVycm9yQ29kZSA9IHN1YnNjcmlwdGlvbl9lcnJvcl8xLlN1YnNjcmlwdGlvbkVycm9yQ29kZTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL3N1YnByb3ZpZGVycy9pbmRleFwiKSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/provider-engine.js":
/*!********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/provider-engine.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst eachSeries_1 = __importDefault(__webpack_require__(/*! async/eachSeries */ \"../../node_modules/@bitski/provider-engine/node_modules/async/eachSeries.js\"));\nconst map_1 = __importDefault(__webpack_require__(/*! async/map */ \"../../node_modules/@bitski/provider-engine/node_modules/async/map.js\"));\nconst base_provider_1 = __importDefault(__webpack_require__(/*! ./base-provider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/base-provider.js\"));\nconst provider_engine_error_1 = __webpack_require__(/*! ./errors/provider-engine-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/provider-engine-error.js\");\nconst block_tracker_1 = __importDefault(__webpack_require__(/*! ./util/block-tracker */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/block-tracker.js\"));\nconst stoplight_1 = __importDefault(__webpack_require__(/*! ./util/stoplight */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/stoplight.js\"));\nconst create_payload_1 = __webpack_require__(/*! ./util/create-payload */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js\");\nclass Web3ProviderEngine extends base_provider_1.default {\n    constructor(opts) {\n        super();\n        this._pollForBlocks = true;\n        this._running = false;\n        this.setMaxListeners(30);\n        // parse options\n        opts = opts || {};\n        // block polling\n        const directProvider = { sendAsync: this._handleAsync.bind(this) };\n        if (opts.disableBlockTracking === true) {\n            this._pollForBlocks = false;\n        }\n        const blockTrackerProvider = opts.blockTrackerProvider || directProvider;\n        this._blockTracker = new block_tracker_1.default({\n            provider: blockTrackerProvider,\n            blockTracker: opts.blockTracker,\n            pollingInterval: opts.pollingInterval || 4000,\n        });\n        this._blockTracker.on('block', this._setCurrentBlock.bind(this));\n        this._blockTracker.on('sync', this.emit.bind(this, 'sync'));\n        this._blockTracker.on('rawBlock', this.emit.bind(this, 'rawBlock'));\n        this._blockTracker.on('latest', this.emit.bind(this, 'latest'));\n        // Handle errors instead of re-emitting, since they will throw otherwise\n        this._blockTracker.on('error', (error) => {\n            // Ignore errors from the block tracker unless debug is enabled\n            if (opts.debug) {\n                // eslint-disable-next-line no-console\n                console.log('DEBUG: ' + error.message);\n            }\n        });\n        // set initialization blocker\n        this._ready = new stoplight_1.default();\n        this._providers = [];\n    }\n    isRunning() {\n        return this._running;\n    }\n    start() {\n        // trigger start\n        this._ready.go();\n        if (this._pollForBlocks) {\n            // start tracking blocks\n            this._blockTracker.start();\n        }\n        // update state\n        this._running = true;\n        // signal that we started\n        this.emit('start');\n    }\n    stop() {\n        // stop block tracking\n        this._blockTracker.stop();\n        // update state\n        this._running = false;\n        // signal that we stopped\n        this.emit('stop');\n    }\n    addProvider(source, index) {\n        if (typeof index === 'number') {\n            this._providers.splice(index, 0, source);\n        }\n        else {\n            this._providers.push(source);\n        }\n        source.setEngine(this);\n    }\n    removeProvider(source) {\n        const index = this._providers.indexOf(source);\n        if (index < 0)\n            throw new Error('Provider not found.');\n        this._providers.splice(index, 1);\n    }\n    send(method, params) {\n        // Wrap base class with Stoplight\n        return new Promise((fulfill, reject) => {\n            this._ready.await(() => {\n                super.send(method, params).then(fulfill, reject);\n            });\n        });\n    }\n    sendAsync(payload, cb) {\n        // Wrap base class with Stoplight\n        this._ready.await(() => {\n            if (Array.isArray(payload)) {\n                // handle batch\n                map_1.default(payload, this._handleAsync.bind(this), cb);\n            }\n            else {\n                // handle single\n                this._handleAsync(payload, cb);\n            }\n        });\n    }\n    // Actually perform the request\n    sendPayload(payload) {\n        return new Promise((fulfill, reject) => {\n            let currentProvider = -1;\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            let result = null;\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            let error = null;\n            // Stack of subprovider next callbacks\n            const stack = [];\n            const next = (callback) => {\n                currentProvider += 1;\n                if (callback) {\n                    // Insert in front since eachSeries traverses from front\n                    stack.unshift(callback);\n                }\n                // Bubbled down as far as we could go, and the request wasn't\n                // handled. Return an error.\n                if (currentProvider >= this._providers.length) {\n                    // tslint:disable-next-line: max-line-length\n                    const msg = `Request for method \"${payload.method}\" not handled by any subprovider.`;\n                    end(new provider_engine_error_1.ProviderEngineError(msg, provider_engine_error_1.ProviderEngineErrorCode.UnhandledRequest));\n                    return;\n                }\n                // Handle request in next subprovider\n                try {\n                    const provider = this._providers[currentProvider];\n                    provider.handleRequest(payload, next, end);\n                }\n                catch (e) {\n                    end(e);\n                }\n            };\n            const notifySubprovider = (fn, callback) => {\n                if (fn) {\n                    fn(error, result, callback);\n                }\n                else {\n                    callback();\n                }\n            };\n            const end = (e, r) => {\n                error = e;\n                result = r;\n                // Call any callbacks from subproviders\n                eachSeries_1.default(stack, notifySubprovider).then(() => {\n                    // Reconstruct JSONRPCResponse\n                    const resultObj = {\n                        id: payload.id,\n                        jsonrpc: payload.jsonrpc,\n                        result,\n                    };\n                    // Complete promise\n                    if (error) {\n                        reject(error);\n                    }\n                    else {\n                        fulfill(resultObj);\n                    }\n                });\n            };\n            // Call next() to kick things off\n            next();\n        });\n    }\n    _setCurrentBlock(bufferBlock) {\n        this.currentBlock = bufferBlock;\n        this.emit('block', bufferBlock);\n    }\n    _getBlockByNumber(blockNumber, cb) {\n        const req = create_payload_1.createPayload({ method: 'eth_getBlockByNumber', params: [blockNumber, false], skipCache: true });\n        this._handleAsync(req, (err, res) => {\n            if (err)\n                return cb(err);\n            return cb(null, res.result);\n        });\n    }\n    _handleAsync(payload, finished) {\n        let currentProvider = -1;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const result = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const error = null;\n        const stack = [];\n        const next = (after) => {\n            currentProvider += 1;\n            stack.unshift(after);\n            // Bubbled down as far as we could go, and the request wasn't\n            // handled. Return an error.\n            if (currentProvider >= this._providers.length) {\n                end(new Error(`Request for method \"${payload.method}\" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.`));\n            }\n            else {\n                try {\n                    const provider = this._providers[currentProvider];\n                    provider.handleRequest(payload, next, end);\n                }\n                catch (e) {\n                    end(e);\n                }\n            }\n        };\n        const end = (error, result) => {\n            eachSeries_1.default(stack, (fn, callback) => {\n                if (fn) {\n                    fn(error, result, callback);\n                }\n                else {\n                    callback();\n                }\n            }, () => {\n                const resultObj = {\n                    id: payload.id,\n                    jsonrpc: payload.jsonrpc,\n                    result: result,\n                    error: null,\n                };\n                if (error != null) {\n                    resultObj.error = {\n                        message: error.stack || error.message || error,\n                        code: -32000,\n                    };\n                    // respond with both error formats\n                    finished(error, resultObj);\n                }\n                else {\n                    finished(null, resultObj);\n                }\n            });\n        };\n        next();\n    }\n}\nexports.default = Web3ProviderEngine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/provider-engine.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js":
/*!****************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst create_payload_1 = __webpack_require__(/*! ./util/create-payload */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js\");\n// this is the base class for a subprovider -- mostly helpers\nclass Subprovider extends events_1.EventEmitter {\n    setEngine(engine) {\n        this.engine = engine;\n        engine.on('block', (block) => (this.currentBlock = block));\n        engine.on('start', () => this.start());\n        engine.on('stop', () => this.stop());\n    }\n    emitPayload(payload, cb) {\n        this.engine.sendAsync(create_payload_1.createPayload(payload), cb);\n    }\n    // dummies for overriding\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    start() { }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    stop() { }\n}\nexports.default = Subprovider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXIuanM/NzIwNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLHlCQUF5QixtQkFBTyxDQUFDLDhHQUF1QjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFlBQVk7QUFDWjtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9kaXN0L2NvbW1vbmpzL3N1YnByb3ZpZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBldmVudHNfMSA9IHJlcXVpcmUoXCJldmVudHNcIik7XG5jb25zdCBjcmVhdGVfcGF5bG9hZF8xID0gcmVxdWlyZShcIi4vdXRpbC9jcmVhdGUtcGF5bG9hZFwiKTtcbi8vIHRoaXMgaXMgdGhlIGJhc2UgY2xhc3MgZm9yIGEgc3VicHJvdmlkZXIgLS0gbW9zdGx5IGhlbHBlcnNcbmNsYXNzIFN1YnByb3ZpZGVyIGV4dGVuZHMgZXZlbnRzXzEuRXZlbnRFbWl0dGVyIHtcbiAgICBzZXRFbmdpbmUoZW5naW5lKSB7XG4gICAgICAgIHRoaXMuZW5naW5lID0gZW5naW5lO1xuICAgICAgICBlbmdpbmUub24oJ2Jsb2NrJywgKGJsb2NrKSA9PiAodGhpcy5jdXJyZW50QmxvY2sgPSBibG9jaykpO1xuICAgICAgICBlbmdpbmUub24oJ3N0YXJ0JywgKCkgPT4gdGhpcy5zdGFydCgpKTtcbiAgICAgICAgZW5naW5lLm9uKCdzdG9wJywgKCkgPT4gdGhpcy5zdG9wKCkpO1xuICAgIH1cbiAgICBlbWl0UGF5bG9hZChwYXlsb2FkLCBjYikge1xuICAgICAgICB0aGlzLmVuZ2luZS5zZW5kQXN5bmMoY3JlYXRlX3BheWxvYWRfMS5jcmVhdGVQYXlsb2FkKHBheWxvYWQpLCBjYik7XG4gICAgfVxuICAgIC8vIGR1bW1pZXMgZm9yIG92ZXJyaWRpbmdcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgc3RhcnQoKSB7IH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgc3RvcCgpIHsgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gU3VicHJvdmlkZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/cache.js":
/*!***********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/cache.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst json_rpc_engine_middleware_1 = __webpack_require__(/*! ./json-rpc-engine-middleware */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/json-rpc-engine-middleware.js\");\nconst block_cache_1 = __importDefault(__webpack_require__(/*! eth-json-rpc-middleware/block-cache */ \"../../node_modules/eth-json-rpc-middleware/block-cache.js\"));\nclass BlockCacheSubprovider extends json_rpc_engine_middleware_1.JsonRpcEngineMiddlewareSubprovider {\n    constructor(opts) {\n        super(({ blockTracker }) => block_cache_1.default(Object.assign({ blockTracker }, opts)));\n    }\n}\nexports.default = BlockCacheSubprovider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2NhY2hlLmpzPzFhNTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLDhDQUE4QyxjQUFjO0FBQzVELHFDQUFxQyxtQkFBTyxDQUFDLHlJQUE4QjtBQUMzRSxzQ0FBc0MsbUJBQU8sQ0FBQyxzR0FBcUM7QUFDbkY7QUFDQTtBQUNBLGdCQUFnQixlQUFlLDBDQUEwQyxlQUFlO0FBQ3hGO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy9zdWJwcm92aWRlcnMvY2FjaGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGpzb25fcnBjX2VuZ2luZV9taWRkbGV3YXJlXzEgPSByZXF1aXJlKFwiLi9qc29uLXJwYy1lbmdpbmUtbWlkZGxld2FyZVwiKTtcbmNvbnN0IGJsb2NrX2NhY2hlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImV0aC1qc29uLXJwYy1taWRkbGV3YXJlL2Jsb2NrLWNhY2hlXCIpKTtcbmNsYXNzIEJsb2NrQ2FjaGVTdWJwcm92aWRlciBleHRlbmRzIGpzb25fcnBjX2VuZ2luZV9taWRkbGV3YXJlXzEuSnNvblJwY0VuZ2luZU1pZGRsZXdhcmVTdWJwcm92aWRlciB7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBzdXBlcigoeyBibG9ja1RyYWNrZXIgfSkgPT4gYmxvY2tfY2FjaGVfMS5kZWZhdWx0KE9iamVjdC5hc3NpZ24oeyBibG9ja1RyYWNrZXIgfSwgb3B0cykpKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBCbG9ja0NhY2hlU3VicHJvdmlkZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/cache.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/default-fixture.js":
/*!*********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/default-fixture.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xtend_1 = __importDefault(__webpack_require__(/*! xtend */ \"../../node_modules/xtend/immutable.js\"));\nconst fixture_1 = __importDefault(__webpack_require__(/*! ./fixture */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fixture.js\"));\nclass DefaultFixtures extends fixture_1.default {\n    constructor(opts) {\n        opts = opts || {};\n        const responses = xtend_1.default({\n            web3_clientVersion: 'ProviderEngine' + '/javascript',\n            net_listening: true,\n            eth_hashrate: '0x00',\n            eth_mining: false,\n        }, opts);\n        super(responses);\n    }\n}\nexports.default = DefaultFixtures;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2RlZmF1bHQtZml4dHVyZS5qcz9jZGY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQ0FBZ0MsbUJBQU8sQ0FBQyxvREFBTztBQUMvQyxrQ0FBa0MsbUJBQU8sQ0FBQyxtR0FBVztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9kaXN0L2NvbW1vbmpzL3N1YnByb3ZpZGVycy9kZWZhdWx0LWZpeHR1cmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHh0ZW5kXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInh0ZW5kXCIpKTtcbmNvbnN0IGZpeHR1cmVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9maXh0dXJlXCIpKTtcbmNsYXNzIERlZmF1bHRGaXh0dXJlcyBleHRlbmRzIGZpeHR1cmVfMS5kZWZhdWx0IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIG9wdHMgPSBvcHRzIHx8IHt9O1xuICAgICAgICBjb25zdCByZXNwb25zZXMgPSB4dGVuZF8xLmRlZmF1bHQoe1xuICAgICAgICAgICAgd2ViM19jbGllbnRWZXJzaW9uOiAnUHJvdmlkZXJFbmdpbmUnICsgJy9qYXZhc2NyaXB0JyxcbiAgICAgICAgICAgIG5ldF9saXN0ZW5pbmc6IHRydWUsXG4gICAgICAgICAgICBldGhfaGFzaHJhdGU6ICcweDAwJyxcbiAgICAgICAgICAgIGV0aF9taW5pbmc6IGZhbHNlLFxuICAgICAgICB9LCBvcHRzKTtcbiAgICAgICAgc3VwZXIocmVzcG9uc2VzKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBEZWZhdWx0Rml4dHVyZXM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/default-fixture.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fetch.js":
/*!***********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fetch.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst asyncify_1 = __importDefault(__webpack_require__(/*! async/asyncify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/asyncify.js\"));\nconst retry_1 = __importDefault(__webpack_require__(/*! async/retry */ \"../../node_modules/@bitski/provider-engine/node_modules/async/retry.js\"));\nconst waterfall_1 = __importDefault(__webpack_require__(/*! async/waterfall */ \"../../node_modules/@bitski/provider-engine/node_modules/async/waterfall.js\"));\nconst cross_fetch_1 = __importDefault(__webpack_require__(/*! cross-fetch */ \"../../node_modules/cross-fetch/dist/node-ponyfill.js\"));\nconst json_rpc_error_1 = __importDefault(__webpack_require__(/*! json-rpc-error */ \"../../node_modules/json-rpc-error/index.js\"));\nconst promise_to_callback_1 = __importDefault(__webpack_require__(/*! promise-to-callback */ \"../../node_modules/promise-to-callback/index.js\"));\nconst subprovider_1 = __importDefault(__webpack_require__(/*! ../subprovider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\"));\nconst create_payload_1 = __webpack_require__(/*! ../util/create-payload */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js\");\nconst RETRIABLE_ERRORS = [\n    // ignore server overload errors\n    'Gateway timeout',\n    'ETIMEDOUT',\n    // ignore server sent html error pages\n    // or truncated json responses\n    'SyntaxError',\n    'failed to parse response body',\n    // ignore errors where http req failed to establish\n    'Failed to fetch',\n];\nclass FetchSubprovider extends subprovider_1.default {\n    constructor(opts) {\n        super();\n        this.rpcUrl = opts.rpcUrl;\n        this.originHttpHeaderKey = opts.originHttpHeaderKey;\n    }\n    handleRequest(payload, next, end) {\n        const originDomain = payload.origin;\n        // overwrite id to not conflict with other concurrent users\n        const newPayload = this.createPayload(payload);\n        // remove extra parameter from request\n        delete newPayload.origin;\n        const reqParams = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newPayload),\n        };\n        if (this.originHttpHeaderKey && originDomain) {\n            reqParams.headers[this.originHttpHeaderKey] = originDomain;\n        }\n        retry_1.default({\n            times: 5,\n            interval: 1000,\n            errorFilter: isErrorRetriable,\n        }, (cb) => this._submitRequest(reqParams, cb), (err, result) => {\n            // ends on retriable error\n            if (err && isErrorRetriable(err)) {\n                const errMsg = `FetchSubprovider - cannot complete request. All retries exhausted.\\nOriginal Error:\\n${err.toString()}\\n\\n`;\n                const retriesExhaustedErr = new Error(errMsg);\n                return end(retriesExhaustedErr);\n            }\n            // otherwise continue normally\n            return end(err, result);\n        });\n    }\n    createPayload(payload) {\n        return create_payload_1.createPayload(payload);\n    }\n    _submitRequest(reqParams, done) {\n        const targetUrl = this.rpcUrl;\n        promise_to_callback_1.default(cross_fetch_1.default(targetUrl, reqParams))((err, res) => {\n            if (err) {\n                return done(err);\n            }\n            // continue parsing result\n            waterfall_1.default([\n                checkForHttpErrors,\n                // buffer body\n                (cb) => promise_to_callback_1.default(res.text())(cb),\n                // parse body\n                asyncify_1.default((rawBody) => JSON.parse(rawBody)),\n                parseResponse,\n            ], done);\n            function checkForHttpErrors(cb) {\n                // check for errors\n                switch (res.status) {\n                    case 405:\n                        return cb(new json_rpc_error_1.default.MethodNotFound());\n                    case 418:\n                        return cb(createRatelimitError());\n                    case 503:\n                    case 504:\n                        return cb(createTimeoutError());\n                    default:\n                        return cb();\n                }\n            }\n            function parseResponse(body, cb) {\n                // check for error code\n                if (res.status !== 200) {\n                    return cb(new json_rpc_error_1.default.InternalError(body));\n                }\n                // check for rpc error\n                if (body.error) {\n                    return cb(new json_rpc_error_1.default.InternalError(body.error));\n                }\n                // return successful result\n                cb(null, body.result);\n            }\n        });\n    }\n}\nexports.default = FetchSubprovider;\nfunction isErrorRetriable(err) {\n    const errMsg = err.toString();\n    return RETRIABLE_ERRORS.some((phrase) => errMsg.includes(phrase));\n}\nfunction createRatelimitError() {\n    const msg = 'Request is being rate limited.';\n    const err = new Error(msg);\n    return new json_rpc_error_1.default.InternalError(err);\n}\nfunction createTimeoutError() {\n    let msg = 'Gateway timeout. The request took too long to process. ';\n    msg += 'This can happen when querying logs over too wide a block range.';\n    const err = new Error(msg);\n    return new json_rpc_error_1.default.InternalError(err);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fetch.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/filters.js":
/*!*************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/filters.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst json_rpc_engine_middleware_1 = __webpack_require__(/*! ./json-rpc-engine-middleware */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/json-rpc-engine-middleware.js\");\nconst eth_json_rpc_filters_1 = __importDefault(__webpack_require__(/*! eth-json-rpc-filters */ \"../../node_modules/eth-json-rpc-filters/index.js\"));\nclass SubscriptionsSubprovider extends json_rpc_engine_middleware_1.JsonRpcEngineMiddlewareSubprovider {\n    constructor() {\n        super(({ blockTracker, provider, engine: _engine }) => {\n            return eth_json_rpc_filters_1.default({ blockTracker, provider });\n        });\n    }\n}\nexports.default = SubscriptionsSubprovider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2ZpbHRlcnMuanM/MTg4MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQscUNBQXFDLG1CQUFPLENBQUMseUlBQThCO0FBQzNFLCtDQUErQyxtQkFBTyxDQUFDLDhFQUFzQjtBQUM3RTtBQUNBO0FBQ0EsZ0JBQWdCLDBDQUEwQztBQUMxRCxtREFBbUQseUJBQXlCO0FBQzVFLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2ZpbHRlcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGpzb25fcnBjX2VuZ2luZV9taWRkbGV3YXJlXzEgPSByZXF1aXJlKFwiLi9qc29uLXJwYy1lbmdpbmUtbWlkZGxld2FyZVwiKTtcbmNvbnN0IGV0aF9qc29uX3JwY19maWx0ZXJzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImV0aC1qc29uLXJwYy1maWx0ZXJzXCIpKTtcbmNsYXNzIFN1YnNjcmlwdGlvbnNTdWJwcm92aWRlciBleHRlbmRzIGpzb25fcnBjX2VuZ2luZV9taWRkbGV3YXJlXzEuSnNvblJwY0VuZ2luZU1pZGRsZXdhcmVTdWJwcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCh7IGJsb2NrVHJhY2tlciwgcHJvdmlkZXIsIGVuZ2luZTogX2VuZ2luZSB9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZXRoX2pzb25fcnBjX2ZpbHRlcnNfMS5kZWZhdWx0KHsgYmxvY2tUcmFja2VyLCBwcm92aWRlciB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gU3Vic2NyaXB0aW9uc1N1YnByb3ZpZGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/filters.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fixture.js":
/*!*************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fixture.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst subprovider_1 = __importDefault(__webpack_require__(/*! ../subprovider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\"));\nclass FixtureProvider extends subprovider_1.default {\n    constructor(staticResponses) {\n        super();\n        this.staticResponses = staticResponses || {};\n    }\n    handleRequest(payload, next, end) {\n        const staticResponse = this.staticResponses[payload.method];\n        // async function\n        if ('function' === typeof staticResponse) {\n            staticResponse(payload, next, end);\n            // static response - null is valid response\n        }\n        else if (staticResponse !== undefined) {\n            // return result asynchronously\n            setTimeout(() => end(null, staticResponse));\n            // no prepared response - skip\n        }\n        else {\n            next();\n        }\n    }\n}\nexports.default = FixtureProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2ZpeHR1cmUuanM/NTc0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsc0NBQXNDLG1CQUFPLENBQUMsK0ZBQWdCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2ZpeHR1cmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHN1YnByb3ZpZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3N1YnByb3ZpZGVyXCIpKTtcbmNsYXNzIEZpeHR1cmVQcm92aWRlciBleHRlbmRzIHN1YnByb3ZpZGVyXzEuZGVmYXVsdCB7XG4gICAgY29uc3RydWN0b3Ioc3RhdGljUmVzcG9uc2VzKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGljUmVzcG9uc2VzID0gc3RhdGljUmVzcG9uc2VzIHx8IHt9O1xuICAgIH1cbiAgICBoYW5kbGVSZXF1ZXN0KHBheWxvYWQsIG5leHQsIGVuZCkge1xuICAgICAgICBjb25zdCBzdGF0aWNSZXNwb25zZSA9IHRoaXMuc3RhdGljUmVzcG9uc2VzW3BheWxvYWQubWV0aG9kXTtcbiAgICAgICAgLy8gYXN5bmMgZnVuY3Rpb25cbiAgICAgICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBzdGF0aWNSZXNwb25zZSkge1xuICAgICAgICAgICAgc3RhdGljUmVzcG9uc2UocGF5bG9hZCwgbmV4dCwgZW5kKTtcbiAgICAgICAgICAgIC8vIHN0YXRpYyByZXNwb25zZSAtIG51bGwgaXMgdmFsaWQgcmVzcG9uc2VcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzdGF0aWNSZXNwb25zZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyByZXR1cm4gcmVzdWx0IGFzeW5jaHJvbm91c2x5XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGVuZChudWxsLCBzdGF0aWNSZXNwb25zZSkpO1xuICAgICAgICAgICAgLy8gbm8gcHJlcGFyZWQgcmVzcG9uc2UgLSBza2lwXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBGaXh0dXJlUHJvdmlkZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fixture.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/gasprice.js":
/*!**************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/gasprice.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Calculate gasPrice based on last blocks.\n * @author github.com/axic\n *\n * FIXME: support minimum suggested gas and perhaps other options from geth:\n * https://github.com/ethereum/go-ethereum/blob/master/eth/gasprice.go\n * https://github.com/ethereum/go-ethereum/wiki/Gas-Price-Oracle\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst map_1 = __importDefault(__webpack_require__(/*! async/map */ \"../../node_modules/@bitski/provider-engine/node_modules/async/map.js\"));\nconst gas_price_error_1 = __webpack_require__(/*! ../errors/gas-price-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/gas-price-error.js\");\nconst subprovider_1 = __importDefault(__webpack_require__(/*! ../subprovider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\"));\nclass GaspriceProvider extends subprovider_1.default {\n    constructor(opts) {\n        opts = opts || {};\n        super();\n        this.numberOfBlocks = opts.numberOfBlocks || 10;\n        this.delayInBlocks = opts.delayInBlocks || 5;\n    }\n    handleRequest(payload, next, end) {\n        if (payload.method !== 'eth_gasPrice') {\n            return next();\n        }\n        const p = { id: 0, jsonrpc: '2.0', method: 'eth_blockNumber', params: [] };\n        this.emitPayload(p, (_, res) => {\n            // FIXME: convert number using a bignum library\n            let lastBlock = parseInt(res.result, 16) - this.delayInBlocks;\n            const blockNumbers = [];\n            for (let i = 0; i < this.numberOfBlocks; i++) {\n                blockNumbers.push('0x' + lastBlock.toString(16));\n                lastBlock--;\n            }\n            const getBlock = (item, cb) => {\n                const p2 = { id: 0, jsonrpc: '2.0', method: 'eth_getBlockByNumber', params: [item, true] };\n                this.emitPayload(p2, (err, blockRes) => {\n                    if (err) {\n                        return cb(err);\n                    }\n                    if (!blockRes.result) {\n                        return cb(gas_price_error_1.GasPriceError.BlockNotFound(item));\n                    }\n                    cb(null, blockRes.result.transactions);\n                });\n            };\n            // FIXME: this could be made much faster\n            const calcPrice = (err, transactions) => {\n                // flatten array\n                transactions = transactions.reduce((a, b) => a.concat(b), []);\n                // leave only the gasprice\n                // FIXME: convert number using a bignum library\n                transactions = transactions.map((a) => parseInt(a.gasPrice, 16), []);\n                // order ascending\n                transactions.sort((a, b) => a - b);\n                // ze median\n                const half = Math.floor(transactions.length / 2);\n                let median;\n                if (transactions.length % 2) {\n                    median = transactions[half];\n                }\n                else {\n                    median = Math.floor((transactions[half - 1] + transactions[half]) / 2.0);\n                }\n                end(null, median);\n            };\n            map_1.default(blockNumbers, getBlock, calcPrice);\n        });\n    }\n}\nexports.default = GaspriceProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2dhc3ByaWNlLmpzPzRhZTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCw4QkFBOEIsbUJBQU8sQ0FBQyx1RkFBVztBQUNqRCwwQkFBMEIsbUJBQU8sQ0FBQyxxSEFBMkI7QUFDN0Qsc0NBQXNDLG1CQUFPLENBQUMsK0ZBQWdCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIseUJBQXlCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9kaXN0L2NvbW1vbmpzL3N1YnByb3ZpZGVycy9nYXNwcmljZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENhbGN1bGF0ZSBnYXNQcmljZSBiYXNlZCBvbiBsYXN0IGJsb2Nrcy5cbiAqIEBhdXRob3IgZ2l0aHViLmNvbS9heGljXG4gKlxuICogRklYTUU6IHN1cHBvcnQgbWluaW11bSBzdWdnZXN0ZWQgZ2FzIGFuZCBwZXJoYXBzIG90aGVyIG9wdGlvbnMgZnJvbSBnZXRoOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2dvLWV0aGVyZXVtL2Jsb2IvbWFzdGVyL2V0aC9nYXNwcmljZS5nb1xuICogaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2dvLWV0aGVyZXVtL3dpa2kvR2FzLVByaWNlLU9yYWNsZVxuICovXG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBtYXBfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYXN5bmMvbWFwXCIpKTtcbmNvbnN0IGdhc19wcmljZV9lcnJvcl8xID0gcmVxdWlyZShcIi4uL2Vycm9ycy9nYXMtcHJpY2UtZXJyb3JcIik7XG5jb25zdCBzdWJwcm92aWRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9zdWJwcm92aWRlclwiKSk7XG5jbGFzcyBHYXNwcmljZVByb3ZpZGVyIGV4dGVuZHMgc3VicHJvdmlkZXJfMS5kZWZhdWx0IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIG9wdHMgPSBvcHRzIHx8IHt9O1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLm51bWJlck9mQmxvY2tzID0gb3B0cy5udW1iZXJPZkJsb2NrcyB8fCAxMDtcbiAgICAgICAgdGhpcy5kZWxheUluQmxvY2tzID0gb3B0cy5kZWxheUluQmxvY2tzIHx8IDU7XG4gICAgfVxuICAgIGhhbmRsZVJlcXVlc3QocGF5bG9hZCwgbmV4dCwgZW5kKSB7XG4gICAgICAgIGlmIChwYXlsb2FkLm1ldGhvZCAhPT0gJ2V0aF9nYXNQcmljZScpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcCA9IHsgaWQ6IDAsIGpzb25ycGM6ICcyLjAnLCBtZXRob2Q6ICdldGhfYmxvY2tOdW1iZXInLCBwYXJhbXM6IFtdIH07XG4gICAgICAgIHRoaXMuZW1pdFBheWxvYWQocCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgLy8gRklYTUU6IGNvbnZlcnQgbnVtYmVyIHVzaW5nIGEgYmlnbnVtIGxpYnJhcnlcbiAgICAgICAgICAgIGxldCBsYXN0QmxvY2sgPSBwYXJzZUludChyZXMucmVzdWx0LCAxNikgLSB0aGlzLmRlbGF5SW5CbG9ja3M7XG4gICAgICAgICAgICBjb25zdCBibG9ja051bWJlcnMgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1iZXJPZkJsb2NrczsgaSsrKSB7XG4gICAgICAgICAgICAgICAgYmxvY2tOdW1iZXJzLnB1c2goJzB4JyArIGxhc3RCbG9jay50b1N0cmluZygxNikpO1xuICAgICAgICAgICAgICAgIGxhc3RCbG9jay0tO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZ2V0QmxvY2sgPSAoaXRlbSwgY2IpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwMiA9IHsgaWQ6IDAsIGpzb25ycGM6ICcyLjAnLCBtZXRob2Q6ICdldGhfZ2V0QmxvY2tCeU51bWJlcicsIHBhcmFtczogW2l0ZW0sIHRydWVdIH07XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0UGF5bG9hZChwMiwgKGVyciwgYmxvY2tSZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNiKGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFibG9ja1Jlcy5yZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjYihnYXNfcHJpY2VfZXJyb3JfMS5HYXNQcmljZUVycm9yLkJsb2NrTm90Rm91bmQoaXRlbSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNiKG51bGwsIGJsb2NrUmVzLnJlc3VsdC50cmFuc2FjdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIC8vIEZJWE1FOiB0aGlzIGNvdWxkIGJlIG1hZGUgbXVjaCBmYXN0ZXJcbiAgICAgICAgICAgIGNvbnN0IGNhbGNQcmljZSA9IChlcnIsIHRyYW5zYWN0aW9ucykgPT4ge1xuICAgICAgICAgICAgICAgIC8vIGZsYXR0ZW4gYXJyYXlcbiAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbnMgPSB0cmFuc2FjdGlvbnMucmVkdWNlKChhLCBiKSA9PiBhLmNvbmNhdChiKSwgW10pO1xuICAgICAgICAgICAgICAgIC8vIGxlYXZlIG9ubHkgdGhlIGdhc3ByaWNlXG4gICAgICAgICAgICAgICAgLy8gRklYTUU6IGNvbnZlcnQgbnVtYmVyIHVzaW5nIGEgYmlnbnVtIGxpYnJhcnlcbiAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbnMgPSB0cmFuc2FjdGlvbnMubWFwKChhKSA9PiBwYXJzZUludChhLmdhc1ByaWNlLCAxNiksIFtdKTtcbiAgICAgICAgICAgICAgICAvLyBvcmRlciBhc2NlbmRpbmdcbiAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbnMuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICAgICAgICAgICAgICAgIC8vIHplIG1lZGlhblxuICAgICAgICAgICAgICAgIGNvbnN0IGhhbGYgPSBNYXRoLmZsb29yKHRyYW5zYWN0aW9ucy5sZW5ndGggLyAyKTtcbiAgICAgICAgICAgICAgICBsZXQgbWVkaWFuO1xuICAgICAgICAgICAgICAgIGlmICh0cmFuc2FjdGlvbnMubGVuZ3RoICUgMikge1xuICAgICAgICAgICAgICAgICAgICBtZWRpYW4gPSB0cmFuc2FjdGlvbnNbaGFsZl07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBtZWRpYW4gPSBNYXRoLmZsb29yKCh0cmFuc2FjdGlvbnNbaGFsZiAtIDFdICsgdHJhbnNhY3Rpb25zW2hhbGZdKSAvIDIuMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVuZChudWxsLCBtZWRpYW4pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIG1hcF8xLmRlZmF1bHQoYmxvY2tOdW1iZXJzLCBnZXRCbG9jaywgY2FsY1ByaWNlKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gR2FzcHJpY2VQcm92aWRlcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/gasprice.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/index.js":
/*!***********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/index.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cache_1 = __webpack_require__(/*! ./cache */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/cache.js\");\nexports.BlockCacheSubprovider = cache_1.default;\nvar default_fixture_1 = __webpack_require__(/*! ./default-fixture */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/default-fixture.js\");\nexports.DefaultFixtureSubprovider = default_fixture_1.default;\nvar fetch_1 = __webpack_require__(/*! ./fetch */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fetch.js\");\nexports.FetchSubprovider = fetch_1.default;\nvar filters_1 = __webpack_require__(/*! ./filters */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/filters.js\");\nexports.FilterSubprovider = filters_1.default;\nvar fixture_1 = __webpack_require__(/*! ./fixture */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/fixture.js\");\nexports.FixtureSubprovider = fixture_1.default;\nvar gasprice_1 = __webpack_require__(/*! ./gasprice */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/gasprice.js\");\nexports.GasPriceSubprovider = gasprice_1.default;\nvar inflight_cache_1 = __webpack_require__(/*! ./inflight-cache */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/inflight-cache.js\");\nexports.InflightCacheSubprovider = inflight_cache_1.default;\nvar provider_1 = __webpack_require__(/*! ./provider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/provider.js\");\nexports.ProviderSubprovider = provider_1.default;\nvar sanitizer_1 = __webpack_require__(/*! ./sanitizer */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/sanitizer.js\");\nexports.SanitizerSubprovider = sanitizer_1.default;\nvar subscriptions_1 = __webpack_require__(/*! ./subscriptions */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/subscriptions.js\");\nexports.SubscriptionsSubprovider = subscriptions_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2luZGV4LmpzP2RkNjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxjQUFjLG1CQUFPLENBQUMsK0ZBQVM7QUFDL0I7QUFDQSx3QkFBd0IsbUJBQU8sQ0FBQyxtSEFBbUI7QUFDbkQ7QUFDQSxjQUFjLG1CQUFPLENBQUMsK0ZBQVM7QUFDL0I7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxtR0FBVztBQUNuQztBQUNBLGdCQUFnQixtQkFBTyxDQUFDLG1HQUFXO0FBQ25DO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMscUdBQVk7QUFDckM7QUFDQSx1QkFBdUIsbUJBQU8sQ0FBQyxpSEFBa0I7QUFDakQ7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQyxxR0FBWTtBQUNyQztBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHVHQUFhO0FBQ3ZDO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsK0dBQWlCO0FBQy9DIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9kaXN0L2NvbW1vbmpzL3N1YnByb3ZpZGVycy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGNhY2hlXzEgPSByZXF1aXJlKFwiLi9jYWNoZVwiKTtcbmV4cG9ydHMuQmxvY2tDYWNoZVN1YnByb3ZpZGVyID0gY2FjaGVfMS5kZWZhdWx0O1xudmFyIGRlZmF1bHRfZml4dHVyZV8xID0gcmVxdWlyZShcIi4vZGVmYXVsdC1maXh0dXJlXCIpO1xuZXhwb3J0cy5EZWZhdWx0Rml4dHVyZVN1YnByb3ZpZGVyID0gZGVmYXVsdF9maXh0dXJlXzEuZGVmYXVsdDtcbnZhciBmZXRjaF8xID0gcmVxdWlyZShcIi4vZmV0Y2hcIik7XG5leHBvcnRzLkZldGNoU3VicHJvdmlkZXIgPSBmZXRjaF8xLmRlZmF1bHQ7XG52YXIgZmlsdGVyc18xID0gcmVxdWlyZShcIi4vZmlsdGVyc1wiKTtcbmV4cG9ydHMuRmlsdGVyU3VicHJvdmlkZXIgPSBmaWx0ZXJzXzEuZGVmYXVsdDtcbnZhciBmaXh0dXJlXzEgPSByZXF1aXJlKFwiLi9maXh0dXJlXCIpO1xuZXhwb3J0cy5GaXh0dXJlU3VicHJvdmlkZXIgPSBmaXh0dXJlXzEuZGVmYXVsdDtcbnZhciBnYXNwcmljZV8xID0gcmVxdWlyZShcIi4vZ2FzcHJpY2VcIik7XG5leHBvcnRzLkdhc1ByaWNlU3VicHJvdmlkZXIgPSBnYXNwcmljZV8xLmRlZmF1bHQ7XG52YXIgaW5mbGlnaHRfY2FjaGVfMSA9IHJlcXVpcmUoXCIuL2luZmxpZ2h0LWNhY2hlXCIpO1xuZXhwb3J0cy5JbmZsaWdodENhY2hlU3VicHJvdmlkZXIgPSBpbmZsaWdodF9jYWNoZV8xLmRlZmF1bHQ7XG52YXIgcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL3Byb3ZpZGVyXCIpO1xuZXhwb3J0cy5Qcm92aWRlclN1YnByb3ZpZGVyID0gcHJvdmlkZXJfMS5kZWZhdWx0O1xudmFyIHNhbml0aXplcl8xID0gcmVxdWlyZShcIi4vc2FuaXRpemVyXCIpO1xuZXhwb3J0cy5TYW5pdGl6ZXJTdWJwcm92aWRlciA9IHNhbml0aXplcl8xLmRlZmF1bHQ7XG52YXIgc3Vic2NyaXB0aW9uc18xID0gcmVxdWlyZShcIi4vc3Vic2NyaXB0aW9uc1wiKTtcbmV4cG9ydHMuU3Vic2NyaXB0aW9uc1N1YnByb3ZpZGVyID0gc3Vic2NyaXB0aW9uc18xLmRlZmF1bHQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/index.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/inflight-cache.js":
/*!********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/inflight-cache.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst json_rpc_engine_middleware_1 = __webpack_require__(/*! ./json-rpc-engine-middleware */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/json-rpc-engine-middleware.js\");\nconst inflight_cache_1 = __importDefault(__webpack_require__(/*! eth-json-rpc-middleware/inflight-cache */ \"../../node_modules/eth-json-rpc-middleware/inflight-cache.js\"));\nclass InflightCacheSubprovider extends json_rpc_engine_middleware_1.JsonRpcEngineMiddlewareSubprovider {\n    constructor(opts) {\n        super(() => inflight_cache_1.default(opts));\n    }\n}\nexports.default = InflightCacheSubprovider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2luZmxpZ2h0LWNhY2hlLmpzPzljZTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLDhDQUE4QyxjQUFjO0FBQzVELHFDQUFxQyxtQkFBTyxDQUFDLHlJQUE4QjtBQUMzRSx5Q0FBeUMsbUJBQU8sQ0FBQyw0R0FBd0M7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9kaXN0L2NvbW1vbmpzL3N1YnByb3ZpZGVycy9pbmZsaWdodC1jYWNoZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QganNvbl9ycGNfZW5naW5lX21pZGRsZXdhcmVfMSA9IHJlcXVpcmUoXCIuL2pzb24tcnBjLWVuZ2luZS1taWRkbGV3YXJlXCIpO1xuY29uc3QgaW5mbGlnaHRfY2FjaGVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZXRoLWpzb24tcnBjLW1pZGRsZXdhcmUvaW5mbGlnaHQtY2FjaGVcIikpO1xuY2xhc3MgSW5mbGlnaHRDYWNoZVN1YnByb3ZpZGVyIGV4dGVuZHMganNvbl9ycGNfZW5naW5lX21pZGRsZXdhcmVfMS5Kc29uUnBjRW5naW5lTWlkZGxld2FyZVN1YnByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKCgpID0+IGluZmxpZ2h0X2NhY2hlXzEuZGVmYXVsdChvcHRzKSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gSW5mbGlnaHRDYWNoZVN1YnByb3ZpZGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/inflight-cache.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/json-rpc-engine-middleware.js":
/*!********************************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/json-rpc-engine-middleware.js ***!
  \********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst subprovider_1 = __importDefault(__webpack_require__(/*! ../subprovider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\"));\n// wraps a json-rpc-engine middleware in a subprovider interface\nclass JsonRpcEngineMiddlewareSubprovider extends subprovider_1.default {\n    // take a constructorFn to call once we have a reference to the engine\n    constructor(constructorFn) {\n        super();\n        this.constructorFn = constructorFn;\n    }\n    // this is called once the subprovider has been added to the provider engine\n    setEngine(engine) {\n        if (this.middleware)\n            throw new Error('JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice');\n        const blockTracker = engine._blockTracker;\n        const middleware = this.constructorFn({ engine, provider: engine, blockTracker });\n        if (!middleware)\n            throw new Error('JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware');\n        if (typeof middleware !== 'function')\n            throw new Error('JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function');\n        this.middleware = middleware;\n    }\n    handleRequest(req, next, end) {\n        const res = { id: req.id, jsonrpc: '2.0', error: null, result: null };\n        this.middleware(req, res, middlewareNext, middlewareEnd);\n        function middlewareNext(handler) {\n            next((err, result, cb) => {\n                // update response object with result or error\n                if (err) {\n                    delete res.result;\n                    res.error = { message: err.message, code: null };\n                }\n                else {\n                    res.result = result;\n                }\n                // call middleware's next handler (even if error)\n                if (handler) {\n                    handler(cb);\n                }\n                else {\n                    cb();\n                }\n            });\n        }\n        function middlewareEnd(err) {\n            if (err) {\n                end(new Error(err.message));\n            }\n            else {\n                end(null, res.result);\n            }\n        }\n    }\n}\nexports.JsonRpcEngineMiddlewareSubprovider = JsonRpcEngineMiddlewareSubprovider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL2pzb24tcnBjLWVuZ2luZS1taWRkbGV3YXJlLmpzP2JiNTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLDhDQUE4QyxjQUFjO0FBQzVELHNDQUFzQyxtQkFBTyxDQUFDLCtGQUFnQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MseUNBQXlDO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy9zdWJwcm92aWRlcnMvanNvbi1ycGMtZW5naW5lLW1pZGRsZXdhcmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHN1YnByb3ZpZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3N1YnByb3ZpZGVyXCIpKTtcbi8vIHdyYXBzIGEganNvbi1ycGMtZW5naW5lIG1pZGRsZXdhcmUgaW4gYSBzdWJwcm92aWRlciBpbnRlcmZhY2VcbmNsYXNzIEpzb25ScGNFbmdpbmVNaWRkbGV3YXJlU3VicHJvdmlkZXIgZXh0ZW5kcyBzdWJwcm92aWRlcl8xLmRlZmF1bHQge1xuICAgIC8vIHRha2UgYSBjb25zdHJ1Y3RvckZuIHRvIGNhbGwgb25jZSB3ZSBoYXZlIGEgcmVmZXJlbmNlIHRvIHRoZSBlbmdpbmVcbiAgICBjb25zdHJ1Y3Rvcihjb25zdHJ1Y3RvckZuKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY29uc3RydWN0b3JGbiA9IGNvbnN0cnVjdG9yRm47XG4gICAgfVxuICAgIC8vIHRoaXMgaXMgY2FsbGVkIG9uY2UgdGhlIHN1YnByb3ZpZGVyIGhhcyBiZWVuIGFkZGVkIHRvIHRoZSBwcm92aWRlciBlbmdpbmVcbiAgICBzZXRFbmdpbmUoZW5naW5lKSB7XG4gICAgICAgIGlmICh0aGlzLm1pZGRsZXdhcmUpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0pzb25ScGNFbmdpbmVNaWRkbGV3YXJlU3VicHJvdmlkZXIgLSBzdWJwcm92aWRlciBhZGRlZCB0byBlbmdpbmUgdHdpY2UnKTtcbiAgICAgICAgY29uc3QgYmxvY2tUcmFja2VyID0gZW5naW5lLl9ibG9ja1RyYWNrZXI7XG4gICAgICAgIGNvbnN0IG1pZGRsZXdhcmUgPSB0aGlzLmNvbnN0cnVjdG9yRm4oeyBlbmdpbmUsIHByb3ZpZGVyOiBlbmdpbmUsIGJsb2NrVHJhY2tlciB9KTtcbiAgICAgICAgaWYgKCFtaWRkbGV3YXJlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdKc29uUnBjRW5naW5lTWlkZGxld2FyZVN1YnByb3ZpZGVyIC0gX2NvbnN0cnVjdG9yRm4gZGlkIG5vdCByZXR1cm4gbWlkZGxld2FyZScpO1xuICAgICAgICBpZiAodHlwZW9mIG1pZGRsZXdhcmUgIT09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0pzb25ScGNFbmdpbmVNaWRkbGV3YXJlU3VicHJvdmlkZXIgLSBzcGVjaWZpZWQgbWlkZGxld2FyZSBpcyBub3QgYSBmdW5jdGlvbicpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmUgPSBtaWRkbGV3YXJlO1xuICAgIH1cbiAgICBoYW5kbGVSZXF1ZXN0KHJlcSwgbmV4dCwgZW5kKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHsgaWQ6IHJlcS5pZCwganNvbnJwYzogJzIuMCcsIGVycm9yOiBudWxsLCByZXN1bHQ6IG51bGwgfTtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlKHJlcSwgcmVzLCBtaWRkbGV3YXJlTmV4dCwgbWlkZGxld2FyZUVuZCk7XG4gICAgICAgIGZ1bmN0aW9uIG1pZGRsZXdhcmVOZXh0KGhhbmRsZXIpIHtcbiAgICAgICAgICAgIG5leHQoKGVyciwgcmVzdWx0LCBjYikgPT4ge1xuICAgICAgICAgICAgICAgIC8vIHVwZGF0ZSByZXNwb25zZSBvYmplY3Qgd2l0aCByZXN1bHQgb3IgZXJyb3JcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSByZXMucmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICByZXMuZXJyb3IgPSB7IG1lc3NhZ2U6IGVyci5tZXNzYWdlLCBjb2RlOiBudWxsIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXMucmVzdWx0ID0gcmVzdWx0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBjYWxsIG1pZGRsZXdhcmUncyBuZXh0IGhhbmRsZXIgKGV2ZW4gaWYgZXJyb3IpXG4gICAgICAgICAgICAgICAgaWYgKGhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlcihjYik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1pZGRsZXdhcmVFbmQoZXJyKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgZW5kKG5ldyBFcnJvcihlcnIubWVzc2FnZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZW5kKG51bGwsIHJlcy5yZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Kc29uUnBjRW5naW5lTWlkZGxld2FyZVN1YnByb3ZpZGVyID0gSnNvblJwY0VuZ2luZU1pZGRsZXdhcmVTdWJwcm92aWRlcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/json-rpc-engine-middleware.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/provider.js":
/*!**************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/provider.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst json_rpc_error_1 = __importDefault(__webpack_require__(/*! json-rpc-error */ \"../../node_modules/json-rpc-error/index.js\"));\nconst subprovider_1 = __importDefault(__webpack_require__(/*! ../subprovider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\"));\n// wraps a provider in a subprovider interface\nclass ProviderSubprovider extends subprovider_1.default {\n    constructor(provider) {\n        super();\n        this.provider = provider;\n    }\n    handleRequest(payload, next, end) {\n        this.provider.sendAsync(payload, (err, response) => {\n            if (err) {\n                return end(err);\n            }\n            if (response.error) {\n                return end(new json_rpc_error_1.default.InternalError(response.error));\n            }\n            end(null, response.result);\n        });\n    }\n}\nexports.default = ProviderSubprovider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL3Byb3ZpZGVyLmpzPzliODAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRDQUE0QztBQUM1QztBQUNBLDhDQUE4QyxjQUFjO0FBQzVELHlDQUF5QyxtQkFBTyxDQUFDLGtFQUFnQjtBQUNqRSxzQ0FBc0MsbUJBQU8sQ0FBQywrRkFBZ0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy9zdWJwcm92aWRlcnMvcHJvdmlkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGpzb25fcnBjX2Vycm9yXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImpzb24tcnBjLWVycm9yXCIpKTtcbmNvbnN0IHN1YnByb3ZpZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3N1YnByb3ZpZGVyXCIpKTtcbi8vIHdyYXBzIGEgcHJvdmlkZXIgaW4gYSBzdWJwcm92aWRlciBpbnRlcmZhY2VcbmNsYXNzIFByb3ZpZGVyU3VicHJvdmlkZXIgZXh0ZW5kcyBzdWJwcm92aWRlcl8xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICB9XG4gICAgaGFuZGxlUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpIHtcbiAgICAgICAgdGhpcy5wcm92aWRlci5zZW5kQXN5bmMocGF5bG9hZCwgKGVyciwgcmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZW5kKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVzcG9uc2UuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZW5kKG5ldyBqc29uX3JwY19lcnJvcl8xLmRlZmF1bHQuSW50ZXJuYWxFcnJvcihyZXNwb25zZS5lcnJvcikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZW5kKG51bGwsIHJlc3BvbnNlLnJlc3VsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFByb3ZpZGVyU3VicHJvdmlkZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/provider.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/sanitizer.js":
/*!***************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/sanitizer.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst subprovider_1 = __importDefault(__webpack_require__(/*! ../subprovider */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subprovider.js\"));\nconst eth_util_1 = __webpack_require__(/*! ../util/eth-util */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/eth-util.js\");\nclass SanitizerSubprovider extends subprovider_1.default {\n    handleRequest(payload, next, _end) {\n        const txParams = payload.params[0];\n        if (typeof txParams === 'object' && !Array.isArray(txParams)) {\n            const sanitized = cloneTxParams(txParams);\n            payload.params[0] = sanitized;\n        }\n        next();\n    }\n}\nexports.default = SanitizerSubprovider;\n// we use this to clean any custom params from the txParams\nconst permitted = [\n    'from',\n    'to',\n    'value',\n    'data',\n    'gas',\n    'gasPrice',\n    'nonce',\n    'fromBlock',\n    'toBlock',\n    'address',\n    'topics',\n];\nfunction cloneTxParams(txParams) {\n    const sanitized = permitted.reduce((copy, p) => {\n        if (p in txParams) {\n            if (Array.isArray(txParams[p])) {\n                copy[p] = txParams[p].map((item) => sanitize(item));\n            }\n            else {\n                copy[p] = sanitize(txParams[p]);\n            }\n        }\n        return copy;\n    }, {});\n    return sanitized;\n}\nfunction sanitize(value) {\n    switch (value) {\n        case 'latest':\n            return value;\n        case 'pending':\n            return value;\n        case 'earliest':\n            return value;\n        default:\n            if (typeof value === 'string') {\n                return eth_util_1.addHexPrefix(value.toLowerCase());\n            }\n            else {\n                return value;\n            }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL3Nhbml0aXplci5qcz8zYmE2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxzQ0FBc0MsbUJBQU8sQ0FBQywrRkFBZ0I7QUFDOUQsbUJBQW1CLG1CQUFPLENBQUMsbUdBQWtCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9kaXN0L2NvbW1vbmpzL3N1YnByb3ZpZGVycy9zYW5pdGl6ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHN1YnByb3ZpZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3N1YnByb3ZpZGVyXCIpKTtcbmNvbnN0IGV0aF91dGlsXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9ldGgtdXRpbFwiKTtcbmNsYXNzIFNhbml0aXplclN1YnByb3ZpZGVyIGV4dGVuZHMgc3VicHJvdmlkZXJfMS5kZWZhdWx0IHtcbiAgICBoYW5kbGVSZXF1ZXN0KHBheWxvYWQsIG5leHQsIF9lbmQpIHtcbiAgICAgICAgY29uc3QgdHhQYXJhbXMgPSBwYXlsb2FkLnBhcmFtc1swXTtcbiAgICAgICAgaWYgKHR5cGVvZiB0eFBhcmFtcyA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkodHhQYXJhbXMpKSB7XG4gICAgICAgICAgICBjb25zdCBzYW5pdGl6ZWQgPSBjbG9uZVR4UGFyYW1zKHR4UGFyYW1zKTtcbiAgICAgICAgICAgIHBheWxvYWQucGFyYW1zWzBdID0gc2FuaXRpemVkO1xuICAgICAgICB9XG4gICAgICAgIG5leHQoKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBTYW5pdGl6ZXJTdWJwcm92aWRlcjtcbi8vIHdlIHVzZSB0aGlzIHRvIGNsZWFuIGFueSBjdXN0b20gcGFyYW1zIGZyb20gdGhlIHR4UGFyYW1zXG5jb25zdCBwZXJtaXR0ZWQgPSBbXG4gICAgJ2Zyb20nLFxuICAgICd0bycsXG4gICAgJ3ZhbHVlJyxcbiAgICAnZGF0YScsXG4gICAgJ2dhcycsXG4gICAgJ2dhc1ByaWNlJyxcbiAgICAnbm9uY2UnLFxuICAgICdmcm9tQmxvY2snLFxuICAgICd0b0Jsb2NrJyxcbiAgICAnYWRkcmVzcycsXG4gICAgJ3RvcGljcycsXG5dO1xuZnVuY3Rpb24gY2xvbmVUeFBhcmFtcyh0eFBhcmFtcykge1xuICAgIGNvbnN0IHNhbml0aXplZCA9IHBlcm1pdHRlZC5yZWR1Y2UoKGNvcHksIHApID0+IHtcbiAgICAgICAgaWYgKHAgaW4gdHhQYXJhbXMpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHR4UGFyYW1zW3BdKSkge1xuICAgICAgICAgICAgICAgIGNvcHlbcF0gPSB0eFBhcmFtc1twXS5tYXAoKGl0ZW0pID0+IHNhbml0aXplKGl0ZW0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvcHlbcF0gPSBzYW5pdGl6ZSh0eFBhcmFtc1twXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvcHk7XG4gICAgfSwge30pO1xuICAgIHJldHVybiBzYW5pdGl6ZWQ7XG59XG5mdW5jdGlvbiBzYW5pdGl6ZSh2YWx1ZSkge1xuICAgIHN3aXRjaCAodmFsdWUpIHtcbiAgICAgICAgY2FzZSAnbGF0ZXN0JzpcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgY2FzZSAncGVuZGluZyc6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIGNhc2UgJ2VhcmxpZXN0JzpcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGV0aF91dGlsXzEuYWRkSGV4UHJlZml4KHZhbHVlLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/sanitizer.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/subscriptions.js":
/*!*******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/subproviders/subscriptions.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst json_rpc_engine_middleware_1 = __webpack_require__(/*! ./json-rpc-engine-middleware */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/json-rpc-engine-middleware.js\");\nconst subscriptionManager_1 = __importDefault(__webpack_require__(/*! eth-json-rpc-filters/subscriptionManager */ \"../../node_modules/eth-json-rpc-filters/subscriptionManager.js\"));\nclass SubscriptionsSubprovider extends json_rpc_engine_middleware_1.JsonRpcEngineMiddlewareSubprovider {\n    constructor() {\n        super(({ blockTracker, provider, engine }) => {\n            const { events, middleware } = subscriptionManager_1.default({ blockTracker, provider });\n            // forward subscription events on the engine\n            events.on('notification', (data) => engine.emit('data', null, data));\n            // return the subscription install/remove middleware\n            return middleware;\n        });\n    }\n}\nexports.default = SubscriptionsSubprovider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvc3VicHJvdmlkZXJzL3N1YnNjcmlwdGlvbnMuanM/NzQxMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQscUNBQXFDLG1CQUFPLENBQUMseUlBQThCO0FBQzNFLDhDQUE4QyxtQkFBTyxDQUFDLGdIQUEwQztBQUNoRztBQUNBO0FBQ0EsZ0JBQWdCLGlDQUFpQztBQUNqRCxtQkFBbUIscUJBQXFCLGtDQUFrQyx5QkFBeUI7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9kaXN0L2NvbW1vbmpzL3N1YnByb3ZpZGVycy9zdWJzY3JpcHRpb25zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBqc29uX3JwY19lbmdpbmVfbWlkZGxld2FyZV8xID0gcmVxdWlyZShcIi4vanNvbi1ycGMtZW5naW5lLW1pZGRsZXdhcmVcIik7XG5jb25zdCBzdWJzY3JpcHRpb25NYW5hZ2VyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImV0aC1qc29uLXJwYy1maWx0ZXJzL3N1YnNjcmlwdGlvbk1hbmFnZXJcIikpO1xuY2xhc3MgU3Vic2NyaXB0aW9uc1N1YnByb3ZpZGVyIGV4dGVuZHMganNvbl9ycGNfZW5naW5lX21pZGRsZXdhcmVfMS5Kc29uUnBjRW5naW5lTWlkZGxld2FyZVN1YnByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKHsgYmxvY2tUcmFja2VyLCBwcm92aWRlciwgZW5naW5lIH0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgZXZlbnRzLCBtaWRkbGV3YXJlIH0gPSBzdWJzY3JpcHRpb25NYW5hZ2VyXzEuZGVmYXVsdCh7IGJsb2NrVHJhY2tlciwgcHJvdmlkZXIgfSk7XG4gICAgICAgICAgICAvLyBmb3J3YXJkIHN1YnNjcmlwdGlvbiBldmVudHMgb24gdGhlIGVuZ2luZVxuICAgICAgICAgICAgZXZlbnRzLm9uKCdub3RpZmljYXRpb24nLCAoZGF0YSkgPT4gZW5naW5lLmVtaXQoJ2RhdGEnLCBudWxsLCBkYXRhKSk7XG4gICAgICAgICAgICAvLyByZXR1cm4gdGhlIHN1YnNjcmlwdGlvbiBpbnN0YWxsL3JlbW92ZSBtaWRkbGV3YXJlXG4gICAgICAgICAgICByZXR1cm4gbWlkZGxld2FyZTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gU3Vic2NyaXB0aW9uc1N1YnByb3ZpZGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/subproviders/subscriptions.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/util/block-tracker.js":
/*!***********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/util/block-tracker.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst eth_block_tracker_1 = __importDefault(__webpack_require__(/*! eth-block-tracker */ \"../../node_modules/eth-block-tracker/src/polling.js\"));\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst block_tracker_error_1 = __webpack_require__(/*! ../errors/block-tracker-error */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/errors/block-tracker-error.js\");\nconst create_payload_1 = __webpack_require__(/*! ./create-payload */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js\");\nconst eth_util_1 = __webpack_require__(/*! ./eth-util */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/eth-util.js\");\n// Class responsible for tracking new blocks as they are mined,\n// loading them, parsing them, and alerting subscribers via events.\nclass BlockTracker extends events_1.EventEmitter {\n    constructor(opts) {\n        super();\n        // Number of milliseconds to wait before retrying\n        this.blockTimeout = 300;\n        // Maximum attempts to load a block\n        this.maxBlockRetries = 3;\n        this.provider = opts.provider;\n        this._blockTracker = opts.blockTracker || new eth_block_tracker_1.default(Object.assign({}, opts, { setSkipCacheFlag: true }));\n    }\n    start() {\n        this.createSubscriptions();\n    }\n    stop() {\n        this.destroySubscriptions();\n    }\n    getLatestBlock() {\n        return this._blockTracker.checkForLatestBlock().catch((error) => {\n            this.emit('error', error);\n        });\n    }\n    createSubscriptions() {\n        // on new block, request block body and emit as events\n        this._blockTracker.on('latest', this.onLatest.bind(this));\n        // forward other events\n        this._blockTracker.on('sync', this.emit.bind(this, 'sync'));\n        this._blockTracker.on('error', this.emit.bind(this, 'error'));\n    }\n    destroySubscriptions() {\n        // stop block polling by removing event listeners\n        this._blockTracker.removeAllListeners();\n    }\n    onLatest(blockNumber) {\n        this.currentBlockNumber = blockNumber;\n        this.loadBlock(blockNumber);\n    }\n    // Tries to get the block payload recursively\n    loadBlock(blockNumber, callCount = 0) {\n        this._getBlockByNumber(blockNumber).then((blockResponse) => {\n            // Result can be null if the block hasn't fully propagated to the nodes\n            if (blockResponse.result) {\n                this.updateBlock(blockResponse.result);\n            }\n            else if (callCount < this.maxBlockRetries && blockNumber === this.currentBlockNumber) {\n                // Only call recursively if the current block number is still the same\n                // and if we are under the retry limit.\n                setTimeout(() => {\n                    this.loadBlock(blockNumber, callCount + 1);\n                }, this.blockTimeout);\n            }\n            else {\n                throw block_tracker_error_1.BlockTrackerError.BlockNotFound(blockNumber);\n            }\n        }).catch((err) => {\n            // Don't retry for errors (provider should have already retried)\n            this.emit('error', err);\n        });\n    }\n    _getBlockByNumber(blockNumber) {\n        const req = create_payload_1.createPayload({ method: 'eth_getBlockByNumber', params: [blockNumber, false], skipCache: true });\n        return new Promise((fulfill, reject) => {\n            this.provider.sendAsync(req, (err, result) => {\n                if (err) {\n                    return reject(err);\n                }\n                fulfill(result);\n            });\n        });\n    }\n    // Parse the block into a buffer representation and update subscribers.\n    updateBlock(block) {\n        const bufferBlock = toBufferBlock(block);\n        // set current + emit \"block\" event\n        this._setCurrentBlock(bufferBlock);\n        // emit other events\n        this.emit('rawBlock', block);\n        this.emit('latest', block);\n    }\n    _setCurrentBlock(bufferBlock) {\n        this.currentBlock = bufferBlock;\n        this.emit('block', bufferBlock);\n    }\n}\nexports.default = BlockTracker;\n// util\nfunction toBufferBlock(jsonBlock) {\n    return {\n        number: eth_util_1.toBuffer(jsonBlock.number),\n        hash: eth_util_1.toBuffer(jsonBlock.hash),\n        parentHash: eth_util_1.toBuffer(jsonBlock.parentHash),\n        nonce: eth_util_1.toBuffer(jsonBlock.nonce),\n        mixHash: eth_util_1.toBuffer(jsonBlock.mixHash),\n        sha3Uncles: eth_util_1.toBuffer(jsonBlock.sha3Uncles),\n        logsBloom: eth_util_1.toBuffer(jsonBlock.logsBloom),\n        transactionsRoot: eth_util_1.toBuffer(jsonBlock.transactionsRoot),\n        stateRoot: eth_util_1.toBuffer(jsonBlock.stateRoot),\n        receiptsRoot: eth_util_1.toBuffer(jsonBlock.receiptsRoot),\n        miner: eth_util_1.toBuffer(jsonBlock.miner),\n        difficulty: eth_util_1.toBuffer(jsonBlock.difficulty),\n        totalDifficulty: eth_util_1.toBuffer(jsonBlock.totalDifficulty),\n        size: eth_util_1.toBuffer(jsonBlock.size),\n        extraData: eth_util_1.toBuffer(jsonBlock.extraData),\n        gasLimit: eth_util_1.toBuffer(jsonBlock.gasLimit),\n        gasUsed: eth_util_1.toBuffer(jsonBlock.gasUsed),\n        timestamp: eth_util_1.toBuffer(jsonBlock.timestamp),\n        transactions: jsonBlock.transactions,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/util/block-tracker.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js":
/*!************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst xtend_1 = __importDefault(__webpack_require__(/*! xtend */ \"../../node_modules/xtend/immutable.js\"));\nconst random_id_1 = __webpack_require__(/*! ./random-id */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/util/random-id.js\");\nfunction createPayload(data) {\n    return xtend_1.default({\n        // defaults\n        id: random_id_1.createRandomId(),\n        jsonrpc: '2.0',\n        params: [],\n    }, data);\n}\nexports.createPayload = createPayload;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvdXRpbC9jcmVhdGUtcGF5bG9hZC5qcz8xYmU4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQ0FBZ0MsbUJBQU8sQ0FBQyxvREFBTztBQUMvQyxvQkFBb0IsbUJBQU8sQ0FBQywrRkFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy91dGlsL2NyZWF0ZS1wYXlsb2FkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB4dGVuZF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJ4dGVuZFwiKSk7XG5jb25zdCByYW5kb21faWRfMSA9IHJlcXVpcmUoXCIuL3JhbmRvbS1pZFwiKTtcbmZ1bmN0aW9uIGNyZWF0ZVBheWxvYWQoZGF0YSkge1xuICAgIHJldHVybiB4dGVuZF8xLmRlZmF1bHQoe1xuICAgICAgICAvLyBkZWZhdWx0c1xuICAgICAgICBpZDogcmFuZG9tX2lkXzEuY3JlYXRlUmFuZG9tSWQoKSxcbiAgICAgICAganNvbnJwYzogJzIuMCcsXG4gICAgICAgIHBhcmFtczogW10sXG4gICAgfSwgZGF0YSk7XG59XG5leHBvcnRzLmNyZWF0ZVBheWxvYWQgPSBjcmVhdGVQYXlsb2FkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/util/create-payload.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/util/eth-util.js":
/*!******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/util/eth-util.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"../../node_modules/bn.js/lib/bn.js\"));\nconst ethjs_util_1 = __importDefault(__webpack_require__(/*! ethjs-util */ \"../../node_modules/ethjs-util/lib/index.js\"));\n// Methods from ethereumjs-util\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports\n * `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjs_util_1.default.isHexString(v)) {\n                v = Buffer.from(ethjs_util_1.default.padToEven(ethjs_util_1.default.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new TypeError(\n                // tslint:disable-next-line: max-line-length\n                `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjs_util_1.default.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (bn_js_1.default.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new TypeError(`invalid type: ${v}`);\n        }\n    }\n    return v;\n}\nexports.toBuffer = toBuffer;\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nfunction addHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjs_util_1.default.isHexPrefixed(str) ? str : '0x' + str;\n}\nexports.addHexPrefix = addHexPrefix;\nfunction stripHexPrefix(str) {\n    return ethjs_util_1.default.stripHexPrefix(str);\n}\nexports.stripHexPrefix = stripHexPrefix;\nfunction intToHex(n) {\n    return ethjs_util_1.default.intToHex(n);\n}\nexports.intToHex = intToHex;\nfunction intToBuffer(n) {\n    return ethjs_util_1.default.intToBuffer(n);\n}\nexports.intToBuffer = intToBuffer;\n/**\n * Converts a `Buffer` into a hex `String`.\n * @param buf `Buffer` object to convert\n */\nfunction bufferToHex(buf) {\n    buf = toBuffer(buf);\n    return '0x' + buf.toString('hex');\n}\nexports.bufferToHex = bufferToHex;\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nfunction bufferToInt(buf) {\n    return new bn_js_1.default(toBuffer(buf)).toNumber();\n}\nexports.bufferToInt = bufferToInt;\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nfunction unpad(a) {\n    a = ethjs_util_1.default.stripHexPrefix(a);\n    let first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n}\nexports.unpad = unpad;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvdXRpbC9ldGgtdXRpbC5qcz9hN2YyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxnQ0FBZ0MsbUJBQU8sQ0FBQyxpREFBTztBQUMvQyxxQ0FBcUMsbUJBQU8sQ0FBQyw4REFBWTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4SEFBOEgsRUFBRTtBQUNoSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxFQUFFO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvZGlzdC9jb21tb25qcy91dGlsL2V0aC11dGlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBibl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJibi5qc1wiKSk7XG5jb25zdCBldGhqc191dGlsXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImV0aGpzLXV0aWxcIikpO1xuLy8gTWV0aG9kcyBmcm9tIGV0aGVyZXVtanMtdXRpbFxuLyoqXG4gKiBBdHRlbXB0cyB0byB0dXJuIGEgdmFsdWUgaW50byBhIGBCdWZmZXJgLiBBcyBpbnB1dCBpdCBzdXBwb3J0c1xuICogYEJ1ZmZlcmAsIGBTdHJpbmdgLCBgTnVtYmVyYCwgbnVsbC91bmRlZmluZWQsIGBCTmAgYW5kIG90aGVyIG9iamVjdHMgd2l0aCBhIGB0b0FycmF5KClgIG1ldGhvZC5cbiAqIEBwYXJhbSB2IHRoZSB2YWx1ZVxuICovXG5mdW5jdGlvbiB0b0J1ZmZlcih2KSB7XG4gICAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodikpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodikpIHtcbiAgICAgICAgICAgIHYgPSBCdWZmZXIuZnJvbSh2KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgdiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGlmIChldGhqc191dGlsXzEuZGVmYXVsdC5pc0hleFN0cmluZyh2KSkge1xuICAgICAgICAgICAgICAgIHYgPSBCdWZmZXIuZnJvbShldGhqc191dGlsXzEuZGVmYXVsdC5wYWRUb0V2ZW4oZXRoanNfdXRpbF8xLmRlZmF1bHQuc3RyaXBIZXhQcmVmaXgodikpLCAnaGV4Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbWF4LWxpbmUtbGVuZ3RoXG4gICAgICAgICAgICAgICAgYENhbm5vdCBjb252ZXJ0IHN0cmluZyB0byBidWZmZXIuIHRvQnVmZmVyIG9ubHkgc3VwcG9ydHMgMHgtcHJlZml4ZWQgaGV4IHN0cmluZ3MgYW5kIHRoaXMgc3RyaW5nIHdhcyBnaXZlbjogJHt2fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiB2ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdiA9IGV0aGpzX3V0aWxfMS5kZWZhdWx0LmludFRvQnVmZmVyKHYpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHYgPT09IG51bGwgfHwgdiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB2ID0gQnVmZmVyLmFsbG9jVW5zYWZlKDApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGJuX2pzXzEuZGVmYXVsdC5pc0JOKHYpKSB7XG4gICAgICAgICAgICB2ID0gdi50b0FycmF5TGlrZShCdWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHYudG9BcnJheSkge1xuICAgICAgICAgICAgLy8gY29udmVydHMgYSBCTiB0byBhIEJ1ZmZlclxuICAgICAgICAgICAgdiA9IEJ1ZmZlci5mcm9tKHYudG9BcnJheSgpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYGludmFsaWQgdHlwZTogJHt2fWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB2O1xufVxuZXhwb3J0cy50b0J1ZmZlciA9IHRvQnVmZmVyO1xuLyoqXG4gKiBBZGRzIFwiMHhcIiB0byBhIGdpdmVuIGBTdHJpbmdgIGlmIGl0IGRvZXMgbm90IGFscmVhZHkgc3RhcnQgd2l0aCBcIjB4XCIuXG4gKi9cbmZ1bmN0aW9uIGFkZEhleFByZWZpeChzdHIpIHtcbiAgICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gICAgcmV0dXJuIGV0aGpzX3V0aWxfMS5kZWZhdWx0LmlzSGV4UHJlZml4ZWQoc3RyKSA/IHN0ciA6ICcweCcgKyBzdHI7XG59XG5leHBvcnRzLmFkZEhleFByZWZpeCA9IGFkZEhleFByZWZpeDtcbmZ1bmN0aW9uIHN0cmlwSGV4UHJlZml4KHN0cikge1xuICAgIHJldHVybiBldGhqc191dGlsXzEuZGVmYXVsdC5zdHJpcEhleFByZWZpeChzdHIpO1xufVxuZXhwb3J0cy5zdHJpcEhleFByZWZpeCA9IHN0cmlwSGV4UHJlZml4O1xuZnVuY3Rpb24gaW50VG9IZXgobikge1xuICAgIHJldHVybiBldGhqc191dGlsXzEuZGVmYXVsdC5pbnRUb0hleChuKTtcbn1cbmV4cG9ydHMuaW50VG9IZXggPSBpbnRUb0hleDtcbmZ1bmN0aW9uIGludFRvQnVmZmVyKG4pIHtcbiAgICByZXR1cm4gZXRoanNfdXRpbF8xLmRlZmF1bHQuaW50VG9CdWZmZXIobik7XG59XG5leHBvcnRzLmludFRvQnVmZmVyID0gaW50VG9CdWZmZXI7XG4vKipcbiAqIENvbnZlcnRzIGEgYEJ1ZmZlcmAgaW50byBhIGhleCBgU3RyaW5nYC5cbiAqIEBwYXJhbSBidWYgYEJ1ZmZlcmAgb2JqZWN0IHRvIGNvbnZlcnRcbiAqL1xuZnVuY3Rpb24gYnVmZmVyVG9IZXgoYnVmKSB7XG4gICAgYnVmID0gdG9CdWZmZXIoYnVmKTtcbiAgICByZXR1cm4gJzB4JyArIGJ1Zi50b1N0cmluZygnaGV4Jyk7XG59XG5leHBvcnRzLmJ1ZmZlclRvSGV4ID0gYnVmZmVyVG9IZXg7XG4vKipcbiAqIENvbnZlcnRzIGEgYEJ1ZmZlcmAgdG8gYSBgTnVtYmVyYC5cbiAqIEBwYXJhbSBidWYgYEJ1ZmZlcmAgb2JqZWN0IHRvIGNvbnZlcnRcbiAqIEB0aHJvd3MgSWYgdGhlIGlucHV0IG51bWJlciBleGNlZWRzIDUzIGJpdHMuXG4gKi9cbmZ1bmN0aW9uIGJ1ZmZlclRvSW50KGJ1Zikge1xuICAgIHJldHVybiBuZXcgYm5fanNfMS5kZWZhdWx0KHRvQnVmZmVyKGJ1ZikpLnRvTnVtYmVyKCk7XG59XG5leHBvcnRzLmJ1ZmZlclRvSW50ID0gYnVmZmVyVG9JbnQ7XG4vKipcbiAqIFRyaW1zIGxlYWRpbmcgemVyb3MgZnJvbSBhIGBCdWZmZXJgIG9yIGFuIGBBcnJheWAuXG4gKiBAcGFyYW0gYSAoQnVmZmVyfEFycmF5fFN0cmluZylcbiAqIEByZXR1cm4gKEJ1ZmZlcnxBcnJheXxTdHJpbmcpXG4gKi9cbmZ1bmN0aW9uIHVucGFkKGEpIHtcbiAgICBhID0gZXRoanNfdXRpbF8xLmRlZmF1bHQuc3RyaXBIZXhQcmVmaXgoYSk7XG4gICAgbGV0IGZpcnN0ID0gYVswXTtcbiAgICB3aGlsZSAoYS5sZW5ndGggPiAwICYmIGZpcnN0LnRvU3RyaW5nKCkgPT09ICcwJykge1xuICAgICAgICBhID0gYS5zbGljZSgxKTtcbiAgICAgICAgZmlyc3QgPSBhWzBdO1xuICAgIH1cbiAgICByZXR1cm4gYTtcbn1cbmV4cG9ydHMudW5wYWQgPSB1bnBhZDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/util/eth-util.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/util/random-id.js":
/*!*******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/util/random-id.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// gotta keep it within MAX_SAFE_INTEGER\nconst extraDigits = 3;\nfunction createRandomId() {\n    // 13 time digits\n    const datePart = new Date().getTime() * Math.pow(10, extraDigits);\n    // 3 random digits\n    const extraPart = Math.floor(Math.random() * Math.pow(10, extraDigits));\n    // 16 digits\n    return datePart + extraPart;\n}\nexports.createRandomId = createRandomId;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvdXRpbC9yYW5kb20taWQuanM/NmI2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvdXRpbC9yYW5kb20taWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIGdvdHRhIGtlZXAgaXQgd2l0aGluIE1BWF9TQUZFX0lOVEVHRVJcbmNvbnN0IGV4dHJhRGlnaXRzID0gMztcbmZ1bmN0aW9uIGNyZWF0ZVJhbmRvbUlkKCkge1xuICAgIC8vIDEzIHRpbWUgZGlnaXRzXG4gICAgY29uc3QgZGF0ZVBhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAqIE1hdGgucG93KDEwLCBleHRyYURpZ2l0cyk7XG4gICAgLy8gMyByYW5kb20gZGlnaXRzXG4gICAgY29uc3QgZXh0cmFQYXJ0ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5wb3coMTAsIGV4dHJhRGlnaXRzKSk7XG4gICAgLy8gMTYgZGlnaXRzXG4gICAgcmV0dXJuIGRhdGVQYXJ0ICsgZXh0cmFQYXJ0O1xufVxuZXhwb3J0cy5jcmVhdGVSYW5kb21JZCA9IGNyZWF0ZVJhbmRvbUlkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/util/random-id.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/dist/commonjs/util/stoplight.js":
/*!*******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/dist/commonjs/util/stoplight.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nclass Stoplight extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.isLocked = true;\n    }\n    go() {\n        this.isLocked = false;\n        this.emit('unlock');\n    }\n    stop() {\n        this.isLocked = true;\n        this.emit('lock');\n    }\n    await(fn) {\n        if (this.isLocked) {\n            this.once('unlock', fn);\n        }\n        else {\n            setTimeout(fn);\n        }\n    }\n}\nexports.default = Stoplight;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvdXRpbC9zdG9wbGlnaHQuanM/Y2Q5OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL2Rpc3QvY29tbW9uanMvdXRpbC9zdG9wbGlnaHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGV2ZW50c18xID0gcmVxdWlyZShcImV2ZW50c1wiKTtcbmNsYXNzIFN0b3BsaWdodCBleHRlbmRzIGV2ZW50c18xLkV2ZW50RW1pdHRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaXNMb2NrZWQgPSB0cnVlO1xuICAgIH1cbiAgICBnbygpIHtcbiAgICAgICAgdGhpcy5pc0xvY2tlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmVtaXQoJ3VubG9jaycpO1xuICAgIH1cbiAgICBzdG9wKCkge1xuICAgICAgICB0aGlzLmlzTG9ja2VkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5lbWl0KCdsb2NrJyk7XG4gICAgfVxuICAgIGF3YWl0KGZuKSB7XG4gICAgICAgIGlmICh0aGlzLmlzTG9ja2VkKSB7XG4gICAgICAgICAgICB0aGlzLm9uY2UoJ3VubG9jaycsIGZuKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZm4pO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gU3RvcGxpZ2h0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/dist/commonjs/util/stoplight.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/asyncify.js":
/*!******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/asyncify.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncify;\n\nvar _initialParams = __webpack_require__(/*! ./internal/initialParams */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/initialParams.js\");\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _setImmediate = __webpack_require__(/*! ./internal/setImmediate */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/setImmediate.js\");\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if ((0, _wrapAsync.isAsync)(func)) {\n        return function (...args /*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback);\n        };\n    }\n\n    return (0, _initialParams2.default)(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback);\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        (0, _setImmediate2.default)(e => {\n            throw e;\n        }, err);\n    }\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9hc3luY2lmeS5qcz85OTNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEscUJBQXFCLG1CQUFPLENBQUMseUhBQTBCOztBQUV2RDs7QUFFQSxvQkFBb0IsbUJBQU8sQ0FBQyx1SEFBeUI7O0FBRXJEOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLGlIQUFzQjs7QUFFL0Msc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLDhCQUE4QixvQkFBb0I7QUFDbEQsYUFBYSxjQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9hc3luY2lmeS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYXN5bmNpZnk7XG5cbnZhciBfaW5pdGlhbFBhcmFtcyA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvaW5pdGlhbFBhcmFtcycpO1xuXG52YXIgX2luaXRpYWxQYXJhbXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5pdGlhbFBhcmFtcyk7XG5cbnZhciBfc2V0SW1tZWRpYXRlID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9zZXRJbW1lZGlhdGUnKTtcblxudmFyIF9zZXRJbW1lZGlhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2V0SW1tZWRpYXRlKTtcblxudmFyIF93cmFwQXN5bmMgPSByZXF1aXJlKCcuL2ludGVybmFsL3dyYXBBc3luYycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIFRha2UgYSBzeW5jIGZ1bmN0aW9uIGFuZCBtYWtlIGl0IGFzeW5jLCBwYXNzaW5nIGl0cyByZXR1cm4gdmFsdWUgdG8gYVxuICogY2FsbGJhY2suIFRoaXMgaXMgdXNlZnVsIGZvciBwbHVnZ2luZyBzeW5jIGZ1bmN0aW9ucyBpbnRvIGEgd2F0ZXJmYWxsLFxuICogc2VyaWVzLCBvciBvdGhlciBhc3luYyBmdW5jdGlvbnMuIEFueSBhcmd1bWVudHMgcGFzc2VkIHRvIHRoZSBnZW5lcmF0ZWRcbiAqIGZ1bmN0aW9uIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSB3cmFwcGVkIGZ1bmN0aW9uIChleGNlcHQgZm9yIHRoZSBmaW5hbFxuICogY2FsbGJhY2sgYXJndW1lbnQpLiBFcnJvcnMgdGhyb3duIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBjYWxsYmFjay5cbiAqXG4gKiBJZiB0aGUgZnVuY3Rpb24gcGFzc2VkIHRvIGBhc3luY2lmeWAgcmV0dXJucyBhIFByb21pc2UsIHRoYXQgcHJvbWlzZXMnc1xuICogcmVzb2x2ZWQvcmVqZWN0ZWQgc3RhdGUgd2lsbCBiZSB1c2VkIHRvIGNhbGwgdGhlIGNhbGxiYWNrLCByYXRoZXIgdGhhbiBzaW1wbHlcbiAqIHRoZSBzeW5jaHJvbm91cyByZXR1cm4gdmFsdWUuXG4gKlxuICogVGhpcyBhbHNvIG1lYW5zIHlvdSBjYW4gYXN5bmNpZnkgRVMyMDE3IGBhc3luY2AgZnVuY3Rpb25zLlxuICpcbiAqIEBuYW1lIGFzeW5jaWZ5XG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgbW9kdWxlOlV0aWxzXG4gKiBAbWV0aG9kXG4gKiBAYWxpYXMgd3JhcFN5bmNcbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIC0gVGhlIHN5bmNocm9ub3VzIGZ1bmN0aW9uLCBvciBQcm9taXNlLXJldHVybmluZ1xuICogZnVuY3Rpb24gdG8gY29udmVydCB0byBhbiB7QGxpbmsgQXN5bmNGdW5jdGlvbn0uXG4gKiBAcmV0dXJucyB7QXN5bmNGdW5jdGlvbn0gQW4gYXN5bmNocm9ub3VzIHdyYXBwZXIgb2YgdGhlIGBmdW5jYC4gVG8gYmVcbiAqIGludm9rZWQgd2l0aCBgKGFyZ3MuLi4sIGNhbGxiYWNrKWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIC8vIHBhc3NpbmcgYSByZWd1bGFyIHN5bmNocm9ub3VzIGZ1bmN0aW9uXG4gKiBhc3luYy53YXRlcmZhbGwoW1xuICogICAgIGFzeW5jLmFwcGx5KGZzLnJlYWRGaWxlLCBmaWxlbmFtZSwgXCJ1dGY4XCIpLFxuICogICAgIGFzeW5jLmFzeW5jaWZ5KEpTT04ucGFyc2UpLFxuICogICAgIGZ1bmN0aW9uIChkYXRhLCBuZXh0KSB7XG4gKiAgICAgICAgIC8vIGRhdGEgaXMgdGhlIHJlc3VsdCBvZiBwYXJzaW5nIHRoZSB0ZXh0LlxuICogICAgICAgICAvLyBJZiB0aGVyZSB3YXMgYSBwYXJzaW5nIGVycm9yLCBpdCB3b3VsZCBoYXZlIGJlZW4gY2F1Z2h0LlxuICogICAgIH1cbiAqIF0sIGNhbGxiYWNrKTtcbiAqXG4gKiAvLyBwYXNzaW5nIGEgZnVuY3Rpb24gcmV0dXJuaW5nIGEgcHJvbWlzZVxuICogYXN5bmMud2F0ZXJmYWxsKFtcbiAqICAgICBhc3luYy5hcHBseShmcy5yZWFkRmlsZSwgZmlsZW5hbWUsIFwidXRmOFwiKSxcbiAqICAgICBhc3luYy5hc3luY2lmeShmdW5jdGlvbiAoY29udGVudHMpIHtcbiAqICAgICAgICAgcmV0dXJuIGRiLm1vZGVsLmNyZWF0ZShjb250ZW50cyk7XG4gKiAgICAgfSksXG4gKiAgICAgZnVuY3Rpb24gKG1vZGVsLCBuZXh0KSB7XG4gKiAgICAgICAgIC8vIGBtb2RlbGAgaXMgdGhlIGluc3RhbnRpYXRlZCBtb2RlbCBvYmplY3QuXG4gKiAgICAgICAgIC8vIElmIHRoZXJlIHdhcyBhbiBlcnJvciwgdGhpcyBmdW5jdGlvbiB3b3VsZCBiZSBza2lwcGVkLlxuICogICAgIH1cbiAqIF0sIGNhbGxiYWNrKTtcbiAqXG4gKiAvLyBlczIwMTcgZXhhbXBsZSwgdGhvdWdoIGBhc3luY2lmeWAgaXMgbm90IG5lZWRlZCBpZiB5b3VyIEpTIGVudmlyb25tZW50XG4gKiAvLyBzdXBwb3J0cyBhc3luYyBmdW5jdGlvbnMgb3V0IG9mIHRoZSBib3hcbiAqIHZhciBxID0gYXN5bmMucXVldWUoYXN5bmMuYXN5bmNpZnkoYXN5bmMgZnVuY3Rpb24oZmlsZSkge1xuICogICAgIHZhciBpbnRlcm1lZGlhdGVTdGVwID0gYXdhaXQgcHJvY2Vzc0ZpbGUoZmlsZSk7XG4gKiAgICAgcmV0dXJuIGF3YWl0IHNvbWVQcm9taXNlKGludGVybWVkaWF0ZVN0ZXApXG4gKiB9KSk7XG4gKlxuICogcS5wdXNoKGZpbGVzKTtcbiAqL1xuZnVuY3Rpb24gYXN5bmNpZnkoZnVuYykge1xuICAgIGlmICgoMCwgX3dyYXBBc3luYy5pc0FzeW5jKShmdW5jKSkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MgLyosIGNhbGxiYWNrKi8pIHtcbiAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrID0gYXJncy5wb3AoKTtcbiAgICAgICAgICAgIGNvbnN0IHByb21pc2UgPSBmdW5jLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZVByb21pc2UocHJvbWlzZSwgY2FsbGJhY2spO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiAoMCwgX2luaXRpYWxQYXJhbXMyLmRlZmF1bHQpKGZ1bmN0aW9uIChhcmdzLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGlmIHJlc3VsdCBpcyBQcm9taXNlIG9iamVjdFxuICAgICAgICBpZiAocmVzdWx0ICYmIHR5cGVvZiByZXN1bHQudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZVByb21pc2UocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsLCByZXN1bHQpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVByb21pc2UocHJvbWlzZSwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gcHJvbWlzZS50aGVuKHZhbHVlID0+IHtcbiAgICAgICAgaW52b2tlQ2FsbGJhY2soY2FsbGJhY2ssIG51bGwsIHZhbHVlKTtcbiAgICB9LCBlcnIgPT4ge1xuICAgICAgICBpbnZva2VDYWxsYmFjayhjYWxsYmFjaywgZXJyICYmIGVyci5tZXNzYWdlID8gZXJyIDogbmV3IEVycm9yKGVycikpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBpbnZva2VDYWxsYmFjayhjYWxsYmFjaywgZXJyb3IsIHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIHZhbHVlKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgKDAsIF9zZXRJbW1lZGlhdGUyLmRlZmF1bHQpKGUgPT4ge1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfSwgZXJyKTtcbiAgICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/asyncify.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/eachLimit.js":
/*!*******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/eachLimit.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachOfLimit = __webpack_require__(/*! ./internal/eachOfLimit */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/eachOfLimit.js\");\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _withoutIndex = __webpack_require__(/*! ./internal/withoutIndex */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/withoutIndex.js\");\n\nvar _withoutIndex2 = _interopRequireDefault(_withoutIndex);\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = __webpack_require__(/*! ./internal/awaitify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js\");\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit(coll, limit, iteratee, callback) {\n  return (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);\n}\nexports.default = (0, _awaitify2.default)(eachLimit, 4);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9lYWNoTGltaXQuanM/ODMyOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxtQkFBbUIsbUJBQU8sQ0FBQyxxSEFBd0I7O0FBRW5EOztBQUVBLG9CQUFvQixtQkFBTyxDQUFDLHVIQUF5Qjs7QUFFckQ7O0FBRUEsaUJBQWlCLG1CQUFPLENBQUMsaUhBQXNCOztBQUUvQzs7QUFFQSxnQkFBZ0IsbUJBQU8sQ0FBQywrR0FBcUI7O0FBRTdDOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBLHdCQUF3Qiw4QkFBOEI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsV0FBVyxvQ0FBb0M7QUFDL0MsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsY0FBYztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9lYWNoTGltaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZWFjaE9mTGltaXQgPSByZXF1aXJlKCcuL2ludGVybmFsL2VhY2hPZkxpbWl0Jyk7XG5cbnZhciBfZWFjaE9mTGltaXQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZWFjaE9mTGltaXQpO1xuXG52YXIgX3dpdGhvdXRJbmRleCA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvd2l0aG91dEluZGV4Jyk7XG5cbnZhciBfd2l0aG91dEluZGV4MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dpdGhvdXRJbmRleCk7XG5cbnZhciBfd3JhcEFzeW5jID0gcmVxdWlyZSgnLi9pbnRlcm5hbC93cmFwQXN5bmMnKTtcblxudmFyIF93cmFwQXN5bmMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd3JhcEFzeW5jKTtcblxudmFyIF9hd2FpdGlmeSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvYXdhaXRpZnknKTtcblxudmFyIF9hd2FpdGlmeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hd2FpdGlmeSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogVGhlIHNhbWUgYXMgW2BlYWNoYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmVhY2h9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICpcbiAqIEBuYW1lIGVhY2hMaW1pdFxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICogQG1ldGhvZFxuICogQHNlZSBbYXN5bmMuZWFjaF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmVhY2h9XG4gKiBAYWxpYXMgZm9yRWFjaExpbWl0XG4gKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge251bWJlcn0gbGltaXQgLSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXN5bmMgb3BlcmF0aW9ucyBhdCBhIHRpbWUuXG4gKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gKiBgY29sbGAuXG4gKiBUaGUgYXJyYXkgaW5kZXggaXMgbm90IHBhc3NlZCB0byB0aGUgaXRlcmF0ZWUuXG4gKiBJZiB5b3UgbmVlZCB0aGUgaW5kZXgsIHVzZSBgZWFjaE9mTGltaXRgLlxuICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGxcbiAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBvbWl0dGVkXG4gKi9cbmZ1bmN0aW9uIGVhY2hMaW1pdChjb2xsLCBsaW1pdCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gIHJldHVybiAoMCwgX2VhY2hPZkxpbWl0Mi5kZWZhdWx0KShsaW1pdCkoY29sbCwgKDAsIF93aXRob3V0SW5kZXgyLmRlZmF1bHQpKCgwLCBfd3JhcEFzeW5jMi5kZWZhdWx0KShpdGVyYXRlZSkpLCBjYWxsYmFjayk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSAoMCwgX2F3YWl0aWZ5Mi5kZWZhdWx0KShlYWNoTGltaXQsIDQpO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/eachLimit.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/eachOf.js":
/*!****************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/eachOf.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _isArrayLike = __webpack_require__(/*! ./internal/isArrayLike */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/isArrayLike.js\");\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _breakLoop = __webpack_require__(/*! ./internal/breakLoop */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/breakLoop.js\");\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nvar _eachOfLimit = __webpack_require__(/*! ./eachOfLimit */ \"../../node_modules/@bitski/provider-engine/node_modules/async/eachOfLimit.js\");\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _once = __webpack_require__(/*! ./internal/once */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/once.js\");\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _onlyOnce = __webpack_require__(/*! ./internal/onlyOnce */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/onlyOnce.js\");\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = __webpack_require__(/*! ./internal/awaitify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js\");\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = (0, _once2.default)(callback);\n    var index = 0,\n        completed = 0,\n        { length } = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return;\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === _breakLoop2.default) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric(coll, iteratee, callback) {\n    return (0, _eachOfLimit2.default)(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);\n}\n\nexports.default = (0, _awaitify2.default)(eachOf, 3);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9lYWNoT2YuanM/MmMwYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxtQkFBbUIsbUJBQU8sQ0FBQyxxSEFBd0I7O0FBRW5EOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLGlIQUFzQjs7QUFFL0M7O0FBRUEsbUJBQW1CLG1CQUFPLENBQUMsbUdBQWU7O0FBRTFDOztBQUVBLFlBQVksbUJBQU8sQ0FBQyx1R0FBaUI7O0FBRXJDOztBQUVBLGdCQUFnQixtQkFBTyxDQUFDLCtHQUFxQjs7QUFFN0M7O0FBRUEsaUJBQWlCLG1CQUFPLENBQUMsaUhBQXNCOztBQUUvQzs7QUFFQSxnQkFBZ0IsbUJBQU8sQ0FBQywrR0FBcUI7O0FBRTdDOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxTQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQSxVQUFVLGdCQUFnQjtBQUMxQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsOEJBQThCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsV0FBVyxvQ0FBb0M7QUFDL0MsV0FBVyxjQUFjO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvbm9kZV9tb2R1bGVzL2FzeW5jL2VhY2hPZi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2lzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9pc0FycmF5TGlrZScpO1xuXG52YXIgX2lzQXJyYXlMaWtlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2lzQXJyYXlMaWtlKTtcblxudmFyIF9icmVha0xvb3AgPSByZXF1aXJlKCcuL2ludGVybmFsL2JyZWFrTG9vcCcpO1xuXG52YXIgX2JyZWFrTG9vcDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9icmVha0xvb3ApO1xuXG52YXIgX2VhY2hPZkxpbWl0ID0gcmVxdWlyZSgnLi9lYWNoT2ZMaW1pdCcpO1xuXG52YXIgX2VhY2hPZkxpbWl0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2VhY2hPZkxpbWl0KTtcblxudmFyIF9vbmNlID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9vbmNlJyk7XG5cbnZhciBfb25jZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9vbmNlKTtcblxudmFyIF9vbmx5T25jZSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvb25seU9uY2UnKTtcblxudmFyIF9vbmx5T25jZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9vbmx5T25jZSk7XG5cbnZhciBfd3JhcEFzeW5jID0gcmVxdWlyZSgnLi9pbnRlcm5hbC93cmFwQXN5bmMnKTtcblxudmFyIF93cmFwQXN5bmMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd3JhcEFzeW5jKTtcblxudmFyIF9hd2FpdGlmeSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvYXdhaXRpZnknKTtcblxudmFyIF9hd2FpdGlmeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hd2FpdGlmeSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIGVhY2hPZiBpbXBsZW1lbnRhdGlvbiBvcHRpbWl6ZWQgZm9yIGFycmF5LWxpa2VzXG5mdW5jdGlvbiBlYWNoT2ZBcnJheUxpa2UoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2sgPSAoMCwgX29uY2UyLmRlZmF1bHQpKGNhbGxiYWNrKTtcbiAgICB2YXIgaW5kZXggPSAwLFxuICAgICAgICBjb21wbGV0ZWQgPSAwLFxuICAgICAgICB7IGxlbmd0aCB9ID0gY29sbCxcbiAgICAgICAgY2FuY2VsZWQgPSBmYWxzZTtcbiAgICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGl0ZXJhdG9yQ2FsbGJhY2soZXJyLCB2YWx1ZSkge1xuICAgICAgICBpZiAoZXJyID09PSBmYWxzZSkge1xuICAgICAgICAgICAgY2FuY2VsZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjYW5jZWxlZCA9PT0gdHJ1ZSkgcmV0dXJuO1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICB9IGVsc2UgaWYgKCsrY29tcGxldGVkID09PSBsZW5ndGggfHwgdmFsdWUgPT09IF9icmVha0xvb3AyLmRlZmF1bHQpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZm9yICg7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIGl0ZXJhdGVlKGNvbGxbaW5kZXhdLCBpbmRleCwgKDAsIF9vbmx5T25jZTIuZGVmYXVsdCkoaXRlcmF0b3JDYWxsYmFjaykpO1xuICAgIH1cbn1cblxuLy8gYSBnZW5lcmljIHZlcnNpb24gb2YgZWFjaE9mIHdoaWNoIGNhbiBoYW5kbGUgYXJyYXksIG9iamVjdCwgYW5kIGl0ZXJhdG9yIGNhc2VzLlxuZnVuY3Rpb24gZWFjaE9mR2VuZXJpYyhjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gKDAsIF9lYWNoT2ZMaW1pdDIuZGVmYXVsdCkoY29sbCwgSW5maW5pdHksIGl0ZXJhdGVlLCBjYWxsYmFjayk7XG59XG5cbi8qKlxuICogTGlrZSBbYGVhY2hgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZWFjaH0sIGV4Y2VwdCB0aGF0IGl0IHBhc3NlcyB0aGUga2V5IChvciBpbmRleCkgYXMgdGhlIHNlY29uZCBhcmd1bWVudFxuICogdG8gdGhlIGl0ZXJhdGVlLlxuICpcbiAqIEBuYW1lIGVhY2hPZlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICogQG1ldGhvZFxuICogQGFsaWFzIGZvckVhY2hPZlxuICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAqIEBzZWUgW2FzeW5jLmVhY2hde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNofVxuICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQSBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoXG4gKiBpdGVtIGluIGBjb2xsYC5cbiAqIFRoZSBga2V5YCBpcyB0aGUgaXRlbSdzIGtleSwgb3IgaW5kZXggaW4gdGhlIGNhc2Ugb2YgYW4gYXJyYXkuXG4gKiBJbnZva2VkIHdpdGggKGl0ZW0sIGtleSwgY2FsbGJhY2spLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIHdoZW4gYWxsXG4gKiBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIEludm9rZWQgd2l0aCAoZXJyKS5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIGEgY2FsbGJhY2sgaXMgb21pdHRlZFxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqID0ge2RldjogXCIvZGV2Lmpzb25cIiwgdGVzdDogXCIvdGVzdC5qc29uXCIsIHByb2Q6IFwiL3Byb2QuanNvblwifTtcbiAqIHZhciBjb25maWdzID0ge307XG4gKlxuICogYXN5bmMuZm9yRWFjaE9mKG9iaiwgZnVuY3Rpb24gKHZhbHVlLCBrZXksIGNhbGxiYWNrKSB7XG4gKiAgICAgZnMucmVhZEZpbGUoX19kaXJuYW1lICsgdmFsdWUsIFwidXRmOFwiLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gKiAgICAgICAgIGlmIChlcnIpIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICogICAgICAgICB0cnkge1xuICogICAgICAgICAgICAgY29uZmlnc1trZXldID0gSlNPTi5wYXJzZShkYXRhKTtcbiAqICAgICAgICAgfSBjYXRjaCAoZSkge1xuICogICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGUpO1xuICogICAgICAgICB9XG4gKiAgICAgICAgIGNhbGxiYWNrKCk7XG4gKiAgICAgfSk7XG4gKiB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gKiAgICAgaWYgKGVycikgY29uc29sZS5lcnJvcihlcnIubWVzc2FnZSk7XG4gKiAgICAgLy8gY29uZmlncyBpcyBub3cgYSBtYXAgb2YgSlNPTiBkYXRhXG4gKiAgICAgZG9Tb21ldGhpbmdXaXRoKGNvbmZpZ3MpO1xuICogfSk7XG4gKi9cbmZ1bmN0aW9uIGVhY2hPZihjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICB2YXIgZWFjaE9mSW1wbGVtZW50YXRpb24gPSAoMCwgX2lzQXJyYXlMaWtlMi5kZWZhdWx0KShjb2xsKSA/IGVhY2hPZkFycmF5TGlrZSA6IGVhY2hPZkdlbmVyaWM7XG4gICAgcmV0dXJuIGVhY2hPZkltcGxlbWVudGF0aW9uKGNvbGwsICgwLCBfd3JhcEFzeW5jMi5kZWZhdWx0KShpdGVyYXRlZSksIGNhbGxiYWNrKTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gKDAsIF9hd2FpdGlmeTIuZGVmYXVsdCkoZWFjaE9mLCAzKTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/eachOf.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/eachOfLimit.js":
/*!*********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/eachOfLimit.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachOfLimit2 = __webpack_require__(/*! ./internal/eachOfLimit */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/eachOfLimit.js\");\n\nvar _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = __webpack_require__(/*! ./internal/awaitify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js\");\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  return (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);\n}\n\nexports.default = (0, _awaitify2.default)(eachOfLimit, 4);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9lYWNoT2ZMaW1pdC5qcz83NDQxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDOztBQUVELG9CQUFvQixtQkFBTyxDQUFDLHFIQUF3Qjs7QUFFcEQ7O0FBRUEsaUJBQWlCLG1CQUFPLENBQUMsaUhBQXNCOztBQUUvQzs7QUFFQSxnQkFBZ0IsbUJBQU8sQ0FBQywrR0FBcUI7O0FBRTdDOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBLDBCQUEwQixnQ0FBZ0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxXQUFXLG9DQUFvQztBQUMvQyxXQUFXLE9BQU87QUFDbEIsV0FBVyxjQUFjO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9ub2RlX21vZHVsZXMvYXN5bmMvZWFjaE9mTGltaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZWFjaE9mTGltaXQyID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9lYWNoT2ZMaW1pdCcpO1xuXG52YXIgX2VhY2hPZkxpbWl0MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2VhY2hPZkxpbWl0Mik7XG5cbnZhciBfd3JhcEFzeW5jID0gcmVxdWlyZSgnLi9pbnRlcm5hbC93cmFwQXN5bmMnKTtcblxudmFyIF93cmFwQXN5bmMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd3JhcEFzeW5jKTtcblxudmFyIF9hd2FpdGlmeSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvYXdhaXRpZnknKTtcblxudmFyIF9hd2FpdGlmeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hd2FpdGlmeSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogVGhlIHNhbWUgYXMgW2BlYWNoT2ZgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZWFjaE9mfSBidXQgcnVucyBhIG1heGltdW0gb2YgYGxpbWl0YCBhc3luYyBvcGVyYXRpb25zIGF0IGFcbiAqIHRpbWUuXG4gKlxuICogQG5hbWUgZWFjaE9mTGltaXRcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAqIEBtZXRob2RcbiAqIEBzZWUgW2FzeW5jLmVhY2hPZl17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmVhY2hPZn1cbiAqIEBhbGlhcyBmb3JFYWNoT2ZMaW1pdFxuICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtudW1iZXJ9IGxpbWl0IC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIGZ1bmN0aW9uIHRvIGFwcGx5IHRvIGVhY2hcbiAqIGl0ZW0gaW4gYGNvbGxgLiBUaGUgYGtleWAgaXMgdGhlIGl0ZW0ncyBrZXksIG9yIGluZGV4IGluIHRoZSBjYXNlIG9mIGFuXG4gKiBhcnJheS5cbiAqIEludm9rZWQgd2l0aCAoaXRlbSwga2V5LCBjYWxsYmFjaykuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGxcbiAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBvbWl0dGVkXG4gKi9cbmZ1bmN0aW9uIGVhY2hPZkxpbWl0KGNvbGwsIGxpbWl0LCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgcmV0dXJuICgwLCBfZWFjaE9mTGltaXQzLmRlZmF1bHQpKGxpbWl0KShjb2xsLCAoMCwgX3dyYXBBc3luYzIuZGVmYXVsdCkoaXRlcmF0ZWUpLCBjYWxsYmFjayk7XG59XG5cbmV4cG9ydHMuZGVmYXVsdCA9ICgwLCBfYXdhaXRpZnkyLmRlZmF1bHQpKGVhY2hPZkxpbWl0LCA0KTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/eachOfLimit.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/eachSeries.js":
/*!********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/eachSeries.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachLimit = __webpack_require__(/*! ./eachLimit */ \"../../node_modules/@bitski/provider-engine/node_modules/async/eachLimit.js\");\n\nvar _eachLimit2 = _interopRequireDefault(_eachLimit);\n\nvar _awaitify = __webpack_require__(/*! ./internal/awaitify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js\");\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n  return (0, _eachLimit2.default)(coll, 1, iteratee, callback);\n}\nexports.default = (0, _awaitify2.default)(eachSeries, 3);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9lYWNoU2VyaWVzLmpzP2RkNTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7O0FBRUQsaUJBQWlCLG1CQUFPLENBQUMsK0ZBQWE7O0FBRXRDOztBQUVBLGdCQUFnQixtQkFBTyxDQUFDLCtHQUFxQjs7QUFFN0M7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0Esd0JBQXdCLDhCQUE4QjtBQUN0RDtBQUNBLDhCQUE4Qiw4QkFBOEI7QUFDNUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLFdBQVcsb0NBQW9DO0FBQy9DLFdBQVcsY0FBYztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9lYWNoU2VyaWVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2VhY2hMaW1pdCA9IHJlcXVpcmUoJy4vZWFjaExpbWl0Jyk7XG5cbnZhciBfZWFjaExpbWl0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2VhY2hMaW1pdCk7XG5cbnZhciBfYXdhaXRpZnkgPSByZXF1aXJlKCcuL2ludGVybmFsL2F3YWl0aWZ5Jyk7XG5cbnZhciBfYXdhaXRpZnkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXdhaXRpZnkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIFRoZSBzYW1lIGFzIFtgZWFjaGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNofSBidXQgcnVucyBvbmx5IGEgc2luZ2xlIGFzeW5jIG9wZXJhdGlvbiBhdCBhIHRpbWUuXG4gKlxuICogTm90ZSwgdGhhdCB1bmxpa2UgW2BlYWNoYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmVhY2h9LCB0aGlzIGZ1bmN0aW9uIGFwcGxpZXMgaXRlcmF0ZWUgdG8gZWFjaCBpdGVtXG4gKiBpbiBzZXJpZXMgYW5kIHRoZXJlZm9yZSB0aGUgaXRlcmF0ZWUgZnVuY3Rpb25zIHdpbGwgY29tcGxldGUgaW4gb3JkZXIuXG5cbiAqIEBuYW1lIGVhY2hTZXJpZXNcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAqIEBtZXRob2RcbiAqIEBzZWUgW2FzeW5jLmVhY2hde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNofVxuICogQGFsaWFzIGZvckVhY2hTZXJpZXNcbiAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBbiBhc3luYyBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoXG4gKiBpdGVtIGluIGBjb2xsYC5cbiAqIFRoZSBhcnJheSBpbmRleCBpcyBub3QgcGFzc2VkIHRvIHRoZSBpdGVyYXRlZS5cbiAqIElmIHlvdSBuZWVkIHRoZSBpbmRleCwgdXNlIGBlYWNoT2ZTZXJpZXNgLlxuICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGxcbiAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBvbWl0dGVkXG4gKi9cbmZ1bmN0aW9uIGVhY2hTZXJpZXMoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gIHJldHVybiAoMCwgX2VhY2hMaW1pdDIuZGVmYXVsdCkoY29sbCwgMSwgaXRlcmF0ZWUsIGNhbGxiYWNrKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9ICgwLCBfYXdhaXRpZnkyLmRlZmF1bHQpKGVhY2hTZXJpZXMsIDMpO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/eachSeries.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/asyncEachOfLimit.js":
/*!***********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/asyncEachOfLimit.js ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncEachOfLimit;\n\nvar _breakLoop = __webpack_require__(/*! ./breakLoop */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/breakLoop.js\");\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return;\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({ value, done: iterDone }) => {\n            //console.log('got value', value)\n            if (canceled || done) return;\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return;\n        if (err) return handleError(err);\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return;\n        }\n\n        if (result === _breakLoop2.default || done && running <= 0) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return;\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9hc3luY0VhY2hPZkxpbWl0LmpzP2M2ODUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyx3R0FBYTs7QUFFdEM7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msd0JBQXdCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL2FzeW5jRWFjaE9mTGltaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGFzeW5jRWFjaE9mTGltaXQ7XG5cbnZhciBfYnJlYWtMb29wID0gcmVxdWlyZSgnLi9icmVha0xvb3AnKTtcblxudmFyIF9icmVha0xvb3AyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYnJlYWtMb29wKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gZm9yIGFzeW5jIGdlbmVyYXRvcnNcbmZ1bmN0aW9uIGFzeW5jRWFjaE9mTGltaXQoZ2VuZXJhdG9yLCBsaW1pdCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICBsZXQgY2FuY2VsZWQgPSBmYWxzZTtcbiAgICBsZXQgYXdhaXRpbmcgPSBmYWxzZTtcbiAgICBsZXQgcnVubmluZyA9IDA7XG4gICAgbGV0IGlkeCA9IDA7XG5cbiAgICBmdW5jdGlvbiByZXBsZW5pc2goKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2coJ3JlcGxlbmlzaCcpXG4gICAgICAgIGlmIChydW5uaW5nID49IGxpbWl0IHx8IGF3YWl0aW5nIHx8IGRvbmUpIHJldHVybjtcbiAgICAgICAgLy9jb25zb2xlLmxvZygncmVwbGVuaXNoIGF3YWl0aW5nJylcbiAgICAgICAgYXdhaXRpbmcgPSB0cnVlO1xuICAgICAgICBnZW5lcmF0b3IubmV4dCgpLnRoZW4oKHsgdmFsdWUsIGRvbmU6IGl0ZXJEb25lIH0pID0+IHtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2dvdCB2YWx1ZScsIHZhbHVlKVxuICAgICAgICAgICAgaWYgKGNhbmNlbGVkIHx8IGRvbmUpIHJldHVybjtcbiAgICAgICAgICAgIGF3YWl0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoaXRlckRvbmUpIHtcbiAgICAgICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpZiAocnVubmluZyA8PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2RvbmUgbmV4dENiJylcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJ1bm5pbmcrKztcbiAgICAgICAgICAgIGl0ZXJhdGVlKHZhbHVlLCBpZHgsIGl0ZXJhdGVlQ2FsbGJhY2spO1xuICAgICAgICAgICAgaWR4Kys7XG4gICAgICAgICAgICByZXBsZW5pc2goKTtcbiAgICAgICAgfSkuY2F0Y2goaGFuZGxlRXJyb3IpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGl0ZXJhdGVlQ2FsbGJhY2soZXJyLCByZXN1bHQpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZygnaXRlcmF0ZWVDYWxsYmFjaycpXG4gICAgICAgIHJ1bm5pbmcgLT0gMTtcbiAgICAgICAgaWYgKGNhbmNlbGVkKSByZXR1cm47XG4gICAgICAgIGlmIChlcnIpIHJldHVybiBoYW5kbGVFcnJvcihlcnIpO1xuXG4gICAgICAgIGlmIChlcnIgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIGNhbmNlbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChyZXN1bHQgPT09IF9icmVha0xvb3AyLmRlZmF1bHQgfHwgZG9uZSAmJiBydW5uaW5nIDw9IDApIHtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnZG9uZSBpdGVyQ2InKVxuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9XG4gICAgICAgIHJlcGxlbmlzaCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZUVycm9yKGVycikge1xuICAgICAgICBpZiAoY2FuY2VsZWQpIHJldHVybjtcbiAgICAgICAgYXdhaXRpbmcgPSBmYWxzZTtcbiAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgfVxuXG4gICAgcmVwbGVuaXNoKCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/asyncEachOfLimit.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js":
/*!***************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = awaitify;\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify(asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined');\n    function awaitable(...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args);\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err);\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        });\n    }\n\n    return awaitable;\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9hd2FpdGlmeS5qcz8zMDNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9hd2FpdGlmeS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYXdhaXRpZnk7XG4vLyBjb25kaXRpb25hbGx5IHByb21pc2lmeSBhIGZ1bmN0aW9uLlxuLy8gb25seSByZXR1cm4gYSBwcm9taXNlIGlmIGEgY2FsbGJhY2sgaXMgb21pdHRlZFxuZnVuY3Rpb24gYXdhaXRpZnkoYXN5bmNGbiwgYXJpdHkgPSBhc3luY0ZuLmxlbmd0aCkge1xuICAgIGlmICghYXJpdHkpIHRocm93IG5ldyBFcnJvcignYXJpdHkgaXMgdW5kZWZpbmVkJyk7XG4gICAgZnVuY3Rpb24gYXdhaXRhYmxlKC4uLmFyZ3MpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhcmdzW2FyaXR5IC0gMV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiBhc3luY0ZuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGFyZ3NbYXJpdHkgLSAxXSA9IChlcnIsIC4uLmNiQXJncykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKGNiQXJncy5sZW5ndGggPiAxID8gY2JBcmdzIDogY2JBcmdzWzBdKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBhc3luY0ZuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXdhaXRhYmxlO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/breakLoop.js":
/*!****************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/breakLoop.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\nexports.default = breakLoop;\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9icmVha0xvb3AuanM/YzQ5NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9icmVha0xvb3AuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbi8vIEEgdGVtcG9yYXJ5IHZhbHVlIHVzZWQgdG8gaWRlbnRpZnkgaWYgdGhlIGxvb3Agc2hvdWxkIGJlIGJyb2tlbi5cbi8vIFNlZSAjMTA2NCwgIzEyOTNcbmNvbnN0IGJyZWFrTG9vcCA9IHt9O1xuZXhwb3J0cy5kZWZhdWx0ID0gYnJlYWtMb29wO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/breakLoop.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/eachOfLimit.js":
/*!******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/eachOfLimit.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _once = __webpack_require__(/*! ./once */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/once.js\");\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _iterator = __webpack_require__(/*! ./iterator */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/iterator.js\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _onlyOnce = __webpack_require__(/*! ./onlyOnce */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/onlyOnce.js\");\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = __webpack_require__(/*! ./wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nvar _asyncEachOfLimit = __webpack_require__(/*! ./asyncEachOfLimit */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/asyncEachOfLimit.js\");\n\nvar _asyncEachOfLimit2 = _interopRequireDefault(_asyncEachOfLimit);\n\nvar _breakLoop = __webpack_require__(/*! ./breakLoop */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/breakLoop.js\");\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = limit => {\n    return (obj, iteratee, callback) => {\n        callback = (0, _once2.default)(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1');\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if ((0, _wrapAsync.isAsyncGenerator)(obj)) {\n            return (0, _asyncEachOfLimit2.default)(obj, limit, iteratee, callback);\n        }\n        if ((0, _wrapAsync.isAsyncIterable)(obj)) {\n            return (0, _asyncEachOfLimit2.default)(obj[Symbol.asyncIterator](), limit, iteratee, callback);\n        }\n        var nextElem = (0, _iterator2.default)(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return;\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (err === false) {\n                done = true;\n                canceled = true;\n            } else if (value === _breakLoop2.default || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9lYWNoT2ZMaW1pdC5qcz85MWUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDOztBQUVELFlBQVksbUJBQU8sQ0FBQyw4RkFBUTs7QUFFNUI7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsc0dBQVk7O0FBRXBDOztBQUVBLGdCQUFnQixtQkFBTyxDQUFDLHNHQUFZOztBQUVwQzs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyx3R0FBYTs7QUFFdEMsd0JBQXdCLG1CQUFPLENBQUMsc0hBQW9COztBQUVwRDs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyx3R0FBYTs7QUFFdEM7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvZWFjaE9mTGltaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9vbmNlID0gcmVxdWlyZSgnLi9vbmNlJyk7XG5cbnZhciBfb25jZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9vbmNlKTtcblxudmFyIF9pdGVyYXRvciA9IHJlcXVpcmUoJy4vaXRlcmF0b3InKTtcblxudmFyIF9pdGVyYXRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pdGVyYXRvcik7XG5cbnZhciBfb25seU9uY2UgPSByZXF1aXJlKCcuL29ubHlPbmNlJyk7XG5cbnZhciBfb25seU9uY2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfb25seU9uY2UpO1xuXG52YXIgX3dyYXBBc3luYyA9IHJlcXVpcmUoJy4vd3JhcEFzeW5jJyk7XG5cbnZhciBfYXN5bmNFYWNoT2ZMaW1pdCA9IHJlcXVpcmUoJy4vYXN5bmNFYWNoT2ZMaW1pdCcpO1xuXG52YXIgX2FzeW5jRWFjaE9mTGltaXQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXN5bmNFYWNoT2ZMaW1pdCk7XG5cbnZhciBfYnJlYWtMb29wID0gcmVxdWlyZSgnLi9icmVha0xvb3AnKTtcblxudmFyIF9icmVha0xvb3AyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYnJlYWtMb29wKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gbGltaXQgPT4ge1xuICAgIHJldHVybiAob2JqLCBpdGVyYXRlZSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgY2FsbGJhY2sgPSAoMCwgX29uY2UyLmRlZmF1bHQpKGNhbGxiYWNrKTtcbiAgICAgICAgaWYgKGxpbWl0IDw9IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdjb25jdXJyZW5jeSBsaW1pdCBjYW5ub3QgYmUgbGVzcyB0aGFuIDEnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW9iaikge1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgX3dyYXBBc3luYy5pc0FzeW5jR2VuZXJhdG9yKShvYmopKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIF9hc3luY0VhY2hPZkxpbWl0Mi5kZWZhdWx0KShvYmosIGxpbWl0LCBpdGVyYXRlZSwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgX3dyYXBBc3luYy5pc0FzeW5jSXRlcmFibGUpKG9iaikpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgX2FzeW5jRWFjaE9mTGltaXQyLmRlZmF1bHQpKG9ialtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5leHRFbGVtID0gKDAsIF9pdGVyYXRvcjIuZGVmYXVsdCkob2JqKTtcbiAgICAgICAgdmFyIGRvbmUgPSBmYWxzZTtcbiAgICAgICAgdmFyIGNhbmNlbGVkID0gZmFsc2U7XG4gICAgICAgIHZhciBydW5uaW5nID0gMDtcbiAgICAgICAgdmFyIGxvb3BpbmcgPSBmYWxzZTtcblxuICAgICAgICBmdW5jdGlvbiBpdGVyYXRlZUNhbGxiYWNrKGVyciwgdmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChjYW5jZWxlZCkgcmV0dXJuO1xuICAgICAgICAgICAgcnVubmluZyAtPSAxO1xuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVyciA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBjYW5jZWxlZCA9IHRydWU7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSBfYnJlYWtMb29wMi5kZWZhdWx0IHx8IGRvbmUgJiYgcnVubmluZyA8PSAwKSB7XG4gICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICghbG9vcGluZykge1xuICAgICAgICAgICAgICAgIHJlcGxlbmlzaCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gcmVwbGVuaXNoKCkge1xuICAgICAgICAgICAgbG9vcGluZyA9IHRydWU7XG4gICAgICAgICAgICB3aGlsZSAocnVubmluZyA8IGxpbWl0ICYmICFkb25lKSB7XG4gICAgICAgICAgICAgICAgdmFyIGVsZW0gPSBuZXh0RWxlbSgpO1xuICAgICAgICAgICAgICAgIGlmIChlbGVtID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBpZiAocnVubmluZyA8PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJ1bm5pbmcgKz0gMTtcbiAgICAgICAgICAgICAgICBpdGVyYXRlZShlbGVtLnZhbHVlLCBlbGVtLmtleSwgKDAsIF9vbmx5T25jZTIuZGVmYXVsdCkoaXRlcmF0ZWVDYWxsYmFjaykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbG9vcGluZyA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVwbGVuaXNoKCk7XG4gICAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/eachOfLimit.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/getIterator.js":
/*!******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/getIterator.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n};\n\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9nZXRJdGVyYXRvci5qcz9kNmI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL2dldEl0ZXJhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGNvbGwpIHtcbiAgICByZXR1cm4gY29sbFtTeW1ib2wuaXRlcmF0b3JdICYmIGNvbGxbU3ltYm9sLml0ZXJhdG9yXSgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/getIterator.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/initialParams.js":
/*!********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/initialParams.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (fn) {\n    return function (...args /*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n};\n\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9pbml0aWFsUGFyYW1zLmpzPzhjOWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvaW5pdGlhbFBhcmFtcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChmbikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncyAvKiwgY2FsbGJhY2sqLykge1xuICAgICAgICB2YXIgY2FsbGJhY2sgPSBhcmdzLnBvcCgpO1xuICAgICAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCBhcmdzLCBjYWxsYmFjayk7XG4gICAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/initialParams.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/isArrayLike.js":
/*!******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/isArrayLike.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = isArrayLike;\nfunction isArrayLike(value) {\n    return value && typeof value.length === 'number' && value.length >= 0 && value.length % 1 === 0;\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9pc0FycmF5TGlrZS5qcz84ZDljIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL2lzQXJyYXlMaWtlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc0FycmF5TGlrZTtcbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICYmIHR5cGVvZiB2YWx1ZS5sZW5ndGggPT09ICdudW1iZXInICYmIHZhbHVlLmxlbmd0aCA+PSAwICYmIHZhbHVlLmxlbmd0aCAlIDEgPT09IDA7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/isArrayLike.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/iterator.js":
/*!***************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/iterator.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = createIterator;\n\nvar _isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/isArrayLike.js\");\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _getIterator = __webpack_require__(/*! ./getIterator */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/getIterator.js\");\n\nvar _getIterator2 = _interopRequireDefault(_getIterator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key } : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if ((0, _isArrayLike2.default)(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = (0, _getIterator2.default)(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9pdGVyYXRvci5qcz8yNGMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsbUJBQW1CLG1CQUFPLENBQUMsNEdBQWU7O0FBRTFDOztBQUVBLG1CQUFtQixtQkFBTyxDQUFDLDRHQUFlOztBQUUxQzs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIseUJBQXlCO0FBQ3JEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvaXRlcmF0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNyZWF0ZUl0ZXJhdG9yO1xuXG52YXIgX2lzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG52YXIgX2lzQXJyYXlMaWtlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2lzQXJyYXlMaWtlKTtcblxudmFyIF9nZXRJdGVyYXRvciA9IHJlcXVpcmUoJy4vZ2V0SXRlcmF0b3InKTtcblxudmFyIF9nZXRJdGVyYXRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRJdGVyYXRvcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGNyZWF0ZUFycmF5SXRlcmF0b3IoY29sbCkge1xuICAgIHZhciBpID0gLTE7XG4gICAgdmFyIGxlbiA9IGNvbGwubGVuZ3RoO1xuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICByZXR1cm4gKytpIDwgbGVuID8geyB2YWx1ZTogY29sbFtpXSwga2V5OiBpIH0gOiBudWxsO1xuICAgIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUVTMjAxNUl0ZXJhdG9yKGl0ZXJhdG9yKSB7XG4gICAgdmFyIGkgPSAtMTtcbiAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBpdGVyYXRvci5uZXh0KCk7XG4gICAgICAgIGlmIChpdGVtLmRvbmUpIHJldHVybiBudWxsO1xuICAgICAgICBpKys7XG4gICAgICAgIHJldHVybiB7IHZhbHVlOiBpdGVtLnZhbHVlLCBrZXk6IGkgfTtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVPYmplY3RJdGVyYXRvcihvYmopIHtcbiAgICB2YXIgb2tleXMgPSBvYmogPyBPYmplY3Qua2V5cyhvYmopIDogW107XG4gICAgdmFyIGkgPSAtMTtcbiAgICB2YXIgbGVuID0gb2tleXMubGVuZ3RoO1xuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICB2YXIga2V5ID0gb2tleXNbKytpXTtcbiAgICAgICAgcmV0dXJuIGkgPCBsZW4gPyB7IHZhbHVlOiBvYmpba2V5XSwga2V5IH0gOiBudWxsO1xuICAgIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUl0ZXJhdG9yKGNvbGwpIHtcbiAgICBpZiAoKDAsIF9pc0FycmF5TGlrZTIuZGVmYXVsdCkoY29sbCkpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUFycmF5SXRlcmF0b3IoY29sbCk7XG4gICAgfVxuXG4gICAgdmFyIGl0ZXJhdG9yID0gKDAsIF9nZXRJdGVyYXRvcjIuZGVmYXVsdCkoY29sbCk7XG4gICAgcmV0dXJuIGl0ZXJhdG9yID8gY3JlYXRlRVMyMDE1SXRlcmF0b3IoaXRlcmF0b3IpIDogY3JlYXRlT2JqZWN0SXRlcmF0b3IoY29sbCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/iterator.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/map.js":
/*!**********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/map.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncMap;\n\nvar _wrapAsync = __webpack_require__(/*! ./wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = (0, _wrapAsync2.default)(iteratee);\n\n    return eachfn(arr, (value, _, iterCb) => {\n        var index = counter++;\n        _iteratee(value, (err, v) => {\n            results[index] = v;\n            iterCb(err);\n        });\n    }, err => {\n        callback(err, results);\n    });\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9tYXAuanM/NTI5MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLHdHQUFhOztBQUV0Qzs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvbWFwLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfYXN5bmNNYXA7XG5cbnZhciBfd3JhcEFzeW5jID0gcmVxdWlyZSgnLi93cmFwQXN5bmMnKTtcblxudmFyIF93cmFwQXN5bmMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd3JhcEFzeW5jKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2FzeW5jTWFwKGVhY2hmbiwgYXJyLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICBhcnIgPSBhcnIgfHwgW107XG4gICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICB2YXIgY291bnRlciA9IDA7XG4gICAgdmFyIF9pdGVyYXRlZSA9ICgwLCBfd3JhcEFzeW5jMi5kZWZhdWx0KShpdGVyYXRlZSk7XG5cbiAgICByZXR1cm4gZWFjaGZuKGFyciwgKHZhbHVlLCBfLCBpdGVyQ2IpID0+IHtcbiAgICAgICAgdmFyIGluZGV4ID0gY291bnRlcisrO1xuICAgICAgICBfaXRlcmF0ZWUodmFsdWUsIChlcnIsIHYpID0+IHtcbiAgICAgICAgICAgIHJlc3VsdHNbaW5kZXhdID0gdjtcbiAgICAgICAgICAgIGl0ZXJDYihlcnIpO1xuICAgICAgICB9KTtcbiAgICB9LCBlcnIgPT4ge1xuICAgICAgICBjYWxsYmFjayhlcnIsIHJlc3VsdHMpO1xuICAgIH0pO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/map.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/once.js":
/*!***********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/once.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = once;\nfunction once(fn) {\n    function wrapper(...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper;\n}\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9vbmNlLmpzP2Q0OWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9vbmNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IG9uY2U7XG5mdW5jdGlvbiBvbmNlKGZuKSB7XG4gICAgZnVuY3Rpb24gd3JhcHBlciguLi5hcmdzKSB7XG4gICAgICAgIGlmIChmbiA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICB2YXIgY2FsbEZuID0gZm47XG4gICAgICAgIGZuID0gbnVsbDtcbiAgICAgICAgY2FsbEZuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgICBPYmplY3QuYXNzaWduKHdyYXBwZXIsIGZuKTtcbiAgICByZXR1cm4gd3JhcHBlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/once.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/onlyOnce.js":
/*!***************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/onlyOnce.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = onlyOnce;\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9vbmx5T25jZS5qcz8yZDQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9vbmx5T25jZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBvbmx5T25jZTtcbmZ1bmN0aW9uIG9ubHlPbmNlKGZuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgIGlmIChmbiA9PT0gbnVsbCkgdGhyb3cgbmV3IEVycm9yKFwiQ2FsbGJhY2sgd2FzIGFscmVhZHkgY2FsbGVkLlwiKTtcbiAgICAgICAgdmFyIGNhbGxGbiA9IGZuO1xuICAgICAgICBmbiA9IG51bGw7XG4gICAgICAgIGNhbGxGbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/onlyOnce.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/promiseCallback.js":
/*!**********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/promiseCallback.js ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback() {\n    let resolve, reject;\n    function callback(err, ...args) {\n        if (err) return reject(err);\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res, reject = rej;\n    });\n\n    return callback;\n}\n\nexports.promiseCallback = promiseCallback;\nexports.PROMISE_SYMBOL = PROMISE_SYMBOL;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9wcm9taXNlQ2FsbGJhY2suanM/NGI0NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9wcm9taXNlQ2FsbGJhY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmNvbnN0IFBST01JU0VfU1lNQk9MID0gU3ltYm9sKCdwcm9taXNlQ2FsbGJhY2snKTtcblxuZnVuY3Rpb24gcHJvbWlzZUNhbGxiYWNrKCkge1xuICAgIGxldCByZXNvbHZlLCByZWplY3Q7XG4gICAgZnVuY3Rpb24gY2FsbGJhY2soZXJyLCAuLi5hcmdzKSB7XG4gICAgICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgICAgcmVzb2x2ZShhcmdzLmxlbmd0aCA+IDEgPyBhcmdzIDogYXJnc1swXSk7XG4gICAgfVxuXG4gICAgY2FsbGJhY2tbUFJPTUlTRV9TWU1CT0xdID0gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7XG4gICAgICAgIHJlc29sdmUgPSByZXMsIHJlamVjdCA9IHJlajtcbiAgICB9KTtcblxuICAgIHJldHVybiBjYWxsYmFjaztcbn1cblxuZXhwb3J0cy5wcm9taXNlQ2FsbGJhY2sgPSBwcm9taXNlQ2FsbGJhY2s7XG5leHBvcnRzLlBST01JU0VfU1lNQk9MID0gUFJPTUlTRV9TWU1CT0w7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/promiseCallback.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/setImmediate.js":
/*!*******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/setImmediate.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* istanbul ignore file */\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fallback = fallback;\nexports.wrap = wrap;\nvar hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nexports.default = wrap(_defer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9zZXRJbW1lZGlhdGUuanM/NjczZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC9zZXRJbW1lZGlhdGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vKiBpc3RhbmJ1bCBpZ25vcmUgZmlsZSAqL1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZhbGxiYWNrID0gZmFsbGJhY2s7XG5leHBvcnRzLndyYXAgPSB3cmFwO1xudmFyIGhhc1NldEltbWVkaWF0ZSA9IGV4cG9ydHMuaGFzU2V0SW1tZWRpYXRlID0gdHlwZW9mIHNldEltbWVkaWF0ZSA9PT0gJ2Z1bmN0aW9uJyAmJiBzZXRJbW1lZGlhdGU7XG52YXIgaGFzTmV4dFRpY2sgPSBleHBvcnRzLmhhc05leHRUaWNrID0gdHlwZW9mIHByb2Nlc3MgPT09ICdvYmplY3QnICYmIHR5cGVvZiBwcm9jZXNzLm5leHRUaWNrID09PSAnZnVuY3Rpb24nO1xuXG5mdW5jdGlvbiBmYWxsYmFjayhmbikge1xuICAgIHNldFRpbWVvdXQoZm4sIDApO1xufVxuXG5mdW5jdGlvbiB3cmFwKGRlZmVyKSB7XG4gICAgcmV0dXJuIChmbiwgLi4uYXJncykgPT4gZGVmZXIoKCkgPT4gZm4oLi4uYXJncykpO1xufVxuXG52YXIgX2RlZmVyO1xuXG5pZiAoaGFzU2V0SW1tZWRpYXRlKSB7XG4gICAgX2RlZmVyID0gc2V0SW1tZWRpYXRlO1xufSBlbHNlIGlmIChoYXNOZXh0VGljaykge1xuICAgIF9kZWZlciA9IHByb2Nlc3MubmV4dFRpY2s7XG59IGVsc2Uge1xuICAgIF9kZWZlciA9IGZhbGxiYWNrO1xufVxuXG5leHBvcnRzLmRlZmF1bHQgPSB3cmFwKF9kZWZlcik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/setImmediate.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/withoutIndex.js":
/*!*******************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/withoutIndex.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _withoutIndex;\nfunction _withoutIndex(iteratee) {\n    return (value, index, callback) => iteratee(value, callback);\n}\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC93aXRob3V0SW5kZXguanM/ZjQ1OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC93aXRob3V0SW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gX3dpdGhvdXRJbmRleDtcbmZ1bmN0aW9uIF93aXRob3V0SW5kZXgoaXRlcmF0ZWUpIHtcbiAgICByZXR1cm4gKHZhbHVlLCBpbmRleCwgY2FsbGJhY2spID0+IGl0ZXJhdGVlKHZhbHVlLCBjYWxsYmFjayk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/withoutIndex.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js":
/*!****************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isAsyncIterable = exports.isAsyncGenerator = exports.isAsync = undefined;\n\nvar _asyncify = __webpack_require__(/*! ../asyncify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/asyncify.js\");\n\nvar _asyncify2 = _interopRequireDefault(_asyncify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function');\n    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;\n}\n\nexports.default = wrapAsync;\nexports.isAsync = isAsync;\nexports.isAsyncGenerator = isAsyncGenerator;\nexports.isAsyncIterable = isAsyncIterable;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC93cmFwQXN5bmMuanM/NmIzNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLGdCQUFnQixtQkFBTyxDQUFDLDhGQUFhOztBQUVyQzs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9pbnRlcm5hbC93cmFwQXN5bmMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaXNBc3luY0l0ZXJhYmxlID0gZXhwb3J0cy5pc0FzeW5jR2VuZXJhdG9yID0gZXhwb3J0cy5pc0FzeW5jID0gdW5kZWZpbmVkO1xuXG52YXIgX2FzeW5jaWZ5ID0gcmVxdWlyZSgnLi4vYXN5bmNpZnknKTtcblxudmFyIF9hc3luY2lmeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hc3luY2lmeSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGlzQXN5bmMoZm4pIHtcbiAgICByZXR1cm4gZm5bU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ0FzeW5jRnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBpc0FzeW5jR2VuZXJhdG9yKGZuKSB7XG4gICAgcmV0dXJuIGZuW1N5bWJvbC50b1N0cmluZ1RhZ10gPT09ICdBc3luY0dlbmVyYXRvcic7XG59XG5cbmZ1bmN0aW9uIGlzQXN5bmNJdGVyYWJsZShvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9ialtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIHdyYXBBc3luYyhhc3luY0ZuKSB7XG4gICAgaWYgKHR5cGVvZiBhc3luY0ZuICE9PSAnZnVuY3Rpb24nKSB0aHJvdyBuZXcgRXJyb3IoJ2V4cGVjdGVkIGEgZnVuY3Rpb24nKTtcbiAgICByZXR1cm4gaXNBc3luYyhhc3luY0ZuKSA/ICgwLCBfYXN5bmNpZnkyLmRlZmF1bHQpKGFzeW5jRm4pIDogYXN5bmNGbjtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gd3JhcEFzeW5jO1xuZXhwb3J0cy5pc0FzeW5jID0gaXNBc3luYztcbmV4cG9ydHMuaXNBc3luY0dlbmVyYXRvciA9IGlzQXN5bmNHZW5lcmF0b3I7XG5leHBvcnRzLmlzQXN5bmNJdGVyYWJsZSA9IGlzQXN5bmNJdGVyYWJsZTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/map.js":
/*!*************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/map.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _map2 = __webpack_require__(/*! ./internal/map */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/map.js\");\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _eachOf = __webpack_require__(/*! ./eachOf */ \"../../node_modules/@bitski/provider-engine/node_modules/async/eachOf.js\");\n\nvar _eachOf2 = _interopRequireDefault(_eachOf);\n\nvar _awaitify = __webpack_require__(/*! ./internal/awaitify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js\");\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nfunction map(coll, iteratee, callback) {\n  return (0, _map3.default)(_eachOf2.default, coll, iteratee, callback);\n}\nexports.default = (0, _awaitify2.default)(map, 3);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy9tYXAuanM/NWVhYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxZQUFZLG1CQUFPLENBQUMscUdBQWdCOztBQUVwQzs7QUFFQSxjQUFjLG1CQUFPLENBQUMseUZBQVU7O0FBRWhDOztBQUVBLGdCQUFnQixtQkFBTyxDQUFDLCtHQUFxQjs7QUFFN0M7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvQ0FBb0M7QUFDL0MsV0FBVyxjQUFjO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQGJpdHNraS9wcm92aWRlci1lbmdpbmUvbm9kZV9tb2R1bGVzL2FzeW5jL21hcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9tYXAyID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9tYXAnKTtcblxudmFyIF9tYXAzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbWFwMik7XG5cbnZhciBfZWFjaE9mID0gcmVxdWlyZSgnLi9lYWNoT2YnKTtcblxudmFyIF9lYWNoT2YyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZWFjaE9mKTtcblxudmFyIF9hd2FpdGlmeSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvYXdhaXRpZnknKTtcblxudmFyIF9hd2FpdGlmeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hd2FpdGlmeSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogUHJvZHVjZXMgYSBuZXcgY29sbGVjdGlvbiBvZiB2YWx1ZXMgYnkgbWFwcGluZyBlYWNoIHZhbHVlIGluIGBjb2xsYCB0aHJvdWdoXG4gKiB0aGUgYGl0ZXJhdGVlYCBmdW5jdGlvbi4gVGhlIGBpdGVyYXRlZWAgaXMgY2FsbGVkIHdpdGggYW4gaXRlbSBmcm9tIGBjb2xsYFxuICogYW5kIGEgY2FsbGJhY2sgZm9yIHdoZW4gaXQgaGFzIGZpbmlzaGVkIHByb2Nlc3NpbmcuIEVhY2ggb2YgdGhlc2UgY2FsbGJhY2tcbiAqIHRha2VzIDIgYXJndW1lbnRzOiBhbiBgZXJyb3JgLCBhbmQgdGhlIHRyYW5zZm9ybWVkIGl0ZW0gZnJvbSBgY29sbGAuIElmXG4gKiBgaXRlcmF0ZWVgIHBhc3NlcyBhbiBlcnJvciB0byBpdHMgY2FsbGJhY2ssIHRoZSBtYWluIGBjYWxsYmFja2AgKGZvciB0aGVcbiAqIGBtYXBgIGZ1bmN0aW9uKSBpcyBpbW1lZGlhdGVseSBjYWxsZWQgd2l0aCB0aGUgZXJyb3IuXG4gKlxuICogTm90ZSwgdGhhdCBzaW5jZSB0aGlzIGZ1bmN0aW9uIGFwcGxpZXMgdGhlIGBpdGVyYXRlZWAgdG8gZWFjaCBpdGVtIGluXG4gKiBwYXJhbGxlbCwgdGhlcmUgaXMgbm8gZ3VhcmFudGVlIHRoYXQgdGhlIGBpdGVyYXRlZWAgZnVuY3Rpb25zIHdpbGwgY29tcGxldGVcbiAqIGluIG9yZGVyLiBIb3dldmVyLCB0aGUgcmVzdWx0cyBhcnJheSB3aWxsIGJlIGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuICogb3JpZ2luYWwgYGNvbGxgLlxuICpcbiAqIElmIGBtYXBgIGlzIHBhc3NlZCBhbiBPYmplY3QsIHRoZSByZXN1bHRzIHdpbGwgYmUgYW4gQXJyYXkuICBUaGUgcmVzdWx0c1xuICogd2lsbCByb3VnaGx5IGJlIGluIHRoZSBvcmRlciBvZiB0aGUgb3JpZ2luYWwgT2JqZWN0cycga2V5cyAoYnV0IHRoaXMgY2FuXG4gKiB2YXJ5IGFjcm9zcyBKYXZhU2NyaXB0IGVuZ2luZXMpLlxuICpcbiAqIEBuYW1lIG1hcFxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICogQG1ldGhvZFxuICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIGZ1bmN0aW9uIHRvIGFwcGx5IHRvIGVhY2ggaXRlbSBpblxuICogYGNvbGxgLlxuICogVGhlIGl0ZXJhdGVlIHNob3VsZCBjb21wbGV0ZSB3aXRoIHRoZSB0cmFuc2Zvcm1lZCBpdGVtLlxuICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGwgYGl0ZXJhdGVlYFxuICogZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gUmVzdWx0cyBpcyBhbiBBcnJheSBvZiB0aGVcbiAqIHRyYW5zZm9ybWVkIGl0ZW1zIGZyb20gdGhlIGBjb2xsYC4gSW52b2tlZCB3aXRoIChlcnIsIHJlc3VsdHMpLlxuICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gKiBAZXhhbXBsZVxuICpcbiAqIGFzeW5jLm1hcChbJ2ZpbGUxJywnZmlsZTInLCdmaWxlMyddLCBmcy5zdGF0LCBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAqICAgICAvLyByZXN1bHRzIGlzIG5vdyBhbiBhcnJheSBvZiBzdGF0cyBmb3IgZWFjaCBmaWxlXG4gKiB9KTtcbiAqL1xuZnVuY3Rpb24gbWFwKGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICByZXR1cm4gKDAsIF9tYXAzLmRlZmF1bHQpKF9lYWNoT2YyLmRlZmF1bHQsIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjayk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSAoMCwgX2F3YWl0aWZ5Mi5kZWZhdWx0KShtYXAsIDMpO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/map.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/retry.js":
/*!***************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/retry.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = retry;\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _promiseCallback = __webpack_require__(/*! ./internal/promiseCallback */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/promiseCallback.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction constant(value) {\n    return function () {\n        return value;\n    };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || (0, _promiseCallback.promiseCallback)();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || (0, _promiseCallback.promiseCallback)();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = (0, _wrapAsync2.default)(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return;\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[_promiseCallback.PROMISE_SYMBOL];\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/retry.js\n");

/***/ }),

/***/ "../../node_modules/@bitski/provider-engine/node_modules/async/waterfall.js":
/*!*******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@bitski/provider-engine/node_modules/async/waterfall.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _once = __webpack_require__(/*! ./internal/once */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/once.js\");\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _onlyOnce = __webpack_require__(/*! ./internal/onlyOnce */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/onlyOnce.js\");\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = __webpack_require__(/*! ./internal/awaitify */ \"../../node_modules/@bitski/provider-engine/node_modules/async/internal/awaitify.js\");\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall(tasks, callback) {\n    callback = (0, _once2.default)(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);\n        task(...args, (0, _onlyOnce2.default)(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return;\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nexports.default = (0, _awaitify2.default)(waterfall);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BiaXRza2kvcHJvdmlkZXItZW5naW5lL25vZGVfbW9kdWxlcy9hc3luYy93YXRlcmZhbGwuanM/ODhjYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxZQUFZLG1CQUFPLENBQUMsdUdBQWlCOztBQUVyQzs7QUFFQSxnQkFBZ0IsbUJBQU8sQ0FBQywrR0FBcUI7O0FBRTdDOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLGlIQUFzQjs7QUFFL0M7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsK0dBQXFCOztBQUU3Qzs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTSx1Q0FBdUM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9AYml0c2tpL3Byb3ZpZGVyLWVuZ2luZS9ub2RlX21vZHVsZXMvYXN5bmMvd2F0ZXJmYWxsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfb25jZSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvb25jZScpO1xuXG52YXIgX29uY2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfb25jZSk7XG5cbnZhciBfb25seU9uY2UgPSByZXF1aXJlKCcuL2ludGVybmFsL29ubHlPbmNlJyk7XG5cbnZhciBfb25seU9uY2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfb25seU9uY2UpO1xuXG52YXIgX3dyYXBBc3luYyA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvd3JhcEFzeW5jJyk7XG5cbnZhciBfd3JhcEFzeW5jMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dyYXBBc3luYyk7XG5cbnZhciBfYXdhaXRpZnkgPSByZXF1aXJlKCcuL2ludGVybmFsL2F3YWl0aWZ5Jyk7XG5cbnZhciBfYXdhaXRpZnkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXdhaXRpZnkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIFJ1bnMgdGhlIGB0YXNrc2AgYXJyYXkgb2YgZnVuY3Rpb25zIGluIHNlcmllcywgZWFjaCBwYXNzaW5nIHRoZWlyIHJlc3VsdHMgdG9cbiAqIHRoZSBuZXh0IGluIHRoZSBhcnJheS4gSG93ZXZlciwgaWYgYW55IG9mIHRoZSBgdGFza3NgIHBhc3MgYW4gZXJyb3IgdG8gdGhlaXJcbiAqIG93biBjYWxsYmFjaywgdGhlIG5leHQgZnVuY3Rpb24gaXMgbm90IGV4ZWN1dGVkLCBhbmQgdGhlIG1haW4gYGNhbGxiYWNrYCBpc1xuICogaW1tZWRpYXRlbHkgY2FsbGVkIHdpdGggdGhlIGVycm9yLlxuICpcbiAqIEBuYW1lIHdhdGVyZmFsbFxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICogQG1ldGhvZFxuICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICogQHBhcmFtIHtBcnJheX0gdGFza3MgLSBBbiBhcnJheSBvZiBbYXN5bmMgZnVuY3Rpb25zXXtAbGluayBBc3luY0Z1bmN0aW9ufVxuICogdG8gcnVuLlxuICogRWFjaCBmdW5jdGlvbiBzaG91bGQgY29tcGxldGUgd2l0aCBhbnkgbnVtYmVyIG9mIGByZXN1bHRgIHZhbHVlcy5cbiAqIFRoZSBgcmVzdWx0YCB2YWx1ZXMgd2lsbCBiZSBwYXNzZWQgYXMgYXJndW1lbnRzLCBpbiBvcmRlciwgdG8gdGhlIG5leHQgdGFzay5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBbiBvcHRpb25hbCBjYWxsYmFjayB0byBydW4gb25jZSBhbGwgdGhlXG4gKiBmdW5jdGlvbnMgaGF2ZSBjb21wbGV0ZWQuIFRoaXMgd2lsbCBiZSBwYXNzZWQgdGhlIHJlc3VsdHMgb2YgdGhlIGxhc3QgdGFzaydzXG4gKiBjYWxsYmFjay4gSW52b2tlZCB3aXRoIChlcnIsIFtyZXN1bHRzXSkuXG4gKiBAcmV0dXJucyB1bmRlZmluZWRcbiAqIEBleGFtcGxlXG4gKlxuICogYXN5bmMud2F0ZXJmYWxsKFtcbiAqICAgICBmdW5jdGlvbihjYWxsYmFjaykge1xuICogICAgICAgICBjYWxsYmFjayhudWxsLCAnb25lJywgJ3R3bycpO1xuICogICAgIH0sXG4gKiAgICAgZnVuY3Rpb24oYXJnMSwgYXJnMiwgY2FsbGJhY2spIHtcbiAqICAgICAgICAgLy8gYXJnMSBub3cgZXF1YWxzICdvbmUnIGFuZCBhcmcyIG5vdyBlcXVhbHMgJ3R3bydcbiAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3RocmVlJyk7XG4gKiAgICAgfSxcbiAqICAgICBmdW5jdGlvbihhcmcxLCBjYWxsYmFjaykge1xuICogICAgICAgICAvLyBhcmcxIG5vdyBlcXVhbHMgJ3RocmVlJ1xuICogICAgICAgICBjYWxsYmFjayhudWxsLCAnZG9uZScpO1xuICogICAgIH1cbiAqIF0sIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICogICAgIC8vIHJlc3VsdCBub3cgZXF1YWxzICdkb25lJ1xuICogfSk7XG4gKlxuICogLy8gT3IsIHdpdGggbmFtZWQgZnVuY3Rpb25zOlxuICogYXN5bmMud2F0ZXJmYWxsKFtcbiAqICAgICBteUZpcnN0RnVuY3Rpb24sXG4gKiAgICAgbXlTZWNvbmRGdW5jdGlvbixcbiAqICAgICBteUxhc3RGdW5jdGlvbixcbiAqIF0sIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICogICAgIC8vIHJlc3VsdCBub3cgZXF1YWxzICdkb25lJ1xuICogfSk7XG4gKiBmdW5jdGlvbiBteUZpcnN0RnVuY3Rpb24oY2FsbGJhY2spIHtcbiAqICAgICBjYWxsYmFjayhudWxsLCAnb25lJywgJ3R3bycpO1xuICogfVxuICogZnVuY3Rpb24gbXlTZWNvbmRGdW5jdGlvbihhcmcxLCBhcmcyLCBjYWxsYmFjaykge1xuICogICAgIC8vIGFyZzEgbm93IGVxdWFscyAnb25lJyBhbmQgYXJnMiBub3cgZXF1YWxzICd0d28nXG4gKiAgICAgY2FsbGJhY2sobnVsbCwgJ3RocmVlJyk7XG4gKiB9XG4gKiBmdW5jdGlvbiBteUxhc3RGdW5jdGlvbihhcmcxLCBjYWxsYmFjaykge1xuICogICAgIC8vIGFyZzEgbm93IGVxdWFscyAndGhyZWUnXG4gKiAgICAgY2FsbGJhY2sobnVsbCwgJ2RvbmUnKTtcbiAqIH1cbiAqL1xuZnVuY3Rpb24gd2F0ZXJmYWxsKHRhc2tzLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gKDAsIF9vbmNlMi5kZWZhdWx0KShjYWxsYmFjayk7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHRhc2tzKSkgcmV0dXJuIGNhbGxiYWNrKG5ldyBFcnJvcignRmlyc3QgYXJndW1lbnQgdG8gd2F0ZXJmYWxsIG11c3QgYmUgYW4gYXJyYXkgb2YgZnVuY3Rpb25zJykpO1xuICAgIGlmICghdGFza3MubGVuZ3RoKSByZXR1cm4gY2FsbGJhY2soKTtcbiAgICB2YXIgdGFza0luZGV4ID0gMDtcblxuICAgIGZ1bmN0aW9uIG5leHRUYXNrKGFyZ3MpIHtcbiAgICAgICAgdmFyIHRhc2sgPSAoMCwgX3dyYXBBc3luYzIuZGVmYXVsdCkodGFza3NbdGFza0luZGV4KytdKTtcbiAgICAgICAgdGFzayguLi5hcmdzLCAoMCwgX29ubHlPbmNlMi5kZWZhdWx0KShuZXh0KSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbmV4dChlcnIsIC4uLmFyZ3MpIHtcbiAgICAgICAgaWYgKGVyciA9PT0gZmFsc2UpIHJldHVybjtcbiAgICAgICAgaWYgKGVyciB8fCB0YXNrSW5kZXggPT09IHRhc2tzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVyciwgLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICAgICAgbmV4dFRhc2soYXJncyk7XG4gICAgfVxuXG4gICAgbmV4dFRhc2soW10pO1xufVxuXG5leHBvcnRzLmRlZmF1bHQgPSAoMCwgX2F3YWl0aWZ5Mi5kZWZhdWx0KSh3YXRlcmZhbGwpO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@bitski/provider-engine/node_modules/async/waterfall.js\n");

/***/ }),

/***/ "../../node_modules/@metamask/safe-event-emitter/index.js":
/*!*************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@metamask/safe-event-emitter/index.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nclass SafeEventEmitter extends events_1.EventEmitter {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\nexports.default = SafeEventEmitter;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BtZXRhbWFzay9zYWZlLWV2ZW50LWVtaXR0ZXIvaW5kZXguanM/MzFjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHFEQUFxRCxVQUFVLFdBQVcsUUFBUTtBQUNsRjtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFNBQVM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQG1ldGFtYXNrL3NhZmUtZXZlbnQtZW1pdHRlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXZlbnRzXzEgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuZnVuY3Rpb24gc2FmZUFwcGx5KGhhbmRsZXIsIGNvbnRleHQsIGFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgICBSZWZsZWN0LmFwcGx5KGhhbmRsZXIsIGNvbnRleHQsIGFyZ3MpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIC8vIFRocm93IGVycm9yIGFmdGVyIHRpbWVvdXQgc28gYXMgbm90IHRvIGludGVycnVwdCB0aGUgc3RhY2tcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGFycmF5Q2xvbmUoYXJyKSB7XG4gICAgY29uc3QgbiA9IGFyci5sZW5ndGg7XG4gICAgY29uc3QgY29weSA9IG5ldyBBcnJheShuKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG47IGkgKz0gMSkge1xuICAgICAgICBjb3B5W2ldID0gYXJyW2ldO1xuICAgIH1cbiAgICByZXR1cm4gY29weTtcbn1cbmNsYXNzIFNhZmVFdmVudEVtaXR0ZXIgZXh0ZW5kcyBldmVudHNfMS5FdmVudEVtaXR0ZXIge1xuICAgIGVtaXQodHlwZSwgLi4uYXJncykge1xuICAgICAgICBsZXQgZG9FcnJvciA9IHR5cGUgPT09ICdlcnJvcic7XG4gICAgICAgIGNvbnN0IGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcbiAgICAgICAgaWYgKGV2ZW50cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBkb0Vycm9yID0gZG9FcnJvciAmJiBldmVudHMuZXJyb3IgPT09IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghZG9FcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoZXJlIGlzIG5vICdlcnJvcicgZXZlbnQgbGlzdGVuZXIgdGhlbiB0aHJvdy5cbiAgICAgICAgaWYgKGRvRXJyb3IpIHtcbiAgICAgICAgICAgIGxldCBlcjtcbiAgICAgICAgICAgIGlmIChhcmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBbZXJdID0gYXJncztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gTm90ZTogVGhlIGNvbW1lbnRzIG9uIHRoZSBgdGhyb3dgIGxpbmVzIGFyZSBpbnRlbnRpb25hbCwgdGhleSBzaG93XG4gICAgICAgICAgICAgICAgLy8gdXAgaW4gTm9kZSdzIG91dHB1dCBpZiB0aGlzIHJlc3VsdHMgaW4gYW4gdW5oYW5kbGVkIGV4Y2VwdGlvbi5cbiAgICAgICAgICAgICAgICB0aHJvdyBlcjsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEF0IGxlYXN0IGdpdmUgc29tZSBraW5kIG9mIGNvbnRleHQgdG8gdGhlIHVzZXJcbiAgICAgICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihgVW5oYW5kbGVkIGVycm9yLiR7ZXIgPyBgICgke2VyLm1lc3NhZ2V9KWAgOiAnJ31gKTtcbiAgICAgICAgICAgIGVyci5jb250ZXh0ID0gZXI7XG4gICAgICAgICAgICB0aHJvdyBlcnI7IC8vIFVuaGFuZGxlZCAnZXJyb3InIGV2ZW50XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaGFuZGxlciA9IGV2ZW50c1t0eXBlXTtcbiAgICAgICAgaWYgKGhhbmRsZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgaGFuZGxlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgc2FmZUFwcGx5KGhhbmRsZXIsIHRoaXMsIGFyZ3MpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgbGVuID0gaGFuZGxlci5sZW5ndGg7XG4gICAgICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSBhcnJheUNsb25lKGhhbmRsZXIpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgIHNhZmVBcHBseShsaXN0ZW5lcnNbaV0sIHRoaXMsIGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNhZmVFdmVudEVtaXR0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@metamask/safe-event-emitter/index.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/authorization_request.js":
/*!**********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/authorization_request.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthorizationRequest = void 0;\nvar crypto_utils_1 = __webpack_require__(/*! ./crypto_utils */ \"../../node_modules/@openid/appauth/built/crypto_utils.js\");\nvar logger_1 = __webpack_require__(/*! ./logger */ \"../../node_modules/@openid/appauth/built/logger.js\");\n/**\n * Generates a cryptographically random new state. Useful for CSRF protection.\n */\nvar SIZE = 10; // 10 bytes\nvar newState = function (crypto) {\n    return crypto.generateRandom(SIZE);\n};\n/**\n * Represents the AuthorizationRequest.\n * For more information look at\n * https://tools.ietf.org/html/rfc6749#section-4.1.1\n */\nvar AuthorizationRequest = /** @class */ (function () {\n    /**\n     * Constructs a new AuthorizationRequest.\n     * Use a `undefined` value for the `state` parameter, to generate a random\n     * state for CSRF protection.\n     */\n    function AuthorizationRequest(request, crypto, usePkce) {\n        if (crypto === void 0) { crypto = new crypto_utils_1.DefaultCrypto(); }\n        if (usePkce === void 0) { usePkce = true; }\n        this.crypto = crypto;\n        this.usePkce = usePkce;\n        this.clientId = request.client_id;\n        this.redirectUri = request.redirect_uri;\n        this.scope = request.scope;\n        this.responseType = request.response_type || AuthorizationRequest.RESPONSE_TYPE_CODE;\n        this.state = request.state || newState(crypto);\n        this.extras = request.extras;\n        // read internal properties if available\n        this.internal = request.internal;\n    }\n    AuthorizationRequest.prototype.setupCodeVerifier = function () {\n        var _this = this;\n        if (!this.usePkce) {\n            return Promise.resolve();\n        }\n        else {\n            var codeVerifier_1 = this.crypto.generateRandom(128);\n            var challenge = this.crypto.deriveChallenge(codeVerifier_1).catch(function (error) {\n                logger_1.log('Unable to generate PKCE challenge. Not using PKCE', error);\n                return undefined;\n            });\n            return challenge.then(function (result) {\n                if (result) {\n                    // keep track of the code used.\n                    _this.internal = _this.internal || {};\n                    _this.internal['code_verifier'] = codeVerifier_1;\n                    _this.extras = _this.extras || {};\n                    _this.extras['code_challenge'] = result;\n                    // We always use S256. Plain is not good enough.\n                    _this.extras['code_challenge_method'] = 'S256';\n                }\n            });\n        }\n    };\n    /**\n     * Serializes the AuthorizationRequest to a JavaScript Object.\n     */\n    AuthorizationRequest.prototype.toJson = function () {\n        var _this = this;\n        // Always make sure that the code verifier is setup when toJson() is called.\n        return this.setupCodeVerifier().then(function () {\n            return {\n                response_type: _this.responseType,\n                client_id: _this.clientId,\n                redirect_uri: _this.redirectUri,\n                scope: _this.scope,\n                state: _this.state,\n                extras: _this.extras,\n                internal: _this.internal\n            };\n        });\n    };\n    AuthorizationRequest.RESPONSE_TYPE_TOKEN = 'token';\n    AuthorizationRequest.RESPONSE_TYPE_CODE = 'code';\n    return AuthorizationRequest;\n}());\nexports.AuthorizationRequest = AuthorizationRequest;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXphdGlvbl9yZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2F1dGhvcml6YXRpb25fcmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7OztHQVlHOzs7QUFFSCwrQ0FBcUQ7QUFDckQsbUNBQTZCO0FBZ0I3Qjs7R0FFRztBQUNILElBQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFFLFdBQVc7QUFDN0IsSUFBTSxRQUFRLEdBQUcsVUFBUyxNQUFjO0lBQ3RDLE9BQU8sTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNyQyxDQUFDLENBQUM7QUFFRjs7OztHQUlHO0FBQ0g7SUFlRTs7OztPQUlHO0lBQ0gsOEJBQ0ksT0FBaUMsRUFDekIsTUFBb0MsRUFDcEMsT0FBdUI7UUFEdkIsdUJBQUEsRUFBQSxhQUFxQiw0QkFBYSxFQUFFO1FBQ3BDLHdCQUFBLEVBQUEsY0FBdUI7UUFEdkIsV0FBTSxHQUFOLE1BQU0sQ0FBOEI7UUFDcEMsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFDakMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQztRQUN4QyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDM0IsSUFBSSxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsYUFBYSxJQUFJLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDO1FBQ3JGLElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzdCLHdDQUF3QztRQUN4QyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDbkMsQ0FBQztJQUVELGdEQUFpQixHQUFqQjtRQUFBLGlCQXNCQztRQXJCQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNqQixPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUMxQjthQUFNO1lBQ0wsSUFBTSxjQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckQsSUFBTSxTQUFTLEdBQ1gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsY0FBWSxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUEsS0FBSztnQkFDbkQsWUFBRyxDQUFDLG1EQUFtRCxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUNoRSxPQUFPLFNBQVMsQ0FBQztZQUNuQixDQUFDLENBQUMsQ0FBQztZQUNQLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFBLE1BQU07Z0JBQzFCLElBQUksTUFBTSxFQUFFO29CQUNWLCtCQUErQjtvQkFDL0IsS0FBSSxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztvQkFDcEMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsR0FBRyxjQUFZLENBQUM7b0JBQzlDLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUM7b0JBQ2hDLEtBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxNQUFNLENBQUM7b0JBQ3ZDLGdEQUFnRDtvQkFDaEQsS0FBSSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLE1BQU0sQ0FBQztpQkFDL0M7WUFDSCxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gscUNBQU0sR0FBTjtRQUFBLGlCQWFDO1FBWkMsNEVBQTRFO1FBQzVFLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUMsSUFBSSxDQUFDO1lBQ25DLE9BQU87Z0JBQ0wsYUFBYSxFQUFFLEtBQUksQ0FBQyxZQUFZO2dCQUNoQyxTQUFTLEVBQUUsS0FBSSxDQUFDLFFBQVE7Z0JBQ3hCLFlBQVksRUFBRSxLQUFJLENBQUMsV0FBVztnQkFDOUIsS0FBSyxFQUFFLEtBQUksQ0FBQyxLQUFLO2dCQUNqQixLQUFLLEVBQUUsS0FBSSxDQUFDLEtBQUs7Z0JBQ2pCLE1BQU0sRUFBRSxLQUFJLENBQUMsTUFBTTtnQkFDbkIsUUFBUSxFQUFFLEtBQUksQ0FBQyxRQUFRO2FBQ3hCLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUF6RU0sd0NBQW1CLEdBQUcsT0FBTyxDQUFDO0lBQzlCLHVDQUFrQixHQUFHLE1BQU0sQ0FBQztJQXlFckMsMkJBQUM7Q0FBQSxBQTNFRCxJQTJFQztBQTNFWSxvREFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtDcnlwdG8sIERlZmF1bHRDcnlwdG99IGZyb20gJy4vY3J5cHRvX3V0aWxzJztcbmltcG9ydCB7bG9nfSBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQge1N0cmluZ01hcH0gZnJvbSAnLi90eXBlcyc7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhbiBBdXRob3JpemF0aW9uUmVxdWVzdCBhcyBKU09OLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhvcml6YXRpb25SZXF1ZXN0SnNvbiB7XG4gIHJlc3BvbnNlX3R5cGU6IHN0cmluZztcbiAgY2xpZW50X2lkOiBzdHJpbmc7XG4gIHJlZGlyZWN0X3VyaTogc3RyaW5nO1xuICBzY29wZTogc3RyaW5nO1xuICBzdGF0ZT86IHN0cmluZztcbiAgZXh0cmFzPzogU3RyaW5nTWFwO1xuICBpbnRlcm5hbD86IFN0cmluZ01hcDtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZXMgYSBjcnlwdG9ncmFwaGljYWxseSByYW5kb20gbmV3IHN0YXRlLiBVc2VmdWwgZm9yIENTUkYgcHJvdGVjdGlvbi5cbiAqL1xuY29uc3QgU0laRSA9IDEwOyAgLy8gMTAgYnl0ZXNcbmNvbnN0IG5ld1N0YXRlID0gZnVuY3Rpb24oY3J5cHRvOiBDcnlwdG8pOiBzdHJpbmcge1xuICByZXR1cm4gY3J5cHRvLmdlbmVyYXRlUmFuZG9tKFNJWkUpO1xufTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBBdXRob3JpemF0aW9uUmVxdWVzdC5cbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGxvb2sgYXRcbiAqIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2NzQ5I3NlY3Rpb24tNC4xLjFcbiAqL1xuZXhwb3J0IGNsYXNzIEF1dGhvcml6YXRpb25SZXF1ZXN0IHtcbiAgc3RhdGljIFJFU1BPTlNFX1RZUEVfVE9LRU4gPSAndG9rZW4nO1xuICBzdGF0aWMgUkVTUE9OU0VfVFlQRV9DT0RFID0gJ2NvZGUnO1xuXG4gIC8vIE5PVEU6XG4gIC8vIEJvdGggcmVkaXJlY3RfdXJpIGFuZCBzdGF0ZSBhcmUgYWN0dWFsbHkgb3B0aW9uYWwuXG4gIC8vIEhvd2V2ZXIgQXBwQXV0aCBpcyBtb3JlIG9waW9uaW9uYXRlZCwgYW5kIHJlcXVpcmVzIHlvdSB0byB1c2UgYm90aC5cblxuICBjbGllbnRJZDogc3RyaW5nO1xuICByZWRpcmVjdFVyaTogc3RyaW5nO1xuICBzY29wZTogc3RyaW5nO1xuICByZXNwb25zZVR5cGU6IHN0cmluZztcbiAgc3RhdGU6IHN0cmluZztcbiAgZXh0cmFzPzogU3RyaW5nTWFwO1xuICBpbnRlcm5hbD86IFN0cmluZ01hcDtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYSBuZXcgQXV0aG9yaXphdGlvblJlcXVlc3QuXG4gICAqIFVzZSBhIGB1bmRlZmluZWRgIHZhbHVlIGZvciB0aGUgYHN0YXRlYCBwYXJhbWV0ZXIsIHRvIGdlbmVyYXRlIGEgcmFuZG9tXG4gICAqIHN0YXRlIGZvciBDU1JGIHByb3RlY3Rpb24uXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICAgIHJlcXVlc3Q6IEF1dGhvcml6YXRpb25SZXF1ZXN0SnNvbixcbiAgICAgIHByaXZhdGUgY3J5cHRvOiBDcnlwdG8gPSBuZXcgRGVmYXVsdENyeXB0bygpLFxuICAgICAgcHJpdmF0ZSB1c2VQa2NlOiBib29sZWFuID0gdHJ1ZSkge1xuICAgIHRoaXMuY2xpZW50SWQgPSByZXF1ZXN0LmNsaWVudF9pZDtcbiAgICB0aGlzLnJlZGlyZWN0VXJpID0gcmVxdWVzdC5yZWRpcmVjdF91cmk7XG4gICAgdGhpcy5zY29wZSA9IHJlcXVlc3Quc2NvcGU7XG4gICAgdGhpcy5yZXNwb25zZVR5cGUgPSByZXF1ZXN0LnJlc3BvbnNlX3R5cGUgfHwgQXV0aG9yaXphdGlvblJlcXVlc3QuUkVTUE9OU0VfVFlQRV9DT0RFO1xuICAgIHRoaXMuc3RhdGUgPSByZXF1ZXN0LnN0YXRlIHx8IG5ld1N0YXRlKGNyeXB0byk7XG4gICAgdGhpcy5leHRyYXMgPSByZXF1ZXN0LmV4dHJhcztcbiAgICAvLyByZWFkIGludGVybmFsIHByb3BlcnRpZXMgaWYgYXZhaWxhYmxlXG4gICAgdGhpcy5pbnRlcm5hbCA9IHJlcXVlc3QuaW50ZXJuYWw7XG4gIH1cblxuICBzZXR1cENvZGVWZXJpZmllcigpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBpZiAoIXRoaXMudXNlUGtjZSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBjb2RlVmVyaWZpZXIgPSB0aGlzLmNyeXB0by5nZW5lcmF0ZVJhbmRvbSgxMjgpO1xuICAgICAgY29uc3QgY2hhbGxlbmdlOiBQcm9taXNlPHN0cmluZ3x1bmRlZmluZWQ+ID1cbiAgICAgICAgICB0aGlzLmNyeXB0by5kZXJpdmVDaGFsbGVuZ2UoY29kZVZlcmlmaWVyKS5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICBsb2coJ1VuYWJsZSB0byBnZW5lcmF0ZSBQS0NFIGNoYWxsZW5nZS4gTm90IHVzaW5nIFBLQ0UnLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGNoYWxsZW5nZS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAvLyBrZWVwIHRyYWNrIG9mIHRoZSBjb2RlIHVzZWQuXG4gICAgICAgICAgdGhpcy5pbnRlcm5hbCA9IHRoaXMuaW50ZXJuYWwgfHwge307XG4gICAgICAgICAgdGhpcy5pbnRlcm5hbFsnY29kZV92ZXJpZmllciddID0gY29kZVZlcmlmaWVyO1xuICAgICAgICAgIHRoaXMuZXh0cmFzID0gdGhpcy5leHRyYXMgfHwge307XG4gICAgICAgICAgdGhpcy5leHRyYXNbJ2NvZGVfY2hhbGxlbmdlJ10gPSByZXN1bHQ7XG4gICAgICAgICAgLy8gV2UgYWx3YXlzIHVzZSBTMjU2LiBQbGFpbiBpcyBub3QgZ29vZCBlbm91Z2guXG4gICAgICAgICAgdGhpcy5leHRyYXNbJ2NvZGVfY2hhbGxlbmdlX21ldGhvZCddID0gJ1MyNTYnO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2VyaWFsaXplcyB0aGUgQXV0aG9yaXphdGlvblJlcXVlc3QgdG8gYSBKYXZhU2NyaXB0IE9iamVjdC5cbiAgICovXG4gIHRvSnNvbigpOiBQcm9taXNlPEF1dGhvcml6YXRpb25SZXF1ZXN0SnNvbj4ge1xuICAgIC8vIEFsd2F5cyBtYWtlIHN1cmUgdGhhdCB0aGUgY29kZSB2ZXJpZmllciBpcyBzZXR1cCB3aGVuIHRvSnNvbigpIGlzIGNhbGxlZC5cbiAgICByZXR1cm4gdGhpcy5zZXR1cENvZGVWZXJpZmllcigpLnRoZW4oKCkgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVzcG9uc2VfdHlwZTogdGhpcy5yZXNwb25zZVR5cGUsXG4gICAgICAgIGNsaWVudF9pZDogdGhpcy5jbGllbnRJZCxcbiAgICAgICAgcmVkaXJlY3RfdXJpOiB0aGlzLnJlZGlyZWN0VXJpLFxuICAgICAgICBzY29wZTogdGhpcy5zY29wZSxcbiAgICAgICAgc3RhdGU6IHRoaXMuc3RhdGUsXG4gICAgICAgIGV4dHJhczogdGhpcy5leHRyYXMsXG4gICAgICAgIGludGVybmFsOiB0aGlzLmludGVybmFsXG4gICAgICB9O1xuICAgIH0pO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/authorization_request.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/authorization_request_handler.js":
/*!******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/authorization_request_handler.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthorizationRequestHandler = exports.BUILT_IN_PARAMETERS = exports.AuthorizationNotifier = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"../../node_modules/@openid/appauth/built/logger.js\");\n/**\n * Authorization Service notifier.\n * This manages the communication of the AuthorizationResponse to the 3p client.\n */\nvar AuthorizationNotifier = /** @class */ (function () {\n    function AuthorizationNotifier() {\n        this.listener = null;\n    }\n    AuthorizationNotifier.prototype.setAuthorizationListener = function (listener) {\n        this.listener = listener;\n    };\n    /**\n     * The authorization complete callback.\n     */\n    AuthorizationNotifier.prototype.onAuthorizationComplete = function (request, response, error) {\n        if (this.listener) {\n            // complete authorization request\n            this.listener(request, response, error);\n        }\n    };\n    return AuthorizationNotifier;\n}());\nexports.AuthorizationNotifier = AuthorizationNotifier;\n// TODO(rahulrav@): add more built in parameters.\n/* built in parameters. */\nexports.BUILT_IN_PARAMETERS = ['redirect_uri', 'client_id', 'response_type', 'state', 'scope'];\n/**\n * Defines the interface which is capable of handling an authorization request\n * using various methods (iframe / popup / different process etc.).\n */\nvar AuthorizationRequestHandler = /** @class */ (function () {\n    function AuthorizationRequestHandler(utils, crypto) {\n        this.utils = utils;\n        this.crypto = crypto;\n        // notifier send the response back to the client.\n        this.notifier = null;\n    }\n    /**\n     * A utility method to be able to build the authorization request URL.\n     */\n    AuthorizationRequestHandler.prototype.buildRequestUrl = function (configuration, request) {\n        // build the query string\n        // coerce to any type for convenience\n        var requestMap = {\n            'redirect_uri': request.redirectUri,\n            'client_id': request.clientId,\n            'response_type': request.responseType,\n            'state': request.state,\n            'scope': request.scope\n        };\n        // copy over extras\n        if (request.extras) {\n            for (var extra in request.extras) {\n                if (request.extras.hasOwnProperty(extra)) {\n                    // check before inserting to requestMap\n                    if (exports.BUILT_IN_PARAMETERS.indexOf(extra) < 0) {\n                        requestMap[extra] = request.extras[extra];\n                    }\n                }\n            }\n        }\n        var query = this.utils.stringify(requestMap);\n        var baseUrl = configuration.authorizationEndpoint;\n        var url = baseUrl + \"?\" + query;\n        return url;\n    };\n    /**\n     * Completes the authorization request if necessary & when possible.\n     */\n    AuthorizationRequestHandler.prototype.completeAuthorizationRequestIfPossible = function () {\n        var _this = this;\n        // call complete authorization if possible to see there might\n        // be a response that needs to be delivered.\n        logger_1.log(\"Checking to see if there is an authorization response to be delivered.\");\n        if (!this.notifier) {\n            logger_1.log(\"Notifier is not present on AuthorizationRequest handler.\\n          No delivery of result will be possible\");\n        }\n        return this.completeAuthorizationRequest().then(function (result) {\n            if (!result) {\n                logger_1.log(\"No result is available yet.\");\n            }\n            if (result && _this.notifier) {\n                _this.notifier.onAuthorizationComplete(result.request, result.response, result.error);\n            }\n        });\n    };\n    /**\n     * Sets the default Authorization Service notifier.\n     */\n    AuthorizationRequestHandler.prototype.setAuthorizationNotifier = function (notifier) {\n        this.notifier = notifier;\n        return this;\n    };\n    ;\n    return AuthorizationRequestHandler;\n}());\nexports.AuthorizationRequestHandler = AuthorizationRequestHandler;\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/authorization_request_handler.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/authorization_response.js":
/*!***********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/authorization_response.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthorizationError = exports.AuthorizationResponse = void 0;\n/**\n * Represents the Authorization Response type.\n * For more information look at\n * https://tools.ietf.org/html/rfc6749#section-4.1.2\n */\nvar AuthorizationResponse = /** @class */ (function () {\n    function AuthorizationResponse(response) {\n        this.code = response.code;\n        this.state = response.state;\n    }\n    AuthorizationResponse.prototype.toJson = function () {\n        return { code: this.code, state: this.state };\n    };\n    return AuthorizationResponse;\n}());\nexports.AuthorizationResponse = AuthorizationResponse;\n/**\n * Represents the Authorization error response.\n * For more information look at:\n * https://tools.ietf.org/html/rfc6749#section-4.1.2.1\n */\nvar AuthorizationError = /** @class */ (function () {\n    function AuthorizationError(error) {\n        this.error = error.error;\n        this.errorDescription = error.error_description;\n        this.errorUri = error.error_uri;\n        this.state = error.state;\n    }\n    AuthorizationError.prototype.toJson = function () {\n        return {\n            error: this.error,\n            error_description: this.errorDescription,\n            error_uri: this.errorUri,\n            state: this.state\n        };\n    };\n    return AuthorizationError;\n}());\nexports.AuthorizationError = AuthorizationError;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXphdGlvbl9yZXNwb25zZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9hdXRob3JpemF0aW9uX3Jlc3BvbnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7O0dBWUc7OztBQW9CSDs7OztHQUlHO0FBQ0g7SUFJRSwrQkFBWSxRQUFtQztRQUM3QyxJQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDO0lBQzlCLENBQUM7SUFFRCxzQ0FBTSxHQUFOO1FBQ0UsT0FBTyxFQUFDLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFDLENBQUM7SUFDOUMsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FBQyxBQVpELElBWUM7QUFaWSxzREFBcUI7QUFjbEM7Ozs7R0FJRztBQUNIO0lBTUUsNEJBQVksS0FBNkI7UUFDdkMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsaUJBQWlCLENBQUM7UUFDaEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUMzQixDQUFDO0lBRUQsbUNBQU0sR0FBTjtRQUNFLE9BQU87WUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtZQUN4QyxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDeEIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO1NBQ2xCLENBQUM7SUFDSixDQUFDO0lBQ0gseUJBQUM7QUFBRCxDQUFDLEFBckJELElBcUJDO0FBckJZLGdEQUFrQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0XG4gKiBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlXG4gKiBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlclxuICogZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIEF1dGhvcml6YXRpb25SZXNwb25zZSBhcyBhIEpTT04gb2JqZWN0LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhvcml6YXRpb25SZXNwb25zZUpzb24ge1xuICBjb2RlOiBzdHJpbmc7XG4gIHN0YXRlOiBzdHJpbmc7XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgQXV0aG9yaXphdGlvbkVycm9yIGFzIGEgSlNPTiBvYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXV0aG9yaXphdGlvbkVycm9ySnNvbiB7XG4gIGVycm9yOiBzdHJpbmc7XG4gIGVycm9yX2Rlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBlcnJvcl91cmk/OiBzdHJpbmc7XG4gIHN0YXRlPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIEF1dGhvcml6YXRpb24gUmVzcG9uc2UgdHlwZS5cbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGxvb2sgYXRcbiAqIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2NzQ5I3NlY3Rpb24tNC4xLjJcbiAqL1xuZXhwb3J0IGNsYXNzIEF1dGhvcml6YXRpb25SZXNwb25zZSB7XG4gIGNvZGU6IHN0cmluZztcbiAgc3RhdGU6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihyZXNwb25zZTogQXV0aG9yaXphdGlvblJlc3BvbnNlSnNvbikge1xuICAgIHRoaXMuY29kZSA9IHJlc3BvbnNlLmNvZGU7XG4gICAgdGhpcy5zdGF0ZSA9IHJlc3BvbnNlLnN0YXRlO1xuICB9XG5cbiAgdG9Kc29uKCk6IEF1dGhvcml6YXRpb25SZXNwb25zZUpzb24ge1xuICAgIHJldHVybiB7Y29kZTogdGhpcy5jb2RlLCBzdGF0ZTogdGhpcy5zdGF0ZX07XG4gIH1cbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBBdXRob3JpemF0aW9uIGVycm9yIHJlc3BvbnNlLlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gbG9vayBhdDpcbiAqIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2NzQ5I3NlY3Rpb24tNC4xLjIuMVxuICovXG5leHBvcnQgY2xhc3MgQXV0aG9yaXphdGlvbkVycm9yIHtcbiAgZXJyb3I6IHN0cmluZztcbiAgZXJyb3JEZXNjcmlwdGlvbj86IHN0cmluZztcbiAgZXJyb3JVcmk/OiBzdHJpbmc7XG4gIHN0YXRlPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGVycm9yOiBBdXRob3JpemF0aW9uRXJyb3JKc29uKSB7XG4gICAgdGhpcy5lcnJvciA9IGVycm9yLmVycm9yO1xuICAgIHRoaXMuZXJyb3JEZXNjcmlwdGlvbiA9IGVycm9yLmVycm9yX2Rlc2NyaXB0aW9uO1xuICAgIHRoaXMuZXJyb3JVcmkgPSBlcnJvci5lcnJvcl91cmk7XG4gICAgdGhpcy5zdGF0ZSA9IGVycm9yLnN0YXRlO1xuICB9XG5cbiAgdG9Kc29uKCk6IEF1dGhvcml6YXRpb25FcnJvckpzb24ge1xuICAgIHJldHVybiB7XG4gICAgICBlcnJvcjogdGhpcy5lcnJvcixcbiAgICAgIGVycm9yX2Rlc2NyaXB0aW9uOiB0aGlzLmVycm9yRGVzY3JpcHRpb24sXG4gICAgICBlcnJvcl91cmk6IHRoaXMuZXJyb3JVcmksXG4gICAgICBzdGF0ZTogdGhpcy5zdGF0ZVxuICAgIH07XG4gIH1cbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/authorization_response.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/authorization_service_configuration.js":
/*!************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/authorization_service_configuration.js ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthorizationServiceConfiguration = void 0;\nvar xhr_1 = __webpack_require__(/*! ./xhr */ \"../../node_modules/@openid/appauth/built/xhr.js\");\n/**\n * The standard base path for well-known resources on domains.\n * See https://tools.ietf.org/html/rfc5785 for more information.\n */\nvar WELL_KNOWN_PATH = '.well-known';\n/**\n * The standard resource under the well known path at which an OpenID Connect\n * discovery document can be found under an issuer's base URI.\n */\nvar OPENID_CONFIGURATION = 'openid-configuration';\n/**\n * Configuration details required to interact with an authorization service.\n *\n * More information at https://openid.net/specs/openid-connect-discovery-1_0-17.html\n */\nvar AuthorizationServiceConfiguration = /** @class */ (function () {\n    function AuthorizationServiceConfiguration(request) {\n        this.authorizationEndpoint = request.authorization_endpoint;\n        this.tokenEndpoint = request.token_endpoint;\n        this.revocationEndpoint = request.revocation_endpoint;\n        this.userInfoEndpoint = request.userinfo_endpoint;\n        this.endSessionEndpoint = request.end_session_endpoint;\n    }\n    AuthorizationServiceConfiguration.prototype.toJson = function () {\n        return {\n            authorization_endpoint: this.authorizationEndpoint,\n            token_endpoint: this.tokenEndpoint,\n            revocation_endpoint: this.revocationEndpoint,\n            end_session_endpoint: this.endSessionEndpoint,\n            userinfo_endpoint: this.userInfoEndpoint\n        };\n    };\n    AuthorizationServiceConfiguration.fetchFromIssuer = function (openIdIssuerUrl, requestor) {\n        var fullUrl = openIdIssuerUrl + \"/\" + WELL_KNOWN_PATH + \"/\" + OPENID_CONFIGURATION;\n        var requestorToUse = requestor || new xhr_1.JQueryRequestor();\n        return requestorToUse\n            .xhr({ url: fullUrl, dataType: 'json', method: 'GET' })\n            .then(function (json) { return new AuthorizationServiceConfiguration(json); });\n    };\n    return AuthorizationServiceConfiguration;\n}());\nexports.AuthorizationServiceConfiguration = AuthorizationServiceConfiguration;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXphdGlvbl9zZXJ2aWNlX2NvbmZpZ3VyYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYXV0aG9yaXphdGlvbl9zZXJ2aWNlX2NvbmZpZ3VyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7R0FZRzs7O0FBRUgsNkJBQWlEO0FBY2pEOzs7R0FHRztBQUNILElBQU0sZUFBZSxHQUFHLGFBQWEsQ0FBQztBQUV0Qzs7O0dBR0c7QUFDSCxJQUFNLG9CQUFvQixHQUFHLHNCQUFzQixDQUFDO0FBRXBEOzs7O0dBSUc7QUFDSDtJQU9FLDJDQUFZLE9BQThDO1FBQ3hELElBQUksQ0FBQyxxQkFBcUIsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUM7UUFDNUQsSUFBSSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDO1FBQzVDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUM7UUFDdEQsSUFBSSxDQUFDLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztRQUNsRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsT0FBTyxDQUFDLG9CQUFvQixDQUFDO0lBQ3pELENBQUM7SUFFRCxrREFBTSxHQUFOO1FBQ0UsT0FBTztZQUNMLHNCQUFzQixFQUFFLElBQUksQ0FBQyxxQkFBcUI7WUFDbEQsY0FBYyxFQUFFLElBQUksQ0FBQyxhQUFhO1lBQ2xDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxrQkFBa0I7WUFDNUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtZQUM3QyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQ3pDLENBQUM7SUFDSixDQUFDO0lBRU0saURBQWUsR0FBdEIsVUFBdUIsZUFBdUIsRUFBRSxTQUFxQjtRQUVuRSxJQUFNLE9BQU8sR0FBTSxlQUFlLFNBQUksZUFBZSxTQUFJLG9CQUFzQixDQUFDO1FBRWhGLElBQU0sY0FBYyxHQUFHLFNBQVMsSUFBSSxJQUFJLHFCQUFlLEVBQUUsQ0FBQztRQUUxRCxPQUFPLGNBQWM7YUFDaEIsR0FBRyxDQUF3QyxFQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLENBQUM7YUFDM0YsSUFBSSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsSUFBSSxpQ0FBaUMsQ0FBQyxJQUFJLENBQUMsRUFBM0MsQ0FBMkMsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFDSCx3Q0FBQztBQUFELENBQUMsQUFuQ0QsSUFtQ0M7QUFuQ1ksOEVBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGVcbiAqIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyXG4gKiBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7SlF1ZXJ5UmVxdWVzdG9yLCBSZXF1ZXN0b3J9IGZyb20gJy4veGhyJztcblxuXG4vKipcbiAqIFJlcHJlc2VudHMgQXV0aG9yaXphdGlvblNlcnZpY2VDb25maWd1cmF0aW9uIGFzIGEgSlNPTiBvYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXV0aG9yaXphdGlvblNlcnZpY2VDb25maWd1cmF0aW9uSnNvbiB7XG4gIGF1dGhvcml6YXRpb25fZW5kcG9pbnQ6IHN0cmluZztcbiAgdG9rZW5fZW5kcG9pbnQ6IHN0cmluZztcbiAgcmV2b2NhdGlvbl9lbmRwb2ludDogc3RyaW5nO1xuICBlbmRfc2Vzc2lvbl9lbmRwb2ludD86IHN0cmluZztcbiAgdXNlcmluZm9fZW5kcG9pbnQ/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogVGhlIHN0YW5kYXJkIGJhc2UgcGF0aCBmb3Igd2VsbC1rbm93biByZXNvdXJjZXMgb24gZG9tYWlucy5cbiAqIFNlZSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNTc4NSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqL1xuY29uc3QgV0VMTF9LTk9XTl9QQVRIID0gJy53ZWxsLWtub3duJztcblxuLyoqXG4gKiBUaGUgc3RhbmRhcmQgcmVzb3VyY2UgdW5kZXIgdGhlIHdlbGwga25vd24gcGF0aCBhdCB3aGljaCBhbiBPcGVuSUQgQ29ubmVjdFxuICogZGlzY292ZXJ5IGRvY3VtZW50IGNhbiBiZSBmb3VuZCB1bmRlciBhbiBpc3N1ZXIncyBiYXNlIFVSSS5cbiAqL1xuY29uc3QgT1BFTklEX0NPTkZJR1VSQVRJT04gPSAnb3BlbmlkLWNvbmZpZ3VyYXRpb24nO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gZGV0YWlscyByZXF1aXJlZCB0byBpbnRlcmFjdCB3aXRoIGFuIGF1dGhvcml6YXRpb24gc2VydmljZS5cbiAqXG4gKiBNb3JlIGluZm9ybWF0aW9uIGF0IGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1kaXNjb3ZlcnktMV8wLTE3Lmh0bWxcbiAqL1xuZXhwb3J0IGNsYXNzIEF1dGhvcml6YXRpb25TZXJ2aWNlQ29uZmlndXJhdGlvbiB7XG4gIGF1dGhvcml6YXRpb25FbmRwb2ludDogc3RyaW5nO1xuICB0b2tlbkVuZHBvaW50OiBzdHJpbmc7XG4gIHJldm9jYXRpb25FbmRwb2ludDogc3RyaW5nO1xuICB1c2VySW5mb0VuZHBvaW50Pzogc3RyaW5nO1xuICBlbmRTZXNzaW9uRW5kcG9pbnQ/OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocmVxdWVzdDogQXV0aG9yaXphdGlvblNlcnZpY2VDb25maWd1cmF0aW9uSnNvbikge1xuICAgIHRoaXMuYXV0aG9yaXphdGlvbkVuZHBvaW50ID0gcmVxdWVzdC5hdXRob3JpemF0aW9uX2VuZHBvaW50O1xuICAgIHRoaXMudG9rZW5FbmRwb2ludCA9IHJlcXVlc3QudG9rZW5fZW5kcG9pbnQ7XG4gICAgdGhpcy5yZXZvY2F0aW9uRW5kcG9pbnQgPSByZXF1ZXN0LnJldm9jYXRpb25fZW5kcG9pbnQ7XG4gICAgdGhpcy51c2VySW5mb0VuZHBvaW50ID0gcmVxdWVzdC51c2VyaW5mb19lbmRwb2ludDtcbiAgICB0aGlzLmVuZFNlc3Npb25FbmRwb2ludCA9IHJlcXVlc3QuZW5kX3Nlc3Npb25fZW5kcG9pbnQ7XG4gIH1cblxuICB0b0pzb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGF1dGhvcml6YXRpb25fZW5kcG9pbnQ6IHRoaXMuYXV0aG9yaXphdGlvbkVuZHBvaW50LFxuICAgICAgdG9rZW5fZW5kcG9pbnQ6IHRoaXMudG9rZW5FbmRwb2ludCxcbiAgICAgIHJldm9jYXRpb25fZW5kcG9pbnQ6IHRoaXMucmV2b2NhdGlvbkVuZHBvaW50LFxuICAgICAgZW5kX3Nlc3Npb25fZW5kcG9pbnQ6IHRoaXMuZW5kU2Vzc2lvbkVuZHBvaW50LFxuICAgICAgdXNlcmluZm9fZW5kcG9pbnQ6IHRoaXMudXNlckluZm9FbmRwb2ludFxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZmV0Y2hGcm9tSXNzdWVyKG9wZW5JZElzc3VlclVybDogc3RyaW5nLCByZXF1ZXN0b3I/OiBSZXF1ZXN0b3IpOlxuICAgICAgUHJvbWlzZTxBdXRob3JpemF0aW9uU2VydmljZUNvbmZpZ3VyYXRpb24+IHtcbiAgICBjb25zdCBmdWxsVXJsID0gYCR7b3BlbklkSXNzdWVyVXJsfS8ke1dFTExfS05PV05fUEFUSH0vJHtPUEVOSURfQ09ORklHVVJBVElPTn1gO1xuXG4gICAgY29uc3QgcmVxdWVzdG9yVG9Vc2UgPSByZXF1ZXN0b3IgfHwgbmV3IEpRdWVyeVJlcXVlc3RvcigpO1xuXG4gICAgcmV0dXJuIHJlcXVlc3RvclRvVXNlXG4gICAgICAgIC54aHI8QXV0aG9yaXphdGlvblNlcnZpY2VDb25maWd1cmF0aW9uSnNvbj4oe3VybDogZnVsbFVybCwgZGF0YVR5cGU6ICdqc29uJywgbWV0aG9kOiAnR0VUJ30pXG4gICAgICAgIC50aGVuKGpzb24gPT4gbmV3IEF1dGhvcml6YXRpb25TZXJ2aWNlQ29uZmlndXJhdGlvbihqc29uKSk7XG4gIH1cbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/authorization_service_configuration.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/crypto_utils.js":
/*!*************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/crypto_utils.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultCrypto = exports.textEncodeLite = exports.urlSafe = exports.bufferToString = void 0;\nvar base64 = __webpack_require__(/*! base64-js */ \"../../node_modules/base64-js/index.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"../../node_modules/@openid/appauth/built/errors.js\");\nvar HAS_CRYPTO = typeof window !== 'undefined' && !!window.crypto;\nvar HAS_SUBTLE_CRYPTO = HAS_CRYPTO && !!window.crypto.subtle;\nvar CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nfunction bufferToString(buffer) {\n    var state = [];\n    for (var i = 0; i < buffer.byteLength; i += 1) {\n        var index = buffer[i] % CHARSET.length;\n        state.push(CHARSET[index]);\n    }\n    return state.join('');\n}\nexports.bufferToString = bufferToString;\nfunction urlSafe(buffer) {\n    var encoded = base64.fromByteArray(new Uint8Array(buffer));\n    return encoded.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\nexports.urlSafe = urlSafe;\n// adapted from source: http://stackoverflow.com/a/11058858\n// this is used in place of TextEncode as the api is not yet\n// well supported: https://caniuse.com/#search=TextEncoder\nfunction textEncodeLite(str) {\n    var buf = new ArrayBuffer(str.length);\n    var bufView = new Uint8Array(buf);\n    for (var i = 0; i < str.length; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return bufView;\n}\nexports.textEncodeLite = textEncodeLite;\n/**\n * The default implementation of the `Crypto` interface.\n * This uses the capabilities of the browser.\n */\nvar DefaultCrypto = /** @class */ (function () {\n    function DefaultCrypto() {\n    }\n    DefaultCrypto.prototype.generateRandom = function (size) {\n        var buffer = new Uint8Array(size);\n        if (HAS_CRYPTO) {\n            window.crypto.getRandomValues(buffer);\n        }\n        else {\n            // fall back to Math.random() if nothing else is available\n            for (var i = 0; i < size; i += 1) {\n                buffer[i] = (Math.random() * CHARSET.length) | 0;\n            }\n        }\n        return bufferToString(buffer);\n    };\n    DefaultCrypto.prototype.deriveChallenge = function (code) {\n        if (code.length < 43 || code.length > 128) {\n            return Promise.reject(new errors_1.AppAuthError('Invalid code length.'));\n        }\n        if (!HAS_SUBTLE_CRYPTO) {\n            return Promise.reject(new errors_1.AppAuthError('window.crypto.subtle is unavailable.'));\n        }\n        return new Promise(function (resolve, reject) {\n            crypto.subtle.digest('SHA-256', textEncodeLite(code)).then(function (buffer) {\n                return resolve(urlSafe(new Uint8Array(buffer)));\n            }, function (error) { return reject(error); });\n        });\n    };\n    return DefaultCrypto;\n}());\nexports.DefaultCrypto = DefaultCrypto;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J5cHRvX3V0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NyeXB0b191dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7OztHQVlHOzs7QUFFSCxrQ0FBb0M7QUFFcEMsbUNBQXNDO0FBRXRDLElBQU0sVUFBVSxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsSUFBSSxDQUFDLENBQUUsTUFBTSxDQUFDLE1BQWMsQ0FBQztBQUM3RSxJQUFNLGlCQUFpQixHQUFHLFVBQVUsSUFBSSxDQUFDLENBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFjLENBQUM7QUFDeEUsSUFBTSxPQUFPLEdBQUcsZ0VBQWdFLENBQUM7QUFFakYsU0FBZ0IsY0FBYyxDQUFDLE1BQWtCO0lBQy9DLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNmLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDN0MsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDdkMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztLQUM1QjtJQUNELE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN4QixDQUFDO0FBUEQsd0NBT0M7QUFFRCxTQUFnQixPQUFPLENBQUMsTUFBa0I7SUFDeEMsSUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzdELE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzNFLENBQUM7QUFIRCwwQkFHQztBQUVELDJEQUEyRDtBQUMzRCw0REFBNEQ7QUFDNUQsMERBQTBEO0FBQzFELFNBQWdCLGNBQWMsQ0FBQyxHQUFXO0lBQ3hDLElBQU0sR0FBRyxHQUFHLElBQUksV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4QyxJQUFNLE9BQU8sR0FBRyxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVwQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNuQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNoQztJQUNELE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUM7QUFSRCx3Q0FRQztBQWNEOzs7R0FHRztBQUNIO0lBQUE7SUE0QkEsQ0FBQztJQTNCQyxzQ0FBYyxHQUFkLFVBQWUsSUFBWTtRQUN6QixJQUFNLE1BQU0sR0FBRyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNwQyxJQUFJLFVBQVUsRUFBRTtZQUNkLE1BQU0sQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3ZDO2FBQU07WUFDTCwwREFBMEQ7WUFDMUQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNoQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNsRDtTQUNGO1FBQ0QsT0FBTyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELHVDQUFlLEdBQWYsVUFBZ0IsSUFBWTtRQUMxQixJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFO1lBQ3pDLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLHFCQUFZLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO1NBQ2pFO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQ3RCLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLHFCQUFZLENBQUMsc0NBQXNDLENBQUMsQ0FBQyxDQUFDO1NBQ2pGO1FBRUQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQ2pDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxNQUFNO2dCQUMvRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xELENBQUMsRUFBRSxVQUFBLEtBQUssSUFBSSxPQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBYixDQUFhLENBQUMsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDSCxvQkFBQztBQUFELENBQUMsQUE1QkQsSUE0QkM7QUE1Qlksc0NBQWEiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0ICogYXMgYmFzZTY0IGZyb20gJ2Jhc2U2NC1qcyc7XG5cbmltcG9ydCB7QXBwQXV0aEVycm9yfSBmcm9tICcuL2Vycm9ycyc7XG5cbmNvbnN0IEhBU19DUllQVE8gPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAhISh3aW5kb3cuY3J5cHRvIGFzIGFueSk7XG5jb25zdCBIQVNfU1VCVExFX0NSWVBUTyA9IEhBU19DUllQVE8gJiYgISEod2luZG93LmNyeXB0by5zdWJ0bGUgYXMgYW55KTtcbmNvbnN0IENIQVJTRVQgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xuXG5leHBvcnQgZnVuY3Rpb24gYnVmZmVyVG9TdHJpbmcoYnVmZmVyOiBVaW50OEFycmF5KSB7XG4gIGxldCBzdGF0ZSA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1ZmZlci5ieXRlTGVuZ3RoOyBpICs9IDEpIHtcbiAgICBsZXQgaW5kZXggPSBidWZmZXJbaV0gJSBDSEFSU0VULmxlbmd0aDtcbiAgICBzdGF0ZS5wdXNoKENIQVJTRVRbaW5kZXhdKTtcbiAgfVxuICByZXR1cm4gc3RhdGUuam9pbignJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cmxTYWZlKGJ1ZmZlcjogVWludDhBcnJheSk6IHN0cmluZyB7XG4gIGNvbnN0IGVuY29kZWQgPSBiYXNlNjQuZnJvbUJ5dGVBcnJheShuZXcgVWludDhBcnJheShidWZmZXIpKTtcbiAgcmV0dXJuIGVuY29kZWQucmVwbGFjZSgvXFwrL2csICctJykucmVwbGFjZSgvXFwvL2csICdfJykucmVwbGFjZSgvPS9nLCAnJyk7XG59XG5cbi8vIGFkYXB0ZWQgZnJvbSBzb3VyY2U6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzExMDU4ODU4XG4vLyB0aGlzIGlzIHVzZWQgaW4gcGxhY2Ugb2YgVGV4dEVuY29kZSBhcyB0aGUgYXBpIGlzIG5vdCB5ZXRcbi8vIHdlbGwgc3VwcG9ydGVkOiBodHRwczovL2Nhbml1c2UuY29tLyNzZWFyY2g9VGV4dEVuY29kZXJcbmV4cG9ydCBmdW5jdGlvbiB0ZXh0RW5jb2RlTGl0ZShzdHI6IHN0cmluZykge1xuICBjb25zdCBidWYgPSBuZXcgQXJyYXlCdWZmZXIoc3RyLmxlbmd0aCk7XG4gIGNvbnN0IGJ1ZlZpZXcgPSBuZXcgVWludDhBcnJheShidWYpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgYnVmVmlld1tpXSA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICB9XG4gIHJldHVybiBidWZWaWV3O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENyeXB0byB7XG4gIC8qKlxuICAgKiBHZW5lcmF0ZSBhIHJhbmRvbSBzdHJpbmdcbiAgICovXG4gIGdlbmVyYXRlUmFuZG9tKHNpemU6IG51bWJlcik6IHN0cmluZztcbiAgLyoqXG4gICAqIENvbXB1dGUgdGhlIFNIQTI1NiBvZiBhIGdpdmVuIGNvZGUuXG4gICAqIFRoaXMgaXMgdXNlZnVsIHdoZW4gdXNpbmcgUEtDRS5cbiAgICovXG4gIGRlcml2ZUNoYWxsZW5nZShjb2RlOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz47XG59XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgaW1wbGVtZW50YXRpb24gb2YgdGhlIGBDcnlwdG9gIGludGVyZmFjZS5cbiAqIFRoaXMgdXNlcyB0aGUgY2FwYWJpbGl0aWVzIG9mIHRoZSBicm93c2VyLlxuICovXG5leHBvcnQgY2xhc3MgRGVmYXVsdENyeXB0byBpbXBsZW1lbnRzIENyeXB0byB7XG4gIGdlbmVyYXRlUmFuZG9tKHNpemU6IG51bWJlcikge1xuICAgIGNvbnN0IGJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgIGlmIChIQVNfQ1JZUFRPKSB7XG4gICAgICB3aW5kb3cuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhidWZmZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBmYWxsIGJhY2sgdG8gTWF0aC5yYW5kb20oKSBpZiBub3RoaW5nIGVsc2UgaXMgYXZhaWxhYmxlXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkgKz0gMSkge1xuICAgICAgICBidWZmZXJbaV0gPSAoTWF0aC5yYW5kb20oKSAqIENIQVJTRVQubGVuZ3RoKSB8IDA7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBidWZmZXJUb1N0cmluZyhidWZmZXIpO1xuICB9XG5cbiAgZGVyaXZlQ2hhbGxlbmdlKGNvZGU6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgaWYgKGNvZGUubGVuZ3RoIDwgNDMgfHwgY29kZS5sZW5ndGggPiAxMjgpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgQXBwQXV0aEVycm9yKCdJbnZhbGlkIGNvZGUgbGVuZ3RoLicpKTtcbiAgICB9XG4gICAgaWYgKCFIQVNfU1VCVExFX0NSWVBUTykge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBBcHBBdXRoRXJyb3IoJ3dpbmRvdy5jcnlwdG8uc3VidGxlIGlzIHVuYXZhaWxhYmxlLicpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY3J5cHRvLnN1YnRsZS5kaWdlc3QoJ1NIQS0yNTYnLCB0ZXh0RW5jb2RlTGl0ZShjb2RlKSkudGhlbihidWZmZXIgPT4ge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZSh1cmxTYWZlKG5ldyBVaW50OEFycmF5KGJ1ZmZlcikpKTtcbiAgICAgIH0sIGVycm9yID0+IHJlamVjdChlcnJvcikpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/crypto_utils.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/errors.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/errors.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppAuthError = void 0;\n/**\n * Represents the AppAuthError type.\n */\nvar AppAuthError = /** @class */ (function () {\n    function AppAuthError(message, extras) {\n        this.message = message;\n        this.extras = extras;\n    }\n    return AppAuthError;\n}());\nexports.AppAuthError = AppAuthError;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7OztHQVlHOzs7QUFFSDs7R0FFRztBQUNIO0lBQ0Usc0JBQW1CLE9BQWUsRUFBUyxNQUFZO1FBQXBDLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFBUyxXQUFNLEdBQU4sTUFBTSxDQUFNO0lBQUcsQ0FBQztJQUM3RCxtQkFBQztBQUFELENBQUMsQUFGRCxJQUVDO0FBRlksb0NBQVkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBBcHBBdXRoRXJyb3IgdHlwZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEFwcEF1dGhFcnJvciB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBtZXNzYWdlOiBzdHJpbmcsIHB1YmxpYyBleHRyYXM/OiBhbnkpIHt9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BvcGVuaWQvYXBwYXV0aC9idWlsdC9lcnJvcnMuanM/MTE3NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQG9wZW5pZC9hcHBhdXRoL2J1aWx0L2Vycm9ycy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHRcbiAqIGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGVcbiAqIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyXG4gKiBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFwcEF1dGhFcnJvciA9IHZvaWQgMDtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgQXBwQXV0aEVycm9yIHR5cGUuXG4gKi9cbnZhciBBcHBBdXRoRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQXBwQXV0aEVycm9yKG1lc3NhZ2UsIGV4dHJhcykge1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLmV4dHJhcyA9IGV4dHJhcztcbiAgICB9XG4gICAgcmV0dXJuIEFwcEF1dGhFcnJvcjtcbn0oKSk7XG5leHBvcnRzLkFwcEF1dGhFcnJvciA9IEFwcEF1dGhFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVpYSnliM0p6TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2YzNKakwyVnljbTl5Y3k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU8wRkJRVUU3T3pzN096czdPenM3T3p0SFFWbEhPenM3UVVGRlNEczdSMEZGUnp0QlFVTklPMGxCUTBVc2MwSkJRVzFDTEU5QlFXVXNSVUZCVXl4TlFVRlpPMUZCUVhCRExGbEJRVThzUjBGQlVDeFBRVUZQTEVOQlFWRTdVVUZCVXl4WFFVRk5MRWRCUVU0c1RVRkJUU3hEUVVGTk8wbEJRVWNzUTBGQlF6dEpRVU0zUkN4dFFrRkJRenRCUVVGRUxFTkJRVU1zUVVGR1JDeEpRVVZETzBGQlJsa3NiME5CUVZraUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLbHh1SUNvZ1EyOXdlWEpwWjJoMElESXdNVGNnUjI5dloyeGxJRWx1WXk1Y2JpQXFYRzRnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUIwYUdVZ1FYQmhZMmhsSUV4cFkyVnVjMlVzSUZabGNuTnBiMjRnTWk0d0lDaDBhR1VnWENKTWFXTmxibk5sWENJcE95QjViM1VnYldGNUlHNXZkQ0IxYzJVZ2RHaHBjeUJtYVd4bElHVjRZMlZ3ZEZ4dUlDb2dhVzRnWTI5dGNHeHBZVzVqWlNCM2FYUm9JSFJvWlNCTWFXTmxibk5sTGlCWmIzVWdiV0Y1SUc5aWRHRnBiaUJoSUdOdmNIa2diMllnZEdobElFeHBZMlZ1YzJVZ1lYUmNiaUFxWEc0Z0tpQm9kSFJ3T2k4dmQzZDNMbUZ3WVdOb1pTNXZjbWN2YkdsalpXNXpaWE12VEVsRFJVNVRSUzB5TGpCY2JpQXFYRzRnS2lCVmJteGxjM01nY21WeGRXbHlaV1FnWW5rZ1lYQndiR2xqWVdKc1pTQnNZWGNnYjNJZ1lXZHlaV1ZrSUhSdklHbHVJSGR5YVhScGJtY3NJSE52Wm5SM1lYSmxJR1JwYzNSeWFXSjFkR1ZrSUhWdVpHVnlJSFJvWlZ4dUlDb2dUR2xqWlc1elpTQnBjeUJrYVhOMGNtbGlkWFJsWkNCdmJpQmhiaUJjSWtGVElFbFRYQ0lnUWtGVFNWTXNJRmRKVkVoUFZWUWdWMEZTVWtGT1ZFbEZVeUJQVWlCRFQwNUVTVlJKVDA1VElFOUdJRUZPV1NCTFNVNUVMQ0JsYVhSb1pYSmNiaUFxSUdWNGNISmxjM01nYjNJZ2FXMXdiR2xsWkM0Z1UyVmxJSFJvWlNCTWFXTmxibk5sSUdadmNpQjBhR1VnYzNCbFkybG1hV01nYkdGdVozVmhaMlVnWjI5MlpYSnVhVzVuSUhCbGNtMXBjM05wYjI1eklHRnVaRnh1SUNvZ2JHbHRhWFJoZEdsdmJuTWdkVzVrWlhJZ2RHaGxJRXhwWTJWdWMyVXVYRzRnS2k5Y2JseHVMeW9xWEc0Z0tpQlNaWEJ5WlhObGJuUnpJSFJvWlNCQmNIQkJkWFJvUlhKeWIzSWdkSGx3WlM1Y2JpQXFMMXh1Wlhod2IzSjBJR05zWVhOeklFRndjRUYxZEdoRmNuSnZjaUI3WEc0Z0lHTnZibk4wY25WamRHOXlLSEIxWW14cFl5QnRaWE56WVdkbE9pQnpkSEpwYm1jc0lIQjFZbXhwWXlCbGVIUnlZWE0vT2lCaGJua3BJSHQ5WEc1OVhHNGlYWDA9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/errors.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/flags.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/flags.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IS_PROFILE = exports.IS_LOG = void 0;\n/* Global flags that control the behavior of App Auth JS. */\n/* Logging turned on ? */\nexports.IS_LOG = true;\n/* Profiling turned on ? */\nexports.IS_PROFILE = false;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZmxhZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7R0FZRzs7O0FBRUgsNERBQTREO0FBRTVELHlCQUF5QjtBQUNaLFFBQUEsTUFBTSxHQUFHLElBQUksQ0FBQztBQUUzQiwyQkFBMkI7QUFDZCxRQUFBLFVBQVUsR0FBRyxLQUFLLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyogR2xvYmFsIGZsYWdzIHRoYXQgY29udHJvbCB0aGUgYmVoYXZpb3Igb2YgQXBwIEF1dGggSlMuICovXG5cbi8qIExvZ2dpbmcgdHVybmVkIG9uID8gKi9cbmV4cG9ydCBjb25zdCBJU19MT0cgPSB0cnVlO1xuXG4vKiBQcm9maWxpbmcgdHVybmVkIG9uID8gKi9cbmV4cG9ydCBjb25zdCBJU19QUk9GSUxFID0gZmFsc2U7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BvcGVuaWQvYXBwYXV0aC9idWlsdC9mbGFncy5qcz80ZTEyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQG9wZW5pZC9hcHBhdXRoL2J1aWx0L2ZsYWdzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSVNfUFJPRklMRSA9IGV4cG9ydHMuSVNfTE9HID0gdm9pZCAwO1xuLyogR2xvYmFsIGZsYWdzIHRoYXQgY29udHJvbCB0aGUgYmVoYXZpb3Igb2YgQXBwIEF1dGggSlMuICovXG4vKiBMb2dnaW5nIHR1cm5lZCBvbiA/ICovXG5leHBvcnRzLklTX0xPRyA9IHRydWU7XG4vKiBQcm9maWxpbmcgdHVybmVkIG9uID8gKi9cbmV4cG9ydHMuSVNfUFJPRklMRSA9IGZhbHNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWm14aFozTXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12Wm14aFozTXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQk96czdPenM3T3pzN096czdSMEZaUnpzN08wRkJSVWdzTkVSQlFUUkVPMEZCUlRWRUxIbENRVUY1UWp0QlFVTmFMRkZCUVVFc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF6dEJRVVV6UWl3eVFrRkJNa0k3UVVGRFpDeFJRVUZCTEZWQlFWVXNSMEZCUnl4TFFVRkxMRU5CUVVNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLbHh1SUNvZ1EyOXdlWEpwWjJoMElESXdNVGNnUjI5dloyeGxJRWx1WXk1Y2JpQXFYRzRnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUIwYUdVZ1FYQmhZMmhsSUV4cFkyVnVjMlVzSUZabGNuTnBiMjRnTWk0d0lDaDBhR1VnWENKTWFXTmxibk5sWENJcE95QjViM1VnYldGNUlHNXZkQ0IxYzJVZ2RHaHBjeUJtYVd4bElHVjRZMlZ3ZEZ4dUlDb2dhVzRnWTI5dGNHeHBZVzVqWlNCM2FYUm9JSFJvWlNCTWFXTmxibk5sTGlCWmIzVWdiV0Y1SUc5aWRHRnBiaUJoSUdOdmNIa2diMllnZEdobElFeHBZMlZ1YzJVZ1lYUmNiaUFxWEc0Z0tpQm9kSFJ3T2k4dmQzZDNMbUZ3WVdOb1pTNXZjbWN2YkdsalpXNXpaWE12VEVsRFJVNVRSUzB5TGpCY2JpQXFYRzRnS2lCVmJteGxjM01nY21WeGRXbHlaV1FnWW5rZ1lYQndiR2xqWVdKc1pTQnNZWGNnYjNJZ1lXZHlaV1ZrSUhSdklHbHVJSGR5YVhScGJtY3NJSE52Wm5SM1lYSmxJR1JwYzNSeWFXSjFkR1ZrSUhWdVpHVnlJSFJvWlZ4dUlDb2dUR2xqWlc1elpTQnBjeUJrYVhOMGNtbGlkWFJsWkNCdmJpQmhiaUJjSWtGVElFbFRYQ0lnUWtGVFNWTXNJRmRKVkVoUFZWUWdWMEZTVWtGT1ZFbEZVeUJQVWlCRFQwNUVTVlJKVDA1VElFOUdJRUZPV1NCTFNVNUVMQ0JsYVhSb1pYSmNiaUFxSUdWNGNISmxjM01nYjNJZ2FXMXdiR2xsWkM0Z1UyVmxJSFJvWlNCTWFXTmxibk5sSUdadmNpQjBhR1VnYzNCbFkybG1hV01nYkdGdVozVmhaMlVnWjI5MlpYSnVhVzVuSUhCbGNtMXBjM05wYjI1eklHRnVaRnh1SUNvZ2JHbHRhWFJoZEdsdmJuTWdkVzVrWlhJZ2RHaGxJRXhwWTJWdWMyVXVYRzRnS2k5Y2JseHVMeW9nUjJ4dlltRnNJR1pzWVdkeklIUm9ZWFFnWTI5dWRISnZiQ0IwYUdVZ1ltVm9ZWFpwYjNJZ2IyWWdRWEJ3SUVGMWRHZ2dTbE11SUNvdlhHNWNiaThxSUV4dloyZHBibWNnZEhWeWJtVmtJRzl1SUQ4Z0tpOWNibVY0Y0c5eWRDQmpiMjV6ZENCSlUxOU1UMGNnUFNCMGNuVmxPMXh1WEc0dktpQlFjbTltYVd4cGJtY2dkSFZ5Ym1Wa0lHOXVJRDhnS2k5Y2JtVjRjRzl5ZENCamIyNXpkQ0JKVTE5UVVrOUdTVXhGSUQwZ1ptRnNjMlU3WEc0aVhYMD0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/flags.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/index.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/index.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./authorization_request */ \"../../node_modules/@openid/appauth/built/authorization_request.js\"), exports);\n__exportStar(__webpack_require__(/*! ./authorization_request_handler */ \"../../node_modules/@openid/appauth/built/authorization_request_handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./authorization_response */ \"../../node_modules/@openid/appauth/built/authorization_response.js\"), exports);\n__exportStar(__webpack_require__(/*! ./authorization_service_configuration */ \"../../node_modules/@openid/appauth/built/authorization_service_configuration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./crypto_utils */ \"../../node_modules/@openid/appauth/built/crypto_utils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"../../node_modules/@openid/appauth/built/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./flags */ \"../../node_modules/@openid/appauth/built/flags.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"../../node_modules/@openid/appauth/built/logger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./query_string_utils */ \"../../node_modules/@openid/appauth/built/query_string_utils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./redirect_based_handler */ \"../../node_modules/@openid/appauth/built/redirect_based_handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./revoke_token_request */ \"../../node_modules/@openid/appauth/built/revoke_token_request.js\"), exports);\n__exportStar(__webpack_require__(/*! ./storage */ \"../../node_modules/@openid/appauth/built/storage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./token_request */ \"../../node_modules/@openid/appauth/built/token_request.js\"), exports);\n__exportStar(__webpack_require__(/*! ./token_request_handler */ \"../../node_modules/@openid/appauth/built/token_request_handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./token_response */ \"../../node_modules/@openid/appauth/built/token_response.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"../../node_modules/@openid/appauth/built/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./xhr */ \"../../node_modules/@openid/appauth/built/xhr.js\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMERBQXdDO0FBQ3hDLGtFQUFnRDtBQUNoRCwyREFBeUM7QUFDekMsd0VBQXNEO0FBQ3RELGlEQUErQjtBQUMvQiwyQ0FBeUI7QUFDekIsMENBQXdCO0FBQ3hCLDJDQUF5QjtBQUN6Qix1REFBcUM7QUFDckMsMkRBQXlDO0FBQ3pDLHlEQUF1QztBQUN2Qyw0Q0FBMEI7QUFDMUIsa0RBQWdDO0FBQ2hDLDBEQUF3QztBQUN4QyxtREFBaUM7QUFDakMsMENBQXdCO0FBQ3hCLHdDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYXV0aG9yaXphdGlvbl9yZXF1ZXN0JztcbmV4cG9ydCAqIGZyb20gJy4vYXV0aG9yaXphdGlvbl9yZXF1ZXN0X2hhbmRsZXInO1xuZXhwb3J0ICogZnJvbSAnLi9hdXRob3JpemF0aW9uX3Jlc3BvbnNlJztcbmV4cG9ydCAqIGZyb20gJy4vYXV0aG9yaXphdGlvbl9zZXJ2aWNlX2NvbmZpZ3VyYXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9jcnlwdG9fdXRpbHMnO1xuZXhwb3J0ICogZnJvbSAnLi9lcnJvcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9mbGFncyc7XG5leHBvcnQgKiBmcm9tICcuL2xvZ2dlcic7XG5leHBvcnQgKiBmcm9tICcuL3F1ZXJ5X3N0cmluZ191dGlscyc7XG5leHBvcnQgKiBmcm9tICcuL3JlZGlyZWN0X2Jhc2VkX2hhbmRsZXInO1xuZXhwb3J0ICogZnJvbSAnLi9yZXZva2VfdG9rZW5fcmVxdWVzdCc7XG5leHBvcnQgKiBmcm9tICcuL3N0b3JhZ2UnO1xuZXhwb3J0ICogZnJvbSAnLi90b2tlbl9yZXF1ZXN0JztcbmV4cG9ydCAqIGZyb20gJy4vdG9rZW5fcmVxdWVzdF9oYW5kbGVyJztcbmV4cG9ydCAqIGZyb20gJy4vdG9rZW5fcmVzcG9uc2UnO1xuZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL3hocic7XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BvcGVuaWQvYXBwYXV0aC9idWlsdC9pbmRleC5qcz8yZGEyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLGtHQUF5QjtBQUM5QyxhQUFhLG1CQUFPLENBQUMsa0hBQWlDO0FBQ3RELGFBQWEsbUJBQU8sQ0FBQyxvR0FBMEI7QUFDL0MsYUFBYSxtQkFBTyxDQUFDLDhIQUF1QztBQUM1RCxhQUFhLG1CQUFPLENBQUMsZ0ZBQWdCO0FBQ3JDLGFBQWEsbUJBQU8sQ0FBQyxvRUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsa0VBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLG9FQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw0RkFBc0I7QUFDM0MsYUFBYSxtQkFBTyxDQUFDLG9HQUEwQjtBQUMvQyxhQUFhLG1CQUFPLENBQUMsZ0dBQXdCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxzRUFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsa0ZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyxrR0FBeUI7QUFDOUMsYUFBYSxtQkFBTyxDQUFDLG9GQUFrQjtBQUN2QyxhQUFhLG1CQUFPLENBQUMsa0VBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLDhEQUFPO0FBQzVCLDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQG9wZW5pZC9hcHBhdXRoL2J1aWx0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hdXRob3JpemF0aW9uX3JlcXVlc3RcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2F1dGhvcml6YXRpb25fcmVxdWVzdF9oYW5kbGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hdXRob3JpemF0aW9uX3Jlc3BvbnNlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hdXRob3JpemF0aW9uX3NlcnZpY2VfY29uZmlndXJhdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3J5cHRvX3V0aWxzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lcnJvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2ZsYWdzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3F1ZXJ5X3N0cmluZ191dGlsc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmVkaXJlY3RfYmFzZWRfaGFuZGxlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmV2b2tlX3Rva2VuX3JlcXVlc3RcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N0b3JhZ2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Rva2VuX3JlcXVlc3RcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Rva2VuX3JlcXVlc3RfaGFuZGxlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdG9rZW5fcmVzcG9uc2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi94aHJcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3T3pzN096czdPenM3TzBGQlFVRXNNRVJCUVhkRE8wRkJRM2hETEd0RlFVRm5SRHRCUVVOb1JDd3lSRUZCZVVNN1FVRkRla01zZDBWQlFYTkVPMEZCUTNSRUxHbEVRVUVyUWp0QlFVTXZRaXd5UTBGQmVVSTdRVUZEZWtJc01FTkJRWGRDTzBGQlEzaENMREpEUVVGNVFqdEJRVU42UWl4MVJFRkJjVU03UVVGRGNrTXNNa1JCUVhsRE8wRkJRM3BETEhsRVFVRjFRenRCUVVOMlF5dzBRMEZCTUVJN1FVRkRNVUlzYTBSQlFXZERPMEZCUTJoRExEQkVRVUYzUXp0QlFVTjRReXh0UkVGQmFVTTdRVUZEYWtNc01FTkJRWGRDTzBGQlEzaENMSGREUVVGelFpSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVY0Y0c5eWRDQXFJR1p5YjIwZ0p5NHZZWFYwYUc5eWFYcGhkR2x2Ymw5eVpYRjFaWE4wSnp0Y2JtVjRjRzl5ZENBcUlHWnliMjBnSnk0dllYVjBhRzl5YVhwaGRHbHZibDl5WlhGMVpYTjBYMmhoYm1Sc1pYSW5PMXh1Wlhod2IzSjBJQ29nWm5KdmJTQW5MaTloZFhSb2IzSnBlbUYwYVc5dVgzSmxjM0J2Ym5ObEp6dGNibVY0Y0c5eWRDQXFJR1p5YjIwZ0p5NHZZWFYwYUc5eWFYcGhkR2x2Ymw5elpYSjJhV05sWDJOdmJtWnBaM1Z5WVhScGIyNG5PMXh1Wlhod2IzSjBJQ29nWm5KdmJTQW5MaTlqY25sd2RHOWZkWFJwYkhNbk8xeHVaWGh3YjNKMElDb2dabkp2YlNBbkxpOWxjbkp2Y25Nbk8xeHVaWGh3YjNKMElDb2dabkp2YlNBbkxpOW1iR0ZuY3ljN1hHNWxlSEJ2Y25RZ0tpQm1jbTl0SUNjdUwyeHZaMmRsY2ljN1hHNWxlSEJ2Y25RZ0tpQm1jbTl0SUNjdUwzRjFaWEo1WDNOMGNtbHVaMTkxZEdsc2N5YzdYRzVsZUhCdmNuUWdLaUJtY205dElDY3VMM0psWkdseVpXTjBYMkpoYzJWa1gyaGhibVJzWlhJbk8xeHVaWGh3YjNKMElDb2dabkp2YlNBbkxpOXlaWFp2YTJWZmRHOXJaVzVmY21WeGRXVnpkQ2M3WEc1bGVIQnZjblFnS2lCbWNtOXRJQ2N1TDNOMGIzSmhaMlVuTzF4dVpYaHdiM0owSUNvZ1puSnZiU0FuTGk5MGIydGxibDl5WlhGMVpYTjBKenRjYm1WNGNHOXlkQ0FxSUdaeWIyMGdKeTR2ZEc5clpXNWZjbVZ4ZFdWemRGOW9ZVzVrYkdWeUp6dGNibVY0Y0c5eWRDQXFJR1p5YjIwZ0p5NHZkRzlyWlc1ZmNtVnpjRzl1YzJVbk8xeHVaWGh3YjNKMElDb2dabkp2YlNBbkxpOTBlWEJsY3ljN1hHNWxlSEJ2Y25RZ0tpQm1jbTl0SUNjdUwzaG9jaWM3WEc0aVhYMD0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/index.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/logger.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/logger.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.profile = exports.log = void 0;\nvar flags_1 = __webpack_require__(/*! ./flags */ \"../../node_modules/@openid/appauth/built/flags.js\");\nfunction log(message) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (flags_1.IS_LOG) {\n        var length_1 = args ? args.length : 0;\n        if (length_1 > 0) {\n            console.log.apply(console, __spreadArray([message], args));\n        }\n        else {\n            console.log(message);\n        }\n    }\n}\nexports.log = log;\n;\n// check to see if native support for profiling is available.\nvar NATIVE_PROFILE_SUPPORT = typeof window !== 'undefined' && !!window.performance && !!console.profile;\n/**\n * A decorator that can profile a function.\n */\nfunction profile(target, propertyKey, descriptor) {\n    if (flags_1.IS_PROFILE) {\n        return performProfile(target, propertyKey, descriptor);\n    }\n    else {\n        // return as-is\n        return descriptor;\n    }\n}\nexports.profile = profile;\nfunction performProfile(target, propertyKey, descriptor) {\n    var originalCallable = descriptor.value;\n    // name must exist\n    var name = originalCallable.name;\n    if (!name) {\n        name = 'anonymous function';\n    }\n    if (NATIVE_PROFILE_SUPPORT) {\n        descriptor.value = function (args) {\n            console.profile(name);\n            var startTime = window.performance.now();\n            var result = originalCallable.call.apply(originalCallable, __spreadArray([this || window], args));\n            var duration = window.performance.now() - startTime;\n            console.log(name + \" took \" + duration + \" ms\");\n            console.profileEnd();\n            return result;\n        };\n    }\n    else {\n        descriptor.value = function (args) {\n            log(\"Profile start \" + name);\n            var start = Date.now();\n            var result = originalCallable.call.apply(originalCallable, __spreadArray([this || window], args));\n            var duration = Date.now() - start;\n            log(\"Profile end \" + name + \" took \" + duration + \" ms.\");\n            return result;\n        };\n    }\n    return descriptor;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7OztHQVlHOzs7Ozs7OztBQUVILGlDQUEyQztBQUUzQyxTQUFnQixHQUFHLENBQUMsT0FBZTtJQUFFLGNBQWM7U0FBZCxVQUFjLEVBQWQscUJBQWMsRUFBZCxJQUFjO1FBQWQsNkJBQWM7O0lBQ2pELElBQUksY0FBTSxFQUFFO1FBQ1YsSUFBSSxRQUFNLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEMsSUFBSSxRQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ2QsT0FBTyxDQUFDLEdBQUcsT0FBWCxPQUFPLGlCQUFLLE9BQU8sR0FBSyxJQUFJLEdBQUU7U0FDL0I7YUFBTTtZQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDdEI7S0FDRjtBQUNILENBQUM7QUFURCxrQkFTQztBQUFBLENBQUM7QUFFRiw2REFBNkQ7QUFDN0QsSUFBTSxzQkFBc0IsR0FDeEIsT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBRS9FOztHQUVHO0FBQ0gsU0FBZ0IsT0FBTyxDQUFDLE1BQVcsRUFBRSxXQUFtQixFQUFFLFVBQThCO0lBQ3RGLElBQUksa0JBQVUsRUFBRTtRQUNkLE9BQU8sY0FBYyxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLENBQUM7S0FDeEQ7U0FBTTtRQUNMLGVBQWU7UUFDZixPQUFPLFVBQVUsQ0FBQztLQUNuQjtBQUNILENBQUM7QUFQRCwwQkFPQztBQUVELFNBQVMsY0FBYyxDQUNuQixNQUFXLEVBQUUsV0FBbUIsRUFBRSxVQUE4QjtJQUNsRSxJQUFJLGdCQUFnQixHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUM7SUFDeEMsa0JBQWtCO0lBQ2xCLElBQUksSUFBSSxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQztJQUNqQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsSUFBSSxHQUFHLG9CQUFvQixDQUFDO0tBQzdCO0lBQ0QsSUFBSSxzQkFBc0IsRUFBRTtRQUMxQixVQUFVLENBQUMsS0FBSyxHQUFHLFVBQVMsSUFBVztZQUNyQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RCLElBQUksU0FBUyxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDekMsSUFBSSxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxPQUFyQixnQkFBZ0IsaUJBQU0sSUFBSSxJQUFJLE1BQU0sR0FBSyxJQUFJLEVBQUMsQ0FBQztZQUM1RCxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLFNBQVMsQ0FBQztZQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFJLElBQUksY0FBUyxRQUFRLFFBQUssQ0FBQyxDQUFDO1lBQzNDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNyQixPQUFPLE1BQU0sQ0FBQztRQUNoQixDQUFDLENBQUM7S0FDSDtTQUFNO1FBQ0wsVUFBVSxDQUFDLEtBQUssR0FBRyxVQUFTLElBQVc7WUFDckMsR0FBRyxDQUFDLG1CQUFpQixJQUFNLENBQUMsQ0FBQztZQUM3QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDdkIsSUFBSSxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxPQUFyQixnQkFBZ0IsaUJBQU0sSUFBSSxJQUFJLE1BQU0sR0FBSyxJQUFJLEVBQUMsQ0FBQztZQUM1RCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsS0FBSyxDQUFDO1lBQ2xDLEdBQUcsQ0FBQyxpQkFBZSxJQUFJLGNBQVMsUUFBUSxTQUFNLENBQUMsQ0FBQztZQUNoRCxPQUFPLE1BQU0sQ0FBQztRQUNoQixDQUFDLENBQUM7S0FDSDtJQUNELE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtJU19MT0csIElTX1BST0ZJTEV9IGZyb20gJy4vZmxhZ3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9nKG1lc3NhZ2U6IHN0cmluZywgLi4uYXJnczogYW55W10pIHtcbiAgaWYgKElTX0xPRykge1xuICAgIGxldCBsZW5ndGggPSBhcmdzID8gYXJncy5sZW5ndGggOiAwO1xuICAgIGlmIChsZW5ndGggPiAwKSB7XG4gICAgICBjb25zb2xlLmxvZyhtZXNzYWdlLCAuLi5hcmdzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBjaGVjayB0byBzZWUgaWYgbmF0aXZlIHN1cHBvcnQgZm9yIHByb2ZpbGluZyBpcyBhdmFpbGFibGUuXG5jb25zdCBOQVRJVkVfUFJPRklMRV9TVVBQT1JUID1cbiAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAhIXdpbmRvdy5wZXJmb3JtYW5jZSAmJiAhIWNvbnNvbGUucHJvZmlsZTtcblxuLyoqXG4gKiBBIGRlY29yYXRvciB0aGF0IGNhbiBwcm9maWxlIGEgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm9maWxlKHRhcmdldDogYW55LCBwcm9wZXJ0eUtleTogc3RyaW5nLCBkZXNjcmlwdG9yOiBQcm9wZXJ0eURlc2NyaXB0b3IpIHtcbiAgaWYgKElTX1BST0ZJTEUpIHtcbiAgICByZXR1cm4gcGVyZm9ybVByb2ZpbGUodGFyZ2V0LCBwcm9wZXJ0eUtleSwgZGVzY3JpcHRvcik7XG4gIH0gZWxzZSB7XG4gICAgLy8gcmV0dXJuIGFzLWlzXG4gICAgcmV0dXJuIGRlc2NyaXB0b3I7XG4gIH1cbn1cblxuZnVuY3Rpb24gcGVyZm9ybVByb2ZpbGUoXG4gICAgdGFyZ2V0OiBhbnksIHByb3BlcnR5S2V5OiBzdHJpbmcsIGRlc2NyaXB0b3I6IFByb3BlcnR5RGVzY3JpcHRvcik6IFByb3BlcnR5RGVzY3JpcHRvciB7XG4gIGxldCBvcmlnaW5hbENhbGxhYmxlID0gZGVzY3JpcHRvci52YWx1ZTtcbiAgLy8gbmFtZSBtdXN0IGV4aXN0XG4gIGxldCBuYW1lID0gb3JpZ2luYWxDYWxsYWJsZS5uYW1lO1xuICBpZiAoIW5hbWUpIHtcbiAgICBuYW1lID0gJ2Fub255bW91cyBmdW5jdGlvbic7XG4gIH1cbiAgaWYgKE5BVElWRV9QUk9GSUxFX1NVUFBPUlQpIHtcbiAgICBkZXNjcmlwdG9yLnZhbHVlID0gZnVuY3Rpb24oYXJnczogYW55W10pIHtcbiAgICAgIGNvbnNvbGUucHJvZmlsZShuYW1lKTtcbiAgICAgIGxldCBzdGFydFRpbWUgPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KCk7XG4gICAgICBsZXQgcmVzdWx0ID0gb3JpZ2luYWxDYWxsYWJsZS5jYWxsKHRoaXMgfHwgd2luZG93LCAuLi5hcmdzKTtcbiAgICAgIGxldCBkdXJhdGlvbiA9IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICAgIGNvbnNvbGUubG9nKGAke25hbWV9IHRvb2sgJHtkdXJhdGlvbn0gbXNgKTtcbiAgICAgIGNvbnNvbGUucHJvZmlsZUVuZCgpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbihhcmdzOiBhbnlbXSkge1xuICAgICAgbG9nKGBQcm9maWxlIHN0YXJ0ICR7bmFtZX1gKTtcbiAgICAgIGxldCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgICBsZXQgcmVzdWx0ID0gb3JpZ2luYWxDYWxsYWJsZS5jYWxsKHRoaXMgfHwgd2luZG93LCAuLi5hcmdzKTtcbiAgICAgIGxldCBkdXJhdGlvbiA9IERhdGUubm93KCkgLSBzdGFydDtcbiAgICAgIGxvZyhgUHJvZmlsZSBlbmQgJHtuYW1lfSB0b29rICR7ZHVyYXRpb259IG1zLmApO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICB9XG4gIHJldHVybiBkZXNjcmlwdG9yO1xufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/logger.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/query_string_utils.js":
/*!*******************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/query_string_utils.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicQueryStringUtils = void 0;\nvar BasicQueryStringUtils = /** @class */ (function () {\n    function BasicQueryStringUtils() {\n    }\n    BasicQueryStringUtils.prototype.parse = function (input, useHash) {\n        if (useHash) {\n            return this.parseQueryString(input.hash);\n        }\n        else {\n            return this.parseQueryString(input.search);\n        }\n    };\n    BasicQueryStringUtils.prototype.parseQueryString = function (query) {\n        var result = {};\n        // if anything starts with ?, # or & remove it\n        query = query.trim().replace(/^(\\?|#|&)/, '');\n        var params = query.split('&');\n        for (var i = 0; i < params.length; i += 1) {\n            var param = params[i]; // looks something like a=b\n            var parts = param.split('=');\n            if (parts.length >= 2) {\n                var key = decodeURIComponent(parts.shift());\n                var value = parts.length > 0 ? parts.join('=') : null;\n                if (value) {\n                    result[key] = decodeURIComponent(value);\n                }\n            }\n        }\n        return result;\n    };\n    BasicQueryStringUtils.prototype.stringify = function (input) {\n        var encoded = [];\n        for (var key in input) {\n            if (input.hasOwnProperty(key) && input[key]) {\n                encoded.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(input[key]));\n            }\n        }\n        return encoded.join('&');\n    };\n    return BasicQueryStringUtils;\n}());\nexports.BasicQueryStringUtils = BasicQueryStringUtils;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnlfc3RyaW5nX3V0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3F1ZXJ5X3N0cmluZ191dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7OztHQVlHOzs7QUFjSDtJQUFBO0lBcUNBLENBQUM7SUFwQ0MscUNBQUssR0FBTCxVQUFNLEtBQW1CLEVBQUUsT0FBaUI7UUFDMUMsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUM7YUFBTTtZQUNMLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUM1QztJQUNILENBQUM7SUFFRCxnREFBZ0IsR0FBaEIsVUFBaUIsS0FBYTtRQUM1QixJQUFJLE1BQU0sR0FBYyxFQUFFLENBQUM7UUFDM0IsOENBQThDO1FBQzlDLEtBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUM5QyxJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDekMsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUUsMkJBQTJCO1lBQ25ELElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDN0IsSUFBSSxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtnQkFDckIsSUFBSSxHQUFHLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRyxDQUFDLENBQUM7Z0JBQzdDLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQ3RELElBQUksS0FBSyxFQUFFO29CQUNULE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDekM7YUFDRjtTQUNGO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELHlDQUFTLEdBQVQsVUFBVSxLQUFnQjtRQUN4QixJQUFJLE9BQU8sR0FBYSxFQUFFLENBQUM7UUFDM0IsS0FBSyxJQUFJLEdBQUcsSUFBSSxLQUFLLEVBQUU7WUFDckIsSUFBSSxLQUFLLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDM0MsT0FBTyxDQUFDLElBQUksQ0FBSSxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsU0FBSSxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUcsQ0FBQyxDQUFBO2FBQzdFO1NBQ0Y7UUFDRCxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FBQyxBQXJDRCxJQXFDQztBQXJDWSxzREFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtMb2NhdGlvbkxpa2UsIFN0cmluZ01hcH0gZnJvbSAnLi90eXBlcyc7XG5cblxuLyoqXG4gKiBRdWVyeSBTdHJpbmcgVXRpbGl0aWVzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFF1ZXJ5U3RyaW5nVXRpbHMge1xuICBzdHJpbmdpZnkoaW5wdXQ6IFN0cmluZ01hcCk6IHN0cmluZztcbiAgcGFyc2UocXVlcnk6IExvY2F0aW9uTGlrZSwgdXNlSGFzaD86IGJvb2xlYW4pOiBTdHJpbmdNYXA7XG4gIHBhcnNlUXVlcnlTdHJpbmcocXVlcnk6IHN0cmluZyk6IFN0cmluZ01hcDtcbn1cblxuZXhwb3J0IGNsYXNzIEJhc2ljUXVlcnlTdHJpbmdVdGlscyBpbXBsZW1lbnRzIFF1ZXJ5U3RyaW5nVXRpbHMge1xuICBwYXJzZShpbnB1dDogTG9jYXRpb25MaWtlLCB1c2VIYXNoPzogYm9vbGVhbikge1xuICAgIGlmICh1c2VIYXNoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wYXJzZVF1ZXJ5U3RyaW5nKGlucHV0Lmhhc2gpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5wYXJzZVF1ZXJ5U3RyaW5nKGlucHV0LnNlYXJjaCk7XG4gICAgfVxuICB9XG5cbiAgcGFyc2VRdWVyeVN0cmluZyhxdWVyeTogc3RyaW5nKTogU3RyaW5nTWFwIHtcbiAgICBsZXQgcmVzdWx0OiBTdHJpbmdNYXAgPSB7fTtcbiAgICAvLyBpZiBhbnl0aGluZyBzdGFydHMgd2l0aCA/LCAjIG9yICYgcmVtb3ZlIGl0XG4gICAgcXVlcnkgPSBxdWVyeS50cmltKCkucmVwbGFjZSgvXihcXD98I3wmKS8sICcnKTtcbiAgICBsZXQgcGFyYW1zID0gcXVlcnkuc3BsaXQoJyYnKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhcmFtcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgbGV0IHBhcmFtID0gcGFyYW1zW2ldOyAgLy8gbG9va3Mgc29tZXRoaW5nIGxpa2UgYT1iXG4gICAgICBsZXQgcGFydHMgPSBwYXJhbS5zcGxpdCgnPScpO1xuICAgICAgaWYgKHBhcnRzLmxlbmd0aCA+PSAyKSB7XG4gICAgICAgIGxldCBrZXkgPSBkZWNvZGVVUklDb21wb25lbnQocGFydHMuc2hpZnQoKSEpO1xuICAgICAgICBsZXQgdmFsdWUgPSBwYXJ0cy5sZW5ndGggPiAwID8gcGFydHMuam9pbignPScpIDogbnVsbDtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBzdHJpbmdpZnkoaW5wdXQ6IFN0cmluZ01hcCkge1xuICAgIGxldCBlbmNvZGVkOiBzdHJpbmdbXSA9IFtdO1xuICAgIGZvciAobGV0IGtleSBpbiBpbnB1dCkge1xuICAgICAgaWYgKGlucHV0Lmhhc093blByb3BlcnR5KGtleSkgJiYgaW5wdXRba2V5XSkge1xuICAgICAgICBlbmNvZGVkLnB1c2goYCR7ZW5jb2RlVVJJQ29tcG9uZW50KGtleSl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KGlucHV0W2tleV0pfWApXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVkLmpvaW4oJyYnKTtcbiAgfVxufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/query_string_utils.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/redirect_based_handler.js":
/*!***********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/redirect_based_handler.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RedirectRequestHandler = void 0;\nvar authorization_request_1 = __webpack_require__(/*! ./authorization_request */ \"../../node_modules/@openid/appauth/built/authorization_request.js\");\nvar authorization_request_handler_1 = __webpack_require__(/*! ./authorization_request_handler */ \"../../node_modules/@openid/appauth/built/authorization_request_handler.js\");\nvar authorization_response_1 = __webpack_require__(/*! ./authorization_response */ \"../../node_modules/@openid/appauth/built/authorization_response.js\");\nvar crypto_utils_1 = __webpack_require__(/*! ./crypto_utils */ \"../../node_modules/@openid/appauth/built/crypto_utils.js\");\nvar logger_1 = __webpack_require__(/*! ./logger */ \"../../node_modules/@openid/appauth/built/logger.js\");\nvar query_string_utils_1 = __webpack_require__(/*! ./query_string_utils */ \"../../node_modules/@openid/appauth/built/query_string_utils.js\");\nvar storage_1 = __webpack_require__(/*! ./storage */ \"../../node_modules/@openid/appauth/built/storage.js\");\n/** key for authorization request. */\nvar authorizationRequestKey = function (handle) {\n    return handle + \"_appauth_authorization_request\";\n};\n/** key for authorization service configuration */\nvar authorizationServiceConfigurationKey = function (handle) {\n    return handle + \"_appauth_authorization_service_configuration\";\n};\n/** key in local storage which represents the current authorization request. */\nvar AUTHORIZATION_REQUEST_HANDLE_KEY = 'appauth_current_authorization_request';\n/**\n * Represents an AuthorizationRequestHandler which uses a standard\n * redirect based code flow.\n */\nvar RedirectRequestHandler = /** @class */ (function (_super) {\n    __extends(RedirectRequestHandler, _super);\n    function RedirectRequestHandler(\n    // use the provided storage backend\n    // or initialize local storage with the default storage backend which\n    // uses window.localStorage\n    storageBackend, utils, locationLike, crypto) {\n        if (storageBackend === void 0) { storageBackend = new storage_1.LocalStorageBackend(); }\n        if (utils === void 0) { utils = new query_string_utils_1.BasicQueryStringUtils(); }\n        if (locationLike === void 0) { locationLike = window.location; }\n        if (crypto === void 0) { crypto = new crypto_utils_1.DefaultCrypto(); }\n        var _this = _super.call(this, utils, crypto) || this;\n        _this.storageBackend = storageBackend;\n        _this.locationLike = locationLike;\n        return _this;\n    }\n    RedirectRequestHandler.prototype.performAuthorizationRequest = function (configuration, request) {\n        var _this = this;\n        var handle = this.crypto.generateRandom(10);\n        // before you make request, persist all request related data in local storage.\n        var persisted = Promise.all([\n            this.storageBackend.setItem(AUTHORIZATION_REQUEST_HANDLE_KEY, handle),\n            // Calling toJson() adds in the code & challenge when possible\n            request.toJson().then(function (result) {\n                return _this.storageBackend.setItem(authorizationRequestKey(handle), JSON.stringify(result));\n            }),\n            this.storageBackend.setItem(authorizationServiceConfigurationKey(handle), JSON.stringify(configuration.toJson())),\n        ]);\n        persisted.then(function () {\n            // make the redirect request\n            var url = _this.buildRequestUrl(configuration, request);\n            logger_1.log('Making a request to ', request, url);\n            _this.locationLike.assign(url);\n        });\n    };\n    /**\n     * Attempts to introspect the contents of storage backend and completes the\n     * request.\n     */\n    RedirectRequestHandler.prototype.completeAuthorizationRequest = function () {\n        var _this = this;\n        // TODO(rahulrav@): handle authorization errors.\n        return this.storageBackend.getItem(AUTHORIZATION_REQUEST_HANDLE_KEY).then(function (handle) {\n            if (handle) {\n                // we have a pending request.\n                // fetch authorization request, and check state\n                return _this.storageBackend\n                    .getItem(authorizationRequestKey(handle))\n                    // requires a corresponding instance of result\n                    // TODO(rahulrav@): check for inconsitent state here\n                    .then(function (result) { return JSON.parse(result); })\n                    .then(function (json) { return new authorization_request_1.AuthorizationRequest(json); })\n                    .then(function (request) {\n                    // check redirect_uri and state\n                    var currentUri = \"\" + _this.locationLike.origin + _this.locationLike.pathname;\n                    var queryParams = _this.utils.parse(_this.locationLike, true /* use hash */);\n                    var state = queryParams['state'];\n                    var code = queryParams['code'];\n                    var error = queryParams['error'];\n                    logger_1.log('Potential authorization request ', currentUri, queryParams, state, code, error);\n                    var shouldNotify = state === request.state;\n                    var authorizationResponse = null;\n                    var authorizationError = null;\n                    if (shouldNotify) {\n                        if (error) {\n                            // get additional optional info.\n                            var errorUri = queryParams['error_uri'];\n                            var errorDescription = queryParams['error_description'];\n                            authorizationError = new authorization_response_1.AuthorizationError({\n                                error: error,\n                                error_description: errorDescription,\n                                error_uri: errorUri,\n                                state: state\n                            });\n                        }\n                        else {\n                            authorizationResponse = new authorization_response_1.AuthorizationResponse({ code: code, state: state });\n                        }\n                        // cleanup state\n                        return Promise\n                            .all([\n                            _this.storageBackend.removeItem(AUTHORIZATION_REQUEST_HANDLE_KEY),\n                            _this.storageBackend.removeItem(authorizationRequestKey(handle)),\n                            _this.storageBackend.removeItem(authorizationServiceConfigurationKey(handle))\n                        ])\n                            .then(function () {\n                            logger_1.log('Delivering authorization response');\n                            return {\n                                request: request,\n                                response: authorizationResponse,\n                                error: authorizationError\n                            };\n                        });\n                    }\n                    else {\n                        logger_1.log('Mismatched request (state and request_uri) dont match.');\n                        return Promise.resolve(null);\n                    }\n                });\n            }\n            else {\n                return null;\n            }\n        });\n    };\n    return RedirectRequestHandler;\n}(authorization_request_handler_1.AuthorizationRequestHandler));\nexports.RedirectRequestHandler = RedirectRequestHandler;\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/redirect_based_handler.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/revoke_token_request.js":
/*!*********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/revoke_token_request.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RevokeTokenRequest = void 0;\n/**\n * Represents a revoke token request.\n * For more information look at:\n * https://tools.ietf.org/html/rfc7009#section-2.1\n */\nvar RevokeTokenRequest = /** @class */ (function () {\n    function RevokeTokenRequest(request) {\n        this.token = request.token;\n        this.tokenTypeHint = request.token_type_hint;\n        this.clientId = request.client_id;\n        this.clientSecret = request.client_secret;\n    }\n    /**\n     * Serializes a TokenRequest to a JavaScript object.\n     */\n    RevokeTokenRequest.prototype.toJson = function () {\n        var json = { token: this.token };\n        if (this.tokenTypeHint) {\n            json['token_type_hint'] = this.tokenTypeHint;\n        }\n        if (this.clientId) {\n            json['client_id'] = this.clientId;\n        }\n        if (this.clientSecret) {\n            json['client_secret'] = this.clientSecret;\n        }\n        return json;\n    };\n    RevokeTokenRequest.prototype.toStringMap = function () {\n        var json = this.toJson();\n        // :(\n        return json;\n    };\n    return RevokeTokenRequest;\n}());\nexports.RevokeTokenRequest = RevokeTokenRequest;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV2b2tlX3Rva2VuX3JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcmV2b2tlX3Rva2VuX3JlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBK0JBOzs7O0dBSUc7QUFDSDtJQU1FLDRCQUFZLE9BQStCO1FBQ3pDLElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUM7UUFDN0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQztJQUM1QyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxtQ0FBTSxHQUFOO1FBQ0UsSUFBSSxJQUFJLEdBQTJCLEVBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUMsQ0FBQztRQUN2RCxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztTQUM5QztRQUNELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUNuQztRQUNELElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztTQUMzQztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELHdDQUFXLEdBQVg7UUFDRSxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDekIsS0FBSztRQUNMLE9BQVEsSUFBWSxDQUFDO0lBQ3ZCLENBQUM7SUFDSCx5QkFBQztBQUFELENBQUMsQUFuQ0QsSUFtQ0M7QUFuQ1ksZ0RBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTdHJpbmdNYXB9IGZyb20gJy4vdHlwZXMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBTdXBwb3J0ZWQgdG9rZW4gdHlwZXNcbiAqL1xuZXhwb3J0IHR5cGUgVG9rZW5UeXBlSGludCA9ICdyZWZyZXNoX3Rva2VuJ3wnYWNjZXNzX3Rva2VuJztcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBUb2tlbiBSZXF1ZXN0IGFzIEpTT04uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmV2b2tlVG9rZW5SZXF1ZXN0SnNvbiB7XG4gIHRva2VuOiBzdHJpbmc7XG4gIHRva2VuX3R5cGVfaGludD86IFRva2VuVHlwZUhpbnQ7XG4gIGNsaWVudF9pZD86IHN0cmluZztcbiAgY2xpZW50X3NlY3JldD86IHN0cmluZztcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgcmV2b2tlIHRva2VuIHJlcXVlc3QuXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBsb29rIGF0OlxuICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzcwMDkjc2VjdGlvbi0yLjFcbiAqL1xuZXhwb3J0IGNsYXNzIFJldm9rZVRva2VuUmVxdWVzdCB7XG4gIHRva2VuOiBzdHJpbmc7XG4gIHRva2VuVHlwZUhpbnQ6IFRva2VuVHlwZUhpbnR8dW5kZWZpbmVkO1xuICBjbGllbnRJZDogc3RyaW5nfHVuZGVmaW5lZDtcbiAgY2xpZW50U2VjcmV0OiBzdHJpbmd8dW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKHJlcXVlc3Q6IFJldm9rZVRva2VuUmVxdWVzdEpzb24pIHtcbiAgICB0aGlzLnRva2VuID0gcmVxdWVzdC50b2tlbjtcbiAgICB0aGlzLnRva2VuVHlwZUhpbnQgPSByZXF1ZXN0LnRva2VuX3R5cGVfaGludDtcbiAgICB0aGlzLmNsaWVudElkID0gcmVxdWVzdC5jbGllbnRfaWQ7XG4gICAgdGhpcy5jbGllbnRTZWNyZXQgPSByZXF1ZXN0LmNsaWVudF9zZWNyZXQ7XG4gIH1cblxuICAvKipcbiAgICogU2VyaWFsaXplcyBhIFRva2VuUmVxdWVzdCB0byBhIEphdmFTY3JpcHQgb2JqZWN0LlxuICAgKi9cbiAgdG9Kc29uKCk6IFJldm9rZVRva2VuUmVxdWVzdEpzb24ge1xuICAgIGxldCBqc29uOiBSZXZva2VUb2tlblJlcXVlc3RKc29uID0ge3Rva2VuOiB0aGlzLnRva2VufTtcbiAgICBpZiAodGhpcy50b2tlblR5cGVIaW50KSB7XG4gICAgICBqc29uWyd0b2tlbl90eXBlX2hpbnQnXSA9IHRoaXMudG9rZW5UeXBlSGludDtcbiAgICB9XG4gICAgaWYgKHRoaXMuY2xpZW50SWQpIHtcbiAgICAgIGpzb25bJ2NsaWVudF9pZCddID0gdGhpcy5jbGllbnRJZDtcbiAgICB9XG4gICAgaWYgKHRoaXMuY2xpZW50U2VjcmV0KSB7XG4gICAgICBqc29uWydjbGllbnRfc2VjcmV0J10gPSB0aGlzLmNsaWVudFNlY3JldDtcbiAgICB9XG4gICAgcmV0dXJuIGpzb247XG4gIH1cblxuICB0b1N0cmluZ01hcCgpOiBTdHJpbmdNYXAge1xuICAgIGxldCBqc29uID0gdGhpcy50b0pzb24oKTtcbiAgICAvLyA6KFxuICAgIHJldHVybiAoanNvbiBhcyBhbnkpO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BvcGVuaWQvYXBwYXV0aC9idWlsdC9yZXZva2VfdG9rZW5fcmVxdWVzdC5qcz9jMjJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMkNBQTJDIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9Ab3BlbmlkL2FwcGF1dGgvYnVpbHQvcmV2b2tlX3Rva2VuX3JlcXVlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmV2b2tlVG9rZW5SZXF1ZXN0ID0gdm9pZCAwO1xuLyoqXG4gKiBSZXByZXNlbnRzIGEgcmV2b2tlIHRva2VuIHJlcXVlc3QuXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBsb29rIGF0OlxuICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzcwMDkjc2VjdGlvbi0yLjFcbiAqL1xudmFyIFJldm9rZVRva2VuUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZXZva2VUb2tlblJlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICB0aGlzLnRva2VuID0gcmVxdWVzdC50b2tlbjtcbiAgICAgICAgdGhpcy50b2tlblR5cGVIaW50ID0gcmVxdWVzdC50b2tlbl90eXBlX2hpbnQ7XG4gICAgICAgIHRoaXMuY2xpZW50SWQgPSByZXF1ZXN0LmNsaWVudF9pZDtcbiAgICAgICAgdGhpcy5jbGllbnRTZWNyZXQgPSByZXF1ZXN0LmNsaWVudF9zZWNyZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlcmlhbGl6ZXMgYSBUb2tlblJlcXVlc3QgdG8gYSBKYXZhU2NyaXB0IG9iamVjdC5cbiAgICAgKi9cbiAgICBSZXZva2VUb2tlblJlcXVlc3QucHJvdG90eXBlLnRvSnNvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGpzb24gPSB7IHRva2VuOiB0aGlzLnRva2VuIH07XG4gICAgICAgIGlmICh0aGlzLnRva2VuVHlwZUhpbnQpIHtcbiAgICAgICAgICAgIGpzb25bJ3Rva2VuX3R5cGVfaGludCddID0gdGhpcy50b2tlblR5cGVIaW50O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNsaWVudElkKSB7XG4gICAgICAgICAgICBqc29uWydjbGllbnRfaWQnXSA9IHRoaXMuY2xpZW50SWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY2xpZW50U2VjcmV0KSB7XG4gICAgICAgICAgICBqc29uWydjbGllbnRfc2VjcmV0J10gPSB0aGlzLmNsaWVudFNlY3JldDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9O1xuICAgIFJldm9rZVRva2VuUmVxdWVzdC5wcm90b3R5cGUudG9TdHJpbmdNYXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBqc29uID0gdGhpcy50b0pzb24oKTtcbiAgICAgICAgLy8gOihcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfTtcbiAgICByZXR1cm4gUmV2b2tlVG9rZW5SZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuUmV2b2tlVG9rZW5SZXF1ZXN0ID0gUmV2b2tlVG9rZW5SZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pY21WMmIydGxYM1J2YTJWdVgzSmxjWFZsYzNRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk5emNtTXZjbVYyYjJ0bFgzUnZhMlZ1WDNKbGNYVmxjM1F1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN08wRkJLMEpCT3pzN08wZEJTVWM3UVVGRFNEdEpRVTFGTERSQ1FVRlpMRTlCUVN0Q08xRkJRM3BETEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF6dFJRVU16UWl4SlFVRkpMRU5CUVVNc1lVRkJZU3hIUVVGSExFOUJRVThzUTBGQlF5eGxRVUZsTEVOQlFVTTdVVUZETjBNc1NVRkJTU3hEUVVGRExGRkJRVkVzUjBGQlJ5eFBRVUZQTEVOQlFVTXNVMEZCVXl4RFFVRkRPMUZCUTJ4RExFbEJRVWtzUTBGQlF5eFpRVUZaTEVkQlFVY3NUMEZCVHl4RFFVRkRMR0ZCUVdFc1EwRkJRenRKUVVNMVF5eERRVUZETzBsQlJVUTdPMDlCUlVjN1NVRkRTQ3h0UTBGQlRTeEhRVUZPTzFGQlEwVXNTVUZCU1N4SlFVRkpMRWRCUVRKQ0xFVkJRVU1zUzBGQlN5eEZRVUZGTEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVNc1EwRkJRenRSUVVOMlJDeEpRVUZKTEVsQlFVa3NRMEZCUXl4aFFVRmhMRVZCUVVVN1dVRkRkRUlzU1VGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEdGQlFXRXNRMEZCUXp0VFFVTTVRenRSUVVORUxFbEJRVWtzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlR0WlFVTnFRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJRenRUUVVOdVF6dFJRVU5FTEVsQlFVa3NTVUZCU1N4RFFVRkRMRmxCUVZrc1JVRkJSVHRaUVVOeVFpeEpRVUZKTEVOQlFVTXNaVUZCWlN4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF6dFRRVU16UXp0UlFVTkVMRTlCUVU4c1NVRkJTU3hEUVVGRE8wbEJRMlFzUTBGQlF6dEpRVVZFTEhkRFFVRlhMRWRCUVZnN1VVRkRSU3hKUVVGSkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1VVRkRla0lzUzBGQlN6dFJRVU5NTEU5QlFWRXNTVUZCV1N4RFFVRkRPMGxCUTNaQ0xFTkJRVU03U1VGRFNDeDVRa0ZCUXp0QlFVRkVMRU5CUVVNc1FVRnVRMFFzU1VGdFEwTTdRVUZ1UTFrc1owUkJRV3RDSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUh0VGRISnBibWROWVhCOUlHWnliMjBnSnk0dmRIbHdaWE1uTzF4dVhHNHZLbHh1SUNvZ1EyOXdlWEpwWjJoMElESXdNVGNnUjI5dloyeGxJRWx1WXk1Y2JpQXFYRzRnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUIwYUdVZ1FYQmhZMmhsSUV4cFkyVnVjMlVzSUZabGNuTnBiMjRnTWk0d0lDaDBhR1VnWENKTWFXTmxibk5sWENJcE95QjViM1VnYldGNUlHNXZkQ0IxYzJVZ2RHaHBjeUJtYVd4bElHVjRZMlZ3ZEZ4dUlDb2dhVzRnWTI5dGNHeHBZVzVqWlNCM2FYUm9JSFJvWlNCTWFXTmxibk5sTGlCWmIzVWdiV0Y1SUc5aWRHRnBiaUJoSUdOdmNIa2diMllnZEdobElFeHBZMlZ1YzJVZ1lYUmNiaUFxWEc0Z0tpQm9kSFJ3T2k4dmQzZDNMbUZ3WVdOb1pTNXZjbWN2YkdsalpXNXpaWE12VEVsRFJVNVRSUzB5TGpCY2JpQXFYRzRnS2lCVmJteGxjM01nY21WeGRXbHlaV1FnWW5rZ1lYQndiR2xqWVdKc1pTQnNZWGNnYjNJZ1lXZHlaV1ZrSUhSdklHbHVJSGR5YVhScGJtY3NJSE52Wm5SM1lYSmxJR1JwYzNSeWFXSjFkR1ZrSUhWdVpHVnlJSFJvWlZ4dUlDb2dUR2xqWlc1elpTQnBjeUJrYVhOMGNtbGlkWFJsWkNCdmJpQmhiaUJjSWtGVElFbFRYQ0lnUWtGVFNWTXNJRmRKVkVoUFZWUWdWMEZTVWtGT1ZFbEZVeUJQVWlCRFQwNUVTVlJKVDA1VElFOUdJRUZPV1NCTFNVNUVMQ0JsYVhSb1pYSmNiaUFxSUdWNGNISmxjM01nYjNJZ2FXMXdiR2xsWkM0Z1UyVmxJSFJvWlNCTWFXTmxibk5sSUdadmNpQjBhR1VnYzNCbFkybG1hV01nYkdGdVozVmhaMlVnWjI5MlpYSnVhVzVuSUhCbGNtMXBjM05wYjI1eklHRnVaRnh1SUNvZ2JHbHRhWFJoZEdsdmJuTWdkVzVrWlhJZ2RHaGxJRXhwWTJWdWMyVXVYRzRnS2k5Y2JseHVMeW9xWEc0Z0tpQlRkWEJ3YjNKMFpXUWdkRzlyWlc0Z2RIbHdaWE5jYmlBcUwxeHVaWGh3YjNKMElIUjVjR1VnVkc5clpXNVVlWEJsU0dsdWRDQTlJQ2R5WldaeVpYTm9YM1J2YTJWdUozd25ZV05qWlhOelgzUnZhMlZ1Snp0Y2JseHVMeW9xWEc0Z0tpQlNaWEJ5WlhObGJuUnpJSFJvWlNCVWIydGxiaUJTWlhGMVpYTjBJR0Z6SUVwVFQwNHVYRzRnS2k5Y2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1VtVjJiMnRsVkc5clpXNVNaWEYxWlhOMFNuTnZiaUI3WEc0Z0lIUnZhMlZ1T2lCemRISnBibWM3WEc0Z0lIUnZhMlZ1WDNSNWNHVmZhR2x1ZEQ4NklGUnZhMlZ1Vkhsd1pVaHBiblE3WEc0Z0lHTnNhV1Z1ZEY5cFpEODZJSE4wY21sdVp6dGNiaUFnWTJ4cFpXNTBYM05sWTNKbGREODZJSE4wY21sdVp6dGNibjFjYmx4dUx5b3FYRzRnS2lCU1pYQnlaWE5sYm5SeklHRWdjbVYyYjJ0bElIUnZhMlZ1SUhKbGNYVmxjM1F1WEc0Z0tpQkdiM0lnYlc5eVpTQnBibVp2Y20xaGRHbHZiaUJzYjI5cklHRjBPbHh1SUNvZ2FIUjBjSE02THk5MGIyOXNjeTVwWlhSbUxtOXlaeTlvZEcxc0wzSm1ZemN3TURramMyVmpkR2x2YmkweUxqRmNiaUFxTDF4dVpYaHdiM0owSUdOc1lYTnpJRkpsZG05clpWUnZhMlZ1VW1WeGRXVnpkQ0I3WEc0Z0lIUnZhMlZ1T2lCemRISnBibWM3WEc0Z0lIUnZhMlZ1Vkhsd1pVaHBiblE2SUZSdmEyVnVWSGx3WlVocGJuUjhkVzVrWldacGJtVmtPMXh1SUNCamJHbGxiblJKWkRvZ2MzUnlhVzVuZkhWdVpHVm1hVzVsWkR0Y2JpQWdZMnhwWlc1MFUyVmpjbVYwT2lCemRISnBibWQ4ZFc1a1pXWnBibVZrTzF4dVhHNGdJR052Ym5OMGNuVmpkRzl5S0hKbGNYVmxjM1E2SUZKbGRtOXJaVlJ2YTJWdVVtVnhkV1Z6ZEVwemIyNHBJSHRjYmlBZ0lDQjBhR2x6TG5SdmEyVnVJRDBnY21WeGRXVnpkQzUwYjJ0bGJqdGNiaUFnSUNCMGFHbHpMblJ2YTJWdVZIbHdaVWhwYm5RZ1BTQnlaWEYxWlhOMExuUnZhMlZ1WDNSNWNHVmZhR2x1ZER0Y2JpQWdJQ0IwYUdsekxtTnNhV1Z1ZEVsa0lEMGdjbVZ4ZFdWemRDNWpiR2xsYm5SZmFXUTdYRzRnSUNBZ2RHaHBjeTVqYkdsbGJuUlRaV055WlhRZ1BTQnlaWEYxWlhOMExtTnNhV1Z1ZEY5elpXTnlaWFE3WEc0Z0lIMWNibHh1SUNBdktpcGNiaUFnSUNvZ1UyVnlhV0ZzYVhwbGN5QmhJRlJ2YTJWdVVtVnhkV1Z6ZENCMGJ5QmhJRXBoZG1GVFkzSnBjSFFnYjJKcVpXTjBMbHh1SUNBZ0tpOWNiaUFnZEc5S2MyOXVLQ2s2SUZKbGRtOXJaVlJ2YTJWdVVtVnhkV1Z6ZEVwemIyNGdlMXh1SUNBZ0lHeGxkQ0JxYzI5dU9pQlNaWFp2YTJWVWIydGxibEpsY1hWbGMzUktjMjl1SUQwZ2UzUnZhMlZ1T2lCMGFHbHpMblJ2YTJWdWZUdGNiaUFnSUNCcFppQW9kR2hwY3k1MGIydGxibFI1Y0dWSWFXNTBLU0I3WEc0Z0lDQWdJQ0JxYzI5dVd5ZDBiMnRsYmw5MGVYQmxYMmhwYm5RblhTQTlJSFJvYVhNdWRHOXJaVzVVZVhCbFNHbHVkRHRjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLSFJvYVhNdVkyeHBaVzUwU1dRcElIdGNiaUFnSUNBZ0lHcHpiMjViSjJOc2FXVnVkRjlwWkNkZElEMGdkR2hwY3k1amJHbGxiblJKWkR0Y2JpQWdJQ0I5WEc0Z0lDQWdhV1lnS0hSb2FYTXVZMnhwWlc1MFUyVmpjbVYwS1NCN1hHNGdJQ0FnSUNCcWMyOXVXeWRqYkdsbGJuUmZjMlZqY21WMEoxMGdQU0IwYUdsekxtTnNhV1Z1ZEZObFkzSmxkRHRjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUdwemIyNDdYRzRnSUgxY2JseHVJQ0IwYjFOMGNtbHVaMDFoY0NncE9pQlRkSEpwYm1kTllYQWdlMXh1SUNBZ0lHeGxkQ0JxYzI5dUlEMGdkR2hwY3k1MGIwcHpiMjRvS1R0Y2JpQWdJQ0F2THlBNktGeHVJQ0FnSUhKbGRIVnliaUFvYW5OdmJpQmhjeUJoYm5rcE8xeHVJQ0I5WEc1OVhHNGlYWDA9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/revoke_token_request.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/storage.js":
/*!********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/storage.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalStorageBackend = exports.StorageBackend = void 0;\n/**\n * Asynchronous storage APIs. All methods return a `Promise`.\n * All methods take the `DOMString`\n * IDL type (as it is the lowest common denominator).\n */\nvar StorageBackend = /** @class */ (function () {\n    function StorageBackend() {\n    }\n    return StorageBackend;\n}());\nexports.StorageBackend = StorageBackend;\n/**\n * A `StorageBackend` backed by `localstorage`.\n */\nvar LocalStorageBackend = /** @class */ (function (_super) {\n    __extends(LocalStorageBackend, _super);\n    function LocalStorageBackend(storage) {\n        var _this = _super.call(this) || this;\n        _this.storage = storage || window.localStorage;\n        return _this;\n    }\n    LocalStorageBackend.prototype.getItem = function (name) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var value = _this.storage.getItem(name);\n            if (value) {\n                resolve(value);\n            }\n            else {\n                resolve(null);\n            }\n        });\n    };\n    LocalStorageBackend.prototype.removeItem = function (name) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.storage.removeItem(name);\n            resolve();\n        });\n    };\n    LocalStorageBackend.prototype.clear = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.storage.clear();\n            resolve();\n        });\n    };\n    LocalStorageBackend.prototype.setItem = function (name, value) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.storage.setItem(name, value);\n            resolve();\n        });\n    };\n    return LocalStorageBackend;\n}(StorageBackend));\nexports.LocalStorageBackend = LocalStorageBackend;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9zdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7O0dBWUc7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCSDs7OztHQUlHO0FBQ0g7SUFBQTtJQXNCQSxDQUFDO0lBQUQscUJBQUM7QUFBRCxDQUFDLEFBdEJELElBc0JDO0FBdEJxQix3Q0FBYztBQXdCcEM7O0dBRUc7QUFDSDtJQUF5Qyx1Q0FBYztJQUVyRCw2QkFBWSxPQUEyQjtRQUF2QyxZQUNFLGlCQUFPLFNBRVI7UUFEQyxLQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFDOztJQUNoRCxDQUFDO0lBRU0scUNBQU8sR0FBZCxVQUFlLElBQVk7UUFBM0IsaUJBU0M7UUFSQyxPQUFPLElBQUksT0FBTyxDQUFjLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDOUMsSUFBTSxLQUFLLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekMsSUFBSSxLQUFLLEVBQUU7Z0JBQ1QsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ2hCO2lCQUFNO2dCQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNmO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sd0NBQVUsR0FBakIsVUFBa0IsSUFBWTtRQUE5QixpQkFLQztRQUpDLE9BQU8sSUFBSSxPQUFPLENBQU8sVUFBQyxPQUFPLEVBQUUsTUFBTTtZQUN2QyxLQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM5QixPQUFPLEVBQUUsQ0FBQztRQUNaLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLG1DQUFLLEdBQVo7UUFBQSxpQkFLQztRQUpDLE9BQU8sSUFBSSxPQUFPLENBQU8sVUFBQyxPQUFPLEVBQUUsTUFBTTtZQUN2QyxLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ3JCLE9BQU8sRUFBRSxDQUFDO1FBQ1osQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0scUNBQU8sR0FBZCxVQUFlLElBQVksRUFBRSxLQUFhO1FBQTFDLGlCQUtDO1FBSkMsT0FBTyxJQUFJLE9BQU8sQ0FBTyxVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQ3ZDLEtBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztZQUNsQyxPQUFPLEVBQUUsQ0FBQztRQUNaLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNILDBCQUFDO0FBQUQsQ0FBQyxBQXRDRCxDQUF5QyxjQUFjLEdBc0N0RDtBQXRDWSxrREFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBBIHN1YnNldCBvZiB0aGUgYFN0b3JhZ2VgIGludGVyZmFjZSB3aGljaCB3ZSBuZWVkIGZvciB0aGUgYmFja2VuZHMgdG8gd29yay5cbiAqXG4gKiBFc3NlbnRpYWxseSByZW1vdmVzIHRoZSBpbmRleGFibGUgcHJvcGVydGllcyBhbmQgcmVhZG9ubHkgcHJvcGVydGllcyBmcm9tXG4gKiBgU3RvcmFnZWAgaW4gbGliLmRvbS5kLnRzLiBUaGlzIGlzIHNvIHRoYXQgYSBjdXN0b20gdHlwZSBjYW4gZXh0ZW5kIGl0IGZvclxuICogdGVzdGluZy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBVbmRlcmx5aW5nU3RvcmFnZSB7XG4gIHJlYWRvbmx5IGxlbmd0aDogbnVtYmVyO1xuICBjbGVhcigpOiB2b2lkO1xuICBnZXRJdGVtKGtleTogc3RyaW5nKTogc3RyaW5nfG51bGw7XG4gIHJlbW92ZUl0ZW0oa2V5OiBzdHJpbmcpOiB2b2lkO1xuICBzZXRJdGVtKGtleTogc3RyaW5nLCBkYXRhOiBzdHJpbmcpOiB2b2lkO1xufVxuXG4vKipcbiAqIEFzeW5jaHJvbm91cyBzdG9yYWdlIEFQSXMuIEFsbCBtZXRob2RzIHJldHVybiBhIGBQcm9taXNlYC5cbiAqIEFsbCBtZXRob2RzIHRha2UgdGhlIGBET01TdHJpbmdgXG4gKiBJREwgdHlwZSAoYXMgaXQgaXMgdGhlIGxvd2VzdCBjb21tb24gZGVub21pbmF0b3IpLlxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgU3RvcmFnZUJhY2tlbmQge1xuICAvKipcbiAgICogV2hlbiBwYXNzZWQgYSBrZXkgYG5hbWVgLCB3aWxsIHJldHVybiB0aGF0IGtleSdzIHZhbHVlLlxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IGdldEl0ZW0obmFtZTogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmd8bnVsbD47XG5cbiAgLyoqXG4gICAqIFdoZW4gcGFzc2VkIGEga2V5IGBuYW1lYCwgd2lsbCByZW1vdmUgdGhhdCBrZXkgZnJvbSB0aGUgc3RvcmFnZS5cbiAgICovXG4gIHB1YmxpYyBhYnN0cmFjdCByZW1vdmVJdGVtKG5hbWU6IHN0cmluZyk6IFByb21pc2U8dm9pZD47XG5cbiAgLyoqXG4gICAqIFdoZW4gaW52b2tlZCwgd2lsbCBlbXB0eSBhbGwga2V5cyBvdXQgb2YgdGhlIHN0b3JhZ2UuXG4gICAqL1xuICBwdWJsaWMgYWJzdHJhY3QgY2xlYXIoKTogUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogVGhlIHNldEl0ZW0oKSBtZXRob2Qgb2YgdGhlIGBTdG9yYWdlQmFja2VuZGAgaW50ZXJmYWNlLFxuICAgKiB3aGVuIHBhc3NlZCBhIGtleSBuYW1lIGFuZCB2YWx1ZSwgd2lsbCBhZGQgdGhhdCBrZXkgdG8gdGhlIHN0b3JhZ2UsXG4gICAqIG9yIHVwZGF0ZSB0aGF0IGtleSdzIHZhbHVlIGlmIGl0IGFscmVhZHkgZXhpc3RzLlxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IHNldEl0ZW0obmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPjtcbn1cblxuLyoqXG4gKiBBIGBTdG9yYWdlQmFja2VuZGAgYmFja2VkIGJ5IGBsb2NhbHN0b3JhZ2VgLlxuICovXG5leHBvcnQgY2xhc3MgTG9jYWxTdG9yYWdlQmFja2VuZCBleHRlbmRzIFN0b3JhZ2VCYWNrZW5kIHtcbiAgcHJpdmF0ZSBzdG9yYWdlOiBVbmRlcmx5aW5nU3RvcmFnZTtcbiAgY29uc3RydWN0b3Ioc3RvcmFnZT86IFVuZGVybHlpbmdTdG9yYWdlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlIHx8IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gIH1cblxuICBwdWJsaWMgZ2V0SXRlbShuYW1lOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZ3xudWxsPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPHN0cmluZ3xudWxsPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuc3RvcmFnZS5nZXRJdGVtKG5hbWUpO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZShudWxsKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVJdGVtKG5hbWU6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLnN0b3JhZ2UucmVtb3ZlSXRlbShuYW1lKTtcbiAgICAgIHJlc29sdmUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBjbGVhcigpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5zdG9yYWdlLmNsZWFyKCk7XG4gICAgICByZXNvbHZlKCk7XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgc2V0SXRlbShuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5zdG9yYWdlLnNldEl0ZW0obmFtZSwgdmFsdWUpO1xuICAgICAgcmVzb2x2ZSgpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/storage.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/token_request.js":
/*!**************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/token_request.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenRequest = exports.GRANT_TYPE_REFRESH_TOKEN = exports.GRANT_TYPE_AUTHORIZATION_CODE = void 0;\nexports.GRANT_TYPE_AUTHORIZATION_CODE = 'authorization_code';\nexports.GRANT_TYPE_REFRESH_TOKEN = 'refresh_token';\n/**\n * Represents an Access Token request.\n * For more information look at:\n * https://tools.ietf.org/html/rfc6749#section-4.1.3\n */\nvar TokenRequest = /** @class */ (function () {\n    function TokenRequest(request) {\n        this.clientId = request.client_id;\n        this.redirectUri = request.redirect_uri;\n        this.grantType = request.grant_type;\n        this.code = request.code;\n        this.refreshToken = request.refresh_token;\n        this.extras = request.extras;\n    }\n    /**\n     * Serializes a TokenRequest to a JavaScript object.\n     */\n    TokenRequest.prototype.toJson = function () {\n        return {\n            grant_type: this.grantType,\n            code: this.code,\n            refresh_token: this.refreshToken,\n            redirect_uri: this.redirectUri,\n            client_id: this.clientId,\n            extras: this.extras\n        };\n    };\n    TokenRequest.prototype.toStringMap = function () {\n        var map = {\n            grant_type: this.grantType,\n            client_id: this.clientId,\n            redirect_uri: this.redirectUri\n        };\n        if (this.code) {\n            map['code'] = this.code;\n        }\n        if (this.refreshToken) {\n            map['refresh_token'] = this.refreshToken;\n        }\n        // copy over extras\n        if (this.extras) {\n            for (var extra in this.extras) {\n                if (this.extras.hasOwnProperty(extra) && !map.hasOwnProperty(extra)) {\n                    // check before inserting to requestMap\n                    map[extra] = this.extras[extra];\n                }\n            }\n        }\n        return map;\n    };\n    return TokenRequest;\n}());\nexports.TokenRequest = TokenRequest;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5fcmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90b2tlbl9yZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7O0dBWUc7OztBQUlVLFFBQUEsNkJBQTZCLEdBQUcsb0JBQW9CLENBQUM7QUFDckQsUUFBQSx3QkFBd0IsR0FBRyxlQUFlLENBQUM7QUFjeEQ7Ozs7R0FJRztBQUNIO0lBUUUsc0JBQVksT0FBeUI7UUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQztRQUN4QyxJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7UUFDcEMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUMxQyxJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDL0IsQ0FBQztJQUVEOztPQUVHO0lBQ0gsNkJBQU0sR0FBTjtRQUNFLE9BQU87WUFDTCxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVM7WUFDMUIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsYUFBYSxFQUFFLElBQUksQ0FBQyxZQUFZO1lBQ2hDLFlBQVksRUFBRSxJQUFJLENBQUMsV0FBVztZQUM5QixTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDeEIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO1NBQ3BCLENBQUM7SUFDSixDQUFDO0lBRUQsa0NBQVcsR0FBWDtRQUNFLElBQUksR0FBRyxHQUFjO1lBQ25CLFVBQVUsRUFBRSxJQUFJLENBQUMsU0FBUztZQUMxQixTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDeEIsWUFBWSxFQUFFLElBQUksQ0FBQyxXQUFXO1NBQy9CLENBQUM7UUFFRixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztTQUN6QjtRQUVELElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixHQUFHLENBQUMsZUFBZSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztTQUMxQztRQUVELG1CQUFtQjtRQUNuQixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixLQUFLLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQzdCLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFO29CQUNuRSx1Q0FBdUM7b0JBQ3ZDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO2lCQUNqQzthQUNGO1NBQ0Y7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUF6REQsSUF5REM7QUF6RFksb0NBQVkiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtTdHJpbmdNYXB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgR1JBTlRfVFlQRV9BVVRIT1JJWkFUSU9OX0NPREUgPSAnYXV0aG9yaXphdGlvbl9jb2RlJztcbmV4cG9ydCBjb25zdCBHUkFOVF9UWVBFX1JFRlJFU0hfVE9LRU4gPSAncmVmcmVzaF90b2tlbic7XG5cbi8qKlxuICogUmVwcmVzZW50cyB0aGUgVG9rZW4gUmVxdWVzdCBhcyBKU09OLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRva2VuUmVxdWVzdEpzb24ge1xuICBncmFudF90eXBlOiBzdHJpbmc7XG4gIGNvZGU/OiBzdHJpbmc7XG4gIHJlZnJlc2hfdG9rZW4/OiBzdHJpbmcsIHJlZGlyZWN0X3VyaTogc3RyaW5nO1xuICBjbGllbnRfaWQ6IHN0cmluZztcbiAgZXh0cmFzPzogU3RyaW5nTWFwO1xufVxuXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbiBBY2Nlc3MgVG9rZW4gcmVxdWVzdC5cbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGxvb2sgYXQ6XG4gKiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc0OSNzZWN0aW9uLTQuMS4zXG4gKi9cbmV4cG9ydCBjbGFzcyBUb2tlblJlcXVlc3Qge1xuICBjbGllbnRJZDogc3RyaW5nO1xuICByZWRpcmVjdFVyaTogc3RyaW5nO1xuICBncmFudFR5cGU6IHN0cmluZztcbiAgY29kZTogc3RyaW5nfHVuZGVmaW5lZDtcbiAgcmVmcmVzaFRva2VuOiBzdHJpbmd8dW5kZWZpbmVkO1xuICBleHRyYXM6IFN0cmluZ01hcHx1bmRlZmluZWRcblxuICBjb25zdHJ1Y3RvcihyZXF1ZXN0OiBUb2tlblJlcXVlc3RKc29uKSB7XG4gICAgdGhpcy5jbGllbnRJZCA9IHJlcXVlc3QuY2xpZW50X2lkO1xuICAgIHRoaXMucmVkaXJlY3RVcmkgPSByZXF1ZXN0LnJlZGlyZWN0X3VyaTtcbiAgICB0aGlzLmdyYW50VHlwZSA9IHJlcXVlc3QuZ3JhbnRfdHlwZTtcbiAgICB0aGlzLmNvZGUgPSByZXF1ZXN0LmNvZGU7XG4gICAgdGhpcy5yZWZyZXNoVG9rZW4gPSByZXF1ZXN0LnJlZnJlc2hfdG9rZW47XG4gICAgdGhpcy5leHRyYXMgPSByZXF1ZXN0LmV4dHJhcztcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXJpYWxpemVzIGEgVG9rZW5SZXF1ZXN0IHRvIGEgSmF2YVNjcmlwdCBvYmplY3QuXG4gICAqL1xuICB0b0pzb24oKTogVG9rZW5SZXF1ZXN0SnNvbiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGdyYW50X3R5cGU6IHRoaXMuZ3JhbnRUeXBlLFxuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgcmVmcmVzaF90b2tlbjogdGhpcy5yZWZyZXNoVG9rZW4sXG4gICAgICByZWRpcmVjdF91cmk6IHRoaXMucmVkaXJlY3RVcmksXG4gICAgICBjbGllbnRfaWQ6IHRoaXMuY2xpZW50SWQsXG4gICAgICBleHRyYXM6IHRoaXMuZXh0cmFzXG4gICAgfTtcbiAgfVxuXG4gIHRvU3RyaW5nTWFwKCk6IFN0cmluZ01hcCB7XG4gICAgbGV0IG1hcDogU3RyaW5nTWFwID0ge1xuICAgICAgZ3JhbnRfdHlwZTogdGhpcy5ncmFudFR5cGUsXG4gICAgICBjbGllbnRfaWQ6IHRoaXMuY2xpZW50SWQsXG4gICAgICByZWRpcmVjdF91cmk6IHRoaXMucmVkaXJlY3RVcmlcbiAgICB9O1xuXG4gICAgaWYgKHRoaXMuY29kZSkge1xuICAgICAgbWFwWydjb2RlJ10gPSB0aGlzLmNvZGU7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucmVmcmVzaFRva2VuKSB7XG4gICAgICBtYXBbJ3JlZnJlc2hfdG9rZW4nXSA9IHRoaXMucmVmcmVzaFRva2VuO1xuICAgIH1cblxuICAgIC8vIGNvcHkgb3ZlciBleHRyYXNcbiAgICBpZiAodGhpcy5leHRyYXMpIHtcbiAgICAgIGZvciAobGV0IGV4dHJhIGluIHRoaXMuZXh0cmFzKSB7XG4gICAgICAgIGlmICh0aGlzLmV4dHJhcy5oYXNPd25Qcm9wZXJ0eShleHRyYSkgJiYgIW1hcC5oYXNPd25Qcm9wZXJ0eShleHRyYSkpIHtcbiAgICAgICAgICAvLyBjaGVjayBiZWZvcmUgaW5zZXJ0aW5nIHRvIHJlcXVlc3RNYXBcbiAgICAgICAgICBtYXBbZXh0cmFdID0gdGhpcy5leHRyYXNbZXh0cmFdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtYXA7XG4gIH1cbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/token_request.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/token_request_handler.js":
/*!**********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/token_request_handler.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTokenRequestHandler = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"../../node_modules/@openid/appauth/built/errors.js\");\nvar query_string_utils_1 = __webpack_require__(/*! ./query_string_utils */ \"../../node_modules/@openid/appauth/built/query_string_utils.js\");\nvar token_response_1 = __webpack_require__(/*! ./token_response */ \"../../node_modules/@openid/appauth/built/token_response.js\");\nvar xhr_1 = __webpack_require__(/*! ./xhr */ \"../../node_modules/@openid/appauth/built/xhr.js\");\n/**\n * The default token request handler.\n */\nvar BaseTokenRequestHandler = /** @class */ (function () {\n    function BaseTokenRequestHandler(requestor, utils) {\n        if (requestor === void 0) { requestor = new xhr_1.JQueryRequestor(); }\n        if (utils === void 0) { utils = new query_string_utils_1.BasicQueryStringUtils(); }\n        this.requestor = requestor;\n        this.utils = utils;\n    }\n    BaseTokenRequestHandler.prototype.isTokenResponse = function (response) {\n        return response.error === undefined;\n    };\n    BaseTokenRequestHandler.prototype.performRevokeTokenRequest = function (configuration, request) {\n        var revokeTokenResponse = this.requestor.xhr({\n            url: configuration.revocationEndpoint,\n            method: 'POST',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            data: this.utils.stringify(request.toStringMap())\n        });\n        return revokeTokenResponse.then(function (response) {\n            return true;\n        });\n    };\n    BaseTokenRequestHandler.prototype.performTokenRequest = function (configuration, request) {\n        var _this = this;\n        var tokenResponse = this.requestor.xhr({\n            url: configuration.tokenEndpoint,\n            method: 'POST',\n            dataType: 'json',\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            data: this.utils.stringify(request.toStringMap())\n        });\n        return tokenResponse.then(function (response) {\n            if (_this.isTokenResponse(response)) {\n                return new token_response_1.TokenResponse(response);\n            }\n            else {\n                return Promise.reject(new errors_1.AppAuthError(response.error, new token_response_1.TokenError(response)));\n            }\n        });\n    };\n    return BaseTokenRequestHandler;\n}());\nexports.BaseTokenRequestHandler = BaseTokenRequestHandler;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5fcmVxdWVzdF9oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3Rva2VuX3JlcXVlc3RfaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7OztHQVlHOzs7QUFHSCxtQ0FBc0M7QUFDdEMsMkRBQTZFO0FBRzdFLG1EQUE4RjtBQUM5Riw2QkFBaUQ7QUFrQmpEOztHQUVHO0FBQ0g7SUFDRSxpQ0FDb0IsU0FBNEMsRUFDNUMsS0FBcUQ7UUFEckQsMEJBQUEsRUFBQSxnQkFBMkIscUJBQWUsRUFBRTtRQUM1QyxzQkFBQSxFQUFBLFlBQThCLDBDQUFxQixFQUFFO1FBRHJELGNBQVMsR0FBVCxTQUFTLENBQW1DO1FBQzVDLFVBQUssR0FBTCxLQUFLLENBQWdEO0lBQUcsQ0FBQztJQUVyRSxpREFBZSxHQUF2QixVQUF3QixRQUNjO1FBQ3BDLE9BQVEsUUFBMkIsQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDO0lBQzFELENBQUM7SUFFRCwyREFBeUIsR0FBekIsVUFDSSxhQUFnRCxFQUNoRCxPQUEyQjtRQUM3QixJQUFJLG1CQUFtQixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFVO1lBQ3BELEdBQUcsRUFBRSxhQUFhLENBQUMsa0JBQWtCO1lBQ3JDLE1BQU0sRUFBRSxNQUFNO1lBQ2QsT0FBTyxFQUFFLEVBQUMsY0FBYyxFQUFFLG1DQUFtQyxFQUFDO1lBQzlELElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDbEQsQ0FBQyxDQUFDO1FBRUgsT0FBTyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsVUFBQSxRQUFRO1lBQ3RDLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQscURBQW1CLEdBQW5CLFVBQW9CLGFBQWdELEVBQUUsT0FBcUI7UUFBM0YsaUJBa0JDO1FBaEJDLElBQUksYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFtQztZQUN2RSxHQUFHLEVBQUUsYUFBYSxDQUFDLGFBQWE7WUFDaEMsTUFBTSxFQUFFLE1BQU07WUFDZCxRQUFRLEVBQUUsTUFBTTtZQUNoQixPQUFPLEVBQUUsRUFBQyxjQUFjLEVBQUUsbUNBQW1DLEVBQUM7WUFDOUQsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNsRCxDQUFDLENBQUM7UUFFSCxPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsVUFBQSxRQUFRO1lBQ2hDLElBQUksS0FBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsRUFBRTtnQkFDbEMsT0FBTyxJQUFJLDhCQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDcEM7aUJBQU07Z0JBQ0wsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUNqQixJQUFJLHFCQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxJQUFJLDJCQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ2pFO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0gsOEJBQUM7QUFBRCxDQUFDLEFBNUNELElBNENDO0FBNUNZLDBEQUF1QiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0XG4gKiBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlXG4gKiBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlclxuICogZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge0F1dGhvcml6YXRpb25TZXJ2aWNlQ29uZmlndXJhdGlvbn0gZnJvbSAnLi9hdXRob3JpemF0aW9uX3NlcnZpY2VfY29uZmlndXJhdGlvbic7XG5pbXBvcnQge0FwcEF1dGhFcnJvcn0gZnJvbSAnLi9lcnJvcnMnO1xuaW1wb3J0IHtCYXNpY1F1ZXJ5U3RyaW5nVXRpbHMsIFF1ZXJ5U3RyaW5nVXRpbHN9IGZyb20gJy4vcXVlcnlfc3RyaW5nX3V0aWxzJztcbmltcG9ydCB7UmV2b2tlVG9rZW5SZXF1ZXN0fSBmcm9tICcuL3Jldm9rZV90b2tlbl9yZXF1ZXN0JztcbmltcG9ydCB7VG9rZW5SZXF1ZXN0fSBmcm9tICcuL3Rva2VuX3JlcXVlc3QnO1xuaW1wb3J0IHtUb2tlbkVycm9yLCBUb2tlbkVycm9ySnNvbiwgVG9rZW5SZXNwb25zZSwgVG9rZW5SZXNwb25zZUpzb259IGZyb20gJy4vdG9rZW5fcmVzcG9uc2UnO1xuaW1wb3J0IHtKUXVlcnlSZXF1ZXN0b3IsIFJlcXVlc3Rvcn0gZnJvbSAnLi94aHInO1xuXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbiBpbnRlcmZhY2Ugd2hpY2ggY2FuIG1ha2UgYSB0b2tlbiByZXF1ZXN0LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRva2VuUmVxdWVzdEhhbmRsZXIge1xuICAvKipcbiAgICogUGVyZm9ybXMgdGhlIHRva2VuIHJlcXVlc3QsIGdpdmVuIHRoZSBzZXJ2aWNlIGNvbmZpZ3VyYXRpb24uXG4gICAqL1xuICBwZXJmb3JtVG9rZW5SZXF1ZXN0KGNvbmZpZ3VyYXRpb246IEF1dGhvcml6YXRpb25TZXJ2aWNlQ29uZmlndXJhdGlvbiwgcmVxdWVzdDogVG9rZW5SZXF1ZXN0KTpcbiAgICAgIFByb21pc2U8VG9rZW5SZXNwb25zZT47XG5cbiAgcGVyZm9ybVJldm9rZVRva2VuUmVxdWVzdChcbiAgICAgIGNvbmZpZ3VyYXRpb246IEF1dGhvcml6YXRpb25TZXJ2aWNlQ29uZmlndXJhdGlvbixcbiAgICAgIHJlcXVlc3Q6IFJldm9rZVRva2VuUmVxdWVzdCk6IFByb21pc2U8Ym9vbGVhbj47XG59XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgdG9rZW4gcmVxdWVzdCBoYW5kbGVyLlxuICovXG5leHBvcnQgY2xhc3MgQmFzZVRva2VuUmVxdWVzdEhhbmRsZXIgaW1wbGVtZW50cyBUb2tlblJlcXVlc3RIYW5kbGVyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgICBwdWJsaWMgcmVhZG9ubHkgcmVxdWVzdG9yOiBSZXF1ZXN0b3IgPSBuZXcgSlF1ZXJ5UmVxdWVzdG9yKCksXG4gICAgICBwdWJsaWMgcmVhZG9ubHkgdXRpbHM6IFF1ZXJ5U3RyaW5nVXRpbHMgPSBuZXcgQmFzaWNRdWVyeVN0cmluZ1V0aWxzKCkpIHt9XG5cbiAgcHJpdmF0ZSBpc1Rva2VuUmVzcG9uc2UocmVzcG9uc2U6IFRva2VuUmVzcG9uc2VKc29ufFxuICAgICAgICAgICAgICAgICAgICAgICAgICBUb2tlbkVycm9ySnNvbik6IHJlc3BvbnNlIGlzIFRva2VuUmVzcG9uc2VKc29uIHtcbiAgICByZXR1cm4gKHJlc3BvbnNlIGFzIFRva2VuRXJyb3JKc29uKS5lcnJvciA9PT0gdW5kZWZpbmVkO1xuICB9XG5cbiAgcGVyZm9ybVJldm9rZVRva2VuUmVxdWVzdChcbiAgICAgIGNvbmZpZ3VyYXRpb246IEF1dGhvcml6YXRpb25TZXJ2aWNlQ29uZmlndXJhdGlvbixcbiAgICAgIHJlcXVlc3Q6IFJldm9rZVRva2VuUmVxdWVzdCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGxldCByZXZva2VUb2tlblJlc3BvbnNlID0gdGhpcy5yZXF1ZXN0b3IueGhyPGJvb2xlYW4+KHtcbiAgICAgIHVybDogY29uZmlndXJhdGlvbi5yZXZvY2F0aW9uRW5kcG9pbnQsXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9LFxuICAgICAgZGF0YTogdGhpcy51dGlscy5zdHJpbmdpZnkocmVxdWVzdC50b1N0cmluZ01hcCgpKVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJldm9rZVRva2VuUmVzcG9uc2UudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIHBlcmZvcm1Ub2tlblJlcXVlc3QoY29uZmlndXJhdGlvbjogQXV0aG9yaXphdGlvblNlcnZpY2VDb25maWd1cmF0aW9uLCByZXF1ZXN0OiBUb2tlblJlcXVlc3QpOlxuICAgICAgUHJvbWlzZTxUb2tlblJlc3BvbnNlPiB7XG4gICAgbGV0IHRva2VuUmVzcG9uc2UgPSB0aGlzLnJlcXVlc3Rvci54aHI8VG9rZW5SZXNwb25zZUpzb258VG9rZW5FcnJvckpzb24+KHtcbiAgICAgIHVybDogY29uZmlndXJhdGlvbi50b2tlbkVuZHBvaW50LFxuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBkYXRhVHlwZTogJ2pzb24nLCAgLy8gYWRkaW5nIGltcGxpY2l0IGRhdGFUeXBlXG4gICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfSxcbiAgICAgIGRhdGE6IHRoaXMudXRpbHMuc3RyaW5naWZ5KHJlcXVlc3QudG9TdHJpbmdNYXAoKSlcbiAgICB9KTtcblxuICAgIHJldHVybiB0b2tlblJlc3BvbnNlLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgaWYgKHRoaXMuaXNUb2tlblJlc3BvbnNlKHJlc3BvbnNlKSkge1xuICAgICAgICByZXR1cm4gbmV3IFRva2VuUmVzcG9uc2UocmVzcG9uc2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0PFRva2VuUmVzcG9uc2U+KFxuICAgICAgICAgICAgbmV3IEFwcEF1dGhFcnJvcihyZXNwb25zZS5lcnJvciwgbmV3IFRva2VuRXJyb3IocmVzcG9uc2UpKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/token_request_handler.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/token_response.js":
/*!***************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/token_response.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenError = exports.TokenResponse = exports.nowInSeconds = void 0;\n// constants\nvar AUTH_EXPIRY_BUFFER = 10 * 60 * -1; // 10 mins in seconds\n/**\n * Returns the instant of time in seconds.\n */\nvar nowInSeconds = function () { return Math.round(new Date().getTime() / 1000); };\nexports.nowInSeconds = nowInSeconds;\n/**\n * Represents the Token Response type.\n * For more information look at:\n * https://tools.ietf.org/html/rfc6749#section-5.1\n */\nvar TokenResponse = /** @class */ (function () {\n    function TokenResponse(response) {\n        this.accessToken = response.access_token;\n        this.tokenType = response.token_type || 'bearer';\n        if (response.expires_in) {\n            this.expiresIn = parseInt(response.expires_in, 10);\n        }\n        this.refreshToken = response.refresh_token;\n        this.scope = response.scope;\n        this.idToken = response.id_token;\n        this.issuedAt = response.issued_at || exports.nowInSeconds();\n    }\n    TokenResponse.prototype.toJson = function () {\n        var _a;\n        return {\n            access_token: this.accessToken,\n            id_token: this.idToken,\n            refresh_token: this.refreshToken,\n            scope: this.scope,\n            token_type: this.tokenType,\n            issued_at: this.issuedAt,\n            expires_in: (_a = this.expiresIn) === null || _a === void 0 ? void 0 : _a.toString()\n        };\n    };\n    TokenResponse.prototype.isValid = function (buffer) {\n        if (buffer === void 0) { buffer = AUTH_EXPIRY_BUFFER; }\n        if (this.expiresIn) {\n            var now = exports.nowInSeconds();\n            return now < this.issuedAt + this.expiresIn + buffer;\n        }\n        else {\n            return true;\n        }\n    };\n    return TokenResponse;\n}());\nexports.TokenResponse = TokenResponse;\n/**\n * Represents the Token Error type.\n * For more information look at:\n * https://tools.ietf.org/html/rfc6749#section-5.2\n */\nvar TokenError = /** @class */ (function () {\n    function TokenError(tokenError) {\n        this.error = tokenError.error;\n        this.errorDescription = tokenError.error_description;\n        this.errorUri = tokenError.error_uri;\n    }\n    TokenError.prototype.toJson = function () {\n        return {\n            error: this.error, error_description: this.errorDescription, error_uri: this.errorUri\n        };\n    };\n    return TokenError;\n}());\nexports.TokenError = TokenError;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5fcmVzcG9uc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdG9rZW5fcmVzcG9uc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7R0FZRzs7O0FBdUNILFlBQVk7QUFDWixJQUFNLGtCQUFrQixHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBRSxxQkFBcUI7QUFFL0Q7O0dBRUc7QUFDSSxJQUFNLFlBQVksR0FBRyxjQUFNLE9BQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxFQUF2QyxDQUF1QyxDQUFDO0FBQTdELFFBQUEsWUFBWSxnQkFBaUQ7QUFFMUU7Ozs7R0FJRztBQUNIO0lBU0UsdUJBQVksUUFBMkI7UUFDckMsSUFBSSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLFVBQVUsSUFBSSxRQUFRLENBQUM7UUFDakQsSUFBSSxRQUFRLENBQUMsVUFBVSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDcEQ7UUFDRCxJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUM7UUFDM0MsSUFBSSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDO1FBQzVCLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxTQUFTLElBQUksb0JBQVksRUFBRSxDQUFDO0lBQ3ZELENBQUM7SUFFRCw4QkFBTSxHQUFOOztRQUNFLE9BQU87WUFDTCxZQUFZLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDOUIsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPO1lBQ3RCLGFBQWEsRUFBRSxJQUFJLENBQUMsWUFBWTtZQUNoQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTO1lBQzFCLFNBQVMsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN4QixVQUFVLEVBQUUsTUFBQSxJQUFJLENBQUMsU0FBUywwQ0FBRSxRQUFRLEVBQUU7U0FDdkMsQ0FBQztJQUNKLENBQUM7SUFFRCwrQkFBTyxHQUFQLFVBQVEsTUFBbUM7UUFBbkMsdUJBQUEsRUFBQSwyQkFBbUM7UUFDekMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLElBQUksR0FBRyxHQUFHLG9CQUFZLEVBQUUsQ0FBQztZQUN6QixPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDO1NBQ3REO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQztTQUNiO0lBQ0gsQ0FBQztJQUNILG9CQUFDO0FBQUQsQ0FBQyxBQXpDRCxJQXlDQztBQXpDWSxzQ0FBYTtBQTJDMUI7Ozs7R0FJRztBQUNIO0lBS0Usb0JBQVksVUFBMEI7UUFDcEMsSUFBSSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDO1FBQzlCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVLENBQUMsaUJBQWlCLENBQUM7UUFDckQsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCwyQkFBTSxHQUFOO1FBQ0UsT0FBTztZQUNMLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLGlCQUFpQixFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVE7U0FDdEYsQ0FBQTtJQUNILENBQUM7SUFDSCxpQkFBQztBQUFELENBQUMsQUFoQkQsSUFnQkM7QUFoQlksZ0NBQVUiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBhY2Nlc3MgdG9rZW4gdHlwZXMuXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWU6XG4gKiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc0OSNzZWN0aW9uLTcuMVxuICovXG5leHBvcnQgdHlwZSBUb2tlblR5cGUgPSAnYmVhcmVyJ3wnbWFjJztcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBUb2tlblJlc3BvbnNlIGFzIGEgSlNPTiBPYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVG9rZW5SZXNwb25zZUpzb24ge1xuICBhY2Nlc3NfdG9rZW46IHN0cmluZztcbiAgdG9rZW5fdHlwZT86IFRva2VuVHlwZTsgLyogdHJlYXRpbmcgdG9rZW4gdHlwZSBhcyBvcHRpb25hbCwgYXMgaXRzIGdvaW5nIHRvIGJlIGluZmVycmVkLiAqL1xuICBleHBpcmVzX2luPzogc3RyaW5nOyAgICAvKiBsaWZldGltZSBpbiBzZWNvbmRzLiAqL1xuICByZWZyZXNoX3Rva2VuPzogc3RyaW5nO1xuICBzY29wZT86IHN0cmluZztcbiAgaWRfdG9rZW4/OiBzdHJpbmc7ICAvKiBodHRwczovL29wZW5pZC5uZXQvc3BlY3Mvb3BlbmlkLWNvbm5lY3QtY29yZS0xXzAuaHRtbCNUb2tlblJlc3BvbnNlICovXG4gIGlzc3VlZF9hdD86IG51bWJlcjsgLyogd2hlbiB3YXMgaXQgaXNzdWVkID8gKi9cbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBwb3NzaWJsZSBlcnJvciBjb2RlcyBmcm9tIHRoZSB0b2tlbiBlbmRwb2ludC5cbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGxvb2sgYXQ6XG4gKiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc0OSNzZWN0aW9uLTUuMlxuICovXG5leHBvcnQgdHlwZSBFcnJvclR5cGUgPSAnaW52YWxpZF9yZXF1ZXN0J3wnaW52YWxpZF9jbGllbnQnfCdpbnZhbGlkX2dyYW50J3wndW5hdXRob3JpemVkX2NsaWVudCd8XG4gICAgJ3Vuc3VwcG9ydGVkX2dyYW50X3R5cGUnfCdpbnZhbGlkX3Njb3BlJztcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBUb2tlbkVycm9yIGFzIGEgSlNPTiBPYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVG9rZW5FcnJvckpzb24ge1xuICBlcnJvcjogRXJyb3JUeXBlO1xuICBlcnJvcl9kZXNjcmlwdGlvbj86IHN0cmluZztcbiAgZXJyb3JfdXJpPzogc3RyaW5nO1xufVxuXG4vLyBjb25zdGFudHNcbmNvbnN0IEFVVEhfRVhQSVJZX0JVRkZFUiA9IDEwICogNjAgKiAtMTsgIC8vIDEwIG1pbnMgaW4gc2Vjb25kc1xuXG4vKipcbiAqIFJldHVybnMgdGhlIGluc3RhbnQgb2YgdGltZSBpbiBzZWNvbmRzLlxuICovXG5leHBvcnQgY29uc3Qgbm93SW5TZWNvbmRzID0gKCkgPT4gTWF0aC5yb3VuZChuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDApO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIFRva2VuIFJlc3BvbnNlIHR5cGUuXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBsb29rIGF0OlxuICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NDkjc2VjdGlvbi01LjFcbiAqL1xuZXhwb3J0IGNsYXNzIFRva2VuUmVzcG9uc2Uge1xuICBhY2Nlc3NUb2tlbjogc3RyaW5nO1xuICB0b2tlblR5cGU6IFRva2VuVHlwZTtcbiAgZXhwaXJlc0luOiBudW1iZXJ8dW5kZWZpbmVkO1xuICByZWZyZXNoVG9rZW46IHN0cmluZ3x1bmRlZmluZWQ7XG4gIHNjb3BlOiBzdHJpbmd8dW5kZWZpbmVkO1xuICBpZFRva2VuOiBzdHJpbmd8dW5kZWZpbmVkO1xuICBpc3N1ZWRBdDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHJlc3BvbnNlOiBUb2tlblJlc3BvbnNlSnNvbikge1xuICAgIHRoaXMuYWNjZXNzVG9rZW4gPSByZXNwb25zZS5hY2Nlc3NfdG9rZW47XG4gICAgdGhpcy50b2tlblR5cGUgPSByZXNwb25zZS50b2tlbl90eXBlIHx8ICdiZWFyZXInO1xuICAgIGlmIChyZXNwb25zZS5leHBpcmVzX2luKSB7XG4gICAgICB0aGlzLmV4cGlyZXNJbiA9IHBhcnNlSW50KHJlc3BvbnNlLmV4cGlyZXNfaW4sIDEwKTtcbiAgICB9XG4gICAgdGhpcy5yZWZyZXNoVG9rZW4gPSByZXNwb25zZS5yZWZyZXNoX3Rva2VuO1xuICAgIHRoaXMuc2NvcGUgPSByZXNwb25zZS5zY29wZTtcbiAgICB0aGlzLmlkVG9rZW4gPSByZXNwb25zZS5pZF90b2tlbjtcbiAgICB0aGlzLmlzc3VlZEF0ID0gcmVzcG9uc2UuaXNzdWVkX2F0IHx8IG5vd0luU2Vjb25kcygpO1xuICB9XG5cbiAgdG9Kc29uKCk6IFRva2VuUmVzcG9uc2VKc29uIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWNjZXNzX3Rva2VuOiB0aGlzLmFjY2Vzc1Rva2VuLFxuICAgICAgaWRfdG9rZW46IHRoaXMuaWRUb2tlbixcbiAgICAgIHJlZnJlc2hfdG9rZW46IHRoaXMucmVmcmVzaFRva2VuLFxuICAgICAgc2NvcGU6IHRoaXMuc2NvcGUsXG4gICAgICB0b2tlbl90eXBlOiB0aGlzLnRva2VuVHlwZSxcbiAgICAgIGlzc3VlZF9hdDogdGhpcy5pc3N1ZWRBdCxcbiAgICAgIGV4cGlyZXNfaW46IHRoaXMuZXhwaXJlc0luPy50b1N0cmluZygpXG4gICAgfTtcbiAgfVxuXG4gIGlzVmFsaWQoYnVmZmVyOiBudW1iZXIgPSBBVVRIX0VYUElSWV9CVUZGRVIpOiBib29sZWFuIHtcbiAgICBpZiAodGhpcy5leHBpcmVzSW4pIHtcbiAgICAgIGxldCBub3cgPSBub3dJblNlY29uZHMoKTtcbiAgICAgIHJldHVybiBub3cgPCB0aGlzLmlzc3VlZEF0ICsgdGhpcy5leHBpcmVzSW4gKyBidWZmZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIFRva2VuIEVycm9yIHR5cGUuXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBsb29rIGF0OlxuICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY3NDkjc2VjdGlvbi01LjJcbiAqL1xuZXhwb3J0IGNsYXNzIFRva2VuRXJyb3Ige1xuICBlcnJvcjogRXJyb3JUeXBlO1xuICBlcnJvckRlc2NyaXB0aW9uOiBzdHJpbmd8dW5kZWZpbmVkO1xuICBlcnJvclVyaTogc3RyaW5nfHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3Rvcih0b2tlbkVycm9yOiBUb2tlbkVycm9ySnNvbikge1xuICAgIHRoaXMuZXJyb3IgPSB0b2tlbkVycm9yLmVycm9yO1xuICAgIHRoaXMuZXJyb3JEZXNjcmlwdGlvbiA9IHRva2VuRXJyb3IuZXJyb3JfZGVzY3JpcHRpb247XG4gICAgdGhpcy5lcnJvclVyaSA9IHRva2VuRXJyb3IuZXJyb3JfdXJpO1xuICB9XG5cbiAgdG9Kc29uKCk6IFRva2VuRXJyb3JKc29uIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXJyb3I6IHRoaXMuZXJyb3IsIGVycm9yX2Rlc2NyaXB0aW9uOiB0aGlzLmVycm9yRGVzY3JpcHRpb24sIGVycm9yX3VyaTogdGhpcy5lcnJvclVyaVxuICAgIH1cbiAgfVxufVxuIl19//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/token_response.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/types.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/types.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7R0FZRyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0XG4gKiBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlXG4gKiBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlclxuICogZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmluZ01hcCB7XG4gIFtrZXk6IHN0cmluZ106IHN0cmluZztcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgd2luZG93LmxvY2F0aW9uIGxpa2Ugb2JqZWN0LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIExvY2F0aW9uTGlrZSB7XG4gIGhhc2g6IHN0cmluZztcbiAgaG9zdDogc3RyaW5nO1xuICBvcmlnaW46IHN0cmluZztcbiAgaG9zdG5hbWU6IHN0cmluZztcbiAgcGF0aG5hbWU6IHN0cmluZztcbiAgcG9ydDogc3RyaW5nO1xuICBwcm90b2NvbDogc3RyaW5nO1xuICBzZWFyY2g6IHN0cmluZztcbiAgYXNzaWduKHVybDogc3RyaW5nKTogdm9pZDtcbn1cbiJdfQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BvcGVuaWQvYXBwYXV0aC9idWlsdC90eXBlcy5qcz82YzBkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQG9wZW5pZC9hcHBhdXRoL2J1aWx0L3R5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxuICogaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZVxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWRIbHdaWE11YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTl6Y21NdmRIbHdaWE11ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVRkJPenM3T3pzN096czdPenM3UjBGWlJ5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxWEc0Z0tpQkRiM0I1Y21sbmFIUWdNakF4TnlCSGIyOW5iR1VnU1c1akxseHVJQ3BjYmlBcUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUhSb1pTQkJjR0ZqYUdVZ1RHbGpaVzV6WlN3Z1ZtVnljMmx2YmlBeUxqQWdLSFJvWlNCY0lreHBZMlZ1YzJWY0lpazdJSGx2ZFNCdFlYa2dibTkwSUhWelpTQjBhR2x6SUdacGJHVWdaWGhqWlhCMFhHNGdLaUJwYmlCamIyMXdiR2xoYm1ObElIZHBkR2dnZEdobElFeHBZMlZ1YzJVdUlGbHZkU0J0WVhrZ2IySjBZV2x1SUdFZ1kyOXdlU0J2WmlCMGFHVWdUR2xqWlc1elpTQmhkRnh1SUNwY2JpQXFJR2gwZEhBNkx5OTNkM2N1WVhCaFkyaGxMbTl5Wnk5c2FXTmxibk5sY3k5TVNVTkZUbE5GTFRJdU1GeHVJQ3BjYmlBcUlGVnViR1Z6Y3lCeVpYRjFhWEpsWkNCaWVTQmhjSEJzYVdOaFlteGxJR3hoZHlCdmNpQmhaM0psWldRZ2RHOGdhVzRnZDNKcGRHbHVaeXdnYzI5bWRIZGhjbVVnWkdsemRISnBZblYwWldRZ2RXNWtaWElnZEdobFhHNGdLaUJNYVdObGJuTmxJR2x6SUdScGMzUnlhV0oxZEdWa0lHOXVJR0Z1SUZ3aVFWTWdTVk5jSWlCQ1FWTkpVeXdnVjBsVVNFOVZWQ0JYUVZKU1FVNVVTVVZUSUU5U0lFTlBUa1JKVkVsUFRsTWdUMFlnUVU1WklFdEpUa1FzSUdWcGRHaGxjbHh1SUNvZ1pYaHdjbVZ6Y3lCdmNpQnBiWEJzYVdWa0xpQlRaV1VnZEdobElFeHBZMlZ1YzJVZ1ptOXlJSFJvWlNCemNHVmphV1pwWXlCc1lXNW5kV0ZuWlNCbmIzWmxjbTVwYm1jZ2NHVnliV2x6YzJsdmJuTWdZVzVrWEc0Z0tpQnNhVzFwZEdGMGFXOXVjeUIxYm1SbGNpQjBhR1VnVEdsalpXNXpaUzVjYmlBcUwxeHVYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRk4wY21sdVowMWhjQ0I3WEc0Z0lGdHJaWGs2SUhOMGNtbHVaMTA2SUhOMGNtbHVaenRjYm4xY2JseHVMeW9xWEc0Z0tpQlNaWEJ5WlhObGJuUnpJR0VnZDJsdVpHOTNMbXh2WTJGMGFXOXVJR3hwYTJVZ2IySnFaV04wTGx4dUlDb3ZYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRXh2WTJGMGFXOXVUR2xyWlNCN1hHNGdJR2hoYzJnNklITjBjbWx1Wnp0Y2JpQWdhRzl6ZERvZ2MzUnlhVzVuTzF4dUlDQnZjbWxuYVc0NklITjBjbWx1Wnp0Y2JpQWdhRzl6ZEc1aGJXVTZJSE4wY21sdVp6dGNiaUFnY0dGMGFHNWhiV1U2SUhOMGNtbHVaenRjYmlBZ2NHOXlkRG9nYzNSeWFXNW5PMXh1SUNCd2NtOTBiMk52YkRvZ2MzUnlhVzVuTzF4dUlDQnpaV0Z5WTJnNklITjBjbWx1Wnp0Y2JpQWdZWE56YVdkdUtIVnliRG9nYzNSeWFXNW5LVG9nZG05cFpEdGNibjFjYmlKZGZRPT0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/types.js\n");

/***/ }),

/***/ "../../node_modules/@openid/appauth/built/xhr.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@openid/appauth/built/xhr.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestRequestor = exports.FetchRequestor = exports.JQueryRequestor = exports.Requestor = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"../../node_modules/@openid/appauth/built/errors.js\");\n/**\n * An class that abstracts away the ability to make an XMLHttpRequest.\n */\nvar Requestor = /** @class */ (function () {\n    function Requestor() {\n    }\n    return Requestor;\n}());\nexports.Requestor = Requestor;\n/**\n * Uses $.ajax to makes the Ajax requests.\n */\nvar JQueryRequestor = /** @class */ (function (_super) {\n    __extends(JQueryRequestor, _super);\n    function JQueryRequestor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    JQueryRequestor.prototype.xhr = function (settings) {\n        // NOTE: using jquery to make XHR's as whatwg-fetch requires\n        // that I target ES6.\n        var xhr = $.ajax(settings);\n        return new Promise(function (resolve, reject) {\n            xhr.then(function (data, textStatus, jqXhr) {\n                resolve(data);\n            }, function (jqXhr, textStatus, error) {\n                reject(new errors_1.AppAuthError(error));\n            });\n        });\n    };\n    return JQueryRequestor;\n}(Requestor));\nexports.JQueryRequestor = JQueryRequestor;\n/**\n * Uses fetch API to make Ajax requests\n */\nvar FetchRequestor = /** @class */ (function (_super) {\n    __extends(FetchRequestor, _super);\n    function FetchRequestor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FetchRequestor.prototype.xhr = function (settings) {\n        if (!settings.url) {\n            return Promise.reject(new errors_1.AppAuthError('A URL must be provided.'));\n        }\n        var url = new URL(settings.url);\n        var requestInit = {};\n        requestInit.method = settings.method;\n        requestInit.mode = 'cors';\n        if (settings.data) {\n            if (settings.method && settings.method.toUpperCase() === 'POST') {\n                requestInit.body = settings.data;\n            }\n            else {\n                var searchParams = new URLSearchParams(settings.data);\n                searchParams.forEach(function (value, key) {\n                    url.searchParams.append(key, value);\n                });\n            }\n        }\n        // Set the request headers\n        requestInit.headers = {};\n        if (settings.headers) {\n            for (var i in settings.headers) {\n                if (settings.headers.hasOwnProperty(i)) {\n                    requestInit.headers[i] = settings.headers[i];\n                }\n            }\n        }\n        var isJsonDataType = settings.dataType && settings.dataType.toLowerCase() === 'json';\n        // Set 'Accept' header value for json requests (Taken from\n        // https://github.com/jquery/jquery/blob/e0d941156900a6bff7c098c8ea7290528e468cf8/src/ajax.js#L644\n        // )\n        if (isJsonDataType) {\n            requestInit.headers['Accept'] = 'application/json, text/javascript, */*; q=0.01';\n        }\n        return fetch(url.toString(), requestInit).then(function (response) {\n            if (response.status >= 200 && response.status < 300) {\n                var contentType = response.headers.get('content-type');\n                if (isJsonDataType || (contentType && contentType.indexOf('application/json') !== -1)) {\n                    return response.json();\n                }\n                else {\n                    return response.text();\n                }\n            }\n            else {\n                return Promise.reject(new errors_1.AppAuthError(response.status.toString(), response.statusText));\n            }\n        });\n    };\n    return FetchRequestor;\n}(Requestor));\nexports.FetchRequestor = FetchRequestor;\n/**\n * Should be used only in the context of testing. Just uses the underlying\n * Promise to mock the behavior of the Requestor.\n */\nvar TestRequestor = /** @class */ (function (_super) {\n    __extends(TestRequestor, _super);\n    function TestRequestor(promise) {\n        var _this = _super.call(this) || this;\n        _this.promise = promise;\n        return _this;\n    }\n    TestRequestor.prototype.xhr = function (settings) {\n        return this.promise; // unsafe cast\n    };\n    return TestRequestor;\n}(Requestor));\nexports.TestRequestor = TestRequestor;\n//# sourceMappingURL=data:application/json;base64,//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0BvcGVuaWQvYXBwYXV0aC9idWlsdC94aHIuanM/ZDlmYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQixzQ0FBc0MsaUJBQWlCLEVBQUU7QUFDdkYsNkJBQTZCLDhFQUE4RTtBQUMzRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxlQUFlLG1CQUFPLENBQUMsb0VBQVU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRkFBb0Y7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwyQ0FBMkMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BvcGVuaWQvYXBwYXV0aC9idWlsdC94aHIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0XG4gKiBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlXG4gKiBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlclxuICogZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGVzdFJlcXVlc3RvciA9IGV4cG9ydHMuRmV0Y2hSZXF1ZXN0b3IgPSBleHBvcnRzLkpRdWVyeVJlcXVlc3RvciA9IGV4cG9ydHMuUmVxdWVzdG9yID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuLyoqXG4gKiBBbiBjbGFzcyB0aGF0IGFic3RyYWN0cyBhd2F5IHRoZSBhYmlsaXR5IHRvIG1ha2UgYW4gWE1MSHR0cFJlcXVlc3QuXG4gKi9cbnZhciBSZXF1ZXN0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVxdWVzdG9yKCkge1xuICAgIH1cbiAgICByZXR1cm4gUmVxdWVzdG9yO1xufSgpKTtcbmV4cG9ydHMuUmVxdWVzdG9yID0gUmVxdWVzdG9yO1xuLyoqXG4gKiBVc2VzICQuYWpheCB0byBtYWtlcyB0aGUgQWpheCByZXF1ZXN0cy5cbiAqL1xudmFyIEpRdWVyeVJlcXVlc3RvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSlF1ZXJ5UmVxdWVzdG9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEpRdWVyeVJlcXVlc3RvcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBKUXVlcnlSZXF1ZXN0b3IucHJvdG90eXBlLnhociA9IGZ1bmN0aW9uIChzZXR0aW5ncykge1xuICAgICAgICAvLyBOT1RFOiB1c2luZyBqcXVlcnkgdG8gbWFrZSBYSFIncyBhcyB3aGF0d2ctZmV0Y2ggcmVxdWlyZXNcbiAgICAgICAgLy8gdGhhdCBJIHRhcmdldCBFUzYuXG4gICAgICAgIHZhciB4aHIgPSAkLmFqYXgoc2V0dGluZ3MpO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgeGhyLnRoZW4oZnVuY3Rpb24gKGRhdGEsIHRleHRTdGF0dXMsIGpxWGhyKSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChqcVhociwgdGV4dFN0YXR1cywgZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QobmV3IGVycm9yc18xLkFwcEF1dGhFcnJvcihlcnJvcikpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIEpRdWVyeVJlcXVlc3Rvcjtcbn0oUmVxdWVzdG9yKSk7XG5leHBvcnRzLkpRdWVyeVJlcXVlc3RvciA9IEpRdWVyeVJlcXVlc3Rvcjtcbi8qKlxuICogVXNlcyBmZXRjaCBBUEkgdG8gbWFrZSBBamF4IHJlcXVlc3RzXG4gKi9cbnZhciBGZXRjaFJlcXVlc3RvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRmV0Y2hSZXF1ZXN0b3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRmV0Y2hSZXF1ZXN0b3IoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgRmV0Y2hSZXF1ZXN0b3IucHJvdG90eXBlLnhociA9IGZ1bmN0aW9uIChzZXR0aW5ncykge1xuICAgICAgICBpZiAoIXNldHRpbmdzLnVybCkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBlcnJvcnNfMS5BcHBBdXRoRXJyb3IoJ0EgVVJMIG11c3QgYmUgcHJvdmlkZWQuJykpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1cmwgPSBuZXcgVVJMKHNldHRpbmdzLnVybCk7XG4gICAgICAgIHZhciByZXF1ZXN0SW5pdCA9IHt9O1xuICAgICAgICByZXF1ZXN0SW5pdC5tZXRob2QgPSBzZXR0aW5ncy5tZXRob2Q7XG4gICAgICAgIHJlcXVlc3RJbml0Lm1vZGUgPSAnY29ycyc7XG4gICAgICAgIGlmIChzZXR0aW5ncy5kYXRhKSB7XG4gICAgICAgICAgICBpZiAoc2V0dGluZ3MubWV0aG9kICYmIHNldHRpbmdzLm1ldGhvZC50b1VwcGVyQ2FzZSgpID09PSAnUE9TVCcpIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0SW5pdC5ib2R5ID0gc2V0dGluZ3MuZGF0YTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHNldHRpbmdzLmRhdGEpO1xuICAgICAgICAgICAgICAgIHNlYXJjaFBhcmFtcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFNldCB0aGUgcmVxdWVzdCBoZWFkZXJzXG4gICAgICAgIHJlcXVlc3RJbml0LmhlYWRlcnMgPSB7fTtcbiAgICAgICAgaWYgKHNldHRpbmdzLmhlYWRlcnMpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgaW4gc2V0dGluZ3MuaGVhZGVycykge1xuICAgICAgICAgICAgICAgIGlmIChzZXR0aW5ncy5oZWFkZXJzLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3RJbml0LmhlYWRlcnNbaV0gPSBzZXR0aW5ncy5oZWFkZXJzW2ldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgaXNKc29uRGF0YVR5cGUgPSBzZXR0aW5ncy5kYXRhVHlwZSAmJiBzZXR0aW5ncy5kYXRhVHlwZS50b0xvd2VyQ2FzZSgpID09PSAnanNvbic7XG4gICAgICAgIC8vIFNldCAnQWNjZXB0JyBoZWFkZXIgdmFsdWUgZm9yIGpzb24gcmVxdWVzdHMgKFRha2VuIGZyb21cbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvYmxvYi9lMGQ5NDExNTY5MDBhNmJmZjdjMDk4YzhlYTcyOTA1MjhlNDY4Y2Y4L3NyYy9hamF4LmpzI0w2NDRcbiAgICAgICAgLy8gKVxuICAgICAgICBpZiAoaXNKc29uRGF0YVR5cGUpIHtcbiAgICAgICAgICAgIHJlcXVlc3RJbml0LmhlYWRlcnNbJ0FjY2VwdCddID0gJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmZXRjaCh1cmwudG9TdHJpbmcoKSwgcmVxdWVzdEluaXQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID49IDIwMCAmJiByZXNwb25zZS5zdGF0dXMgPCAzMDApIHtcbiAgICAgICAgICAgICAgICB2YXIgY29udGVudFR5cGUgPSByZXNwb25zZS5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJyk7XG4gICAgICAgICAgICAgICAgaWYgKGlzSnNvbkRhdGFUeXBlIHx8IChjb250ZW50VHlwZSAmJiBjb250ZW50VHlwZS5pbmRleE9mKCdhcHBsaWNhdGlvbi9qc29uJykgIT09IC0xKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IGVycm9yc18xLkFwcEF1dGhFcnJvcihyZXNwb25zZS5zdGF0dXMudG9TdHJpbmcoKSwgcmVzcG9uc2Uuc3RhdHVzVGV4dCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBGZXRjaFJlcXVlc3Rvcjtcbn0oUmVxdWVzdG9yKSk7XG5leHBvcnRzLkZldGNoUmVxdWVzdG9yID0gRmV0Y2hSZXF1ZXN0b3I7XG4vKipcbiAqIFNob3VsZCBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgdGVzdGluZy4gSnVzdCB1c2VzIHRoZSB1bmRlcmx5aW5nXG4gKiBQcm9taXNlIHRvIG1vY2sgdGhlIGJlaGF2aW9yIG9mIHRoZSBSZXF1ZXN0b3IuXG4gKi9cbnZhciBUZXN0UmVxdWVzdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhUZXN0UmVxdWVzdG9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFRlc3RSZXF1ZXN0b3IocHJvbWlzZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5wcm9taXNlID0gcHJvbWlzZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBUZXN0UmVxdWVzdG9yLnByb3RvdHlwZS54aHIgPSBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvbWlzZTsgLy8gdW5zYWZlIGNhc3RcbiAgICB9O1xuICAgIHJldHVybiBUZXN0UmVxdWVzdG9yO1xufShSZXF1ZXN0b3IpKTtcbmV4cG9ydHMuVGVzdFJlcXVlc3RvciA9IFRlc3RSZXF1ZXN0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2llR2h5TG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2YzNKakwzaG9jaTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRTdPenM3T3pzN096czdPenRIUVZsSE96czdPenM3T3pzN096czdPenM3T3pzN1FVRkZTQ3h0UTBGQmMwTTdRVUZGZEVNN08wZEJSVWM3UVVGRFNEdEpRVUZCTzBsQlJVRXNRMEZCUXp0SlFVRkVMR2RDUVVGRE8wRkJRVVFzUTBGQlF5eEJRVVpFTEVsQlJVTTdRVUZHY1VJc09FSkJRVk03UVVGSkwwSTdPMGRCUlVjN1FVRkRTRHRKUVVGeFF5eHRRMEZCVXp0SlFVRTVRenM3U1VGbFFTeERRVUZETzBsQlpFTXNOa0pCUVVjc1IwRkJTQ3hWUVVGUExGRkJRVFJDTzFGQlEycERMRFJFUVVFMFJEdFJRVU0xUkN4eFFrRkJjVUk3VVVGRGNrSXNTVUZCVFN4SFFVRkhMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0UlFVTTNRaXhQUVVGUExFbEJRVWtzVDBGQlR5eERRVUZKTEZWQlFVTXNUMEZCVHl4RlFVRkZMRTFCUVUwN1dVRkRjRU1zUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZEU2l4VlFVRkRMRWxCUVVrc1JVRkJSU3hWUVVGVkxFVkJRVVVzUzBGQlN6dG5Ra0ZEZEVJc1QwRkJUeXhEUVVGRExFbEJRVk1zUTBGQlF5eERRVUZETzFsQlEzSkNMRU5CUVVNc1JVRkRSQ3hWUVVGRExFdEJRVXNzUlVGQlJTeFZRVUZWTEVWQlFVVXNTMEZCU3p0blFrRkRka0lzVFVGQlRTeERRVUZETEVsQlFVa3NjVUpCUVZrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEyeERMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJRMVFzUTBGQlF5eERRVUZETEVOQlFVTTdTVUZEVEN4RFFVRkRPMGxCUTBnc2MwSkJRVU03UVVGQlJDeERRVUZETEVGQlprUXNRMEZCY1VNc1UwRkJVeXhIUVdVM1F6dEJRV1paTERCRFFVRmxPMEZCYTBJMVFqczdSMEZGUnp0QlFVTklPMGxCUVc5RExHdERRVUZUTzBsQlFUZERPenRKUVhGRVFTeERRVUZETzBsQmNFUkRMRFJDUVVGSExFZEJRVWdzVlVGQlR5eFJRVUUwUWp0UlFVTnFReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVkQlFVY3NSVUZCUlR0WlFVTnFRaXhQUVVGUExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4eFFrRkJXU3hEUVVGRExIbENRVUY1UWl4RFFVRkRMRU5CUVVNc1EwRkJRenRUUVVOd1JUdFJRVU5FTEVsQlFVa3NSMEZCUnl4SFFVRlJMRWxCUVVrc1IwRkJSeXhEUVVGVExGRkJRVkVzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0UlFVTTNReXhKUVVGSkxGZEJRVmNzUjBGQlowSXNSVUZCUlN4RFFVRkRPMUZCUTJ4RExGZEJRVmNzUTBGQlF5eE5RVUZOTEVkQlFVY3NVVUZCVVN4RFFVRkRMRTFCUVUwc1EwRkJRenRSUVVOeVF5eFhRVUZYTEVOQlFVTXNTVUZCU1N4SFFVRkhMRTFCUVUwc1EwRkJRenRSUVVVeFFpeEpRVUZKTEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVN1dVRkRha0lzU1VGQlNTeFJRVUZSTEVOQlFVTXNUVUZCVFN4SlFVRkpMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zVjBGQlZ5eEZRVUZGTEV0QlFVc3NUVUZCVFN4RlFVRkZPMmRDUVVNdlJDeFhRVUZYTEVOQlFVTXNTVUZCU1N4SFFVRlhMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU03WVVGRE1VTTdhVUpCUVUwN1owSkJRMHdzU1VGQlNTeFpRVUZaTEVkQlFVY3NTVUZCU1N4bFFVRmxMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTjBSQ3haUVVGWkxFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFVTXNTMEZCU3l4RlFVRkZMRWRCUVVjN2IwSkJRemxDTEVkQlFVY3NRMEZCUXl4WlFVRlpMRU5CUVVNc1RVRkJUU3hEUVVGRExFZEJRVWNzUlVGQlJTeExRVUZMTEVOQlFVTXNRMEZCUXp0blFrRkRkRU1zUTBGQlF5eERRVUZETEVOQlFVTTdZVUZEU2p0VFFVTkdPMUZCUlVRc01FSkJRVEJDTzFGQlF6RkNMRmRCUVZjc1EwRkJReXhQUVVGUExFZEJRVWNzUlVGQlJTeERRVUZETzFGQlEzcENMRWxCUVVrc1VVRkJVU3hEUVVGRExFOUJRVThzUlVGQlJUdFpRVU53UWl4TFFVRkxMRWxCUVVrc1EwRkJReXhKUVVGSkxGRkJRVkVzUTBGQlF5eFBRVUZQTEVWQlFVVTdaMEpCUXpsQ0xFbEJRVWtzVVVGQlVTeERRVUZETEU5QlFVOHNRMEZCUXl4alFVRmpMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVU3YjBKQlEzUkRMRmRCUVZjc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFWY3NVVUZCVVN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dHBRa0ZEZEVRN1lVRkRSanRUUVVOR08xRkJSVVFzU1VGQlRTeGpRVUZqTEVkQlFVY3NVVUZCVVN4RFFVRkRMRkZCUVZFc1NVRkJTU3hSUVVGUkxFTkJRVU1zVVVGQlVTeERRVUZETEZkQlFWY3NSVUZCUlN4TFFVRkxMRTFCUVUwc1EwRkJRenRSUVVWMlJpd3dSRUZCTUVRN1VVRkRNVVFzYTBkQlFXdEhPMUZCUTJ4SExFbEJRVWs3VVVGRFNpeEpRVUZKTEdOQlFXTXNSVUZCUlR0WlFVTnNRaXhYUVVGWExFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNRMEZCUXl4SFFVRkhMR2RFUVVGblJDeERRVUZETzFOQlEyeEdPMUZCUlVRc1QwRkJUeXhMUVVGTExFTkJRVU1zUjBGQlJ5eERRVUZETEZGQlFWRXNSVUZCUlN4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZCTEZGQlFWRTdXVUZEY2tRc1NVRkJTU3hSUVVGUkxFTkJRVU1zVFVGQlRTeEpRVUZKTEVkQlFVY3NTVUZCU1N4UlFVRlJMRU5CUVVNc1RVRkJUU3hIUVVGSExFZEJRVWNzUlVGQlJUdG5Ra0ZEYmtRc1NVRkJUU3hYUVVGWExFZEJRVWNzVVVGQlVTeERRVUZETEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1kwRkJZeXhEUVVGRExFTkJRVU03WjBKQlEzcEVMRWxCUVVrc1kwRkJZeXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEpRVUZKTEZkQlFWY3NRMEZCUXl4UFFVRlBMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRk8yOUNRVU55Uml4UFFVRlBMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dHBRa0ZEZUVJN2NVSkJRVTA3YjBKQlEwd3NUMEZCVHl4UlFVRlJMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03YVVKQlEzaENPMkZCUTBZN2FVSkJRVTA3WjBKQlEwd3NUMEZCVHl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzY1VKQlFWa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1RVRkJUU3hEUVVGRExGRkJRVkVzUlVGQlJTeEZRVUZGTEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRE8yRkJRekZHTzFGQlEwZ3NRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRUQ3hEUVVGRE8wbEJRMGdzY1VKQlFVTTdRVUZCUkN4RFFVRkRMRUZCY2tSRUxFTkJRVzlETEZOQlFWTXNSMEZ4UkRWRE8wRkJja1JaTEhkRFFVRmpPMEZCZFVRelFqczdPMGRCUjBjN1FVRkRTRHRKUVVGdFF5eHBRMEZCVXp0SlFVTXhReXgxUWtGQmJVSXNUMEZCY1VJN1VVRkJlRU1zV1VGRFJTeHBRa0ZCVHl4VFFVTlNPMUZCUm10Q0xHRkJRVThzUjBGQlVDeFBRVUZQTEVOQlFXTTdPMGxCUlhoRExFTkJRVU03U1VGRFJDd3lRa0ZCUnl4SFFVRklMRlZCUVU4c1VVRkJORUk3VVVGRGFrTXNUMEZCVHl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVVVzWTBGQll6dEpRVU4wUXl4RFFVRkRPMGxCUTBnc2IwSkJRVU03UVVGQlJDeERRVUZETEVGQlVFUXNRMEZCYlVNc1UwRkJVeXhIUVU4elF6dEJRVkJaTEhORFFVRmhJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHlwY2JpQXFJRU52Y0hseWFXZG9kQ0F5TURFM0lFZHZiMmRzWlNCSmJtTXVYRzRnS2x4dUlDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ2RHaGxJRUZ3WVdOb1pTQk1hV05sYm5ObExDQldaWEp6YVc5dUlESXVNQ0FvZEdobElGd2lUR2xqWlc1elpWd2lLVHNnZVc5MUlHMWhlU0J1YjNRZ2RYTmxJSFJvYVhNZ1ptbHNaU0JsZUdObGNIUmNiaUFxSUdsdUlHTnZiWEJzYVdGdVkyVWdkMmwwYUNCMGFHVWdUR2xqWlc1elpTNGdXVzkxSUcxaGVTQnZZblJoYVc0Z1lTQmpiM0I1SUc5bUlIUm9aU0JNYVdObGJuTmxJR0YwWEc0Z0tseHVJQ29nYUhSMGNEb3ZMM2QzZHk1aGNHRmphR1V1YjNKbkwyeHBZMlZ1YzJWekwweEpRMFZPVTBVdE1pNHdYRzRnS2x4dUlDb2dWVzVzWlhOeklISmxjWFZwY21Wa0lHSjVJR0Z3Y0d4cFkyRmliR1VnYkdGM0lHOXlJR0ZuY21WbFpDQjBieUJwYmlCM2NtbDBhVzVuTENCemIyWjBkMkZ5WlNCa2FYTjBjbWxpZFhSbFpDQjFibVJsY2lCMGFHVmNiaUFxSUV4cFkyVnVjMlVnYVhNZ1pHbHpkSEpwWW5WMFpXUWdiMjRnWVc0Z1hDSkJVeUJKVTF3aUlFSkJVMGxUTENCWFNWUklUMVZVSUZkQlVsSkJUbFJKUlZNZ1QxSWdRMDlPUkVsVVNVOU9VeUJQUmlCQlRsa2dTMGxPUkN3Z1pXbDBhR1Z5WEc0Z0tpQmxlSEJ5WlhOeklHOXlJR2x0Y0d4cFpXUXVJRk5sWlNCMGFHVWdUR2xqWlc1elpTQm1iM0lnZEdobElITndaV05wWm1saklHeGhibWQxWVdkbElHZHZkbVZ5Ym1sdVp5QndaWEp0YVhOemFXOXVjeUJoYm1SY2JpQXFJR3hwYldsMFlYUnBiMjV6SUhWdVpHVnlJSFJvWlNCTWFXTmxibk5sTGx4dUlDb3ZYRzVjYm1sdGNHOXlkQ0I3UVhCd1FYVjBhRVZ5Y205eWZTQm1jbTl0SUNjdUwyVnljbTl5Y3ljN1hHNWNiaThxS2x4dUlDb2dRVzRnWTJ4aGMzTWdkR2hoZENCaFluTjBjbUZqZEhNZ1lYZGhlU0IwYUdVZ1lXSnBiR2wwZVNCMGJ5QnRZV3RsSUdGdUlGaE5URWgwZEhCU1pYRjFaWE4wTGx4dUlDb3ZYRzVsZUhCdmNuUWdZV0p6ZEhKaFkzUWdZMnhoYzNNZ1VtVnhkV1Z6ZEc5eUlIdGNiaUFnWVdKemRISmhZM1FnZUdoeVBGUStLSE5sZEhScGJtZHpPaUJLVVhWbGNubEJhbUY0VTJWMGRHbHVaM01wT2lCUWNtOXRhWE5sUEZRK08xeHVmVnh1WEc0dktpcGNiaUFxSUZWelpYTWdKQzVoYW1GNElIUnZJRzFoYTJWeklIUm9aU0JCYW1GNElISmxjWFZsYzNSekxseHVJQ292WEc1bGVIQnZjblFnWTJ4aGMzTWdTbEYxWlhKNVVtVnhkV1Z6ZEc5eUlHVjRkR1Z1WkhNZ1VtVnhkV1Z6ZEc5eUlIdGNiaUFnZUdoeVBGUStLSE5sZEhScGJtZHpPaUJLVVhWbGNubEJhbUY0VTJWMGRHbHVaM01wT2lCUWNtOXRhWE5sUEZRK0lIdGNiaUFnSUNBdkx5Qk9UMVJGT2lCMWMybHVaeUJxY1hWbGNua2dkRzhnYldGclpTQllTRkluY3lCaGN5QjNhR0YwZDJjdFptVjBZMmdnY21WeGRXbHlaWE5jYmlBZ0lDQXZMeUIwYUdGMElFa2dkR0Z5WjJWMElFVlROaTVjYmlBZ0lDQmpiMjV6ZENCNGFISWdQU0FrTG1GcVlYZ29jMlYwZEdsdVozTXBPMXh1SUNBZ0lISmxkSFZ5YmlCdVpYY2dVSEp2YldselpUeFVQaWdvY21WemIyeDJaU3dnY21WcVpXTjBLU0E5UGlCN1hHNGdJQ0FnSUNCNGFISXVkR2hsYmloY2JpQWdJQ0FnSUNBZ0lDQW9aR0YwWVN3Z2RHVjRkRk4wWVhSMWN5d2dhbkZZYUhJcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxjMjlzZG1Vb1pHRjBZU0JoY3lCVUtUdGNiaUFnSUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNBZ0lDaHFjVmhvY2l3Z2RHVjRkRk4wWVhSMWN5d2daWEp5YjNJcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxhbVZqZENodVpYY2dRWEJ3UVhWMGFFVnljbTl5S0dWeWNtOXlLU2s3WEc0Z0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZTazdYRzRnSUgxY2JuMWNibHh1WEc0dktpcGNiaUFxSUZWelpYTWdabVYwWTJnZ1FWQkpJSFJ2SUcxaGEyVWdRV3BoZUNCeVpYRjFaWE4wYzF4dUlDb3ZYRzVsZUhCdmNuUWdZMnhoYzNNZ1JtVjBZMmhTWlhGMVpYTjBiM0lnWlhoMFpXNWtjeUJTWlhGMVpYTjBiM0lnZTF4dUlDQjRhSEk4VkQ0b2MyVjBkR2x1WjNNNklFcFJkV1Z5ZVVGcVlYaFRaWFIwYVc1bmN5azZJRkJ5YjIxcGMyVThWRDRnZTF4dUlDQWdJR2xtSUNnaGMyVjBkR2x1WjNNdWRYSnNLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdVSEp2YldselpTNXlaV3BsWTNRb2JtVjNJRUZ3Y0VGMWRHaEZjbkp2Y2lnblFTQlZVa3dnYlhWemRDQmlaU0J3Y205MmFXUmxaQzRuS1NrN1hHNGdJQ0FnZlZ4dUlDQWdJR3hsZENCMWNtdzZJRlZTVENBOUlHNWxkeUJWVWt3b1BITjBjbWx1Wno1elpYUjBhVzVuY3k1MWNtd3BPMXh1SUNBZ0lHeGxkQ0J5WlhGMVpYTjBTVzVwZERvZ1VtVnhkV1Z6ZEVsdWFYUWdQU0I3ZlR0Y2JpQWdJQ0J5WlhGMVpYTjBTVzVwZEM1dFpYUm9iMlFnUFNCelpYUjBhVzVuY3k1dFpYUm9iMlE3WEc0Z0lDQWdjbVZ4ZFdWemRFbHVhWFF1Ylc5a1pTQTlJQ2RqYjNKekp6dGNibHh1SUNBZ0lHbG1JQ2h6WlhSMGFXNW5jeTVrWVhSaEtTQjdYRzRnSUNBZ0lDQnBaaUFvYzJWMGRHbHVaM011YldWMGFHOWtJQ1ltSUhObGRIUnBibWR6TG0xbGRHaHZaQzUwYjFWd2NHVnlRMkZ6WlNncElEMDlQU0FuVUU5VFZDY3BJSHRjYmlBZ0lDQWdJQ0FnY21WeGRXVnpkRWx1YVhRdVltOWtlU0E5SUR4emRISnBibWMrYzJWMGRHbHVaM011WkdGMFlUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHeGxkQ0J6WldGeVkyaFFZWEpoYlhNZ1BTQnVaWGNnVlZKTVUyVmhjbU5vVUdGeVlXMXpLSE5sZEhScGJtZHpMbVJoZEdFcE8xeHVJQ0FnSUNBZ0lDQnpaV0Z5WTJoUVlYSmhiWE11Wm05eVJXRmphQ2dvZG1Gc2RXVXNJR3RsZVNrZ1BUN0NvSHRjYmlBZ0lDQWdJQ0FnSUNCMWNtd3VjMlZoY21Ob1VHRnlZVzF6TG1Gd2NHVnVaQ2hyWlhrc0lIWmhiSFZsS1R0Y2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdVMlYwSUhSb1pTQnlaWEYxWlhOMElHaGxZV1JsY25OY2JpQWdJQ0J5WlhGMVpYTjBTVzVwZEM1b1pXRmtaWEp6SUQwZ2UzMDdYRzRnSUNBZ2FXWWdLSE5sZEhScGJtZHpMbWhsWVdSbGNuTXBJSHRjYmlBZ0lDQWdJR1p2Y2lBb2JHVjBJR2tnYVc0Z2MyVjBkR2x1WjNNdWFHVmhaR1Z5Y3lrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvYzJWMGRHbHVaM011YUdWaFpHVnljeTVvWVhOUGQyNVFjbTl3WlhKMGVTaHBLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lISmxjWFZsYzNSSmJtbDBMbWhsWVdSbGNuTmJhVjBnUFNBOGMzUnlhVzVuUG5ObGRIUnBibWR6TG1obFlXUmxjbk5iYVYwN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JwYzBwemIyNUVZWFJoVkhsd1pTQTlJSE5sZEhScGJtZHpMbVJoZEdGVWVYQmxJQ1ltSUhObGRIUnBibWR6TG1SaGRHRlVlWEJsTG5SdlRHOTNaWEpEWVhObEtDa2dQVDA5SUNkcWMyOXVKenRjYmx4dUlDQWdJQzh2SUZObGRDQW5RV05qWlhCMEp5Qm9aV0ZrWlhJZ2RtRnNkV1VnWm05eUlHcHpiMjRnY21WeGRXVnpkSE1nS0ZSaGEyVnVJR1p5YjIxY2JpQWdJQ0F2THlCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmFuRjFaWEo1TDJweGRXVnllUzlpYkc5aUwyVXdaRGswTVRFMU5qa3dNR0UyWW1abU4yTXdPVGhqT0dWaE56STVNRFV5T0dVME5qaGpaamd2YzNKakwyRnFZWGd1YW5NalREWTBORnh1SUNBZ0lDOHZJQ2xjYmlBZ0lDQnBaaUFvYVhOS2MyOXVSR0YwWVZSNWNHVXBJSHRjYmlBZ0lDQWdJSEpsY1hWbGMzUkpibWwwTG1obFlXUmxjbk5iSjBGalkyVndkQ2RkSUQwZ0oyRndjR3hwWTJGMGFXOXVMMnB6YjI0c0lIUmxlSFF2YW1GMllYTmpjbWx3ZEN3Z0tpOHFPeUJ4UFRBdU1ERW5PMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCbVpYUmphQ2gxY213dWRHOVRkSEpwYm1jb0tTd2djbVZ4ZFdWemRFbHVhWFFwTG5Sb1pXNG9jbVZ6Y0c5dWMyVWdQVDRnZTF4dUlDQWdJQ0FnYVdZZ0tISmxjM0J2Ym5ObExuTjBZWFIxY3lBK1BTQXlNREFnSmlZZ2NtVnpjRzl1YzJVdWMzUmhkSFZ6SUR3Z016QXdLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR052Ym5SbGJuUlVlWEJsSUQwZ2NtVnpjRzl1YzJVdWFHVmhaR1Z5Y3k1blpYUW9KMk52Ym5SbGJuUXRkSGx3WlNjcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvYVhOS2MyOXVSR0YwWVZSNWNHVWdmSHdnS0dOdmJuUmxiblJVZVhCbElDWW1JR052Ym5SbGJuUlVlWEJsTG1sdVpHVjRUMllvSjJGd2NHeHBZMkYwYVc5dUwycHpiMjRuS1NBaFBUMGdMVEVwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlISmxjM0J2Ym5ObExtcHpiMjRvS1R0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVnpjRzl1YzJVdWRHVjRkQ2dwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVUhKdmJXbHpaUzV5WldwbFkzUW9ibVYzSUVGd2NFRjFkR2hGY25KdmNpaHlaWE53YjI1elpTNXpkR0YwZFhNdWRHOVRkSEpwYm1jb0tTd2djbVZ6Y0c5dWMyVXVjM1JoZEhWelZHVjRkQ2twTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBwTzF4dUlDQjlYRzU5WEc1Y2JpOHFLbHh1SUNvZ1UyaHZkV3hrSUdKbElIVnpaV1FnYjI1c2VTQnBiaUIwYUdVZ1kyOXVkR1Y0ZENCdlppQjBaWE4wYVc1bkxpQktkWE4wSUhWelpYTWdkR2hsSUhWdVpHVnliSGxwYm1kY2JpQXFJRkJ5YjIxcGMyVWdkRzhnYlc5amF5QjBhR1VnWW1Wb1lYWnBiM0lnYjJZZ2RHaGxJRkpsY1hWbGMzUnZjaTVjYmlBcUwxeHVaWGh3YjNKMElHTnNZWE56SUZSbGMzUlNaWEYxWlhOMGIzSWdaWGgwWlc1a2N5QlNaWEYxWlhOMGIzSWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaHdkV0pzYVdNZ2NISnZiV2x6WlRvZ1VISnZiV2x6WlR4aGJuaytLU0I3WEc0Z0lDQWdjM1Z3WlhJb0tUdGNiaUFnZlZ4dUlDQjRhSEk4VkQ0b2MyVjBkR2x1WjNNNklFcFJkV1Z5ZVVGcVlYaFRaWFIwYVc1bmN5azZJRkJ5YjIxcGMyVThWRDRnZTF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG5CeWIyMXBjMlU3SUNBdkx5QjFibk5oWm1VZ1kyRnpkRnh1SUNCOVhHNTlYRzRpWFgwPSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@openid/appauth/built/xhr.js\n");

/***/ }),

/***/ "../../node_modules/@web3-react/abstract-connector/dist/abstract-connector.cjs.development.js":
/*!*************************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@web3-react/abstract-connector/dist/abstract-connector.cjs.development.js ***!
  \*************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar events = __webpack_require__(/*! events */ \"events\");\nvar types = __webpack_require__(/*! @web3-react/types */ \"../../node_modules/@web3-react/types/dist/index.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar AbstractConnector =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(AbstractConnector, _EventEmitter);\n\n  function AbstractConnector(_temp) {\n    var _this;\n\n    var _ref = _temp === void 0 ? {} : _temp,\n        supportedChainIds = _ref.supportedChainIds;\n\n    _this = _EventEmitter.call(this) || this;\n    _this.supportedChainIds = supportedChainIds;\n    return _this;\n  }\n\n  var _proto = AbstractConnector.prototype;\n\n  _proto.emitUpdate = function emitUpdate(update) {\n    {\n      console.log(\"Emitting '\" + types.ConnectorEvent.Update + \"' with payload\", update);\n    }\n\n    this.emit(types.ConnectorEvent.Update, update);\n  };\n\n  _proto.emitError = function emitError(error) {\n    {\n      console.log(\"Emitting '\" + types.ConnectorEvent.Error + \"' with payload\", error);\n    }\n\n    this.emit(types.ConnectorEvent.Error, error);\n  };\n\n  _proto.emitDeactivate = function emitDeactivate() {\n    {\n      console.log(\"Emitting '\" + types.ConnectorEvent.Deactivate + \"'\");\n    }\n\n    this.emit(types.ConnectorEvent.Deactivate);\n  };\n\n  return AbstractConnector;\n}(events.EventEmitter);\n\nexports.AbstractConnector = AbstractConnector;\n//# sourceMappingURL=abstract-connector.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0B3ZWIzLXJlYWN0L2Fic3RyYWN0LWNvbm5lY3Rvci9kaXN0L2Fic3RyYWN0LWNvbm5lY3Rvci5janMuZGV2ZWxvcG1lbnQuanM/YWM5MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixhQUFhLG1CQUFPLENBQUMsc0JBQVE7QUFDN0IsWUFBWSxtQkFBTyxDQUFDLDZFQUFtQjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9DQUFvQztBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLENBQUM7O0FBRUQ7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvYWJzdHJhY3QtY29ubmVjdG9yL2Rpc3QvYWJzdHJhY3QtY29ubmVjdG9yLmNqcy5kZXZlbG9wbWVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGV2ZW50cyA9IHJlcXVpcmUoJ2V2ZW50cycpO1xudmFyIHR5cGVzID0gcmVxdWlyZSgnQHdlYjMtcmVhY3QvdHlwZXMnKTtcblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG52YXIgQWJzdHJhY3RDb25uZWN0b3IgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzTG9vc2UoQWJzdHJhY3RDb25uZWN0b3IsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIGZ1bmN0aW9uIEFic3RyYWN0Q29ubmVjdG9yKF90ZW1wKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCxcbiAgICAgICAgc3VwcG9ydGVkQ2hhaW5JZHMgPSBfcmVmLnN1cHBvcnRlZENoYWluSWRzO1xuXG4gICAgX3RoaXMgPSBfRXZlbnRFbWl0dGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdXBwb3J0ZWRDaGFpbklkcyA9IHN1cHBvcnRlZENoYWluSWRzO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBBYnN0cmFjdENvbm5lY3Rvci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmVtaXRVcGRhdGUgPSBmdW5jdGlvbiBlbWl0VXBkYXRlKHVwZGF0ZSkge1xuICAgIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRW1pdHRpbmcgJ1wiICsgdHlwZXMuQ29ubmVjdG9yRXZlbnQuVXBkYXRlICsgXCInIHdpdGggcGF5bG9hZFwiLCB1cGRhdGUpO1xuICAgIH1cblxuICAgIHRoaXMuZW1pdCh0eXBlcy5Db25uZWN0b3JFdmVudC5VcGRhdGUsIHVwZGF0ZSk7XG4gIH07XG5cbiAgX3Byb3RvLmVtaXRFcnJvciA9IGZ1bmN0aW9uIGVtaXRFcnJvcihlcnJvcikge1xuICAgIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRW1pdHRpbmcgJ1wiICsgdHlwZXMuQ29ubmVjdG9yRXZlbnQuRXJyb3IgKyBcIicgd2l0aCBwYXlsb2FkXCIsIGVycm9yKTtcbiAgICB9XG5cbiAgICB0aGlzLmVtaXQodHlwZXMuQ29ubmVjdG9yRXZlbnQuRXJyb3IsIGVycm9yKTtcbiAgfTtcblxuICBfcHJvdG8uZW1pdERlYWN0aXZhdGUgPSBmdW5jdGlvbiBlbWl0RGVhY3RpdmF0ZSgpIHtcbiAgICB7XG4gICAgICBjb25zb2xlLmxvZyhcIkVtaXR0aW5nICdcIiArIHR5cGVzLkNvbm5lY3RvckV2ZW50LkRlYWN0aXZhdGUgKyBcIidcIik7XG4gICAgfVxuXG4gICAgdGhpcy5lbWl0KHR5cGVzLkNvbm5lY3RvckV2ZW50LkRlYWN0aXZhdGUpO1xuICB9O1xuXG4gIHJldHVybiBBYnN0cmFjdENvbm5lY3Rvcjtcbn0oZXZlbnRzLkV2ZW50RW1pdHRlcik7XG5cbmV4cG9ydHMuQWJzdHJhY3RDb25uZWN0b3IgPSBBYnN0cmFjdENvbm5lY3Rvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFic3RyYWN0LWNvbm5lY3Rvci5janMuZGV2ZWxvcG1lbnQuanMubWFwXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@web3-react/abstract-connector/dist/abstract-connector.cjs.development.js\n");

/***/ }),

/***/ "../../node_modules/@web3-react/abstract-connector/dist/index.js":
/*!********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@web3-react/abstract-connector/dist/index.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./abstract-connector.cjs.development.js */ \"../../node_modules/@web3-react/abstract-connector/dist/abstract-connector.cjs.development.js\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0B3ZWIzLXJlYWN0L2Fic3RyYWN0LWNvbm5lY3Rvci9kaXN0L2luZGV4LmpzPzkyOTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNZOztBQUVaLElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUNELG1CQUFtQixtQkFBTyxDQUFDLDZJQUF5QztBQUNwRSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvYWJzdHJhY3QtY29ubmVjdG9yL2Rpc3QvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2Ugc3RyaWN0J1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vYWJzdHJhY3QtY29ubmVjdG9yLmNqcy5wcm9kdWN0aW9uLm1pbi5qcycpXG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vYWJzdHJhY3QtY29ubmVjdG9yLmNqcy5kZXZlbG9wbWVudC5qcycpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@web3-react/abstract-connector/dist/index.js\n");

/***/ }),

/***/ "../../node_modules/@web3-react/types/dist/index.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@web3-react/types/dist/index.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./types.cjs.development.js */ \"../../node_modules/@web3-react/types/dist/types.cjs.development.js\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0B3ZWIzLXJlYWN0L3R5cGVzL2Rpc3QvaW5kZXguanM/NDA4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ1k7O0FBRVosSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsbUJBQW1CLG1CQUFPLENBQUMsc0dBQTRCO0FBQ3ZEIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9Ad2ViMy1yZWFjdC90eXBlcy9kaXN0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ndXNlIHN0cmljdCdcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL3R5cGVzLmNqcy5wcm9kdWN0aW9uLm1pbi5qcycpXG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vdHlwZXMuY2pzLmRldmVsb3BtZW50LmpzJylcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/@web3-react/types/dist/index.js\n");

/***/ }),

/***/ "../../node_modules/@web3-react/types/dist/types.cjs.development.js":
/*!***********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/@web3-react/types/dist/types.cjs.development.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (ConnectorEvent) {\n  ConnectorEvent[\"Update\"] = \"Web3ReactUpdate\";\n  ConnectorEvent[\"Error\"] = \"Web3ReactError\";\n  ConnectorEvent[\"Deactivate\"] = \"Web3ReactDeactivate\";\n})(exports.ConnectorEvent || (exports.ConnectorEvent = {}));\n//# sourceMappingURL=types.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL0B3ZWIzLXJlYWN0L3R5cGVzL2Rpc3QvdHlwZXMuY2pzLmRldmVsb3BtZW50LmpzPzQ1MTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdEQUF3RDtBQUN6RCIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvdHlwZXMvZGlzdC90eXBlcy5janMuZGV2ZWxvcG1lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbihmdW5jdGlvbiAoQ29ubmVjdG9yRXZlbnQpIHtcbiAgQ29ubmVjdG9yRXZlbnRbXCJVcGRhdGVcIl0gPSBcIldlYjNSZWFjdFVwZGF0ZVwiO1xuICBDb25uZWN0b3JFdmVudFtcIkVycm9yXCJdID0gXCJXZWIzUmVhY3RFcnJvclwiO1xuICBDb25uZWN0b3JFdmVudFtcIkRlYWN0aXZhdGVcIl0gPSBcIldlYjNSZWFjdERlYWN0aXZhdGVcIjtcbn0pKGV4cG9ydHMuQ29ubmVjdG9yRXZlbnQgfHwgKGV4cG9ydHMuQ29ubmVjdG9yRXZlbnQgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuY2pzLmRldmVsb3BtZW50LmpzLm1hcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@web3-react/types/dist/types.cjs.development.js\n");

/***/ }),

/***/ "../../node_modules/async-mutex/lib/Mutex.js":
/*!************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async-mutex/lib/Mutex.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.js\");\nvar Semaphore_1 = __webpack_require__(/*! ./Semaphore */ \"../../node_modules/async-mutex/lib/Semaphore.js\");\nvar Mutex = /** @class */ (function () {\n    function Mutex() {\n        this._semaphore = new Semaphore_1.default(1);\n    }\n    Mutex.prototype.acquire = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, releaser;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\n                    case 1:\n                        _a = _b.sent(), releaser = _a[1];\n                        return [2 /*return*/, releaser];\n                }\n            });\n        });\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this._semaphore.runExclusive(function () { return callback(); });\n    };\n    Mutex.prototype.isLocked = function () {\n        return this._semaphore.isLocked();\n    };\n    Mutex.prototype.release = function () {\n        this._semaphore.release();\n    };\n    return Mutex;\n}());\nexports.default = Mutex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jLW11dGV4L2xpYi9NdXRleC5qcz9iNWQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsY0FBYyxtQkFBTyxDQUFDLGdEQUFPO0FBQzdCLGtCQUFrQixtQkFBTyxDQUFDLG9FQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSx5REFBeUQsbUJBQW1CLEVBQUU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMtbXV0ZXgvbGliL011dGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnZhciBTZW1hcGhvcmVfMSA9IHJlcXVpcmUoXCIuL1NlbWFwaG9yZVwiKTtcbnZhciBNdXRleCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNdXRleCgpIHtcbiAgICAgICAgdGhpcy5fc2VtYXBob3JlID0gbmV3IFNlbWFwaG9yZV8xLmRlZmF1bHQoMSk7XG4gICAgfVxuICAgIE11dGV4LnByb3RvdHlwZS5hY3F1aXJlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYSwgcmVsZWFzZXI7XG4gICAgICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2IpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9iLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5fc2VtYXBob3JlLmFjcXVpcmUoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hID0gX2Iuc2VudCgpLCByZWxlYXNlciA9IF9hWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIHJlbGVhc2VyXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBNdXRleC5wcm90b3R5cGUucnVuRXhjbHVzaXZlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zZW1hcGhvcmUucnVuRXhjbHVzaXZlKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNhbGxiYWNrKCk7IH0pO1xuICAgIH07XG4gICAgTXV0ZXgucHJvdG90eXBlLmlzTG9ja2VkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2VtYXBob3JlLmlzTG9ja2VkKCk7XG4gICAgfTtcbiAgICBNdXRleC5wcm90b3R5cGUucmVsZWFzZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fc2VtYXBob3JlLnJlbGVhc2UoKTtcbiAgICB9O1xuICAgIHJldHVybiBNdXRleDtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBNdXRleDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async-mutex/lib/Mutex.js\n");

/***/ }),

/***/ "../../node_modules/async-mutex/lib/Semaphore.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async-mutex/lib/Semaphore.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.js\");\nvar Semaphore = /** @class */ (function () {\n    function Semaphore(_maxConcurrency) {\n        this._maxConcurrency = _maxConcurrency;\n        this._queue = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    Semaphore.prototype.acquire = function () {\n        var _this = this;\n        var locked = this.isLocked();\n        var ticket = new Promise(function (r) { return _this._queue.push(r); });\n        if (!locked)\n            this._dispatch();\n        return ticket;\n    };\n    Semaphore.prototype.runExclusive = function (callback) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, value, release;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.acquire()];\n                    case 1:\n                        _a = _b.sent(), value = _a[0], release = _a[1];\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 4, 5]);\n                        return [4 /*yield*/, callback(value)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                    case 4:\n                        release();\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Semaphore.prototype.isLocked = function () {\n        return this._value <= 0;\n    };\n    Semaphore.prototype.release = function () {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailabel on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            var releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    };\n    Semaphore.prototype._dispatch = function () {\n        var _this = this;\n        var nextConsumer = this._queue.shift();\n        if (!nextConsumer)\n            return;\n        var released = false;\n        this._currentReleaser = function () {\n            if (released)\n                return;\n            released = true;\n            _this._value++;\n            _this._dispatch();\n        };\n        nextConsumer([this._value--, this._currentReleaser]);\n    };\n    return Semaphore;\n}());\nexports.default = Semaphore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jLW11dGV4L2xpYi9TZW1hcGhvcmUuanM/ZGEzMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELGNBQWMsbUJBQU8sQ0FBQyxnREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsNkJBQTZCLEVBQUU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJGQUEyRjtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9hc3luYy1tdXRleC9saWIvU2VtYXBob3JlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnZhciBTZW1hcGhvcmUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2VtYXBob3JlKF9tYXhDb25jdXJyZW5jeSkge1xuICAgICAgICB0aGlzLl9tYXhDb25jdXJyZW5jeSA9IF9tYXhDb25jdXJyZW5jeTtcbiAgICAgICAgdGhpcy5fcXVldWUgPSBbXTtcbiAgICAgICAgaWYgKF9tYXhDb25jdXJyZW5jeSA8PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3NlbWFwaG9yZSBtdXN0IGJlIGluaXRpYWxpemVkIHRvIGEgcG9zaXRpdmUgdmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl92YWx1ZSA9IF9tYXhDb25jdXJyZW5jeTtcbiAgICB9XG4gICAgU2VtYXBob3JlLnByb3RvdHlwZS5hY3F1aXJlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgbG9ja2VkID0gdGhpcy5pc0xvY2tlZCgpO1xuICAgICAgICB2YXIgdGlja2V0ID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIF90aGlzLl9xdWV1ZS5wdXNoKHIpOyB9KTtcbiAgICAgICAgaWYgKCFsb2NrZWQpXG4gICAgICAgICAgICB0aGlzLl9kaXNwYXRjaCgpO1xuICAgICAgICByZXR1cm4gdGlja2V0O1xuICAgIH07XG4gICAgU2VtYXBob3JlLnByb3RvdHlwZS5ydW5FeGNsdXNpdmUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2EsIHZhbHVlLCByZWxlYXNlO1xuICAgICAgICAgICAgcmV0dXJuIHRzbGliXzEuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9iKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYi5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuYWNxdWlyZSgpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2EgPSBfYi5zZW50KCksIHZhbHVlID0gX2FbMF0sIHJlbGVhc2UgPSBfYVsxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9iLmxhYmVsID0gMjtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2IudHJ5cy5wdXNoKFsyLCAsIDQsIDVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIGNhbGxiYWNrKHZhbHVlKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9iLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbGVhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNyAvKmVuZGZpbmFsbHkqL107XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTogcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFNlbWFwaG9yZS5wcm90b3R5cGUuaXNMb2NrZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92YWx1ZSA8PSAwO1xuICAgIH07XG4gICAgU2VtYXBob3JlLnByb3RvdHlwZS5yZWxlYXNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fbWF4Q29uY3VycmVuY3kgPiAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3RoaXMgbWV0aG9kIGlzIHVuYXZhaWxhYmVsIG9uIHNlbWFwaG9yZXMgd2l0aCBjb25jdXJyZW5jeSA+IDE7IHVzZSB0aGUgc2NvcGVkIHJlbGVhc2UgcmV0dXJuZWQgYnkgYWNxdWlyZSBpbnN0ZWFkJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRSZWxlYXNlcikge1xuICAgICAgICAgICAgdmFyIHJlbGVhc2VyID0gdGhpcy5fY3VycmVudFJlbGVhc2VyO1xuICAgICAgICAgICAgdGhpcy5fY3VycmVudFJlbGVhc2VyID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgcmVsZWFzZXIoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgU2VtYXBob3JlLnByb3RvdHlwZS5fZGlzcGF0Y2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBuZXh0Q29uc3VtZXIgPSB0aGlzLl9xdWV1ZS5zaGlmdCgpO1xuICAgICAgICBpZiAoIW5leHRDb25zdW1lcilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIHJlbGVhc2VkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2N1cnJlbnRSZWxlYXNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChyZWxlYXNlZClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICByZWxlYXNlZCA9IHRydWU7XG4gICAgICAgICAgICBfdGhpcy5fdmFsdWUrKztcbiAgICAgICAgICAgIF90aGlzLl9kaXNwYXRjaCgpO1xuICAgICAgICB9O1xuICAgICAgICBuZXh0Q29uc3VtZXIoW3RoaXMuX3ZhbHVlLS0sIHRoaXMuX2N1cnJlbnRSZWxlYXNlcl0pO1xuICAgIH07XG4gICAgcmV0dXJuIFNlbWFwaG9yZTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBTZW1hcGhvcmU7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/async-mutex/lib/Semaphore.js\n");

/***/ }),

/***/ "../../node_modules/async-mutex/lib/index.js":
/*!************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async-mutex/lib/index.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withTimeout = exports.Semaphore = exports.Mutex = void 0;\nvar Mutex_1 = __webpack_require__(/*! ./Mutex */ \"../../node_modules/async-mutex/lib/Mutex.js\");\nObject.defineProperty(exports, \"Mutex\", { enumerable: true, get: function () { return Mutex_1.default; } });\nvar Semaphore_1 = __webpack_require__(/*! ./Semaphore */ \"../../node_modules/async-mutex/lib/Semaphore.js\");\nObject.defineProperty(exports, \"Semaphore\", { enumerable: true, get: function () { return Semaphore_1.default; } });\nvar withTimeout_1 = __webpack_require__(/*! ./withTimeout */ \"../../node_modules/async-mutex/lib/withTimeout.js\");\nObject.defineProperty(exports, \"withTimeout\", { enumerable: true, get: function () { return withTimeout_1.withTimeout; } });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jLW11dGV4L2xpYi9pbmRleC5qcz9mYzQ3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxjQUFjLG1CQUFPLENBQUMsNERBQVM7QUFDL0IseUNBQXlDLHFDQUFxQyx3QkFBd0IsRUFBRSxFQUFFO0FBQzFHLGtCQUFrQixtQkFBTyxDQUFDLG9FQUFhO0FBQ3ZDLDZDQUE2QyxxQ0FBcUMsNEJBQTRCLEVBQUUsRUFBRTtBQUNsSCxvQkFBb0IsbUJBQU8sQ0FBQyx3RUFBZTtBQUMzQywrQ0FBK0MscUNBQXFDLGtDQUFrQyxFQUFFLEVBQUUiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2FzeW5jLW11dGV4L2xpYi9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy53aXRoVGltZW91dCA9IGV4cG9ydHMuU2VtYXBob3JlID0gZXhwb3J0cy5NdXRleCA9IHZvaWQgMDtcbnZhciBNdXRleF8xID0gcmVxdWlyZShcIi4vTXV0ZXhcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNdXRleFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTXV0ZXhfMS5kZWZhdWx0OyB9IH0pO1xudmFyIFNlbWFwaG9yZV8xID0gcmVxdWlyZShcIi4vU2VtYXBob3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VtYXBob3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTZW1hcGhvcmVfMS5kZWZhdWx0OyB9IH0pO1xudmFyIHdpdGhUaW1lb3V0XzEgPSByZXF1aXJlKFwiLi93aXRoVGltZW91dFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIndpdGhUaW1lb3V0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB3aXRoVGltZW91dF8xLndpdGhUaW1lb3V0OyB9IH0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/async-mutex/lib/index.js\n");

/***/ }),

/***/ "../../node_modules/async-mutex/lib/withTimeout.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async-mutex/lib/withTimeout.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withTimeout = void 0;\nvar tslib_1 = __webpack_require__(/*! tslib */ \"../../node_modules/tslib/tslib.js\");\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction withTimeout(sync, timeout, timeoutError) {\n    var _this = this;\n    if (timeoutError === void 0) { timeoutError = new Error('timeout'); }\n    return {\n        acquire: function () {\n            return new Promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var isTimeout, ticket, release;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            isTimeout = false;\n                            setTimeout(function () {\n                                isTimeout = true;\n                                reject(timeoutError);\n                            }, timeout);\n                            return [4 /*yield*/, sync.acquire()];\n                        case 1:\n                            ticket = _a.sent();\n                            if (isTimeout) {\n                                release = Array.isArray(ticket) ? ticket[1] : ticket;\n                                release();\n                            }\n                            else {\n                                resolve(ticket);\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            }); });\n        },\n        runExclusive: function (callback) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var release, ticket;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            release = function () { return undefined; };\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, , 7, 8]);\n                            return [4 /*yield*/, this.acquire()];\n                        case 2:\n                            ticket = _a.sent();\n                            if (!Array.isArray(ticket)) return [3 /*break*/, 4];\n                            release = ticket[1];\n                            return [4 /*yield*/, callback(ticket[0])];\n                        case 3: return [2 /*return*/, _a.sent()];\n                        case 4:\n                            release = ticket;\n                            return [4 /*yield*/, callback()];\n                        case 5: return [2 /*return*/, _a.sent()];\n                        case 6: return [3 /*break*/, 8];\n                        case 7:\n                            release();\n                            return [7 /*endfinally*/];\n                        case 8: return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        release: function () {\n            sync.release();\n        },\n        isLocked: function () { return sync.isLocked(); },\n    };\n}\nexports.withTimeout = withTimeout;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jLW11dGV4L2xpYi93aXRoVGltZW91dC5qcz9mNDdkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0RBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHFDQUFxQztBQUN2RTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWEsRUFBRSxFQUFFO0FBQ2pCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsa0JBQWtCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNULCtCQUErQix3QkFBd0IsRUFBRTtBQUN6RDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2FzeW5jLW11dGV4L2xpYi93aXRoVGltZW91dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy53aXRoVGltZW91dCA9IHZvaWQgMDtcbnZhciB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbmZ1bmN0aW9uIHdpdGhUaW1lb3V0KHN5bmMsIHRpbWVvdXQsIHRpbWVvdXRFcnJvcikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgaWYgKHRpbWVvdXRFcnJvciA9PT0gdm9pZCAwKSB7IHRpbWVvdXRFcnJvciA9IG5ldyBFcnJvcigndGltZW91dCcpOyB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWNxdWlyZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKF90aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBpc1RpbWVvdXQsIHRpY2tldCwgcmVsZWFzZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVGltZW91dCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1RpbWVvdXQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QodGltZW91dEVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB0aW1lb3V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBzeW5jLmFjcXVpcmUoKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlja2V0ID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1RpbWVvdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsZWFzZSA9IEFycmF5LmlzQXJyYXkodGlja2V0KSA/IHRpY2tldFsxXSA6IHRpY2tldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsZWFzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aWNrZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pOyB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcnVuRXhjbHVzaXZlOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciByZWxlYXNlLCB0aWNrZXQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRzbGliXzEuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxlYXNlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9hLmxhYmVsID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYS50cnlzLnB1c2goWzEsICwgNywgOF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuYWNxdWlyZSgpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrZXQgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHRpY2tldCkpIHJldHVybiBbMyAvKmJyZWFrKi8sIDRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGVhc2UgPSB0aWNrZXRbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgY2FsbGJhY2sodGlja2V0WzBdKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6IHJldHVybiBbMiAvKnJldHVybiovLCBfYS5zZW50KCldO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGVhc2UgPSB0aWNrZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgY2FsbGJhY2soKV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDU6IHJldHVybiBbMiAvKnJldHVybiovLCBfYS5zZW50KCldO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA2OiByZXR1cm4gWzMgLypicmVhayovLCA4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxlYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs3IC8qZW5kZmluYWxseSovXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgODogcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVsZWFzZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc3luYy5yZWxlYXNlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGlzTG9ja2VkOiBmdW5jdGlvbiAoKSB7IHJldHVybiBzeW5jLmlzTG9ja2VkKCk7IH0sXG4gICAgfTtcbn1cbmV4cG9ydHMud2l0aFRpbWVvdXQgPSB3aXRoVGltZW91dDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async-mutex/lib/withTimeout.js\n");

/***/ }),

/***/ "../../node_modules/async/asyncify.js":
/*!*****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/asyncify.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncify;\n\nvar _initialParams = __webpack_require__(/*! ./internal/initialParams.js */ \"../../node_modules/async/internal/initialParams.js\");\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _setImmediate = __webpack_require__(/*! ./internal/setImmediate.js */ \"../../node_modules/async/internal/setImmediate.js\");\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync.js */ \"../../node_modules/async/internal/wrapAsync.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if ((0, _wrapAsync.isAsync)(func)) {\n        return function (...args /*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback);\n        };\n    }\n\n    return (0, _initialParams2.default)(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback);\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        (0, _setImmediate2.default)(e => {\n            throw e;\n        }, err);\n    }\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2FzeW5jaWZ5LmpzPzY4MGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQSxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBNkI7O0FBRTFEOztBQUVBLG9CQUFvQixtQkFBTyxDQUFDLHFGQUE0Qjs7QUFFeEQ7O0FBRUEsaUJBQWlCLG1CQUFPLENBQUMsK0VBQXlCOztBQUVsRCxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsOEJBQThCLG9CQUFvQjtBQUNsRCxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMvYXN5bmNpZnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGFzeW5jaWZ5O1xuXG52YXIgX2luaXRpYWxQYXJhbXMgPSByZXF1aXJlKCcuL2ludGVybmFsL2luaXRpYWxQYXJhbXMuanMnKTtcblxudmFyIF9pbml0aWFsUGFyYW1zMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2luaXRpYWxQYXJhbXMpO1xuXG52YXIgX3NldEltbWVkaWF0ZSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc2V0SW1tZWRpYXRlLmpzJyk7XG5cbnZhciBfc2V0SW1tZWRpYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NldEltbWVkaWF0ZSk7XG5cbnZhciBfd3JhcEFzeW5jID0gcmVxdWlyZSgnLi9pbnRlcm5hbC93cmFwQXN5bmMuanMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBUYWtlIGEgc3luYyBmdW5jdGlvbiBhbmQgbWFrZSBpdCBhc3luYywgcGFzc2luZyBpdHMgcmV0dXJuIHZhbHVlIHRvIGFcbiAqIGNhbGxiYWNrLiBUaGlzIGlzIHVzZWZ1bCBmb3IgcGx1Z2dpbmcgc3luYyBmdW5jdGlvbnMgaW50byBhIHdhdGVyZmFsbCxcbiAqIHNlcmllcywgb3Igb3RoZXIgYXN5bmMgZnVuY3Rpb25zLiBBbnkgYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgZ2VuZXJhdGVkXG4gKiBmdW5jdGlvbiB3aWxsIGJlIHBhc3NlZCB0byB0aGUgd3JhcHBlZCBmdW5jdGlvbiAoZXhjZXB0IGZvciB0aGUgZmluYWxcbiAqIGNhbGxiYWNrIGFyZ3VtZW50KS4gRXJyb3JzIHRocm93biB3aWxsIGJlIHBhc3NlZCB0byB0aGUgY2FsbGJhY2suXG4gKlxuICogSWYgdGhlIGZ1bmN0aW9uIHBhc3NlZCB0byBgYXN5bmNpZnlgIHJldHVybnMgYSBQcm9taXNlLCB0aGF0IHByb21pc2VzJ3NcbiAqIHJlc29sdmVkL3JlamVjdGVkIHN0YXRlIHdpbGwgYmUgdXNlZCB0byBjYWxsIHRoZSBjYWxsYmFjaywgcmF0aGVyIHRoYW4gc2ltcGx5XG4gKiB0aGUgc3luY2hyb25vdXMgcmV0dXJuIHZhbHVlLlxuICpcbiAqIFRoaXMgYWxzbyBtZWFucyB5b3UgY2FuIGFzeW5jaWZ5IEVTMjAxNyBgYXN5bmNgIGZ1bmN0aW9ucy5cbiAqXG4gKiBAbmFtZSBhc3luY2lmeVxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIG1vZHVsZTpVdGlsc1xuICogQG1ldGhvZFxuICogQGFsaWFzIHdyYXBTeW5jXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyAtIFRoZSBzeW5jaHJvbm91cyBmdW5jdGlvbiwgb3IgUHJvbWlzZS1yZXR1cm5pbmdcbiAqIGZ1bmN0aW9uIHRvIGNvbnZlcnQgdG8gYW4ge0BsaW5rIEFzeW5jRnVuY3Rpb259LlxuICogQHJldHVybnMge0FzeW5jRnVuY3Rpb259IEFuIGFzeW5jaHJvbm91cyB3cmFwcGVyIG9mIHRoZSBgZnVuY2AuIFRvIGJlXG4gKiBpbnZva2VkIHdpdGggYChhcmdzLi4uLCBjYWxsYmFjaylgLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBwYXNzaW5nIGEgcmVndWxhciBzeW5jaHJvbm91cyBmdW5jdGlvblxuICogYXN5bmMud2F0ZXJmYWxsKFtcbiAqICAgICBhc3luYy5hcHBseShmcy5yZWFkRmlsZSwgZmlsZW5hbWUsIFwidXRmOFwiKSxcbiAqICAgICBhc3luYy5hc3luY2lmeShKU09OLnBhcnNlKSxcbiAqICAgICBmdW5jdGlvbiAoZGF0YSwgbmV4dCkge1xuICogICAgICAgICAvLyBkYXRhIGlzIHRoZSByZXN1bHQgb2YgcGFyc2luZyB0aGUgdGV4dC5cbiAqICAgICAgICAgLy8gSWYgdGhlcmUgd2FzIGEgcGFyc2luZyBlcnJvciwgaXQgd291bGQgaGF2ZSBiZWVuIGNhdWdodC5cbiAqICAgICB9XG4gKiBdLCBjYWxsYmFjayk7XG4gKlxuICogLy8gcGFzc2luZyBhIGZ1bmN0aW9uIHJldHVybmluZyBhIHByb21pc2VcbiAqIGFzeW5jLndhdGVyZmFsbChbXG4gKiAgICAgYXN5bmMuYXBwbHkoZnMucmVhZEZpbGUsIGZpbGVuYW1lLCBcInV0ZjhcIiksXG4gKiAgICAgYXN5bmMuYXN5bmNpZnkoZnVuY3Rpb24gKGNvbnRlbnRzKSB7XG4gKiAgICAgICAgIHJldHVybiBkYi5tb2RlbC5jcmVhdGUoY29udGVudHMpO1xuICogICAgIH0pLFxuICogICAgIGZ1bmN0aW9uIChtb2RlbCwgbmV4dCkge1xuICogICAgICAgICAvLyBgbW9kZWxgIGlzIHRoZSBpbnN0YW50aWF0ZWQgbW9kZWwgb2JqZWN0LlxuICogICAgICAgICAvLyBJZiB0aGVyZSB3YXMgYW4gZXJyb3IsIHRoaXMgZnVuY3Rpb24gd291bGQgYmUgc2tpcHBlZC5cbiAqICAgICB9XG4gKiBdLCBjYWxsYmFjayk7XG4gKlxuICogLy8gZXMyMDE3IGV4YW1wbGUsIHRob3VnaCBgYXN5bmNpZnlgIGlzIG5vdCBuZWVkZWQgaWYgeW91ciBKUyBlbnZpcm9ubWVudFxuICogLy8gc3VwcG9ydHMgYXN5bmMgZnVuY3Rpb25zIG91dCBvZiB0aGUgYm94XG4gKiB2YXIgcSA9IGFzeW5jLnF1ZXVlKGFzeW5jLmFzeW5jaWZ5KGFzeW5jIGZ1bmN0aW9uKGZpbGUpIHtcbiAqICAgICB2YXIgaW50ZXJtZWRpYXRlU3RlcCA9IGF3YWl0IHByb2Nlc3NGaWxlKGZpbGUpO1xuICogICAgIHJldHVybiBhd2FpdCBzb21lUHJvbWlzZShpbnRlcm1lZGlhdGVTdGVwKVxuICogfSkpO1xuICpcbiAqIHEucHVzaChmaWxlcyk7XG4gKi9cbmZ1bmN0aW9uIGFzeW5jaWZ5KGZ1bmMpIHtcbiAgICBpZiAoKDAsIF93cmFwQXN5bmMuaXNBc3luYykoZnVuYykpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzIC8qLCBjYWxsYmFjayovKSB7XG4gICAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IGFyZ3MucG9wKCk7XG4gICAgICAgICAgICBjb25zdCBwcm9taXNlID0gZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVQcm9taXNlKHByb21pc2UsIGNhbGxiYWNrKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gKDAsIF9pbml0aWFsUGFyYW1zMi5kZWZhdWx0KShmdW5jdGlvbiAoYXJncywgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIHJlc3VsdDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiByZXN1bHQgaXMgUHJvbWlzZSBvYmplY3RcbiAgICAgICAgaWYgKHJlc3VsdCAmJiB0eXBlb2YgcmVzdWx0LnRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVQcm9taXNlKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdWx0KTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVQcm9taXNlKHByb21pc2UsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHByb21pc2UudGhlbih2YWx1ZSA9PiB7XG4gICAgICAgIGludm9rZUNhbGxiYWNrKGNhbGxiYWNrLCBudWxsLCB2YWx1ZSk7XG4gICAgfSwgZXJyID0+IHtcbiAgICAgICAgaW52b2tlQ2FsbGJhY2soY2FsbGJhY2ssIGVyciAmJiBlcnIubWVzc2FnZSA/IGVyciA6IG5ldyBFcnJvcihlcnIpKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gaW52b2tlQ2FsbGJhY2soY2FsbGJhY2ssIGVycm9yLCB2YWx1ZSkge1xuICAgIHRyeSB7XG4gICAgICAgIGNhbGxiYWNrKGVycm9yLCB2YWx1ZSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICgwLCBfc2V0SW1tZWRpYXRlMi5kZWZhdWx0KShlID0+IHtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH0sIGVycik7XG4gICAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/async/asyncify.js\n");

/***/ }),

/***/ "../../node_modules/async/dist/async.js":
/*!*******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/dist/async.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n     true ? factory(exports) :\n    undefined;\n}(this, (function (exports) { 'use strict';\n\n    /**\n     * Creates a continuation function with some arguments already applied.\n     *\n     * Useful as a shorthand when combined with other control flow functions. Any\n     * arguments passed to the returned function are added to the arguments\n     * originally passed to apply.\n     *\n     * @name apply\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} fn - The function you want to eventually apply all\n     * arguments to. Invokes with (arguments...).\n     * @param {...*} arguments... - Any number of arguments to automatically apply\n     * when the continuation is called.\n     * @returns {Function} the partially-applied function\n     * @example\n     *\n     * // using apply\n     * async.parallel([\n     *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n     *     async.apply(fs.writeFile, 'testfile2', 'test2')\n     * ]);\n     *\n     *\n     * // the same process without using apply\n     * async.parallel([\n     *     function(callback) {\n     *         fs.writeFile('testfile1', 'test1', callback);\n     *     },\n     *     function(callback) {\n     *         fs.writeFile('testfile2', 'test2', callback);\n     *     }\n     * ]);\n     *\n     * // It's possible to pass any number of additional arguments when calling the\n     * // continuation:\n     *\n     * node> var fn = async.apply(sys.puts, 'one');\n     * node> fn('two', 'three');\n     * one\n     * two\n     * three\n     */\n    function apply(fn, ...args) {\n        return (...callArgs) => fn(...args,...callArgs);\n    }\n\n    function initialParams (fn) {\n        return function (...args/*, callback*/) {\n            var callback = args.pop();\n            return fn.call(this, args, callback);\n        };\n    }\n\n    /* istanbul ignore file */\n\n    var hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\n    var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\n    var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\n    function fallback(fn) {\n        setTimeout(fn, 0);\n    }\n\n    function wrap(defer) {\n        return (fn, ...args) => defer(() => fn(...args));\n    }\n\n    var _defer;\n\n    if (hasQueueMicrotask) {\n        _defer = queueMicrotask;\n    } else if (hasSetImmediate) {\n        _defer = setImmediate;\n    } else if (hasNextTick) {\n        _defer = process.nextTick;\n    } else {\n        _defer = fallback;\n    }\n\n    var setImmediate$1 = wrap(_defer);\n\n    /**\n     * Take a sync function and make it async, passing its return value to a\n     * callback. This is useful for plugging sync functions into a waterfall,\n     * series, or other async functions. Any arguments passed to the generated\n     * function will be passed to the wrapped function (except for the final\n     * callback argument). Errors thrown will be passed to the callback.\n     *\n     * If the function passed to `asyncify` returns a Promise, that promises's\n     * resolved/rejected state will be used to call the callback, rather than simply\n     * the synchronous return value.\n     *\n     * This also means you can asyncify ES2017 `async` functions.\n     *\n     * @name asyncify\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @alias wrapSync\n     * @category Util\n     * @param {Function} func - The synchronous function, or Promise-returning\n     * function to convert to an {@link AsyncFunction}.\n     * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n     * invoked with `(args..., callback)`.\n     * @example\n     *\n     * // passing a regular synchronous function\n     * async.waterfall([\n     *     async.apply(fs.readFile, filename, \"utf8\"),\n     *     async.asyncify(JSON.parse),\n     *     function (data, next) {\n     *         // data is the result of parsing the text.\n     *         // If there was a parsing error, it would have been caught.\n     *     }\n     * ], callback);\n     *\n     * // passing a function returning a promise\n     * async.waterfall([\n     *     async.apply(fs.readFile, filename, \"utf8\"),\n     *     async.asyncify(function (contents) {\n     *         return db.model.create(contents);\n     *     }),\n     *     function (model, next) {\n     *         // `model` is the instantiated model object.\n     *         // If there was an error, this function would be skipped.\n     *     }\n     * ], callback);\n     *\n     * // es2017 example, though `asyncify` is not needed if your JS environment\n     * // supports async functions out of the box\n     * var q = async.queue(async.asyncify(async function(file) {\n     *     var intermediateStep = await processFile(file);\n     *     return await somePromise(intermediateStep)\n     * }));\n     *\n     * q.push(files);\n     */\n    function asyncify(func) {\n        if (isAsync(func)) {\n            return function (...args/*, callback*/) {\n                const callback = args.pop();\n                const promise = func.apply(this, args);\n                return handlePromise(promise, callback)\n            }\n        }\n\n        return initialParams(function (args, callback) {\n            var result;\n            try {\n                result = func.apply(this, args);\n            } catch (e) {\n                return callback(e);\n            }\n            // if result is Promise object\n            if (result && typeof result.then === 'function') {\n                return handlePromise(result, callback)\n            } else {\n                callback(null, result);\n            }\n        });\n    }\n\n    function handlePromise(promise, callback) {\n        return promise.then(value => {\n            invokeCallback(callback, null, value);\n        }, err => {\n            invokeCallback(callback, err && err.message ? err : new Error(err));\n        });\n    }\n\n    function invokeCallback(callback, error, value) {\n        try {\n            callback(error, value);\n        } catch (err) {\n            setImmediate$1(e => { throw e }, err);\n        }\n    }\n\n    function isAsync(fn) {\n        return fn[Symbol.toStringTag] === 'AsyncFunction';\n    }\n\n    function isAsyncGenerator(fn) {\n        return fn[Symbol.toStringTag] === 'AsyncGenerator';\n    }\n\n    function isAsyncIterable(obj) {\n        return typeof obj[Symbol.asyncIterator] === 'function';\n    }\n\n    function wrapAsync(asyncFn) {\n        if (typeof asyncFn !== 'function') throw new Error('expected a function')\n        return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n    }\n\n    // conditionally promisify a function.\n    // only return a promise if a callback is omitted\n    function awaitify (asyncFn, arity = asyncFn.length) {\n        if (!arity) throw new Error('arity is undefined')\n        function awaitable (...args) {\n            if (typeof args[arity - 1] === 'function') {\n                return asyncFn.apply(this, args)\n            }\n\n            return new Promise((resolve, reject) => {\n                args[arity - 1] = (err, ...cbArgs) => {\n                    if (err) return reject(err)\n                    resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n                };\n                asyncFn.apply(this, args);\n            })\n        }\n\n        return awaitable\n    }\n\n    function applyEach (eachfn) {\n        return function applyEach(fns, ...callArgs) {\n            const go = awaitify(function (callback) {\n                var that = this;\n                return eachfn(fns, (fn, cb) => {\n                    wrapAsync(fn).apply(that, callArgs.concat(cb));\n                }, callback);\n            });\n            return go;\n        };\n    }\n\n    function _asyncMap(eachfn, arr, iteratee, callback) {\n        arr = arr || [];\n        var results = [];\n        var counter = 0;\n        var _iteratee = wrapAsync(iteratee);\n\n        return eachfn(arr, (value, _, iterCb) => {\n            var index = counter++;\n            _iteratee(value, (err, v) => {\n                results[index] = v;\n                iterCb(err);\n            });\n        }, err => {\n            callback(err, results);\n        });\n    }\n\n    function isArrayLike(value) {\n        return value &&\n            typeof value.length === 'number' &&\n            value.length >= 0 &&\n            value.length % 1 === 0;\n    }\n\n    // A temporary value used to identify if the loop should be broken.\n    // See #1064, #1293\n    const breakLoop = {};\n\n    function once(fn) {\n        function wrapper (...args) {\n            if (fn === null) return;\n            var callFn = fn;\n            fn = null;\n            callFn.apply(this, args);\n        }\n        Object.assign(wrapper, fn);\n        return wrapper\n    }\n\n    function getIterator (coll) {\n        return coll[Symbol.iterator] && coll[Symbol.iterator]();\n    }\n\n    function createArrayIterator(coll) {\n        var i = -1;\n        var len = coll.length;\n        return function next() {\n            return ++i < len ? {value: coll[i], key: i} : null;\n        }\n    }\n\n    function createES2015Iterator(iterator) {\n        var i = -1;\n        return function next() {\n            var item = iterator.next();\n            if (item.done)\n                return null;\n            i++;\n            return {value: item.value, key: i};\n        }\n    }\n\n    function createObjectIterator(obj) {\n        var okeys = obj ? Object.keys(obj) : [];\n        var i = -1;\n        var len = okeys.length;\n        return function next() {\n            var key = okeys[++i];\n            if (key === '__proto__') {\n                return next();\n            }\n            return i < len ? {value: obj[key], key} : null;\n        };\n    }\n\n    function createIterator(coll) {\n        if (isArrayLike(coll)) {\n            return createArrayIterator(coll);\n        }\n\n        var iterator = getIterator(coll);\n        return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n    }\n\n    function onlyOnce(fn) {\n        return function (...args) {\n            if (fn === null) throw new Error(\"Callback was already called.\");\n            var callFn = fn;\n            fn = null;\n            callFn.apply(this, args);\n        };\n    }\n\n    // for async generators\n    function asyncEachOfLimit(generator, limit, iteratee, callback) {\n        let done = false;\n        let canceled = false;\n        let awaiting = false;\n        let running = 0;\n        let idx = 0;\n\n        function replenish() {\n            //console.log('replenish')\n            if (running >= limit || awaiting || done) return\n            //console.log('replenish awaiting')\n            awaiting = true;\n            generator.next().then(({value, done: iterDone}) => {\n                //console.log('got value', value)\n                if (canceled || done) return\n                awaiting = false;\n                if (iterDone) {\n                    done = true;\n                    if (running <= 0) {\n                        //console.log('done nextCb')\n                        callback(null);\n                    }\n                    return;\n                }\n                running++;\n                iteratee(value, idx, iterateeCallback);\n                idx++;\n                replenish();\n            }).catch(handleError);\n        }\n\n        function iterateeCallback(err, result) {\n            //console.log('iterateeCallback')\n            running -= 1;\n            if (canceled) return\n            if (err) return handleError(err)\n\n            if (err === false) {\n                done = true;\n                canceled = true;\n                return\n            }\n\n            if (result === breakLoop || (done && running <= 0)) {\n                done = true;\n                //console.log('done iterCb')\n                return callback(null);\n            }\n            replenish();\n        }\n\n        function handleError(err) {\n            if (canceled) return\n            awaiting = false;\n            done = true;\n            callback(err);\n        }\n\n        replenish();\n    }\n\n    var eachOfLimit = (limit) => {\n        return (obj, iteratee, callback) => {\n            callback = once(callback);\n            if (limit <= 0) {\n                throw new RangeError('concurrency limit cannot be less than 1')\n            }\n            if (!obj) {\n                return callback(null);\n            }\n            if (isAsyncGenerator(obj)) {\n                return asyncEachOfLimit(obj, limit, iteratee, callback)\n            }\n            if (isAsyncIterable(obj)) {\n                return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n            }\n            var nextElem = createIterator(obj);\n            var done = false;\n            var canceled = false;\n            var running = 0;\n            var looping = false;\n\n            function iterateeCallback(err, value) {\n                if (canceled) return\n                running -= 1;\n                if (err) {\n                    done = true;\n                    callback(err);\n                }\n                else if (err === false) {\n                    done = true;\n                    canceled = true;\n                }\n                else if (value === breakLoop || (done && running <= 0)) {\n                    done = true;\n                    return callback(null);\n                }\n                else if (!looping) {\n                    replenish();\n                }\n            }\n\n            function replenish () {\n                looping = true;\n                while (running < limit && !done) {\n                    var elem = nextElem();\n                    if (elem === null) {\n                        done = true;\n                        if (running <= 0) {\n                            callback(null);\n                        }\n                        return;\n                    }\n                    running += 1;\n                    iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n                }\n                looping = false;\n            }\n\n            replenish();\n        };\n    };\n\n    /**\n     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name eachOfLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.eachOf]{@link module:Collections.eachOf}\n     * @alias forEachOfLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each\n     * item in `coll`. The `key` is the item's key, or index in the case of an\n     * array.\n     * Invoked with (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachOfLimit$1(coll, limit, iteratee, callback) {\n        return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n    }\n\n    var eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n    // eachOf implementation optimized for array-likes\n    function eachOfArrayLike(coll, iteratee, callback) {\n        callback = once(callback);\n        var index = 0,\n            completed = 0,\n            {length} = coll,\n            canceled = false;\n        if (length === 0) {\n            callback(null);\n        }\n\n        function iteratorCallback(err, value) {\n            if (err === false) {\n                canceled = true;\n            }\n            if (canceled === true) return\n            if (err) {\n                callback(err);\n            } else if ((++completed === length) || value === breakLoop) {\n                callback(null);\n            }\n        }\n\n        for (; index < length; index++) {\n            iteratee(coll[index], index, onlyOnce(iteratorCallback));\n        }\n    }\n\n    // a generic version of eachOf which can handle array, object, and iterator cases.\n    function eachOfGeneric (coll, iteratee, callback) {\n        return eachOfLimit$2(coll, Infinity, iteratee, callback);\n    }\n\n    /**\n     * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n     * to the iteratee.\n     *\n     * @name eachOf\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias forEachOf\n     * @category Collection\n     * @see [async.each]{@link module:Collections.each}\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each\n     * item in `coll`.\n     * The `key` is the item's key, or index in the case of an array.\n     * Invoked with (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     * @example\n     *\n     * // dev.json is a file containing a valid json object config for dev environment\n     * // dev.json is a file containing a valid json object config for test environment\n     * // prod.json is a file containing a valid json object config for prod environment\n     * // invalid.json is a file with a malformed json object\n     *\n     * let configs = {}; //global variable\n     * let validConfigFileMap = {dev: 'dev.json', test: 'test.json', prod: 'prod.json'};\n     * let invalidConfigFileMap = {dev: 'dev.json', test: 'test.json', invalid: 'invalid.json'};\n     *\n     * // asynchronous function that reads a json file and parses the contents as json object\n     * function parseFile(file, key, callback) {\n     *     fs.readFile(file, \"utf8\", function(err, data) {\n     *         if (err) return calback(err);\n     *         try {\n     *             configs[key] = JSON.parse(data);\n     *         } catch (e) {\n     *             return callback(e);\n     *         }\n     *         callback();\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.forEachOf(validConfigFileMap, parseFile, function (err) {\n     *     if (err) {\n     *         console.error(err);\n     *     } else {\n     *         console.log(configs);\n     *         // configs is now a map of JSON data, e.g.\n     *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n     *     }\n     * });\n     *\n     * //Error handing\n     * async.forEachOf(invalidConfigFileMap, parseFile, function (err) {\n     *     if (err) {\n     *         console.error(err);\n     *         // JSON parse error exception\n     *     } else {\n     *         console.log(configs);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.forEachOf(validConfigFileMap, parseFile)\n     * .then( () => {\n     *     console.log(configs);\n     *     // configs is now a map of JSON data, e.g.\n     *     // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n     * }).catch( err => {\n     *     console.error(err);\n     * });\n     *\n     * //Error handing\n     * async.forEachOf(invalidConfigFileMap, parseFile)\n     * .then( () => {\n     *     console.log(configs);\n     * }).catch( err => {\n     *     console.error(err);\n     *     // JSON parse error exception\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.forEachOf(validConfigFileMap, parseFile);\n     *         console.log(configs);\n     *         // configs is now a map of JSON data, e.g.\n     *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * //Error handing\n     * async () => {\n     *     try {\n     *         let result = await async.forEachOf(invalidConfigFileMap, parseFile);\n     *         console.log(configs);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // JSON parse error exception\n     *     }\n     * }\n     *\n     */\n    function eachOf(coll, iteratee, callback) {\n        var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n        return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n    }\n\n    var eachOf$1 = awaitify(eachOf, 3);\n\n    /**\n     * Produces a new collection of values by mapping each value in `coll` through\n     * the `iteratee` function. The `iteratee` is called with an item from `coll`\n     * and a callback for when it has finished processing. Each of these callbacks\n     * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n     * `iteratee` passes an error to its callback, the main `callback` (for the\n     * `map` function) is immediately called with the error.\n     *\n     * Note, that since this function applies the `iteratee` to each item in\n     * parallel, there is no guarantee that the `iteratee` functions will complete\n     * in order. However, the results array will be in the same order as the\n     * original `coll`.\n     *\n     * If `map` is passed an Object, the results will be an Array.  The results\n     * will roughly be in the order of the original Objects' keys (but this can\n     * vary across JavaScript engines).\n     *\n     * @name map\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with the transformed item.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an Array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     * // file4.txt does not exist\n     *\n     * const fileList = ['file1.txt','file2.txt','file3.txt'];\n     * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n     *\n     * // asynchronous function that returns the file size in bytes\n     * function getFileSizeInBytes(file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.map(fileList, getFileSizeInBytes, function(err, results) {\n     *     if (err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(results);\n     *         // results is now an array of the file size in bytes for each file, e.g.\n     *         // [ 1000, 2000, 3000]\n     *     }\n     * });\n     *\n     * // Error Handling\n     * async.map(withMissingFileList, getFileSizeInBytes, function(err, results) {\n     *     if (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     } else {\n     *         console.log(results);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.map(fileList, getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     *     // results is now an array of the file size in bytes for each file, e.g.\n     *     // [ 1000, 2000, 3000]\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.map(withMissingFileList, getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.map(fileList, getFileSizeInBytes);\n     *         console.log(results);\n     *         // results is now an array of the file size in bytes for each file, e.g.\n     *         // [ 1000, 2000, 3000]\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let results = await async.map(withMissingFileList, getFileSizeInBytes);\n     *         console.log(results);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function map (coll, iteratee, callback) {\n        return _asyncMap(eachOf$1, coll, iteratee, callback)\n    }\n    var map$1 = awaitify(map, 3);\n\n    /**\n     * Applies the provided arguments to each function in the array, calling\n     * `callback` after all functions have completed. If you only provide the first\n     * argument, `fns`, then it will return a function which lets you pass in the\n     * arguments as if it were a single function call. If more arguments are\n     * provided, `callback` is required while `args` is still optional. The results\n     * for each of the applied async functions are passed to the final callback\n     * as an array.\n     *\n     * @name applyEach\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n     * to all call with the same arguments\n     * @param {...*} [args] - any number of separate arguments to pass to the\n     * function.\n     * @param {Function} [callback] - the final argument should be the callback,\n     * called when all functions have completed processing.\n     * @returns {AsyncFunction} - Returns a function that takes no args other than\n     * an optional callback, that is the result of applying the `args` to each\n     * of the functions.\n     * @example\n     *\n     * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n     *\n     * appliedFn((err, results) => {\n     *     // results[0] is the results for `enableSearch`\n     *     // results[1] is the results for `updateSchema`\n     * });\n     *\n     * // partial application example:\n     * async.each(\n     *     buckets,\n     *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n     *     callback\n     * );\n     */\n    var applyEach$1 = applyEach(map$1);\n\n    /**\n     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n     *\n     * @name eachOfSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.eachOf]{@link module:Collections.eachOf}\n     * @alias forEachOfSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * Invoked with (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachOfSeries(coll, iteratee, callback) {\n        return eachOfLimit$2(coll, 1, iteratee, callback)\n    }\n    var eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n    /**\n     * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n     *\n     * @name mapSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with the transformed item.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapSeries (coll, iteratee, callback) {\n        return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var mapSeries$1 = awaitify(mapSeries, 3);\n\n    /**\n     * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n     *\n     * @name applyEachSeries\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n     * call with the same arguments\n     * @param {...*} [args] - any number of separate arguments to pass to the\n     * function.\n     * @param {Function} [callback] - the final argument should be the callback,\n     * called when all functions have completed processing.\n     * @returns {AsyncFunction} - A function, that when called, is the result of\n     * appling the `args` to the list of functions.  It takes no args, other than\n     * a callback.\n     */\n    var applyEachSeries = applyEach(mapSeries$1);\n\n    const PROMISE_SYMBOL = Symbol('promiseCallback');\n\n    function promiseCallback () {\n        let resolve, reject;\n        function callback (err, ...args) {\n            if (err) return reject(err)\n            resolve(args.length > 1 ? args : args[0]);\n        }\n\n        callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n            resolve = res,\n            reject = rej;\n        });\n\n        return callback\n    }\n\n    /**\n     * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n     * their requirements. Each function can optionally depend on other functions\n     * being completed first, and each function is run as soon as its requirements\n     * are satisfied.\n     *\n     * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n     * will stop. Further tasks will not execute (so any other functions depending\n     * on it will not run), and the main `callback` is immediately called with the\n     * error.\n     *\n     * {@link AsyncFunction}s also receive an object containing the results of functions which\n     * have completed so far as the first argument, if they have dependencies. If a\n     * task function has no dependencies, it will only be passed a callback.\n     *\n     * @name auto\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Object} tasks - An object. Each of its properties is either a\n     * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n     * in the array. The object's key of a property serves as the name of the task\n     * defined by that property, i.e. can be used when specifying requirements for\n     * other tasks. The function receives one or two arguments:\n     * * a `results` object, containing the results of the previously executed\n     *   functions, only passed if the task has any dependencies,\n     * * a `callback(err, result)` function, which must be called when finished,\n     *   passing an `error` (which can be `null`) and the result of the function's\n     *   execution.\n     * @param {number} [concurrency=Infinity] - An optional `integer` for\n     * determining the maximum number of tasks that can be run in parallel. By\n     * default, as many as possible.\n     * @param {Function} [callback] - An optional callback which is called when all\n     * the tasks have been completed. It receives the `err` argument if any `tasks`\n     * pass an error to their callback. Results are always returned; however, if an\n     * error occurs, no further `tasks` will be performed, and the results object\n     * will only contain partial results. Invoked with (err, results).\n     * @returns {Promise} a promise, if a callback is not passed\n     * @example\n     *\n     * //Using Callbacks\n     * async.auto({\n     *     get_data: function(callback) {\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: ['get_data', 'make_folder', function(results, callback) {\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(results, callback) {\n     *         // once the file is written let's email a link to it...\n     *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n     *     }]\n     * }, function(err, results) {\n     *     if (err) {\n     *         console.log('err = ', err);\n     *     }\n     *     console.log('results = ', results);\n     *     // results = {\n     *     //     get_data: ['data', 'converted to array']\n     *     //     make_folder; 'folder',\n     *     //     write_file: 'filename'\n     *     //     email_link: { file: 'filename', email: 'user@example.com' }\n     *     // }\n     * });\n     *\n     * //Using Promises\n     * async.auto({\n     *     get_data: function(callback) {\n     *         console.log('in get_data');\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         console.log('in make_folder');\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: ['get_data', 'make_folder', function(results, callback) {\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(results, callback) {\n     *         // once the file is written let's email a link to it...\n     *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n     *     }]\n     * }).then(results => {\n     *     console.log('results = ', results);\n     *     // results = {\n     *     //     get_data: ['data', 'converted to array']\n     *     //     make_folder; 'folder',\n     *     //     write_file: 'filename'\n     *     //     email_link: { file: 'filename', email: 'user@example.com' }\n     *     // }\n     * }).catch(err => {\n     *     console.log('err = ', err);\n     * });\n     *\n     * //Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.auto({\n     *             get_data: function(callback) {\n     *                 // async code to get some data\n     *                 callback(null, 'data', 'converted to array');\n     *             },\n     *             make_folder: function(callback) {\n     *                 // async code to create a directory to store a file in\n     *                 // this is run at the same time as getting the data\n     *                 callback(null, 'folder');\n     *             },\n     *             write_file: ['get_data', 'make_folder', function(results, callback) {\n     *                 // once there is some data and the directory exists,\n     *                 // write the data to a file in the directory\n     *                 callback(null, 'filename');\n     *             }],\n     *             email_link: ['write_file', function(results, callback) {\n     *                 // once the file is written let's email a link to it...\n     *                 callback(null, {'file':results.write_file, 'email':'user@example.com'});\n     *             }]\n     *         });\n     *         console.log('results = ', results);\n     *         // results = {\n     *         //     get_data: ['data', 'converted to array']\n     *         //     make_folder; 'folder',\n     *         //     write_file: 'filename'\n     *         //     email_link: { file: 'filename', email: 'user@example.com' }\n     *         // }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function auto(tasks, concurrency, callback) {\n        if (typeof concurrency !== 'number') {\n            // concurrency is optional, shift the args.\n            callback = concurrency;\n            concurrency = null;\n        }\n        callback = once(callback || promiseCallback());\n        var numTasks = Object.keys(tasks).length;\n        if (!numTasks) {\n            return callback(null);\n        }\n        if (!concurrency) {\n            concurrency = numTasks;\n        }\n\n        var results = {};\n        var runningTasks = 0;\n        var canceled = false;\n        var hasError = false;\n\n        var listeners = Object.create(null);\n\n        var readyTasks = [];\n\n        // for cycle detection:\n        var readyToCheck = []; // tasks that have been identified as reachable\n        // without the possibility of returning to an ancestor task\n        var uncheckedDependencies = {};\n\n        Object.keys(tasks).forEach(key => {\n            var task = tasks[key];\n            if (!Array.isArray(task)) {\n                // no dependencies\n                enqueueTask(key, [task]);\n                readyToCheck.push(key);\n                return;\n            }\n\n            var dependencies = task.slice(0, task.length - 1);\n            var remainingDependencies = dependencies.length;\n            if (remainingDependencies === 0) {\n                enqueueTask(key, task);\n                readyToCheck.push(key);\n                return;\n            }\n            uncheckedDependencies[key] = remainingDependencies;\n\n            dependencies.forEach(dependencyName => {\n                if (!tasks[dependencyName]) {\n                    throw new Error('async.auto task `' + key +\n                        '` has a non-existent dependency `' +\n                        dependencyName + '` in ' +\n                        dependencies.join(', '));\n                }\n                addListener(dependencyName, () => {\n                    remainingDependencies--;\n                    if (remainingDependencies === 0) {\n                        enqueueTask(key, task);\n                    }\n                });\n            });\n        });\n\n        checkForDeadlocks();\n        processQueue();\n\n        function enqueueTask(key, task) {\n            readyTasks.push(() => runTask(key, task));\n        }\n\n        function processQueue() {\n            if (canceled) return\n            if (readyTasks.length === 0 && runningTasks === 0) {\n                return callback(null, results);\n            }\n            while(readyTasks.length && runningTasks < concurrency) {\n                var run = readyTasks.shift();\n                run();\n            }\n\n        }\n\n        function addListener(taskName, fn) {\n            var taskListeners = listeners[taskName];\n            if (!taskListeners) {\n                taskListeners = listeners[taskName] = [];\n            }\n\n            taskListeners.push(fn);\n        }\n\n        function taskComplete(taskName) {\n            var taskListeners = listeners[taskName] || [];\n            taskListeners.forEach(fn => fn());\n            processQueue();\n        }\n\n\n        function runTask(key, task) {\n            if (hasError) return;\n\n            var taskCallback = onlyOnce((err, ...result) => {\n                runningTasks--;\n                if (err === false) {\n                    canceled = true;\n                    return\n                }\n                if (result.length < 2) {\n                    [result] = result;\n                }\n                if (err) {\n                    var safeResults = {};\n                    Object.keys(results).forEach(rkey => {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[key] = result;\n                    hasError = true;\n                    listeners = Object.create(null);\n                    if (canceled) return\n                    callback(err, safeResults);\n                } else {\n                    results[key] = result;\n                    taskComplete(key);\n                }\n            });\n\n            runningTasks++;\n            var taskFn = wrapAsync(task[task.length - 1]);\n            if (task.length > 1) {\n                taskFn(results, taskCallback);\n            } else {\n                taskFn(taskCallback);\n            }\n        }\n\n        function checkForDeadlocks() {\n            // Kahn's algorithm\n            // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n            // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n            var currentTask;\n            var counter = 0;\n            while (readyToCheck.length) {\n                currentTask = readyToCheck.pop();\n                counter++;\n                getDependents(currentTask).forEach(dependent => {\n                    if (--uncheckedDependencies[dependent] === 0) {\n                        readyToCheck.push(dependent);\n                    }\n                });\n            }\n\n            if (counter !== numTasks) {\n                throw new Error(\n                    'async.auto cannot execute tasks due to a recursive dependency'\n                );\n            }\n        }\n\n        function getDependents(taskName) {\n            var result = [];\n            Object.keys(tasks).forEach(key => {\n                const task = tasks[key];\n                if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                    result.push(key);\n                }\n            });\n            return result;\n        }\n\n        return callback[PROMISE_SYMBOL]\n    }\n\n    var FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\n    var ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\n    var FN_ARG_SPLIT = /,/;\n    var FN_ARG = /(=.+)?(\\s*)$/;\n\n    function stripComments(string) {\n        let stripped = '';\n        let index = 0;\n        let endBlockComment = string.indexOf('*/');\n        while (index < string.length) {\n            if (string[index] === '/' && string[index+1] === '/') {\n                // inline comment\n                let endIndex = string.indexOf('\\n', index);\n                index = (endIndex === -1) ? string.length : endIndex;\n            } else if ((endBlockComment !== -1) && (string[index] === '/') && (string[index+1] === '*')) {\n                // block comment\n                let endIndex = string.indexOf('*/', index);\n                if (endIndex !== -1) {\n                    index = endIndex + 2;\n                    endBlockComment = string.indexOf('*/', index);\n                } else {\n                    stripped += string[index];\n                    index++;\n                }\n            } else {\n                stripped += string[index];\n                index++;\n            }\n        }\n        return stripped;\n    }\n\n    function parseParams(func) {\n        const src = stripComments(func.toString());\n        let match = src.match(FN_ARGS);\n        if (!match) {\n            match = src.match(ARROW_FN_ARGS);\n        }\n        if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n        let [, args] = match;\n        return args\n            .replace(/\\s/g, '')\n            .split(FN_ARG_SPLIT)\n            .map((arg) => arg.replace(FN_ARG, '').trim());\n    }\n\n    /**\n     * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n     * tasks are specified as parameters to the function, after the usual callback\n     * parameter, with the parameter names matching the names of the tasks it\n     * depends on. This can provide even more readable task graphs which can be\n     * easier to maintain.\n     *\n     * If a final callback is specified, the task results are similarly injected,\n     * specified as named parameters after the initial error parameter.\n     *\n     * The autoInject function is purely syntactic sugar and its semantics are\n     * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n     *\n     * @name autoInject\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.auto]{@link module:ControlFlow.auto}\n     * @category Control Flow\n     * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n     * the form 'func([dependencies...], callback). The object's key of a property\n     * serves as the name of the task defined by that property, i.e. can be used\n     * when specifying requirements for other tasks.\n     * * The `callback` parameter is a `callback(err, result)` which must be called\n     *   when finished, passing an `error` (which can be `null`) and the result of\n     *   the function's execution. The remaining parameters name other tasks on\n     *   which the task is dependent, and the results from those tasks are the\n     *   arguments of those parameters.\n     * @param {Function} [callback] - An optional callback which is called when all\n     * the tasks have been completed. It receives the `err` argument if any `tasks`\n     * pass an error to their callback, and a `results` object with any completed\n     * task results, similar to `auto`.\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * //  The example from `auto` can be rewritten as follows:\n     * async.autoInject({\n     *     get_data: function(callback) {\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: function(get_data, make_folder, callback) {\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     },\n     *     email_link: function(write_file, callback) {\n     *         // once the file is written let's email a link to it...\n     *         // write_file contains the filename returned by write_file.\n     *         callback(null, {'file':write_file, 'email':'user@example.com'});\n     *     }\n     * }, function(err, results) {\n     *     console.log('err = ', err);\n     *     console.log('email_link = ', results.email_link);\n     * });\n     *\n     * // If you are using a JS minifier that mangles parameter names, `autoInject`\n     * // will not work with plain functions, since the parameter names will be\n     * // collapsed to a single letter identifier.  To work around this, you can\n     * // explicitly specify the names of the parameters your task function needs\n     * // in an array, similar to Angular.js dependency injection.\n     *\n     * // This still has an advantage over plain `auto`, since the results a task\n     * // depends on are still spread into arguments.\n     * async.autoInject({\n     *     //...\n     *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(write_file, callback) {\n     *         callback(null, {'file':write_file, 'email':'user@example.com'});\n     *     }]\n     *     //...\n     * }, function(err, results) {\n     *     console.log('err = ', err);\n     *     console.log('email_link = ', results.email_link);\n     * });\n     */\n    function autoInject(tasks, callback) {\n        var newTasks = {};\n\n        Object.keys(tasks).forEach(key => {\n            var taskFn = tasks[key];\n            var params;\n            var fnIsAsync = isAsync(taskFn);\n            var hasNoDeps =\n                (!fnIsAsync && taskFn.length === 1) ||\n                (fnIsAsync && taskFn.length === 0);\n\n            if (Array.isArray(taskFn)) {\n                params = [...taskFn];\n                taskFn = params.pop();\n\n                newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n            } else if (hasNoDeps) {\n                // no dependencies, use the function as-is\n                newTasks[key] = taskFn;\n            } else {\n                params = parseParams(taskFn);\n                if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                    throw new Error(\"autoInject task functions require explicit parameters.\");\n                }\n\n                // remove callback param\n                if (!fnIsAsync) params.pop();\n\n                newTasks[key] = params.concat(newTask);\n            }\n\n            function newTask(results, taskCb) {\n                var newArgs = params.map(name => results[name]);\n                newArgs.push(taskCb);\n                wrapAsync(taskFn)(...newArgs);\n            }\n        });\n\n        return auto(newTasks, callback);\n    }\n\n    // Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n    // used for queues. This implementation assumes that the node provided by the user can be modified\n    // to adjust the next and last properties. We implement only the minimal functionality\n    // for queue support.\n    class DLL {\n        constructor() {\n            this.head = this.tail = null;\n            this.length = 0;\n        }\n\n        removeLink(node) {\n            if (node.prev) node.prev.next = node.next;\n            else this.head = node.next;\n            if (node.next) node.next.prev = node.prev;\n            else this.tail = node.prev;\n\n            node.prev = node.next = null;\n            this.length -= 1;\n            return node;\n        }\n\n        empty () {\n            while(this.head) this.shift();\n            return this;\n        }\n\n        insertAfter(node, newNode) {\n            newNode.prev = node;\n            newNode.next = node.next;\n            if (node.next) node.next.prev = newNode;\n            else this.tail = newNode;\n            node.next = newNode;\n            this.length += 1;\n        }\n\n        insertBefore(node, newNode) {\n            newNode.prev = node.prev;\n            newNode.next = node;\n            if (node.prev) node.prev.next = newNode;\n            else this.head = newNode;\n            node.prev = newNode;\n            this.length += 1;\n        }\n\n        unshift(node) {\n            if (this.head) this.insertBefore(this.head, node);\n            else setInitial(this, node);\n        }\n\n        push(node) {\n            if (this.tail) this.insertAfter(this.tail, node);\n            else setInitial(this, node);\n        }\n\n        shift() {\n            return this.head && this.removeLink(this.head);\n        }\n\n        pop() {\n            return this.tail && this.removeLink(this.tail);\n        }\n\n        toArray() {\n            return [...this]\n        }\n\n        *[Symbol.iterator] () {\n            var cur = this.head;\n            while (cur) {\n                yield cur.data;\n                cur = cur.next;\n            }\n        }\n\n        remove (testFn) {\n            var curr = this.head;\n            while(curr) {\n                var {next} = curr;\n                if (testFn(curr)) {\n                    this.removeLink(curr);\n                }\n                curr = next;\n            }\n            return this;\n        }\n    }\n\n    function setInitial(dll, node) {\n        dll.length = 1;\n        dll.head = dll.tail = node;\n    }\n\n    function queue(worker, concurrency, payload) {\n        if (concurrency == null) {\n            concurrency = 1;\n        }\n        else if(concurrency === 0) {\n            throw new RangeError('Concurrency must not be zero');\n        }\n\n        var _worker = wrapAsync(worker);\n        var numRunning = 0;\n        var workersList = [];\n        const events = {\n            error: [],\n            drain: [],\n            saturated: [],\n            unsaturated: [],\n            empty: []\n        };\n\n        function on (event, handler) {\n            events[event].push(handler);\n        }\n\n        function once (event, handler) {\n            const handleAndRemove = (...args) => {\n                off(event, handleAndRemove);\n                handler(...args);\n            };\n            events[event].push(handleAndRemove);\n        }\n\n        function off (event, handler) {\n            if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n            if (!handler) return events[event] = []\n            events[event] = events[event].filter(ev => ev !== handler);\n        }\n\n        function trigger (event, ...args) {\n            events[event].forEach(handler => handler(...args));\n        }\n\n        var processingScheduled = false;\n        function _insert(data, insertAtFront, rejectOnError, callback) {\n            if (callback != null && typeof callback !== 'function') {\n                throw new Error('task callback must be a function');\n            }\n            q.started = true;\n\n            var res, rej;\n            function promiseCallback (err, ...args) {\n                // we don't care about the error, let the global error handler\n                // deal with it\n                if (err) return rejectOnError ? rej(err) : res()\n                if (args.length <= 1) return res(args[0])\n                res(args);\n            }\n\n            var item = {\n                data,\n                callback: rejectOnError ?\n                    promiseCallback :\n                    (callback || promiseCallback)\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n\n            if (!processingScheduled) {\n                processingScheduled = true;\n                setImmediate$1(() => {\n                    processingScheduled = false;\n                    q.process();\n                });\n            }\n\n            if (rejectOnError || !callback) {\n                return new Promise((resolve, reject) => {\n                    res = resolve;\n                    rej = reject;\n                })\n            }\n        }\n\n        function _createCB(tasks) {\n            return function (err, ...args) {\n                numRunning -= 1;\n\n                for (var i = 0, l = tasks.length; i < l; i++) {\n                    var task = tasks[i];\n\n                    var index = workersList.indexOf(task);\n                    if (index === 0) {\n                        workersList.shift();\n                    } else if (index > 0) {\n                        workersList.splice(index, 1);\n                    }\n\n                    task.callback(err, ...args);\n\n                    if (err != null) {\n                        trigger('error', err, task.data);\n                    }\n                }\n\n                if (numRunning <= (q.concurrency - q.buffer) ) {\n                    trigger('unsaturated');\n                }\n\n                if (q.idle()) {\n                    trigger('drain');\n                }\n                q.process();\n            };\n        }\n\n        function _maybeDrain(data) {\n            if (data.length === 0 && q.idle()) {\n                // call drain immediately if there are no tasks\n                setImmediate$1(() => trigger('drain'));\n                return true\n            }\n            return false\n        }\n\n        const eventMethod = (name) => (handler) => {\n            if (!handler) {\n                return new Promise((resolve, reject) => {\n                    once(name, (err, data) => {\n                        if (err) return reject(err)\n                        resolve(data);\n                    });\n                })\n            }\n            off(name);\n            on(name, handler);\n\n        };\n\n        var isProcessing = false;\n        var q = {\n            _tasks: new DLL(),\n            *[Symbol.iterator] () {\n                yield* q._tasks[Symbol.iterator]();\n            },\n            concurrency,\n            payload,\n            buffer: concurrency / 4,\n            started: false,\n            paused: false,\n            push (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, false, false, callback))\n                }\n                return _insert(data, false, false, callback);\n            },\n            pushAsync (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, false, true, callback))\n                }\n                return _insert(data, false, true, callback);\n            },\n            kill () {\n                off();\n                q._tasks.empty();\n            },\n            unshift (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, true, false, callback))\n                }\n                return _insert(data, true, false, callback);\n            },\n            unshiftAsync (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, true, true, callback))\n                }\n                return _insert(data, true, true, callback);\n            },\n            remove (testFn) {\n                q._tasks.remove(testFn);\n            },\n            process () {\n                // Avoid trying to start too many processing operations. This can occur\n                // when callbacks resolve synchronously (#1267).\n                if (isProcessing) {\n                    return;\n                }\n                isProcessing = true;\n                while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                    var tasks = [], data = [];\n                    var l = q._tasks.length;\n                    if (q.payload) l = Math.min(l, q.payload);\n                    for (var i = 0; i < l; i++) {\n                        var node = q._tasks.shift();\n                        tasks.push(node);\n                        workersList.push(node);\n                        data.push(node.data);\n                    }\n\n                    numRunning += 1;\n\n                    if (q._tasks.length === 0) {\n                        trigger('empty');\n                    }\n\n                    if (numRunning === q.concurrency) {\n                        trigger('saturated');\n                    }\n\n                    var cb = onlyOnce(_createCB(tasks));\n                    _worker(data, cb);\n                }\n                isProcessing = false;\n            },\n            length () {\n                return q._tasks.length;\n            },\n            running () {\n                return numRunning;\n            },\n            workersList () {\n                return workersList;\n            },\n            idle() {\n                return q._tasks.length + numRunning === 0;\n            },\n            pause () {\n                q.paused = true;\n            },\n            resume () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                setImmediate$1(q.process);\n            }\n        };\n        // define these as fixed properties, so people get useful errors when updating\n        Object.defineProperties(q, {\n            saturated: {\n                writable: false,\n                value: eventMethod('saturated')\n            },\n            unsaturated: {\n                writable: false,\n                value: eventMethod('unsaturated')\n            },\n            empty: {\n                writable: false,\n                value: eventMethod('empty')\n            },\n            drain: {\n                writable: false,\n                value: eventMethod('drain')\n            },\n            error: {\n                writable: false,\n                value: eventMethod('error')\n            },\n        });\n        return q;\n    }\n\n    /**\n     * Creates a `cargo` object with the specified payload. Tasks added to the\n     * cargo will be processed altogether (up to the `payload` limit). If the\n     * `worker` is in progress, the task is queued until it becomes available. Once\n     * the `worker` has completed some tasks, each callback of those tasks is\n     * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n     * for how `cargo` and `queue` work.\n     *\n     * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n     * at a time, cargo passes an array of tasks to a single worker, repeating\n     * when the worker is finished.\n     *\n     * @name cargo\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An asynchronous function for processing an array\n     * of queued tasks. Invoked with `(tasks, callback)`.\n     * @param {number} [payload=Infinity] - An optional `integer` for determining\n     * how many tasks should be processed per round; if omitted, the default is\n     * unlimited.\n     * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the cargo and inner queue.\n     * @example\n     *\n     * // create a cargo object with payload 2\n     * var cargo = async.cargo(function(tasks, callback) {\n     *     for (var i=0; i<tasks.length; i++) {\n     *         console.log('hello ' + tasks[i].name);\n     *     }\n     *     callback();\n     * }, 2);\n     *\n     * // add some items\n     * cargo.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * cargo.push({name: 'bar'}, function(err) {\n     *     console.log('finished processing bar');\n     * });\n     * await cargo.push({name: 'baz'});\n     * console.log('finished processing baz');\n     */\n    function cargo(worker, payload) {\n        return queue(worker, 1, payload);\n    }\n\n    /**\n     * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n     * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n     * If the all `workers` are in progress, the task is queued until one becomes available. Once\n     * a `worker` has completed some tasks, each callback of those tasks is\n     * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n     * for how `cargo` and `queue` work.\n     *\n     * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n     * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n     * the cargoQueue passes an array of tasks to multiple parallel workers.\n     *\n     * @name cargoQueue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @see [async.cargo]{@link module:ControlFLow.cargo}\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An asynchronous function for processing an array\n     * of queued tasks. Invoked with `(tasks, callback)`.\n     * @param {number} [concurrency=1] - An `integer` for determining how many\n     * `worker` functions should be run in parallel.  If omitted, the concurrency\n     * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n     * @param {number} [payload=Infinity] - An optional `integer` for determining\n     * how many tasks should be processed per round; if omitted, the default is\n     * unlimited.\n     * @returns {module:ControlFlow.QueueObject} A cargoQueue object to manage the tasks. Callbacks can\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the cargoQueue and inner queue.\n     * @example\n     *\n     * // create a cargoQueue object with payload 2 and concurrency 2\n     * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n     *     for (var i=0; i<tasks.length; i++) {\n     *         console.log('hello ' + tasks[i].name);\n     *     }\n     *     callback();\n     * }, 2, 2);\n     *\n     * // add some items\n     * cargoQueue.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * cargoQueue.push({name: 'bar'}, function(err) {\n     *     console.log('finished processing bar');\n     * });\n     * cargoQueue.push({name: 'baz'}, function(err) {\n     *     console.log('finished processing baz');\n     * });\n     * cargoQueue.push({name: 'boo'}, function(err) {\n     *     console.log('finished processing boo');\n     * });\n     */\n    function cargo$1(worker, concurrency, payload) {\n        return queue(worker, concurrency, payload);\n    }\n\n    /**\n     * Reduces `coll` into a single value using an async `iteratee` to return each\n     * successive step. `memo` is the initial state of the reduction. This function\n     * only operates in series.\n     *\n     * For performance reasons, it may make sense to split a call to this function\n     * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n     * results. This function is for situations where each step in the reduction\n     * needs to be async; if you can get the data before reducing it, then it's\n     * probably a good idea to do so.\n     *\n     * @name reduce\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias inject\n     * @alias foldl\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {*} memo - The initial state of the reduction.\n     * @param {AsyncFunction} iteratee - A function applied to each item in the\n     * array to produce the next step in the reduction.\n     * The `iteratee` should complete with the next state of the reduction.\n     * If the iteratee completes with an error, the reduction is stopped and the\n     * main `callback` is immediately called with the error.\n     * Invoked with (memo, item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the reduced value. Invoked with\n     * (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     * // file4.txt does not exist\n     *\n     * const fileList = ['file1.txt','file2.txt','file3.txt'];\n     * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n     *\n     * // asynchronous function that computes the file size in bytes\n     * // file size is added to the memoized value, then returned\n     * function getFileSizeInBytes(memo, file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, memo + stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // 6000\n     *         // which is the sum of the file sizes of the three files\n     *     }\n     * });\n     *\n     * // Error Handling\n     * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     } else {\n     *         console.log(result);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.reduce(fileList, 0, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     *     // 6000\n     *     // which is the sum of the file sizes of the three files\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n     *         console.log(result);\n     *         // 6000\n     *         // which is the sum of the file sizes of the three files\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n     *         console.log(result);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function reduce(coll, memo, iteratee, callback) {\n        callback = once(callback);\n        var _iteratee = wrapAsync(iteratee);\n        return eachOfSeries$1(coll, (x, i, iterCb) => {\n            _iteratee(memo, x, (err, v) => {\n                memo = v;\n                iterCb(err);\n            });\n        }, err => callback(err, memo));\n    }\n    var reduce$1 = awaitify(reduce, 4);\n\n    /**\n     * Version of the compose function that is more natural to read. Each function\n     * consumes the return value of the previous function. It is the equivalent of\n     * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n     *\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @name seq\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.compose]{@link module:ControlFlow.compose}\n     * @category Control Flow\n     * @param {...AsyncFunction} functions - the asynchronous functions to compose\n     * @returns {Function} a function that composes the `functions` in order\n     * @example\n     *\n     * // Requires lodash (or underscore), express3 and dresende's orm2.\n     * // Part of an app, that fetches cats of the logged user.\n     * // This example uses `seq` function to avoid overnesting and error\n     * // handling clutter.\n     * app.get('/cats', function(request, response) {\n     *     var User = request.models.User;\n     *     async.seq(\n     *         User.get.bind(User),  // 'User.get' has signature (id, callback(err, data))\n     *         function(user, fn) {\n     *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n     *         }\n     *     )(req.session.user_id, function (err, cats) {\n     *         if (err) {\n     *             console.error(err);\n     *             response.json({ status: 'error', message: err.message });\n     *         } else {\n     *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n     *         }\n     *     });\n     * });\n     */\n    function seq(...functions) {\n        var _functions = functions.map(wrapAsync);\n        return function (...args) {\n            var that = this;\n\n            var cb = args[args.length - 1];\n            if (typeof cb == 'function') {\n                args.pop();\n            } else {\n                cb = promiseCallback();\n            }\n\n            reduce$1(_functions, args, (newargs, fn, iterCb) => {\n                fn.apply(that, newargs.concat((err, ...nextargs) => {\n                    iterCb(err, nextargs);\n                }));\n            },\n            (err, results) => cb(err, ...results));\n\n            return cb[PROMISE_SYMBOL]\n        };\n    }\n\n    /**\n     * Creates a function which is a composition of the passed asynchronous\n     * functions. Each function consumes the return value of the function that\n     * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n     * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n     *\n     * If the last argument to the composed function is not a function, a promise\n     * is returned when you call it.\n     *\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @name compose\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {...AsyncFunction} functions - the asynchronous functions to compose\n     * @returns {Function} an asynchronous function that is the composed\n     * asynchronous `functions`\n     * @example\n     *\n     * function add1(n, callback) {\n     *     setTimeout(function () {\n     *         callback(null, n + 1);\n     *     }, 10);\n     * }\n     *\n     * function mul3(n, callback) {\n     *     setTimeout(function () {\n     *         callback(null, n * 3);\n     *     }, 10);\n     * }\n     *\n     * var add1mul3 = async.compose(mul3, add1);\n     * add1mul3(4, function (err, result) {\n     *     // result now equals 15\n     * });\n     */\n    function compose(...args) {\n        return seq(...args.reverse());\n    }\n\n    /**\n     * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name mapLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with the transformed item.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapLimit (coll, limit, iteratee, callback) {\n        return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var mapLimit$1 = awaitify(mapLimit, 4);\n\n    /**\n     * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name concatLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.concat]{@link module:Collections.concat}\n     * @category Collection\n     * @alias flatMapLimit\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n     * which should use an array as its result. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     * @returns A Promise, if no callback is passed\n     */\n    function concatLimit(coll, limit, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return mapLimit$1(coll, limit, (val, iterCb) => {\n            _iteratee(val, (err, ...args) => {\n                if (err) return iterCb(err);\n                return iterCb(err, args);\n            });\n        }, (err, mapResults) => {\n            var result = [];\n            for (var i = 0; i < mapResults.length; i++) {\n                if (mapResults[i]) {\n                    result = result.concat(...mapResults[i]);\n                }\n            }\n\n            return callback(err, result);\n        });\n    }\n    var concatLimit$1 = awaitify(concatLimit, 4);\n\n    /**\n     * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n     * the concatenated list. The `iteratee`s are called in parallel, and the\n     * results are concatenated as they return. The results array will be returned in\n     * the original order of `coll` passed to the `iteratee` function.\n     *\n     * @name concat\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @alias flatMap\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n     * which should use an array as its result. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     * @returns A Promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * let directoryList = ['dir1','dir2','dir3'];\n     * let withMissingDirectoryList = ['dir1','dir2','dir3', 'dir4'];\n     *\n     * // Using callbacks\n     * async.concat(directoryList, fs.readdir, function(err, results) {\n     *    if (err) {\n     *        console.log(err);\n     *    } else {\n     *        console.log(results);\n     *        // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n     *    }\n     * });\n     *\n     * // Error Handling\n     * async.concat(withMissingDirectoryList, fs.readdir, function(err, results) {\n     *    if (err) {\n     *        console.log(err);\n     *        // [ Error: ENOENT: no such file or directory ]\n     *        // since dir4 does not exist\n     *    } else {\n     *        console.log(results);\n     *    }\n     * });\n     *\n     * // Using Promises\n     * async.concat(directoryList, fs.readdir)\n     * .then(results => {\n     *     console.log(results);\n     *     // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n     * }).catch(err => {\n     *      console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.concat(withMissingDirectoryList, fs.readdir)\n     * .then(results => {\n     *     console.log(results);\n     * }).catch(err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     *     // since dir4 does not exist\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.concat(directoryList, fs.readdir);\n     *         console.log(results);\n     *         // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n     *     } catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let results = await async.concat(withMissingDirectoryList, fs.readdir);\n     *         console.log(results);\n     *     } catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *         // since dir4 does not exist\n     *     }\n     * }\n     *\n     */\n    function concat(coll, iteratee, callback) {\n        return concatLimit$1(coll, Infinity, iteratee, callback)\n    }\n    var concat$1 = awaitify(concat, 3);\n\n    /**\n     * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n     *\n     * @name concatSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.concat]{@link module:Collections.concat}\n     * @category Collection\n     * @alias flatMapSeries\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n     * The iteratee should complete with an array an array of results.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     * @returns A Promise, if no callback is passed\n     */\n    function concatSeries(coll, iteratee, callback) {\n        return concatLimit$1(coll, 1, iteratee, callback)\n    }\n    var concatSeries$1 = awaitify(concatSeries, 3);\n\n    /**\n     * Returns a function that when called, calls-back with the values provided.\n     * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n     * [`auto`]{@link module:ControlFlow.auto}.\n     *\n     * @name constant\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {...*} arguments... - Any number of arguments to automatically invoke\n     * callback with.\n     * @returns {AsyncFunction} Returns a function that when invoked, automatically\n     * invokes the callback with the previous given arguments.\n     * @example\n     *\n     * async.waterfall([\n     *     async.constant(42),\n     *     function (value, next) {\n     *         // value === 42\n     *     },\n     *     //...\n     * ], callback);\n     *\n     * async.waterfall([\n     *     async.constant(filename, \"utf8\"),\n     *     fs.readFile,\n     *     function (fileData, next) {\n     *         //...\n     *     }\n     *     //...\n     * ], callback);\n     *\n     * async.auto({\n     *     hostname: async.constant(\"https://server.net/\"),\n     *     port: findFreePort,\n     *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n     *         startServer(options, cb);\n     *     }],\n     *     //...\n     * }, callback);\n     */\n    function constant(...args) {\n        return function (...ignoredArgs/*, callback*/) {\n            var callback = ignoredArgs.pop();\n            return callback(null, ...args);\n        };\n    }\n\n    function _createTester(check, getResult) {\n        return (eachfn, arr, _iteratee, cb) => {\n            var testPassed = false;\n            var testResult;\n            const iteratee = wrapAsync(_iteratee);\n            eachfn(arr, (value, _, callback) => {\n                iteratee(value, (err, result) => {\n                    if (err || err === false) return callback(err);\n\n                    if (check(result) && !testResult) {\n                        testPassed = true;\n                        testResult = getResult(true, value);\n                        return callback(null, breakLoop);\n                    }\n                    callback();\n                });\n            }, err => {\n                if (err) return cb(err);\n                cb(null, testPassed ? testResult : getResult(false));\n            });\n        };\n    }\n\n    /**\n     * Returns the first value in `coll` that passes an async truth test. The\n     * `iteratee` is applied in parallel, meaning the first iteratee to return\n     * `true` will fire the detect `callback` with that result. That means the\n     * result might not be the first item in the original `coll` (in terms of order)\n     * that passes the test.\n\n     * If order within the original `coll` is important, then look at\n     * [`detectSeries`]{@link module:Collections.detectSeries}.\n     *\n     * @name detect\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias find\n     * @category Collections\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee must complete with a boolean value as its result.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @returns A Promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n     *    function(err, result) {\n     *        console.log(result);\n     *        // dir1/file1.txt\n     *        // result now equals the first file in the list that exists\n     *    }\n     *);\n     *\n     * // Using Promises\n     * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n     * .then(result => {\n     *     console.log(result);\n     *     // dir1/file1.txt\n     *     // result now equals the first file in the list that exists\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n     *         console.log(result);\n     *         // dir1/file1.txt\n     *         // result now equals the file in the list that exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function detect(coll, iteratee, callback) {\n        return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n    }\n    var detect$1 = awaitify(detect, 3);\n\n    /**\n     * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name detectLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.detect]{@link module:Collections.detect}\n     * @alias findLimit\n     * @category Collections\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee must complete with a boolean value as its result.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @returns a Promise if no callback is passed\n     */\n    function detectLimit(coll, limit, iteratee, callback) {\n        return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var detectLimit$1 = awaitify(detectLimit, 4);\n\n    /**\n     * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n     *\n     * @name detectSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.detect]{@link module:Collections.detect}\n     * @alias findSeries\n     * @category Collections\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee must complete with a boolean value as its result.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @returns a Promise if no callback is passed\n     */\n    function detectSeries(coll, iteratee, callback) {\n        return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n    }\n\n    var detectSeries$1 = awaitify(detectSeries, 3);\n\n    function consoleFunc(name) {\n        return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n            /* istanbul ignore else */\n            if (typeof console === 'object') {\n                /* istanbul ignore else */\n                if (err) {\n                    /* istanbul ignore else */\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) { /* istanbul ignore else */\n                    resultArgs.forEach(x => console[name](x));\n                }\n            }\n        })\n    }\n\n    /**\n     * Logs the result of an [`async` function]{@link AsyncFunction} to the\n     * `console` using `console.dir` to display the properties of the resulting object.\n     * Only works in Node.js or in browsers that support `console.dir` and\n     * `console.error` (such as FF and Chrome).\n     * If multiple arguments are returned from the async function,\n     * `console.dir` is called on each argument in order.\n     *\n     * @name dir\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} function - The function you want to eventually apply\n     * all arguments to.\n     * @param {...*} arguments... - Any number of arguments to apply to the function.\n     * @example\n     *\n     * // in a module\n     * var hello = function(name, callback) {\n     *     setTimeout(function() {\n     *         callback(null, {hello: name});\n     *     }, 1000);\n     * };\n     *\n     * // in the node repl\n     * node> async.dir(hello, 'world');\n     * {hello: 'world'}\n     */\n    var dir = consoleFunc('dir');\n\n    /**\n     * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n     * the order of operations, the arguments `test` and `iteratee` are switched.\n     *\n     * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n     *\n     * @name doWhilst\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.whilst]{@link module:ControlFlow.whilst}\n     * @category Control Flow\n     * @param {AsyncFunction} iteratee - A function which is called each time `test`\n     * passes. Invoked with (callback).\n     * @param {AsyncFunction} test - asynchronous truth test to perform after each\n     * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n     * non-error args from the previous callback of `iteratee`.\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `iteratee` has stopped.\n     * `callback` will be passed an error and any arguments passed to the final\n     * `iteratee`'s callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function doWhilst(iteratee, test, callback) {\n        callback = onlyOnce(callback);\n        var _fn = wrapAsync(iteratee);\n        var _test = wrapAsync(test);\n        var results;\n\n        function next(err, ...args) {\n            if (err) return callback(err);\n            if (err === false) return;\n            results = args;\n            _test(...args, check);\n        }\n\n        function check(err, truth) {\n            if (err) return callback(err);\n            if (err === false) return;\n            if (!truth) return callback(null, ...results);\n            _fn(next);\n        }\n\n        return check(null, true);\n    }\n\n    var doWhilst$1 = awaitify(doWhilst, 3);\n\n    /**\n     * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n     * argument ordering differs from `until`.\n     *\n     * @name doUntil\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n     * @category Control Flow\n     * @param {AsyncFunction} iteratee - An async function which is called each time\n     * `test` fails. Invoked with (callback).\n     * @param {AsyncFunction} test - asynchronous truth test to perform after each\n     * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n     * non-error args from the previous callback of `iteratee`\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has passed and repeated execution of `iteratee` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `iteratee`'s\n     * callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function doUntil(iteratee, test, callback) {\n        const _test = wrapAsync(test);\n        return doWhilst$1(iteratee, (...args) => {\n            const cb = args.pop();\n            _test(...args, (err, truth) => cb (err, !truth));\n        }, callback);\n    }\n\n    function _withoutIndex(iteratee) {\n        return (value, index, callback) => iteratee(value, callback);\n    }\n\n    /**\n     * Applies the function `iteratee` to each item in `coll`, in parallel.\n     * The `iteratee` is called with an item from the list, and a callback for when\n     * it has finished. If the `iteratee` passes an error to its `callback`, the\n     * main `callback` (for the `each` function) is immediately called with the\n     * error.\n     *\n     * Note, that since this function applies `iteratee` to each item in parallel,\n     * there is no guarantee that the iteratee functions will complete in order.\n     *\n     * @name each\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias forEach\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to\n     * each item in `coll`. Invoked with (item, callback).\n     * The array index is not passed to the iteratee.\n     * If you need the index, use `eachOf`.\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * const fileList = [ 'dir1/file2.txt', 'dir2/file3.txt', 'dir/file5.txt'];\n     * const withMissingFileList = ['dir1/file1.txt', 'dir4/file2.txt'];\n     *\n     * // asynchronous function that deletes a file\n     * const deleteFile = function(file, callback) {\n     *     fs.unlink(file, callback);\n     * };\n     *\n     * // Using callbacks\n     * async.each(fileList, deleteFile, function(err) {\n     *     if( err ) {\n     *         console.log(err);\n     *     } else {\n     *         console.log('All files have been deleted successfully');\n     *     }\n     * });\n     *\n     * // Error Handling\n     * async.each(withMissingFileList, deleteFile, function(err){\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     *     // since dir4/file2.txt does not exist\n     *     // dir1/file1.txt could have been deleted\n     * });\n     *\n     * // Using Promises\n     * async.each(fileList, deleteFile)\n     * .then( () => {\n     *     console.log('All files have been deleted successfully');\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.each(fileList, deleteFile)\n     * .then( () => {\n     *     console.log('All files have been deleted successfully');\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     *     // since dir4/file2.txt does not exist\n     *     // dir1/file1.txt could have been deleted\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         await async.each(files, deleteFile);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         await async.each(withMissingFileList, deleteFile);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *         // since dir4/file2.txt does not exist\n     *         // dir1/file1.txt could have been deleted\n     *     }\n     * }\n     *\n     */\n    function eachLimit(coll, iteratee, callback) {\n        return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n    }\n\n    var each = awaitify(eachLimit, 3);\n\n    /**\n     * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name eachLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.each]{@link module:Collections.each}\n     * @alias forEachLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The array index is not passed to the iteratee.\n     * If you need the index, use `eachOfLimit`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachLimit$1(coll, limit, iteratee, callback) {\n        return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n    }\n    var eachLimit$2 = awaitify(eachLimit$1, 4);\n\n    /**\n     * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n     *\n     * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n     * in series and therefore the iteratee functions will complete in order.\n\n     * @name eachSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.each]{@link module:Collections.each}\n     * @alias forEachSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each\n     * item in `coll`.\n     * The array index is not passed to the iteratee.\n     * If you need the index, use `eachOfSeries`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachSeries(coll, iteratee, callback) {\n        return eachLimit$2(coll, 1, iteratee, callback)\n    }\n    var eachSeries$1 = awaitify(eachSeries, 3);\n\n    /**\n     * Wrap an async function and ensure it calls its callback on a later tick of\n     * the event loop.  If the function already calls its callback on a next tick,\n     * no extra deferral is added. This is useful for preventing stack overflows\n     * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n     * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n     * contained. ES2017 `async` functions are returned as-is -- they are immune\n     * to Zalgo's corrupting influences, as they always resolve on a later tick.\n     *\n     * @name ensureAsync\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} fn - an async function, one that expects a node-style\n     * callback as its last argument.\n     * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n     * signature as the function passed in.\n     * @example\n     *\n     * function sometimesAsync(arg, callback) {\n     *     if (cache[arg]) {\n     *         return callback(null, cache[arg]); // this would be synchronous!!\n     *     } else {\n     *         doSomeIO(arg, callback); // this IO would be asynchronous\n     *     }\n     * }\n     *\n     * // this has a risk of stack overflows if many results are cached in a row\n     * async.mapSeries(args, sometimesAsync, done);\n     *\n     * // this will defer sometimesAsync's callback if necessary,\n     * // preventing stack overflows\n     * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n     */\n    function ensureAsync(fn) {\n        if (isAsync(fn)) return fn;\n        return function (...args/*, callback*/) {\n            var callback = args.pop();\n            var sync = true;\n            args.push((...innerArgs) => {\n                if (sync) {\n                    setImmediate$1(() => callback(...innerArgs));\n                } else {\n                    callback(...innerArgs);\n                }\n            });\n            fn.apply(this, args);\n            sync = false;\n        };\n    }\n\n    /**\n     * Returns `true` if every element in `coll` satisfies an async test. If any\n     * iteratee call returns `false`, the main `callback` is immediately called.\n     *\n     * @name every\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias all\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collection in parallel.\n     * The iteratee must complete with a boolean result value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file5.txt'];\n     * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.every(fileList, fileExists, function(err, result) {\n     *     console.log(result);\n     *     // true\n     *     // result is true since every file exists\n     * });\n     *\n     * async.every(withMissingFileList, fileExists, function(err, result) {\n     *     console.log(result);\n     *     // false\n     *     // result is false since NOT every file exists\n     * });\n     *\n     * // Using Promises\n     * async.every(fileList, fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // true\n     *     // result is true since every file exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * async.every(withMissingFileList, fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // false\n     *     // result is false since NOT every file exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.every(fileList, fileExists);\n     *         console.log(result);\n     *         // true\n     *         // result is true since every file exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * async () => {\n     *     try {\n     *         let result = await async.every(withMissingFileList, fileExists);\n     *         console.log(result);\n     *         // false\n     *         // result is false since NOT every file exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function every(coll, iteratee, callback) {\n        return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n    }\n    var every$1 = awaitify(every, 3);\n\n    /**\n     * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name everyLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.every]{@link module:Collections.every}\n     * @alias allLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collection in parallel.\n     * The iteratee must complete with a boolean result value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function everyLimit(coll, limit, iteratee, callback) {\n        return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var everyLimit$1 = awaitify(everyLimit, 4);\n\n    /**\n     * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n     *\n     * @name everySeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.every]{@link module:Collections.every}\n     * @alias allSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collection in series.\n     * The iteratee must complete with a boolean result value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function everySeries(coll, iteratee, callback) {\n        return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var everySeries$1 = awaitify(everySeries, 3);\n\n    function filterArray(eachfn, arr, iteratee, callback) {\n        var truthValues = new Array(arr.length);\n        eachfn(arr, (x, index, iterCb) => {\n            iteratee(x, (err, v) => {\n                truthValues[index] = !!v;\n                iterCb(err);\n            });\n        }, err => {\n            if (err) return callback(err);\n            var results = [];\n            for (var i = 0; i < arr.length; i++) {\n                if (truthValues[i]) results.push(arr[i]);\n            }\n            callback(null, results);\n        });\n    }\n\n    function filterGeneric(eachfn, coll, iteratee, callback) {\n        var results = [];\n        eachfn(coll, (x, index, iterCb) => {\n            iteratee(x, (err, v) => {\n                if (err) return iterCb(err);\n                if (v) {\n                    results.push({index, value: x});\n                }\n                iterCb(err);\n            });\n        }, err => {\n            if (err) return callback(err);\n            callback(null, results\n                .sort((a, b) => a.index - b.index)\n                .map(v => v.value));\n        });\n    }\n\n    function _filter(eachfn, coll, iteratee, callback) {\n        var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n        return filter(eachfn, coll, wrapAsync(iteratee), callback);\n    }\n\n    /**\n     * Returns a new array of all the values in `coll` which pass an async truth\n     * test. This operation is performed in parallel, but the results array will be\n     * in the same order as the original.\n     *\n     * @name filter\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias select\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     *\n     * const files = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.filter(files, fileExists, function(err, results) {\n     *    if(err) {\n     *        console.log(err);\n     *    } else {\n     *        console.log(results);\n     *        // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n     *        // results is now an array of the existing files\n     *    }\n     * });\n     *\n     * // Using Promises\n     * async.filter(files, fileExists)\n     * .then(results => {\n     *     console.log(results);\n     *     // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n     *     // results is now an array of the existing files\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.filter(files, fileExists);\n     *         console.log(results);\n     *         // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n     *         // results is now an array of the existing files\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function filter (coll, iteratee, callback) {\n        return _filter(eachOf$1, coll, iteratee, callback)\n    }\n    var filter$1 = awaitify(filter, 3);\n\n    /**\n     * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name filterLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @alias selectLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function filterLimit (coll, limit, iteratee, callback) {\n        return _filter(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var filterLimit$1 = awaitify(filterLimit, 4);\n\n    /**\n     * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n     *\n     * @name filterSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @alias selectSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results)\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function filterSeries (coll, iteratee, callback) {\n        return _filter(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var filterSeries$1 = awaitify(filterSeries, 3);\n\n    /**\n     * Calls the asynchronous function `fn` with a callback parameter that allows it\n     * to call itself again, in series, indefinitely.\n\n     * If an error is passed to the callback then `errback` is called with the\n     * error, and execution stops, otherwise it will never be called.\n     *\n     * @name forever\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {AsyncFunction} fn - an async function to call repeatedly.\n     * Invoked with (next).\n     * @param {Function} [errback] - when `fn` passes an error to it's callback,\n     * this function will be called, and execution stops. Invoked with (err).\n     * @returns {Promise} a promise that rejects if an error occurs and an errback\n     * is not passed\n     * @example\n     *\n     * async.forever(\n     *     function(next) {\n     *         // next is suitable for passing to things that need a callback(err [, whatever]);\n     *         // it will result in this function being called again.\n     *     },\n     *     function(err) {\n     *         // if next is called with a value in its first parameter, it will appear\n     *         // in here as 'err', and execution will stop.\n     *     }\n     * );\n     */\n    function forever(fn, errback) {\n        var done = onlyOnce(errback);\n        var task = wrapAsync(ensureAsync(fn));\n\n        function next(err) {\n            if (err) return done(err);\n            if (err === false) return;\n            task(next);\n        }\n        return next();\n    }\n    var forever$1 = awaitify(forever, 2);\n\n    /**\n     * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name groupByLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.groupBy]{@link module:Collections.groupBy}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a `key` to group the value under.\n     * Invoked with (value, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an `Object` whoses\n     * properties are arrays of values which returned the corresponding key.\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function groupByLimit(coll, limit, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return mapLimit$1(coll, limit, (val, iterCb) => {\n            _iteratee(val, (err, key) => {\n                if (err) return iterCb(err);\n                return iterCb(err, {key, val});\n            });\n        }, (err, mapResults) => {\n            var result = {};\n            // from MDN, handle object having an `hasOwnProperty` prop\n            var {hasOwnProperty} = Object.prototype;\n\n            for (var i = 0; i < mapResults.length; i++) {\n                if (mapResults[i]) {\n                    var {key} = mapResults[i];\n                    var {val} = mapResults[i];\n\n                    if (hasOwnProperty.call(result, key)) {\n                        result[key].push(val);\n                    } else {\n                        result[key] = [val];\n                    }\n                }\n            }\n\n            return callback(err, result);\n        });\n    }\n\n    var groupByLimit$1 = awaitify(groupByLimit, 4);\n\n    /**\n     * Returns a new object, where each value corresponds to an array of items, from\n     * `coll`, that returned the corresponding key. That is, the keys of the object\n     * correspond to the values passed to the `iteratee` callback.\n     *\n     * Note: Since this function applies the `iteratee` to each item in parallel,\n     * there is no guarantee that the `iteratee` functions will complete in order.\n     * However, the values for each key in the `result` will be in the same order as\n     * the original `coll`. For Objects, the values will roughly be in the order of\n     * the original Objects' keys (but this can vary across JavaScript engines).\n     *\n     * @name groupBy\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a `key` to group the value under.\n     * Invoked with (value, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an `Object` whoses\n     * properties are arrays of values which returned the corresponding key.\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * const files = ['dir1/file1.txt','dir2','dir4']\n     *\n     * // asynchronous function that detects file type as none, file, or directory\n     * function detectFile(file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(null, 'none');\n     *         }\n     *         callback(null, stat.isDirectory() ? 'directory' : 'file');\n     *     });\n     * }\n     *\n     * //Using callbacks\n     * async.groupBy(files, detectFile, function(err, result) {\n     *     if(err) {\n     *         console.log(err);\n     *     } else {\n     *\t       console.log(result);\n     *         // {\n     *         //     file: [ 'dir1/file1.txt' ],\n     *         //     none: [ 'dir4' ],\n     *         //     directory: [ 'dir2']\n     *         // }\n     *         // result is object containing the files grouped by type\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.groupBy(files, detectFile)\n     * .then( result => {\n     *     console.log(result);\n     *     // {\n     *     //     file: [ 'dir1/file1.txt' ],\n     *     //     none: [ 'dir4' ],\n     *     //     directory: [ 'dir2']\n     *     // }\n     *     // result is object containing the files grouped by type\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.groupBy(files, detectFile);\n     *         console.log(result);\n     *         // {\n     *         //     file: [ 'dir1/file1.txt' ],\n     *         //     none: [ 'dir4' ],\n     *         //     directory: [ 'dir2']\n     *         // }\n     *         // result is object containing the files grouped by type\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function groupBy (coll, iteratee, callback) {\n        return groupByLimit$1(coll, Infinity, iteratee, callback)\n    }\n\n    /**\n     * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n     *\n     * @name groupBySeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.groupBy]{@link module:Collections.groupBy}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a `key` to group the value under.\n     * Invoked with (value, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an `Object` whose\n     * properties are arrays of values which returned the corresponding key.\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function groupBySeries (coll, iteratee, callback) {\n        return groupByLimit$1(coll, 1, iteratee, callback)\n    }\n\n    /**\n     * Logs the result of an `async` function to the `console`. Only works in\n     * Node.js or in browsers that support `console.log` and `console.error` (such\n     * as FF and Chrome). If multiple arguments are returned from the async\n     * function, `console.log` is called on each argument in order.\n     *\n     * @name log\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} function - The function you want to eventually apply\n     * all arguments to.\n     * @param {...*} arguments... - Any number of arguments to apply to the function.\n     * @example\n     *\n     * // in a module\n     * var hello = function(name, callback) {\n     *     setTimeout(function() {\n     *         callback(null, 'hello ' + name);\n     *     }, 1000);\n     * };\n     *\n     * // in the node repl\n     * node> async.log(hello, 'world');\n     * 'hello world'\n     */\n    var log = consoleFunc('log');\n\n    /**\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name mapValuesLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - A function to apply to each value and key\n     * in `coll`.\n     * The iteratee should complete with the transformed value as its result.\n     * Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. `result` is a new object consisting\n     * of each key from `obj`, with each transformed value on the right-hand side.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapValuesLimit(obj, limit, iteratee, callback) {\n        callback = once(callback);\n        var newObj = {};\n        var _iteratee = wrapAsync(iteratee);\n        return eachOfLimit(limit)(obj, (val, key, next) => {\n            _iteratee(val, key, (err, result) => {\n                if (err) return next(err);\n                newObj[key] = result;\n                next(err);\n            });\n        }, err => callback(err, newObj));\n    }\n\n    var mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n    /**\n     * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n     *\n     * Produces a new Object by mapping each value of `obj` through the `iteratee`\n     * function. The `iteratee` is called each `value` and `key` from `obj` and a\n     * callback for when it has finished processing. Each of these callbacks takes\n     * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n     * passes an error to its callback, the main `callback` (for the `mapValues`\n     * function) is immediately called with the error.\n     *\n     * Note, the order of the keys in the result is not guaranteed.  The keys will\n     * be roughly in the order they complete, (but this is very engine-specific)\n     *\n     * @name mapValues\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each value and key\n     * in `coll`.\n     * The iteratee should complete with the transformed value as its result.\n     * Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. `result` is a new object consisting\n     * of each key from `obj`, with each transformed value on the right-hand side.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     * // file4.txt does not exist\n     *\n     * const fileMap = {\n     *     f1: 'file1.txt',\n     *     f2: 'file2.txt',\n     *     f3: 'file3.txt'\n     * };\n     *\n     * const withMissingFileMap = {\n     *     f1: 'file1.txt',\n     *     f2: 'file2.txt',\n     *     f3: 'file4.txt'\n     * };\n     *\n     * // asynchronous function that returns the file size in bytes\n     * function getFileSizeInBytes(file, key, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.mapValues(fileMap, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // result is now a map of file size in bytes for each file, e.g.\n     *         // {\n     *         //     f1: 1000,\n     *         //     f2: 2000,\n     *         //     f3: 3000\n     *         // }\n     *     }\n     * });\n     *\n     * // Error handling\n     * async.mapValues(withMissingFileMap, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     } else {\n     *         console.log(result);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.mapValues(fileMap, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     *     // result is now a map of file size in bytes for each file, e.g.\n     *     // {\n     *     //     f1: 1000,\n     *     //     f2: 2000,\n     *     //     f3: 3000\n     *     // }\n     * }).catch (err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.mapValues(withMissingFileMap, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     * }).catch (err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.mapValues(fileMap, getFileSizeInBytes);\n     *         console.log(result);\n     *         // result is now a map of file size in bytes for each file, e.g.\n     *         // {\n     *         //     f1: 1000,\n     *         //     f2: 2000,\n     *         //     f3: 3000\n     *         // }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let result = await async.mapValues(withMissingFileMap, getFileSizeInBytes);\n     *         console.log(result);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function mapValues(obj, iteratee, callback) {\n        return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n    }\n\n    /**\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n     *\n     * @name mapValuesSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each value and key\n     * in `coll`.\n     * The iteratee should complete with the transformed value as its result.\n     * Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. `result` is a new object consisting\n     * of each key from `obj`, with each transformed value on the right-hand side.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapValuesSeries(obj, iteratee, callback) {\n        return mapValuesLimit$1(obj, 1, iteratee, callback)\n    }\n\n    /**\n     * Caches the results of an async function. When creating a hash to store\n     * function results against, the callback is omitted from the hash and an\n     * optional hash function can be used.\n     *\n     * **Note: if the async function errs, the result will not be cached and\n     * subsequent calls will call the wrapped function.**\n     *\n     * If no hash function is specified, the first argument is used as a hash key,\n     * which may work reasonably if it is a string or a data type that converts to a\n     * distinct string. Note that objects and arrays will not behave reasonably.\n     * Neither will cases where the other arguments are significant. In such cases,\n     * specify your own hash function.\n     *\n     * The cache of results is exposed as the `memo` property of the function\n     * returned by `memoize`.\n     *\n     * @name memoize\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n     * @param {Function} hasher - An optional function for generating a custom hash\n     * for storing results. It has all the arguments applied to it apart from the\n     * callback, and must be synchronous.\n     * @returns {AsyncFunction} a memoized version of `fn`\n     * @example\n     *\n     * var slow_fn = function(name, callback) {\n     *     // do something\n     *     callback(null, result);\n     * };\n     * var fn = async.memoize(slow_fn);\n     *\n     * // fn can now be used as if it were slow_fn\n     * fn('some name', function() {\n     *     // callback\n     * });\n     */\n    function memoize(fn, hasher = v => v) {\n        var memo = Object.create(null);\n        var queues = Object.create(null);\n        var _fn = wrapAsync(fn);\n        var memoized = initialParams((args, callback) => {\n            var key = hasher(...args);\n            if (key in memo) {\n                setImmediate$1(() => callback(null, ...memo[key]));\n            } else if (key in queues) {\n                queues[key].push(callback);\n            } else {\n                queues[key] = [callback];\n                _fn(...args, (err, ...resultArgs) => {\n                    // #1465 don't memoize if an error occurred\n                    if (!err) {\n                        memo[key] = resultArgs;\n                    }\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                        q[i](err, ...resultArgs);\n                    }\n                });\n            }\n        });\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    }\n\n    /* istanbul ignore file */\n\n    /**\n     * Calls `callback` on a later loop around the event loop. In Node.js this just\n     * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n     * available, otherwise `setTimeout(callback, 0)`, which means other higher\n     * priority events may precede the execution of `callback`.\n     *\n     * This is used internally for browser-compatibility purposes.\n     *\n     * @name nextTick\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.setImmediate]{@link module:Utils.setImmediate}\n     * @category Util\n     * @param {Function} callback - The function to call on a later loop around\n     * the event loop. Invoked with (args...).\n     * @param {...*} args... - any number of additional arguments to pass to the\n     * callback on the next tick.\n     * @example\n     *\n     * var call_order = [];\n     * async.nextTick(function() {\n     *     call_order.push('two');\n     *     // call_order now equals ['one','two']\n     * });\n     * call_order.push('one');\n     *\n     * async.setImmediate(function (a, b, c) {\n     *     // a, b, and c equal 1, 2, and 3\n     * }, 1, 2, 3);\n     */\n    var _defer$1;\n\n    if (hasNextTick) {\n        _defer$1 = process.nextTick;\n    } else if (hasSetImmediate) {\n        _defer$1 = setImmediate;\n    } else {\n        _defer$1 = fallback;\n    }\n\n    var nextTick = wrap(_defer$1);\n\n    var _parallel = awaitify((eachfn, tasks, callback) => {\n        var results = isArrayLike(tasks) ? [] : {};\n\n        eachfn(tasks, (task, key, taskCb) => {\n            wrapAsync(task)((err, ...result) => {\n                if (result.length < 2) {\n                    [result] = result;\n                }\n                results[key] = result;\n                taskCb(err);\n            });\n        }, err => callback(err, results));\n    }, 3);\n\n    /**\n     * Run the `tasks` collection of functions in parallel, without waiting until\n     * the previous function has completed. If any of the functions pass an error to\n     * its callback, the main `callback` is immediately called with the value of the\n     * error. Once the `tasks` have completed, the results are passed to the final\n     * `callback` as an array.\n     *\n     * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n     * parallel execution of code.  If your tasks do not use any timers or perform\n     * any I/O, they will actually be executed in series.  Any synchronous setup\n     * sections for each task will happen one after the other.  JavaScript remains\n     * single-threaded.\n     *\n     * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n     * execution of other tasks when a task fails.\n     *\n     * It is also possible to use an object instead of an array. Each property will\n     * be run as a function and the results will be passed to the final `callback`\n     * as an object instead of an array. This can be a more readable way of handling\n     * results from {@link async.parallel}.\n     *\n     * @name parallel\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n     * [async functions]{@link AsyncFunction} to run.\n     * Each async function can complete with any number of optional `result` values.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed successfully. This function gets a results array\n     * (or object) containing all the result arguments passed to the task callbacks.\n     * Invoked with (err, results).\n     * @returns {Promise} a promise, if a callback is not passed\n     *\n     * @example\n     *\n     * //Using Callbacks\n     * async.parallel([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ], function(err, results) {\n     *     console.log(results);\n     *     // results is equal to ['one','two'] even though\n     *     // the second function had a shorter timeout.\n     * });\n     *\n     * // an example using an object instead of an array\n     * async.parallel({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }, function(err, results) {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * });\n     *\n     * //Using Promises\n     * async.parallel([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ]).then(results => {\n     *     console.log(results);\n     *     // results is equal to ['one','two'] even though\n     *     // the second function had a shorter timeout.\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // an example using an object instead of an array\n     * async.parallel({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }).then(results => {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * //Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.parallel([\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 'one');\n     *                 }, 200);\n     *             },\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 'two');\n     *                 }, 100);\n     *             }\n     *         ]);\n     *         console.log(results);\n     *         // results is equal to ['one','two'] even though\n     *         // the second function had a shorter timeout.\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // an example using an object instead of an array\n     * async () => {\n     *     try {\n     *         let results = await async.parallel({\n     *             one: function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 1);\n     *                 }, 200);\n     *             },\n     *            two: function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 2);\n     *                 }, 100);\n     *            }\n     *         });\n     *         console.log(results);\n     *         // results is equal to: { one: 1, two: 2 }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function parallel(tasks, callback) {\n        return _parallel(eachOf$1, tasks, callback);\n    }\n\n    /**\n     * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name parallelLimit\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.parallel]{@link module:ControlFlow.parallel}\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n     * [async functions]{@link AsyncFunction} to run.\n     * Each async function can complete with any number of optional `result` values.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed successfully. This function gets a results array\n     * (or object) containing all the result arguments passed to the task callbacks.\n     * Invoked with (err, results).\n     * @returns {Promise} a promise, if a callback is not passed\n     */\n    function parallelLimit(tasks, limit, callback) {\n        return _parallel(eachOfLimit(limit), tasks, callback);\n    }\n\n    /**\n     * A queue of tasks for the worker function to complete.\n     * @typedef {Iterable} QueueObject\n     * @memberOf module:ControlFlow\n     * @property {Function} length - a function returning the number of items\n     * waiting to be processed. Invoke with `queue.length()`.\n     * @property {boolean} started - a boolean indicating whether or not any\n     * items have been pushed and processed by the queue.\n     * @property {Function} running - a function returning the number of items\n     * currently being processed. Invoke with `queue.running()`.\n     * @property {Function} workersList - a function returning the array of items\n     * currently being processed. Invoke with `queue.workersList()`.\n     * @property {Function} idle - a function returning false if there are items\n     * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n     * @property {number} concurrency - an integer for determining how many `worker`\n     * functions should be run in parallel. This property can be changed after a\n     * `queue` is created to alter the concurrency on-the-fly.\n     * @property {number} payload - an integer that specifies how many items are\n     * passed to the worker function at a time. only applies if this is a\n     * [cargo]{@link module:ControlFlow.cargo} object\n     * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n     * once the `worker` has finished processing the task. Instead of a single task,\n     * a `tasks` array can be submitted. The respective callback is used for every\n     * task in the list. Invoke with `queue.push(task, [callback])`,\n     * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n     * Invoke with `queue.unshift(task, [callback])`.\n     * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n     * a promise that rejects if an error occurs.\n     * @property {AsyncFunction} unshiftAsync - the same as `q.unshift`, except this returns\n     * a promise that rejects if an error occurs.\n     * @property {Function} remove - remove items from the queue that match a test\n     * function.  The test function will be passed an object with a `data` property,\n     * and a `priority` property, if this is a\n     * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n     * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n     * `function ({data, priority}) {}` and returns a Boolean.\n     * @property {Function} saturated - a function that sets a callback that is\n     * called when the number of running workers hits the `concurrency` limit, and\n     * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n     * returns a promise for the next occurrence.\n     * @property {Function} unsaturated - a function that sets a callback that is\n     * called when the number of running workers is less than the `concurrency` &\n     * `buffer` limits, and further tasks will not be queued. If the callback is\n     * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n     * @property {number} buffer - A minimum threshold buffer in order to say that\n     * the `queue` is `unsaturated`.\n     * @property {Function} empty - a function that sets a callback that is called\n     * when the last item from the `queue` is given to a `worker`. If the callback\n     * is omitted, `q.empty()` returns a promise for the next occurrence.\n     * @property {Function} drain - a function that sets a callback that is called\n     * when the last item from the `queue` has returned from the `worker`. If the\n     * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n     * @property {Function} error - a function that sets a callback that is called\n     * when a task errors. Has the signature `function(error, task)`. If the\n     * callback is omitted, `error()` returns a promise that rejects on the next\n     * error.\n     * @property {boolean} paused - a boolean for determining whether the queue is\n     * in a paused state.\n     * @property {Function} pause - a function that pauses the processing of tasks\n     * until `resume()` is called. Invoke with `queue.pause()`.\n     * @property {Function} resume - a function that resumes the processing of\n     * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n     * @property {Function} kill - a function that removes the `drain` callback and\n     * empties remaining tasks from the queue forcing it to go idle. No more tasks\n     * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n     *\n     * @example\n     * const q = async.queue(worker, 2)\n     * q.push(item1)\n     * q.push(item2)\n     * q.push(item3)\n     * // queues are iterable, spread into an array to inspect\n     * const items = [...q] // [item1, item2, item3]\n     * // or use for of\n     * for (let item of q) {\n     *     console.log(item)\n     * }\n     *\n     * q.drain(() => {\n     *     console.log('all done')\n     * })\n     * // or\n     * await q.drain()\n     */\n\n    /**\n     * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n     * `queue` are processed in parallel (up to the `concurrency` limit). If all\n     * `worker`s are in progress, the task is queued until one becomes available.\n     * Once a `worker` completes a `task`, that `task`'s callback is called.\n     *\n     * @name queue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An async function for processing a queued task.\n     * If you want to handle errors from an individual task, pass a callback to\n     * `q.push()`. Invoked with (task, callback).\n     * @param {number} [concurrency=1] - An `integer` for determining how many\n     * `worker` functions should be run in parallel.  If omitted, the concurrency\n     * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n     * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the queue.\n     * @example\n     *\n     * // create a queue object with concurrency 2\n     * var q = async.queue(function(task, callback) {\n     *     console.log('hello ' + task.name);\n     *     callback();\n     * }, 2);\n     *\n     * // assign a callback\n     * q.drain(function() {\n     *     console.log('all items have been processed');\n     * });\n     * // or await the end\n     * await q.drain()\n     *\n     * // assign an error callback\n     * q.error(function(err, task) {\n     *     console.error('task experienced an error');\n     * });\n     *\n     * // add some items to the queue\n     * q.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * // callback is optional\n     * q.push({name: 'bar'});\n     *\n     * // add some items to the queue (batch-wise)\n     * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n     *     console.log('finished processing item');\n     * });\n     *\n     * // add some items to the front of the queue\n     * q.unshift({name: 'bar'}, function (err) {\n     *     console.log('finished processing bar');\n     * });\n     */\n    function queue$1 (worker, concurrency) {\n        var _worker = wrapAsync(worker);\n        return queue((items, cb) => {\n            _worker(items[0], cb);\n        }, concurrency, 1);\n    }\n\n    // Binary min-heap implementation used for priority queue.\n    // Implementation is stable, i.e. push time is considered for equal priorities\n    class Heap {\n        constructor() {\n            this.heap = [];\n            this.pushCount = Number.MIN_SAFE_INTEGER;\n        }\n\n        get length() {\n            return this.heap.length;\n        }\n\n        empty () {\n            this.heap = [];\n            return this;\n        }\n\n        percUp(index) {\n            let p;\n\n            while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n                let t = this.heap[index];\n                this.heap[index] = this.heap[p];\n                this.heap[p] = t;\n\n                index = p;\n            }\n        }\n\n        percDown(index) {\n            let l;\n\n            while ((l=leftChi(index)) < this.heap.length) {\n                if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                    l = l+1;\n                }\n\n                if (smaller(this.heap[index], this.heap[l])) {\n                    break;\n                }\n\n                let t = this.heap[index];\n                this.heap[index] = this.heap[l];\n                this.heap[l] = t;\n\n                index = l;\n            }\n        }\n\n        push(node) {\n            node.pushCount = ++this.pushCount;\n            this.heap.push(node);\n            this.percUp(this.heap.length-1);\n        }\n\n        unshift(node) {\n            return this.heap.push(node);\n        }\n\n        shift() {\n            let [top] = this.heap;\n\n            this.heap[0] = this.heap[this.heap.length-1];\n            this.heap.pop();\n            this.percDown(0);\n\n            return top;\n        }\n\n        toArray() {\n            return [...this];\n        }\n\n        *[Symbol.iterator] () {\n            for (let i = 0; i < this.heap.length; i++) {\n                yield this.heap[i].data;\n            }\n        }\n\n        remove (testFn) {\n            let j = 0;\n            for (let i = 0; i < this.heap.length; i++) {\n                if (!testFn(this.heap[i])) {\n                    this.heap[j] = this.heap[i];\n                    j++;\n                }\n            }\n\n            this.heap.splice(j);\n\n            for (let i = parent(this.heap.length-1); i >= 0; i--) {\n                this.percDown(i);\n            }\n\n            return this;\n        }\n    }\n\n    function leftChi(i) {\n        return (i<<1)+1;\n    }\n\n    function parent(i) {\n        return ((i+1)>>1)-1;\n    }\n\n    function smaller(x, y) {\n        if (x.priority !== y.priority) {\n            return x.priority < y.priority;\n        }\n        else {\n            return x.pushCount < y.pushCount;\n        }\n    }\n\n    /**\n     * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n     * completed in ascending priority order.\n     *\n     * @name priorityQueue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An async function for processing a queued task.\n     * If you want to handle errors from an individual task, pass a callback to\n     * `q.push()`.\n     * Invoked with (task, callback).\n     * @param {number} concurrency - An `integer` for determining how many `worker`\n     * functions should be run in parallel.  If omitted, the concurrency defaults to\n     * `1`.  If the concurrency is `0`, an error is thrown.\n     * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n     * differences between `queue` and `priorityQueue` objects:\n     * * `push(task, priority, [callback])` - `priority` should be a number. If an\n     *   array of `tasks` is given, all tasks will be assigned the same priority.\n     * * The `unshift` method was removed.\n     */\n    function priorityQueue(worker, concurrency) {\n        // Start with a normal queue\n        var q = queue$1(worker, concurrency);\n        var processingScheduled = false;\n\n        q._tasks = new Heap();\n\n        // Override push to accept second parameter representing priority\n        q.push = function(data, priority = 0, callback = () => {}) {\n            if (typeof callback !== 'function') {\n                throw new Error('task callback must be a function');\n            }\n            q.started = true;\n            if (!Array.isArray(data)) {\n                data = [data];\n            }\n            if (data.length === 0 && q.idle()) {\n                // call drain immediately if there are no tasks\n                return setImmediate$1(() => q.drain());\n            }\n\n            for (var i = 0, l = data.length; i < l; i++) {\n                var item = {\n                    data: data[i],\n                    priority,\n                    callback\n                };\n\n                q._tasks.push(item);\n            }\n\n            if (!processingScheduled) {\n                processingScheduled = true;\n                setImmediate$1(() => {\n                    processingScheduled = false;\n                    q.process();\n                });\n            }\n        };\n\n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    }\n\n    /**\n     * Runs the `tasks` array of functions in parallel, without waiting until the\n     * previous function has completed. Once any of the `tasks` complete or pass an\n     * error to its callback, the main `callback` is immediately called. It's\n     * equivalent to `Promise.race()`.\n     *\n     * @name race\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n     * to run. Each function can complete with an optional `result` value.\n     * @param {Function} callback - A callback to run once any of the functions have\n     * completed. This function gets an error or result from the first function that\n     * completed. Invoked with (err, result).\n     * @returns undefined\n     * @example\n     *\n     * async.race([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ],\n     * // main callback\n     * function(err, result) {\n     *     // the result will be equal to 'two' as it finishes earlier\n     * });\n     */\n    function race(tasks, callback) {\n        callback = once(callback);\n        if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n        if (!tasks.length) return callback();\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            wrapAsync(tasks[i])(callback);\n        }\n    }\n\n    var race$1 = awaitify(race, 2);\n\n    /**\n     * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n     *\n     * @name reduceRight\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reduce]{@link module:Collections.reduce}\n     * @alias foldr\n     * @category Collection\n     * @param {Array} array - A collection to iterate over.\n     * @param {*} memo - The initial state of the reduction.\n     * @param {AsyncFunction} iteratee - A function applied to each item in the\n     * array to produce the next step in the reduction.\n     * The `iteratee` should complete with the next state of the reduction.\n     * If the iteratee completes with an error, the reduction is stopped and the\n     * main `callback` is immediately called with the error.\n     * Invoked with (memo, item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the reduced value. Invoked with\n     * (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function reduceRight (array, memo, iteratee, callback) {\n        var reversed = [...array].reverse();\n        return reduce$1(reversed, memo, iteratee, callback);\n    }\n\n    /**\n     * Wraps the async function in another function that always completes with a\n     * result object, even when it errors.\n     *\n     * The result object has either the property `error` or `value`.\n     *\n     * @name reflect\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} fn - The async function you want to wrap\n     * @returns {Function} - A function that always passes null to it's callback as\n     * the error. The second argument to the callback will be an `object` with\n     * either an `error` or a `value` property.\n     * @example\n     *\n     * async.parallel([\n     *     async.reflect(function(callback) {\n     *         // do some stuff ...\n     *         callback(null, 'one');\n     *     }),\n     *     async.reflect(function(callback) {\n     *         // do some more stuff but error ...\n     *         callback('bad stuff happened');\n     *     }),\n     *     async.reflect(function(callback) {\n     *         // do some more stuff ...\n     *         callback(null, 'two');\n     *     })\n     * ],\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results[0].value = 'one'\n     *     // results[1].error = 'bad stuff happened'\n     *     // results[2].value = 'two'\n     * });\n     */\n    function reflect(fn) {\n        var _fn = wrapAsync(fn);\n        return initialParams(function reflectOn(args, reflectCallback) {\n            args.push((error, ...cbArgs) => {\n                let retVal = {};\n                if (error) {\n                    retVal.error = error;\n                }\n                if (cbArgs.length > 0){\n                    var value = cbArgs;\n                    if (cbArgs.length <= 1) {\n                        [value] = cbArgs;\n                    }\n                    retVal.value = value;\n                }\n                reflectCallback(null, retVal);\n            });\n\n            return _fn.apply(this, args);\n        });\n    }\n\n    /**\n     * A helper function that wraps an array or an object of functions with `reflect`.\n     *\n     * @name reflectAll\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.reflect]{@link module:Utils.reflect}\n     * @category Util\n     * @param {Array|Object|Iterable} tasks - The collection of\n     * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n     * @returns {Array} Returns an array of async functions, each wrapped in\n     * `async.reflect`\n     * @example\n     *\n     * let tasks = [\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         // do some more stuff but error ...\n     *         callback(new Error('bad stuff happened'));\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ];\n     *\n     * async.parallel(async.reflectAll(tasks),\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results[0].value = 'one'\n     *     // results[1].error = Error('bad stuff happened')\n     *     // results[2].value = 'two'\n     * });\n     *\n     * // an example using an object instead of an array\n     * let tasks = {\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         callback('two');\n     *     },\n     *     three: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'three');\n     *         }, 100);\n     *     }\n     * };\n     *\n     * async.parallel(async.reflectAll(tasks),\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results.one.value = 'one'\n     *     // results.two.error = 'two'\n     *     // results.three.value = 'three'\n     * });\n     */\n    function reflectAll(tasks) {\n        var results;\n        if (Array.isArray(tasks)) {\n            results = tasks.map(reflect);\n        } else {\n            results = {};\n            Object.keys(tasks).forEach(key => {\n                results[key] = reflect.call(this, tasks[key]);\n            });\n        }\n        return results;\n    }\n\n    function reject(eachfn, arr, _iteratee, callback) {\n        const iteratee = wrapAsync(_iteratee);\n        return _filter(eachfn, arr, (value, cb) => {\n            iteratee(value, (err, v) => {\n                cb(err, !v);\n            });\n        }, callback);\n    }\n\n    /**\n     * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n     *\n     * @name reject\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - An async truth test to apply to each item in\n     * `coll`.\n     * The should complete with a boolean value as its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     *\n     * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.reject(fileList, fileExists, function(err, results) {\n     *    // [ 'dir3/file6.txt' ]\n     *    // results now equals an array of the non-existing files\n     * });\n     *\n     * // Using Promises\n     * async.reject(fileList, fileExists)\n     * .then( results => {\n     *     console.log(results);\n     *     // [ 'dir3/file6.txt' ]\n     *     // results now equals an array of the non-existing files\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.reject(fileList, fileExists);\n     *         console.log(results);\n     *         // [ 'dir3/file6.txt' ]\n     *         // results now equals an array of the non-existing files\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function reject$1 (coll, iteratee, callback) {\n        return reject(eachOf$1, coll, iteratee, callback)\n    }\n    var reject$2 = awaitify(reject$1, 3);\n\n    /**\n     * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name rejectLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reject]{@link module:Collections.reject}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - An async truth test to apply to each item in\n     * `coll`.\n     * The should complete with a boolean value as its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function rejectLimit (coll, limit, iteratee, callback) {\n        return reject(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var rejectLimit$1 = awaitify(rejectLimit, 4);\n\n    /**\n     * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n     *\n     * @name rejectSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reject]{@link module:Collections.reject}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - An async truth test to apply to each item in\n     * `coll`.\n     * The should complete with a boolean value as its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function rejectSeries (coll, iteratee, callback) {\n        return reject(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var rejectSeries$1 = awaitify(rejectSeries, 3);\n\n    function constant$1(value) {\n        return function () {\n            return value;\n        }\n    }\n\n    /**\n     * Attempts to get a successful response from `task` no more than `times` times\n     * before returning an error. If the task is successful, the `callback` will be\n     * passed the result of the successful task. If all attempts fail, the callback\n     * will be passed the error and result (if any) of the final attempt.\n     *\n     * @name retry\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @see [async.retryable]{@link module:ControlFlow.retryable}\n     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n     * object with `times` and `interval` or a number.\n     * * `times` - The number of attempts to make before giving up.  The default\n     *   is `5`.\n     * * `interval` - The time to wait between retries, in milliseconds.  The\n     *   default is `0`. The interval may also be specified as a function of the\n     *   retry count (see example).\n     * * `errorFilter` - An optional synchronous function that is invoked on\n     *   erroneous result. If it returns `true` the retry attempts will continue;\n     *   if the function returns `false` the retry flow is aborted with the current\n     *   attempt's error and result being returned to the final callback.\n     *   Invoked with (err).\n     * * If `opts` is a number, the number specifies the number of times to retry,\n     *   with the default interval of `0`.\n     * @param {AsyncFunction} task - An async function to retry.\n     * Invoked with (callback).\n     * @param {Function} [callback] - An optional callback which is called when the\n     * task has succeeded, or after the final failed attempt. It receives the `err`\n     * and `result` arguments of the last attempt at completing the `task`. Invoked\n     * with (err, results).\n     * @returns {Promise} a promise if no callback provided\n     *\n     * @example\n     *\n     * // The `retry` function can be used as a stand-alone control flow by passing\n     * // a callback, as shown below:\n     *\n     * // try calling apiMethod 3 times\n     * async.retry(3, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod 3 times, waiting 200 ms between each retry\n     * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod 10 times with exponential backoff\n     * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n     * async.retry({\n     *   times: 10,\n     *   interval: function(retryCount) {\n     *     return 50 * Math.pow(2, retryCount);\n     *   }\n     * }, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod the default 5 times no delay between each retry\n     * async.retry(apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod only when error condition satisfies, all other\n     * // errors will abort the retry control flow and return to final callback\n     * async.retry({\n     *   errorFilter: function(err) {\n     *     return err.message === 'Temporary error'; // only retry on a specific error\n     *   }\n     * }, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // to retry individual methods that are not as reliable within other\n     * // control flow functions, use the `retryable` wrapper:\n     * async.auto({\n     *     users: api.getUsers.bind(api),\n     *     payments: async.retryable(3, api.getPayments.bind(api))\n     * }, function(err, results) {\n     *     // do something with the results\n     * });\n     *\n     */\n    const DEFAULT_TIMES = 5;\n    const DEFAULT_INTERVAL = 0;\n\n    function retry(opts, task, callback) {\n        var options = {\n            times: DEFAULT_TIMES,\n            intervalFunc: constant$1(DEFAULT_INTERVAL)\n        };\n\n        if (arguments.length < 3 && typeof opts === 'function') {\n            callback = task || promiseCallback();\n            task = opts;\n        } else {\n            parseTimes(options, opts);\n            callback = callback || promiseCallback();\n        }\n\n        if (typeof task !== 'function') {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n\n        var _task = wrapAsync(task);\n\n        var attempt = 1;\n        function retryAttempt() {\n            _task((err, ...args) => {\n                if (err === false) return\n                if (err && attempt++ < options.times &&\n                    (typeof options.errorFilter != 'function' ||\n                        options.errorFilter(err))) {\n                    setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n                } else {\n                    callback(err, ...args);\n                }\n            });\n        }\n\n        retryAttempt();\n        return callback[PROMISE_SYMBOL]\n    }\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ?\n                t.interval :\n                constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    /**\n     * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n     * wraps a task and makes it retryable, rather than immediately calling it\n     * with retries.\n     *\n     * @name retryable\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.retry]{@link module:ControlFlow.retry}\n     * @category Control Flow\n     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n     * options, exactly the same as from `retry`, except for a `opts.arity` that\n     * is the arity of the `task` function, defaulting to `task.length`\n     * @param {AsyncFunction} task - the asynchronous function to wrap.\n     * This function will be passed any arguments passed to the returned wrapper.\n     * Invoked with (...args, callback).\n     * @returns {AsyncFunction} The wrapped function, which when invoked, will\n     * retry on an error, based on the parameters specified in `opts`.\n     * This function will accept the same parameters as `task`.\n     * @example\n     *\n     * async.auto({\n     *     dep1: async.retryable(3, getFromFlakyService),\n     *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n     *         maybeProcessData(results.dep1, cb);\n     *     })]\n     * }, callback);\n     */\n    function retryable (opts, task) {\n        if (!task) {\n            task = opts;\n            opts = null;\n        }\n        let arity = (opts && opts.arity) || task.length;\n        if (isAsync(task)) {\n            arity += 1;\n        }\n        var _task = wrapAsync(task);\n        return initialParams((args, callback) => {\n            if (args.length < arity - 1 || callback == null) {\n                args.push(callback);\n                callback = promiseCallback();\n            }\n            function taskFn(cb) {\n                _task(...args, cb);\n            }\n\n            if (opts) retry(opts, taskFn, callback);\n            else retry(taskFn, callback);\n\n            return callback[PROMISE_SYMBOL]\n        });\n    }\n\n    /**\n     * Run the functions in the `tasks` collection in series, each one running once\n     * the previous function has completed. If any functions in the series pass an\n     * error to its callback, no more functions are run, and `callback` is\n     * immediately called with the value of the error. Otherwise, `callback`\n     * receives an array of results when `tasks` have completed.\n     *\n     * It is also possible to use an object instead of an array. Each property will\n     * be run as a function, and the results will be passed to the final `callback`\n     * as an object instead of an array. This can be a more readable way of handling\n     *  results from {@link async.series}.\n     *\n     * **Note** that while many implementations preserve the order of object\n     * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n     * explicitly states that\n     *\n     * > The mechanics and order of enumerating the properties is not specified.\n     *\n     * So if you rely on the order in which your series of functions are executed,\n     * and want this to work on all platforms, consider using an array.\n     *\n     * @name series\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n     * [async functions]{@link AsyncFunction} to run in series.\n     * Each function can complete with any number of optional `result` values.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed. This function gets a results array (or object)\n     * containing all the result arguments passed to the `task` callbacks. Invoked\n     * with (err, result).\n     * @return {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * //Using Callbacks\n     * async.series([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             // do some async task\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             // then do another async task\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ], function(err, results) {\n     *     console.log(results);\n     *     // results is equal to ['one','two']\n     * });\n     *\n     * // an example using objects instead of arrays\n     * async.series({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             // do some async task\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             // then do another async task\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }, function(err, results) {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * });\n     *\n     * //Using Promises\n     * async.series([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ]).then(results => {\n     *     console.log(results);\n     *     // results is equal to ['one','two']\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // an example using an object instead of an array\n     * async.series({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             // do some async task\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             // then do another async task\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }).then(results => {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * //Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.series([\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     // do some async task\n     *                     callback(null, 'one');\n     *                 }, 200);\n     *             },\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     // then do another async task\n     *                     callback(null, 'two');\n     *                 }, 100);\n     *             }\n     *         ]);\n     *         console.log(results);\n     *         // results is equal to ['one','two']\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // an example using an object instead of an array\n     * async () => {\n     *     try {\n     *         let results = await async.parallel({\n     *             one: function(callback) {\n     *                 setTimeout(function() {\n     *                     // do some async task\n     *                     callback(null, 1);\n     *                 }, 200);\n     *             },\n     *            two: function(callback) {\n     *                 setTimeout(function() {\n     *                     // then do another async task\n     *                     callback(null, 2);\n     *                 }, 100);\n     *            }\n     *         });\n     *         console.log(results);\n     *         // results is equal to: { one: 1, two: 2 }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function series(tasks, callback) {\n        return _parallel(eachOfSeries$1, tasks, callback);\n    }\n\n    /**\n     * Returns `true` if at least one element in the `coll` satisfies an async test.\n     * If any iteratee call returns `true`, the main `callback` is immediately\n     * called.\n     *\n     * @name some\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias any\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collections in parallel.\n     * The iteratee should complete with a boolean `result` value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n     *    function(err, result) {\n     *        console.log(result);\n     *        // true\n     *        // result is true since some file in the list exists\n     *    }\n     *);\n     *\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n     *    function(err, result) {\n     *        console.log(result);\n     *        // false\n     *        // result is false since none of the files exists\n     *    }\n     *);\n     *\n     * // Using Promises\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // true\n     *     // result is true since some file in the list exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // false\n     *     // result is false since none of the files exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n     *         console.log(result);\n     *         // true\n     *         // result is true since some file in the list exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * async () => {\n     *     try {\n     *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n     *         console.log(result);\n     *         // false\n     *         // result is false since none of the files exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function some(coll, iteratee, callback) {\n        return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n    }\n    var some$1 = awaitify(some, 3);\n\n    /**\n     * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name someLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.some]{@link module:Collections.some}\n     * @alias anyLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collections in parallel.\n     * The iteratee should complete with a boolean `result` value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function someLimit(coll, limit, iteratee, callback) {\n        return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var someLimit$1 = awaitify(someLimit, 4);\n\n    /**\n     * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n     *\n     * @name someSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.some]{@link module:Collections.some}\n     * @alias anySeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collections in series.\n     * The iteratee should complete with a boolean `result` value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function someSeries(coll, iteratee, callback) {\n        return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var someSeries$1 = awaitify(someSeries, 3);\n\n    /**\n     * Sorts a list by the results of running each `coll` value through an async\n     * `iteratee`.\n     *\n     * @name sortBy\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a value to use as the sort criteria as\n     * its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} callback - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is the items\n     * from the original `coll` sorted by the values returned by the `iteratee`\n     * calls. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback passed\n     * @example\n     *\n     * // bigfile.txt is a file that is 251100 bytes in size\n     * // mediumfile.txt is a file that is 11000 bytes in size\n     * // smallfile.txt is a file that is 121 bytes in size\n     *\n     * // asynchronous function that returns the file size in bytes\n     * function getFileSizeInBytes(file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes,\n     *     function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *         } else {\n     *             console.log(results);\n     *             // results is now the original array of files sorted by\n     *             // file size (ascending by default), e.g.\n     *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     *         }\n     *     }\n     * );\n     *\n     * // By modifying the callback parameter the\n     * // sorting order can be influenced:\n     *\n     * // ascending order\n     * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], function(file, callback) {\n     *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n     *         if (getFileSizeErr) return callback(getFileSizeErr);\n     *         callback(null, fileSize);\n     *     });\n     * }, function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *         } else {\n     *             console.log(results);\n     *             // results is now the original array of files sorted by\n     *             // file size (ascending by default), e.g.\n     *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     *         }\n     *     }\n     * );\n     *\n     * // descending order\n     * async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], function(file, callback) {\n     *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n     *         if (getFileSizeErr) {\n     *             return callback(getFileSizeErr);\n     *         }\n     *         callback(null, fileSize * -1);\n     *     });\n     * }, function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *         } else {\n     *             console.log(results);\n     *             // results is now the original array of files sorted by\n     *             // file size (ascending by default), e.g.\n     *             // [ 'bigfile.txt', 'mediumfile.txt', 'smallfile.txt']\n     *         }\n     *     }\n     * );\n     *\n     * // Error handling\n     * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes,\n     *     function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *             // [ Error: ENOENT: no such file or directory ]\n     *         } else {\n     *             console.log(results);\n     *         }\n     *     }\n     * );\n     *\n     * // Using Promises\n     * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     *     // results is now the original array of files sorted by\n     *     // file size (ascending by default), e.g.\n     *     // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error handling\n     * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * (async () => {\n     *     try {\n     *         let results = await async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n     *         console.log(results);\n     *         // results is now the original array of files sorted by\n     *         // file size (ascending by default), e.g.\n     *         // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * })();\n     *\n     * // Error handling\n     * async () => {\n     *     try {\n     *         let results = await async.sortBy(['missingfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n     *         console.log(results);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function sortBy (coll, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return map$1(coll, (x, iterCb) => {\n            _iteratee(x, (err, criteria) => {\n                if (err) return iterCb(err);\n                iterCb(err, {value: x, criteria});\n            });\n        }, (err, results) => {\n            if (err) return callback(err);\n            callback(null, results.sort(comparator).map(v => v.value));\n        });\n\n        function comparator(left, right) {\n            var a = left.criteria, b = right.criteria;\n            return a < b ? -1 : a > b ? 1 : 0;\n        }\n    }\n    var sortBy$1 = awaitify(sortBy, 3);\n\n    /**\n     * Sets a time limit on an asynchronous function. If the function does not call\n     * its callback within the specified milliseconds, it will be called with a\n     * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n     *\n     * @name timeout\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} asyncFn - The async function to limit in time.\n     * @param {number} milliseconds - The specified time limit.\n     * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n     * to timeout Error for more information..\n     * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n     * of the control flow functions.\n     * Invoke this function with the same parameters as you would `asyncFunc`.\n     * @example\n     *\n     * function myFunction(foo, callback) {\n     *     doAsyncTask(foo, function(err, data) {\n     *         // handle errors\n     *         if (err) return callback(err);\n     *\n     *         // do some stuff ...\n     *\n     *         // return processed data\n     *         return callback(null, data);\n     *     });\n     * }\n     *\n     * var wrapped = async.timeout(myFunction, 1000);\n     *\n     * // call `wrapped` as you would `myFunction`\n     * wrapped({ bar: 'bar' }, function(err, data) {\n     *     // if `myFunction` takes < 1000 ms to execute, `err`\n     *     // and `data` will have their expected values\n     *\n     *     // else `err` will be an Error with the code 'ETIMEDOUT'\n     * });\n     */\n    function timeout(asyncFn, milliseconds, info) {\n        var fn = wrapAsync(asyncFn);\n\n        return initialParams((args, callback) => {\n            var timedOut = false;\n            var timer;\n\n            function timeoutCallback() {\n                var name = asyncFn.name || 'anonymous';\n                var error  = new Error('Callback function \"' + name + '\" timed out.');\n                error.code = 'ETIMEDOUT';\n                if (info) {\n                    error.info = info;\n                }\n                timedOut = true;\n                callback(error);\n            }\n\n            args.push((...cbArgs) => {\n                if (!timedOut) {\n                    callback(...cbArgs);\n                    clearTimeout(timer);\n                }\n            });\n\n            // setup timer and call original function\n            timer = setTimeout(timeoutCallback, milliseconds);\n            fn(...args);\n        });\n    }\n\n    function range(size) {\n        var result = Array(size);\n        while (size--) {\n            result[size] = size;\n        }\n        return result;\n    }\n\n    /**\n     * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name timesLimit\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.times]{@link module:ControlFlow.times}\n     * @category Control Flow\n     * @param {number} count - The number of times to run the function.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - The async function to call `n` times.\n     * Invoked with the iteration index and a callback: (n, next).\n     * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n     * @returns {Promise} a promise, if no callback is provided\n     */\n    function timesLimit(count, limit, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return mapLimit$1(range(count), limit, _iteratee, callback);\n    }\n\n    /**\n     * Calls the `iteratee` function `n` times, and accumulates results in the same\n     * manner you would use with [map]{@link module:Collections.map}.\n     *\n     * @name times\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Control Flow\n     * @param {number} n - The number of times to run the function.\n     * @param {AsyncFunction} iteratee - The async function to call `n` times.\n     * Invoked with the iteration index and a callback: (n, next).\n     * @param {Function} callback - see {@link module:Collections.map}.\n     * @returns {Promise} a promise, if no callback is provided\n     * @example\n     *\n     * // Pretend this is some complicated async factory\n     * var createUser = function(id, callback) {\n     *     callback(null, {\n     *         id: 'user' + id\n     *     });\n     * };\n     *\n     * // generate 5 users\n     * async.times(5, function(n, next) {\n     *     createUser(n, function(err, user) {\n     *         next(err, user);\n     *     });\n     * }, function(err, users) {\n     *     // we should now have 5 users\n     * });\n     */\n    function times (n, iteratee, callback) {\n        return timesLimit(n, Infinity, iteratee, callback)\n    }\n\n    /**\n     * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n     *\n     * @name timesSeries\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.times]{@link module:ControlFlow.times}\n     * @category Control Flow\n     * @param {number} n - The number of times to run the function.\n     * @param {AsyncFunction} iteratee - The async function to call `n` times.\n     * Invoked with the iteration index and a callback: (n, next).\n     * @param {Function} callback - see {@link module:Collections.map}.\n     * @returns {Promise} a promise, if no callback is provided\n     */\n    function timesSeries (n, iteratee, callback) {\n        return timesLimit(n, 1, iteratee, callback)\n    }\n\n    /**\n     * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n     * element in parallel, each step potentially mutating an `accumulator` value.\n     * The type of the accumulator defaults to the type of collection passed in.\n     *\n     * @name transform\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n     * it will default to an empty Object or Array, depending on the type of `coll`\n     * @param {AsyncFunction} iteratee - A function applied to each item in the\n     * collection that potentially modifies the accumulator.\n     * Invoked with (accumulator, item, key, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the transformed accumulator.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     *\n     * // helper function that returns human-readable size format from bytes\n     * function formatBytes(bytes, decimals = 2) {\n     *   // implementation not included for brevity\n     *   return humanReadbleFilesize;\n     * }\n     *\n     * const fileList = ['file1.txt','file2.txt','file3.txt'];\n     *\n     * // asynchronous function that returns the file size, transformed to human-readable format\n     * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n     * function transformFileSize(acc, value, key, callback) {\n     *     fs.stat(value, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         acc[key] = formatBytes(stat.size);\n     *         callback(null);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.transform(fileList, transformFileSize, function(err, result) {\n     *     if(err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.transform(fileList, transformFileSize)\n     * .then(result => {\n     *     console.log(result);\n     *     // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * (async () => {\n     *     try {\n     *         let result = await async.transform(fileList, transformFileSize);\n     *         console.log(result);\n     *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * })();\n     *\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     *\n     * // helper function that returns human-readable size format from bytes\n     * function formatBytes(bytes, decimals = 2) {\n     *   // implementation not included for brevity\n     *   return humanReadbleFilesize;\n     * }\n     *\n     * const fileMap = { f1: 'file1.txt', f2: 'file2.txt', f3: 'file3.txt' };\n     *\n     * // asynchronous function that returns the file size, transformed to human-readable format\n     * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n     * function transformFileSize(acc, value, key, callback) {\n     *     fs.stat(value, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         acc[key] = formatBytes(stat.size);\n     *         callback(null);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.transform(fileMap, transformFileSize, function(err, result) {\n     *     if(err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.transform(fileMap, transformFileSize)\n     * .then(result => {\n     *     console.log(result);\n     *     // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.transform(fileMap, transformFileSize);\n     *         console.log(result);\n     *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function transform (coll, accumulator, iteratee, callback) {\n        if (arguments.length <= 3 && typeof accumulator === 'function') {\n            callback = iteratee;\n            iteratee = accumulator;\n            accumulator = Array.isArray(coll) ? [] : {};\n        }\n        callback = once(callback || promiseCallback());\n        var _iteratee = wrapAsync(iteratee);\n\n        eachOf$1(coll, (v, k, cb) => {\n            _iteratee(accumulator, v, k, cb);\n        }, err => callback(err, accumulator));\n        return callback[PROMISE_SYMBOL]\n    }\n\n    /**\n     * It runs each task in series but stops whenever any of the functions were\n     * successful. If one of the tasks were successful, the `callback` will be\n     * passed the result of the successful task. If all tasks fail, the callback\n     * will be passed the error and result (if any) of the final attempt.\n     *\n     * @name tryEach\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n     * run, each function is passed a `callback(err, result)` it must call on\n     * completion with an error `err` (which can be `null`) and an optional `result`\n     * value.\n     * @param {Function} [callback] - An optional callback which is called when one\n     * of the tasks has succeeded, or all have failed. It receives the `err` and\n     * `result` arguments of the last attempt at completing the `task`. Invoked with\n     * (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     * async.tryEach([\n     *     function getDataFromFirstWebsite(callback) {\n     *         // Try getting the data from the first website\n     *         callback(err, data);\n     *     },\n     *     function getDataFromSecondWebsite(callback) {\n     *         // First website failed,\n     *         // Try getting the data from the backup website\n     *         callback(err, data);\n     *     }\n     * ],\n     * // optional callback\n     * function(err, results) {\n     *     Now do something with the data.\n     * });\n     *\n     */\n    function tryEach(tasks, callback) {\n        var error = null;\n        var result;\n        return eachSeries$1(tasks, (task, taskCb) => {\n            wrapAsync(task)((err, ...args) => {\n                if (err === false) return taskCb(err);\n\n                if (args.length < 2) {\n                    [result] = args;\n                } else {\n                    result = args;\n                }\n                error = err;\n                taskCb(err ? null : {});\n            });\n        }, () => callback(error, result));\n    }\n\n    var tryEach$1 = awaitify(tryEach);\n\n    /**\n     * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n     * unmemoized form. Handy for testing.\n     *\n     * @name unmemoize\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.memoize]{@link module:Utils.memoize}\n     * @category Util\n     * @param {AsyncFunction} fn - the memoized function\n     * @returns {AsyncFunction} a function that calls the original unmemoized function\n     */\n    function unmemoize(fn) {\n        return (...args) => {\n            return (fn.unmemoized || fn)(...args);\n        };\n    }\n\n    /**\n     * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n     * stopped, or an error occurs.\n     *\n     * @name whilst\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {AsyncFunction} test - asynchronous truth test to perform before each\n     * execution of `iteratee`. Invoked with ().\n     * @param {AsyncFunction} iteratee - An async function which is called each time\n     * `test` passes. Invoked with (callback).\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `iteratee` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `iteratee`'s\n     * callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * var count = 0;\n     * async.whilst(\n     *     function test(cb) { cb(null, count < 5); },\n     *     function iter(callback) {\n     *         count++;\n     *         setTimeout(function() {\n     *             callback(null, count);\n     *         }, 1000);\n     *     },\n     *     function (err, n) {\n     *         // 5 seconds have passed, n = 5\n     *     }\n     * );\n     */\n    function whilst(test, iteratee, callback) {\n        callback = onlyOnce(callback);\n        var _fn = wrapAsync(iteratee);\n        var _test = wrapAsync(test);\n        var results = [];\n\n        function next(err, ...rest) {\n            if (err) return callback(err);\n            results = rest;\n            if (err === false) return;\n            _test(check);\n        }\n\n        function check(err, truth) {\n            if (err) return callback(err);\n            if (err === false) return;\n            if (!truth) return callback(null, ...results);\n            _fn(next);\n        }\n\n        return _test(check);\n    }\n    var whilst$1 = awaitify(whilst, 3);\n\n    /**\n     * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n     * stopped, or an error occurs. `callback` will be passed an error and any\n     * arguments passed to the final `iteratee`'s callback.\n     *\n     * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n     *\n     * @name until\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.whilst]{@link module:ControlFlow.whilst}\n     * @category Control Flow\n     * @param {AsyncFunction} test - asynchronous truth test to perform before each\n     * execution of `iteratee`. Invoked with (callback).\n     * @param {AsyncFunction} iteratee - An async function which is called each time\n     * `test` fails. Invoked with (callback).\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has passed and repeated execution of `iteratee` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `iteratee`'s\n     * callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if a callback is not passed\n     *\n     * @example\n     * const results = []\n     * let finished = false\n     * async.until(function test(cb) {\n     *     cb(null, finished)\n     * }, function iter(next) {\n     *     fetchPage(url, (err, body) => {\n     *         if (err) return next(err)\n     *         results = results.concat(body.objects)\n     *         finished = !!body.next\n     *         next(err)\n     *     })\n     * }, function done (err) {\n     *     // all pages have been fetched\n     * })\n     */\n    function until(test, iteratee, callback) {\n        const _test = wrapAsync(test);\n        return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n    }\n\n    /**\n     * Runs the `tasks` array of functions in series, each passing their results to\n     * the next in the array. However, if any of the `tasks` pass an error to their\n     * own callback, the next function is not executed, and the main `callback` is\n     * immediately called with the error.\n     *\n     * @name waterfall\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n     * to run.\n     * Each function should complete with any number of `result` values.\n     * The `result` values will be passed as arguments, in order, to the next task.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed. This will be passed the results of the last task's\n     * callback. Invoked with (err, [results]).\n     * @returns undefined\n     * @example\n     *\n     * async.waterfall([\n     *     function(callback) {\n     *         callback(null, 'one', 'two');\n     *     },\n     *     function(arg1, arg2, callback) {\n     *         // arg1 now equals 'one' and arg2 now equals 'two'\n     *         callback(null, 'three');\n     *     },\n     *     function(arg1, callback) {\n     *         // arg1 now equals 'three'\n     *         callback(null, 'done');\n     *     }\n     * ], function (err, result) {\n     *     // result now equals 'done'\n     * });\n     *\n     * // Or, with named functions:\n     * async.waterfall([\n     *     myFirstFunction,\n     *     mySecondFunction,\n     *     myLastFunction,\n     * ], function (err, result) {\n     *     // result now equals 'done'\n     * });\n     * function myFirstFunction(callback) {\n     *     callback(null, 'one', 'two');\n     * }\n     * function mySecondFunction(arg1, arg2, callback) {\n     *     // arg1 now equals 'one' and arg2 now equals 'two'\n     *     callback(null, 'three');\n     * }\n     * function myLastFunction(arg1, callback) {\n     *     // arg1 now equals 'three'\n     *     callback(null, 'done');\n     * }\n     */\n    function waterfall (tasks, callback) {\n        callback = once(callback);\n        if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n        if (!tasks.length) return callback();\n        var taskIndex = 0;\n\n        function nextTask(args) {\n            var task = wrapAsync(tasks[taskIndex++]);\n            task(...args, onlyOnce(next));\n        }\n\n        function next(err, ...args) {\n            if (err === false) return\n            if (err || taskIndex === tasks.length) {\n                return callback(err, ...args);\n            }\n            nextTask(args);\n        }\n\n        nextTask([]);\n    }\n\n    var waterfall$1 = awaitify(waterfall);\n\n    /**\n     * An \"async function\" in the context of Async is an asynchronous function with\n     * a variable number of parameters, with the final parameter being a callback.\n     * (`function (arg1, arg2, ..., callback) {}`)\n     * The final callback is of the form `callback(err, results...)`, which must be\n     * called once the function is completed.  The callback should be called with a\n     * Error as its first argument to signal that an error occurred.\n     * Otherwise, if no error occurred, it should be called with `null` as the first\n     * argument, and any additional `result` arguments that may apply, to signal\n     * successful completion.\n     * The callback must be called exactly once, ideally on a later tick of the\n     * JavaScript event loop.\n     *\n     * This type of function is also referred to as a \"Node-style async function\",\n     * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n     * library are themselves CPS/Node-style async functions, or functions that\n     * return CPS/Node-style async functions.\n     *\n     * Wherever we accept a Node-style async function, we also directly accept an\n     * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n     * In this case, the `async` function will not be passed a final callback\n     * argument, and any thrown error will be used as the `err` argument of the\n     * implicit callback, and the return value will be used as the `result` value.\n     * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n     * argument, and a `resolved` value becomes the `result`.)\n     *\n     * Note, due to JavaScript limitations, we can only detect native `async`\n     * functions and not transpilied implementations.\n     * Your environment must have `async`/`await` support for this to work.\n     * (e.g. Node > v7.6, or a recent version of a modern browser).\n     * If you are using `async` functions through a transpiler (e.g. Babel), you\n     * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n     * because the `async function` will be compiled to an ordinary function that\n     * returns a promise.\n     *\n     * @typedef {Function} AsyncFunction\n     * @static\n     */\n\n    var index = {\n        apply,\n        applyEach: applyEach$1,\n        applyEachSeries,\n        asyncify,\n        auto,\n        autoInject,\n        cargo,\n        cargoQueue: cargo$1,\n        compose,\n        concat: concat$1,\n        concatLimit: concatLimit$1,\n        concatSeries: concatSeries$1,\n        constant,\n        detect: detect$1,\n        detectLimit: detectLimit$1,\n        detectSeries: detectSeries$1,\n        dir,\n        doUntil,\n        doWhilst: doWhilst$1,\n        each,\n        eachLimit: eachLimit$2,\n        eachOf: eachOf$1,\n        eachOfLimit: eachOfLimit$2,\n        eachOfSeries: eachOfSeries$1,\n        eachSeries: eachSeries$1,\n        ensureAsync,\n        every: every$1,\n        everyLimit: everyLimit$1,\n        everySeries: everySeries$1,\n        filter: filter$1,\n        filterLimit: filterLimit$1,\n        filterSeries: filterSeries$1,\n        forever: forever$1,\n        groupBy,\n        groupByLimit: groupByLimit$1,\n        groupBySeries,\n        log,\n        map: map$1,\n        mapLimit: mapLimit$1,\n        mapSeries: mapSeries$1,\n        mapValues,\n        mapValuesLimit: mapValuesLimit$1,\n        mapValuesSeries,\n        memoize,\n        nextTick,\n        parallel,\n        parallelLimit,\n        priorityQueue,\n        queue: queue$1,\n        race: race$1,\n        reduce: reduce$1,\n        reduceRight,\n        reflect,\n        reflectAll,\n        reject: reject$2,\n        rejectLimit: rejectLimit$1,\n        rejectSeries: rejectSeries$1,\n        retry,\n        retryable,\n        seq,\n        series,\n        setImmediate: setImmediate$1,\n        some: some$1,\n        someLimit: someLimit$1,\n        someSeries: someSeries$1,\n        sortBy: sortBy$1,\n        timeout,\n        times,\n        timesLimit,\n        timesSeries,\n        transform,\n        tryEach: tryEach$1,\n        unmemoize,\n        until,\n        waterfall: waterfall$1,\n        whilst: whilst$1,\n\n        // aliases\n        all: every$1,\n        allLimit: everyLimit$1,\n        allSeries: everySeries$1,\n        any: some$1,\n        anyLimit: someLimit$1,\n        anySeries: someSeries$1,\n        find: detect$1,\n        findLimit: detectLimit$1,\n        findSeries: detectSeries$1,\n        flatMap: concat$1,\n        flatMapLimit: concatLimit$1,\n        flatMapSeries: concatSeries$1,\n        forEach: each,\n        forEachSeries: eachSeries$1,\n        forEachLimit: eachLimit$2,\n        forEachOf: eachOf$1,\n        forEachOfSeries: eachOfSeries$1,\n        forEachOfLimit: eachOfLimit$2,\n        inject: reduce$1,\n        foldl: reduce$1,\n        foldr: reduceRight,\n        select: filter$1,\n        selectLimit: filterLimit$1,\n        selectSeries: filterSeries$1,\n        wrapSync: asyncify,\n        during: whilst$1,\n        doDuring: doWhilst$1\n    };\n\n    exports.default = index;\n    exports.apply = apply;\n    exports.applyEach = applyEach$1;\n    exports.applyEachSeries = applyEachSeries;\n    exports.asyncify = asyncify;\n    exports.auto = auto;\n    exports.autoInject = autoInject;\n    exports.cargo = cargo;\n    exports.cargoQueue = cargo$1;\n    exports.compose = compose;\n    exports.concat = concat$1;\n    exports.concatLimit = concatLimit$1;\n    exports.concatSeries = concatSeries$1;\n    exports.constant = constant;\n    exports.detect = detect$1;\n    exports.detectLimit = detectLimit$1;\n    exports.detectSeries = detectSeries$1;\n    exports.dir = dir;\n    exports.doUntil = doUntil;\n    exports.doWhilst = doWhilst$1;\n    exports.each = each;\n    exports.eachLimit = eachLimit$2;\n    exports.eachOf = eachOf$1;\n    exports.eachOfLimit = eachOfLimit$2;\n    exports.eachOfSeries = eachOfSeries$1;\n    exports.eachSeries = eachSeries$1;\n    exports.ensureAsync = ensureAsync;\n    exports.every = every$1;\n    exports.everyLimit = everyLimit$1;\n    exports.everySeries = everySeries$1;\n    exports.filter = filter$1;\n    exports.filterLimit = filterLimit$1;\n    exports.filterSeries = filterSeries$1;\n    exports.forever = forever$1;\n    exports.groupBy = groupBy;\n    exports.groupByLimit = groupByLimit$1;\n    exports.groupBySeries = groupBySeries;\n    exports.log = log;\n    exports.map = map$1;\n    exports.mapLimit = mapLimit$1;\n    exports.mapSeries = mapSeries$1;\n    exports.mapValues = mapValues;\n    exports.mapValuesLimit = mapValuesLimit$1;\n    exports.mapValuesSeries = mapValuesSeries;\n    exports.memoize = memoize;\n    exports.nextTick = nextTick;\n    exports.parallel = parallel;\n    exports.parallelLimit = parallelLimit;\n    exports.priorityQueue = priorityQueue;\n    exports.queue = queue$1;\n    exports.race = race$1;\n    exports.reduce = reduce$1;\n    exports.reduceRight = reduceRight;\n    exports.reflect = reflect;\n    exports.reflectAll = reflectAll;\n    exports.reject = reject$2;\n    exports.rejectLimit = rejectLimit$1;\n    exports.rejectSeries = rejectSeries$1;\n    exports.retry = retry;\n    exports.retryable = retryable;\n    exports.seq = seq;\n    exports.series = series;\n    exports.setImmediate = setImmediate$1;\n    exports.some = some$1;\n    exports.someLimit = someLimit$1;\n    exports.someSeries = someSeries$1;\n    exports.sortBy = sortBy$1;\n    exports.timeout = timeout;\n    exports.times = times;\n    exports.timesLimit = timesLimit;\n    exports.timesSeries = timesSeries;\n    exports.transform = transform;\n    exports.tryEach = tryEach$1;\n    exports.unmemoize = unmemoize;\n    exports.until = until;\n    exports.waterfall = waterfall$1;\n    exports.whilst = whilst$1;\n    exports.all = every$1;\n    exports.allLimit = everyLimit$1;\n    exports.allSeries = everySeries$1;\n    exports.any = some$1;\n    exports.anyLimit = someLimit$1;\n    exports.anySeries = someSeries$1;\n    exports.find = detect$1;\n    exports.findLimit = detectLimit$1;\n    exports.findSeries = detectSeries$1;\n    exports.flatMap = concat$1;\n    exports.flatMapLimit = concatLimit$1;\n    exports.flatMapSeries = concatSeries$1;\n    exports.forEach = each;\n    exports.forEachSeries = eachSeries$1;\n    exports.forEachLimit = eachLimit$2;\n    exports.forEachOf = eachOf$1;\n    exports.forEachOfSeries = eachOfSeries$1;\n    exports.forEachOfLimit = eachOfLimit$2;\n    exports.inject = reduce$1;\n    exports.foldl = reduce$1;\n    exports.foldr = reduceRight;\n    exports.select = filter$1;\n    exports.selectLimit = filterLimit$1;\n    exports.selectSeries = filterSeries$1;\n    exports.wrapSync = asyncify;\n    exports.during = whilst$1;\n    exports.doDuring = doWhilst$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2Rpc3QvYXN5bmMuanM/MDA0MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUksS0FBNEQ7QUFDaEUsSUFBSSxTQUM4QjtBQUNsQyxDQUFDLDRCQUE0Qjs7QUFFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCLGtDQUFrQyxvQkFBb0I7QUFDdEQsaUJBQWlCLGNBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxpQ0FBaUMsVUFBVTtBQUMzQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx1QkFBdUI7QUFDdkQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxQkFBcUI7QUFDbkQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHNCQUFzQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLGdDQUFnQztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsT0FBTztBQUN0QixlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EscUJBQXFCLDhCQUE4QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QixpQ0FBaUM7QUFDakMsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQyx3QkFBd0Isb0JBQW9CO0FBQy9GO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0EsaUJBQWlCLGNBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QixnQ0FBZ0M7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLDZCQUE2QjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlDQUFpQyxtQ0FBbUM7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBLGVBQWUsb0NBQW9DLHdCQUF3QixvQkFBb0I7QUFDL0Y7QUFDQSxlQUFlLEtBQUs7QUFDcEI7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0Esa0RBQWtELG9CQUFvQjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvQkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9CQUFvQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLHVEQUF1RCxvQkFBb0I7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0Esb0VBQW9FO0FBQ3BFO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsK0JBQStCLHNEQUFzRDtBQUNyRixZQUFZO0FBQ1osUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSwrQkFBK0Isc0RBQXNEO0FBQ3JGLFlBQVk7QUFDWixRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLHVDQUF1QyxzREFBc0Q7QUFDN0Ysb0JBQW9CO0FBQ3BCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTOztBQUVUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsK0VBQStFO0FBQy9FO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EseURBQXlELDhCQUE4QjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsOEJBQThCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxlQUFlLE9BQU8sb0RBQW9ELG9CQUFvQjtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw4Q0FBOEM7QUFDN0U7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLCtCQUErQiw4Q0FBOEM7QUFDN0UsWUFBWTtBQUNaO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsS0FBSztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaURBQWlELE9BQU87QUFDeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLE9BQU87QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHlDQUF5QyxRQUFRO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrQkFBK0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQSxlQUFlLGNBQWM7QUFDN0I7QUFDQSxlQUFlLE9BQU87QUFDdEIsb0RBQW9EO0FBQ3BEO0FBQ0EsaUJBQWlCLCtCQUErQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsbUJBQW1CLFlBQVk7QUFDL0I7QUFDQSxRQUFRO0FBQ1IsbUJBQW1CLFlBQVk7QUFDL0I7QUFDQSxRQUFRO0FBQ1IseUJBQXlCLFlBQVk7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLCtCQUErQjtBQUN0RCxnQ0FBZ0MsK0JBQStCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUI7QUFDQSxlQUFlLGNBQWM7QUFDN0I7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixvREFBb0Q7QUFDcEQ7QUFDQSxpQkFBaUIsK0JBQStCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBLFFBQVE7QUFDUix3QkFBd0IsWUFBWTtBQUNwQztBQUNBLFFBQVE7QUFDUix3QkFBd0IsWUFBWTtBQUNwQztBQUNBLFFBQVE7QUFDUix3QkFBd0IsWUFBWTtBQUNwQztBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsRUFBRTtBQUNqQixlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlDQUFpQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLGVBQWUsaUJBQWlCO0FBQ2hDLGlCQUFpQixTQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msd0NBQXdDO0FBQzFFLGdCQUFnQjtBQUNoQixrQ0FBa0Msa0RBQWtEO0FBQ3BGO0FBQ0EsWUFBWTtBQUNaLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpQkFBaUI7QUFDaEMsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJCQUEyQiw2QkFBNkI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsT0FBTztBQUN0QixlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLGdDQUFnQztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLE9BQU87QUFDdEIsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsMkJBQTJCLHVCQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsY0FBYztBQUM3QjtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLGdDQUFnQztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVEQUF1RCxtQ0FBbUM7QUFDMUYsZ0JBQWdCLDhCQUE4QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEI7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLHNDQUFzQztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QixnQ0FBZ0M7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLE9BQU87QUFDdEIsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwwQkFBMEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0EsZ0RBQWdELG9CQUFvQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsWUFBWTtBQUMzQyxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QyxnQ0FBZ0M7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSx5QkFBeUIsa0NBQWtDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSw0QkFBNEIsOEJBQThCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsT0FBTztBQUN0QixlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEJBQTRCLDhCQUE4QjtBQUMxRDtBQUNBLGtDQUFrQyw4QkFBOEI7QUFDaEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQsWUFBWTtBQUNaLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2QkFBNkIsK0JBQStCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsT0FBTztBQUN0QixlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLCtCQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLDJCQUEyQixnQkFBZ0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxnQkFBZ0I7QUFDbEQ7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QixnQ0FBZ0M7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLE9BQU87QUFDdEIsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLGdDQUFnQztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0I7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLCtCQUErQixpQ0FBaUM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsT0FBTztBQUN0QixlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsU0FBUztBQUM3QyxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUIsZUFBZTs7QUFFaEMsMkJBQTJCLHVCQUF1QjtBQUNsRDtBQUNBLHlCQUF5QixJQUFJO0FBQzdCLHlCQUF5QixJQUFJOztBQUU3QjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUztBQUNUOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLCtCQUErQixpQ0FBaUM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0I7QUFDQSxlQUFlLEtBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUNBQWlDLG1DQUFtQztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSxlQUFlLE9BQU87QUFDdEIsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUOztBQUVBOztBQUVBO0FBQ0EsNkJBQTZCLDZCQUE2QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQ0FBaUMsbUNBQW1DO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSxlQUFlLE9BQU87QUFDdEIsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QixlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBLGVBQWUsS0FBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDJCQUEyQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCx5QkFBeUIsb0JBQW9CO0FBQzdDO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsUUFBUTtBQUNSO0FBQ0Esb0NBQW9DO0FBQ3BDLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsUUFBUTtBQUNSO0FBQ0Esb0NBQW9DO0FBQ3BDLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQ0FBZ0Msa0NBQWtDO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELHlCQUF5QixvQkFBb0I7QUFDN0M7QUFDQSxlQUFlLE9BQU87QUFDdEIsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0Esa0JBQWtCLFFBQVE7QUFDMUI7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0Esa0JBQWtCLE9BQU87QUFDekI7QUFDQSxlQUFlLCtCQUErQjtBQUM5QyxrQkFBa0IsY0FBYztBQUNoQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsY0FBYztBQUNoQztBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0EsdUJBQXVCLHVDQUF1QztBQUM5RDtBQUNBLG1CQUFtQixlQUFlLElBQUk7QUFDdEMsa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLE9BQU87QUFDekI7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixRQUFRO0FBQzFCO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0EsaUJBQWlCLCtCQUErQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsZUFBZSxZQUFZO0FBQzNCO0FBQ0E7QUFDQSxnQkFBZ0IsWUFBWSxFQUFFLFlBQVksRUFBRSxZQUFZO0FBQ3hEO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWTtBQUM5QjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLHNCQUFzQjtBQUNqRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQixzQkFBc0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxvREFBb0QsUUFBUTtBQUM1RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQ0FBaUMsK0JBQStCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBLGlCQUFpQiwrQkFBK0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsaUVBQWlFO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNENBQTRDLE9BQU87QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTSwrQ0FBK0M7QUFDcEU7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE9BQU87QUFDaEQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsMEJBQTBCLGdDQUFnQztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSxlQUFlLE1BQU07QUFDckIsZUFBZSxFQUFFO0FBQ2pCLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0IsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckMseUJBQXlCLG9CQUFvQjtBQUM3QyxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsWUFBWTtBQUNaO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDs7QUFFQTtBQUNBLGtDQUFrQyxnQ0FBZ0M7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLGVBQWUsb0NBQW9DO0FBQ25ELGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCLGdDQUFnQztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLE9BQU87QUFDdEIsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsZUFBZSxjQUFjLFVBQVUsc0JBQXNCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0Esb0JBQW9CLHdCQUF3QjtBQUM1QztBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Q7QUFDcEQ7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFDQUFxQywrQkFBK0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQSxlQUFlLGNBQWMsVUFBVSxzQkFBc0I7QUFDN0Q7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0EsaUJBQWlCLGNBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWixRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtQkFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQseUJBQXlCLG9CQUFvQjtBQUM3QztBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSxRQUFRO0FBQ1I7QUFDQSxvQ0FBb0M7QUFDcEMsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBLFFBQVE7QUFDUjtBQUNBLG9DQUFvQztBQUNwQyxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEJBQTRCLDhCQUE4QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLE9BQU87QUFDdEIsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEJBQTRCLDhCQUE4QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRCxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLFFBQVE7QUFDUjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWixRQUFRO0FBQ1I7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQW1CO0FBQ2hELGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGVBQWUsT0FBTztBQUN0QixlQUFlLEVBQUU7QUFDakI7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGFBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkIsK0JBQStCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBLGVBQWUsT0FBTztBQUN0QixlQUFlLE9BQU87QUFDdEIsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxTQUFTLDRCQUE0Qiw2QkFBNkI7QUFDakYsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUNBQXVDLDZCQUE2QjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsY0FBYztBQUM3QjtBQUNBLGVBQWUsU0FBUyxpQkFBaUIsNkJBQTZCO0FBQ3RFLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLCtCQUErQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCLGVBQWUsY0FBYztBQUM3QjtBQUNBLGVBQWUsU0FBUyxpQkFBaUIsNkJBQTZCO0FBQ3RFLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQsZUFBZSxFQUFFO0FBQ2pCO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZixRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDLGFBQWE7QUFDYixTQUFTO0FBQ1Q7O0FBRUE7O0FBRUE7QUFDQSwwQkFBMEIsMkJBQTJCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLGVBQWUsY0FBYztBQUM3QixpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHFCQUFxQixFQUFFO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGdDQUFnQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE1BQU0sdUNBQXVDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxrR0FBa0c7QUFDbkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCw0QkFBNEI7QUFDaEY7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrREFBa0QsY0FBYzs7QUFFaEUsQ0FBQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMvZGlzdC9hc3luYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gICAgdHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzKSA6XG4gICAgdHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKFsnZXhwb3J0cyddLCBmYWN0b3J5KSA6XG4gICAgKGZhY3RvcnkoKGdsb2JhbC5hc3luYyA9IHt9KSkpO1xufSh0aGlzLCAoZnVuY3Rpb24gKGV4cG9ydHMpIHsgJ3VzZSBzdHJpY3QnO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGNvbnRpbnVhdGlvbiBmdW5jdGlvbiB3aXRoIHNvbWUgYXJndW1lbnRzIGFscmVhZHkgYXBwbGllZC5cbiAgICAgKlxuICAgICAqIFVzZWZ1bCBhcyBhIHNob3J0aGFuZCB3aGVuIGNvbWJpbmVkIHdpdGggb3RoZXIgY29udHJvbCBmbG93IGZ1bmN0aW9ucy4gQW55XG4gICAgICogYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgcmV0dXJuZWQgZnVuY3Rpb24gYXJlIGFkZGVkIHRvIHRoZSBhcmd1bWVudHNcbiAgICAgKiBvcmlnaW5hbGx5IHBhc3NlZCB0byBhcHBseS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGFwcGx5XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6VXRpbHNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IFV0aWxcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiAtIFRoZSBmdW5jdGlvbiB5b3Ugd2FudCB0byBldmVudHVhbGx5IGFwcGx5IGFsbFxuICAgICAqIGFyZ3VtZW50cyB0by4gSW52b2tlcyB3aXRoIChhcmd1bWVudHMuLi4pLlxuICAgICAqIEBwYXJhbSB7Li4uKn0gYXJndW1lbnRzLi4uIC0gQW55IG51bWJlciBvZiBhcmd1bWVudHMgdG8gYXV0b21hdGljYWxseSBhcHBseVxuICAgICAqIHdoZW4gdGhlIGNvbnRpbnVhdGlvbiBpcyBjYWxsZWQuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSB0aGUgcGFydGlhbGx5LWFwcGxpZWQgZnVuY3Rpb25cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgYXBwbHlcbiAgICAgKiBhc3luYy5wYXJhbGxlbChbXG4gICAgICogICAgIGFzeW5jLmFwcGx5KGZzLndyaXRlRmlsZSwgJ3Rlc3RmaWxlMScsICd0ZXN0MScpLFxuICAgICAqICAgICBhc3luYy5hcHBseShmcy53cml0ZUZpbGUsICd0ZXN0ZmlsZTInLCAndGVzdDInKVxuICAgICAqIF0pO1xuICAgICAqXG4gICAgICpcbiAgICAgKiAvLyB0aGUgc2FtZSBwcm9jZXNzIHdpdGhvdXQgdXNpbmcgYXBwbHlcbiAgICAgKiBhc3luYy5wYXJhbGxlbChbXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBmcy53cml0ZUZpbGUoJ3Rlc3RmaWxlMScsICd0ZXN0MScsIGNhbGxiYWNrKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIGZzLndyaXRlRmlsZSgndGVzdGZpbGUyJywgJ3Rlc3QyJywgY2FsbGJhY2spO1xuICAgICAqICAgICB9XG4gICAgICogXSk7XG4gICAgICpcbiAgICAgKiAvLyBJdCdzIHBvc3NpYmxlIHRvIHBhc3MgYW55IG51bWJlciBvZiBhZGRpdGlvbmFsIGFyZ3VtZW50cyB3aGVuIGNhbGxpbmcgdGhlXG4gICAgICogLy8gY29udGludWF0aW9uOlxuICAgICAqXG4gICAgICogbm9kZT4gdmFyIGZuID0gYXN5bmMuYXBwbHkoc3lzLnB1dHMsICdvbmUnKTtcbiAgICAgKiBub2RlPiBmbigndHdvJywgJ3RocmVlJyk7XG4gICAgICogb25lXG4gICAgICogdHdvXG4gICAgICogdGhyZWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBhcHBseShmbiwgLi4uYXJncykge1xuICAgICAgICByZXR1cm4gKC4uLmNhbGxBcmdzKSA9PiBmbiguLi5hcmdzLC4uLmNhbGxBcmdzKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbml0aWFsUGFyYW1zIChmbikge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MvKiwgY2FsbGJhY2sqLykge1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrID0gYXJncy5wb3AoKTtcbiAgICAgICAgICAgIHJldHVybiBmbi5jYWxsKHRoaXMsIGFyZ3MsIGNhbGxiYWNrKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZmlsZSAqL1xuXG4gICAgdmFyIGhhc1F1ZXVlTWljcm90YXNrID0gdHlwZW9mIHF1ZXVlTWljcm90YXNrID09PSAnZnVuY3Rpb24nICYmIHF1ZXVlTWljcm90YXNrO1xuICAgIHZhciBoYXNTZXRJbW1lZGlhdGUgPSB0eXBlb2Ygc2V0SW1tZWRpYXRlID09PSAnZnVuY3Rpb24nICYmIHNldEltbWVkaWF0ZTtcbiAgICB2YXIgaGFzTmV4dFRpY2sgPSB0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHByb2Nlc3MubmV4dFRpY2sgPT09ICdmdW5jdGlvbic7XG5cbiAgICBmdW5jdGlvbiBmYWxsYmFjayhmbikge1xuICAgICAgICBzZXRUaW1lb3V0KGZuLCAwKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB3cmFwKGRlZmVyKSB7XG4gICAgICAgIHJldHVybiAoZm4sIC4uLmFyZ3MpID0+IGRlZmVyKCgpID0+IGZuKC4uLmFyZ3MpKTtcbiAgICB9XG5cbiAgICB2YXIgX2RlZmVyO1xuXG4gICAgaWYgKGhhc1F1ZXVlTWljcm90YXNrKSB7XG4gICAgICAgIF9kZWZlciA9IHF1ZXVlTWljcm90YXNrO1xuICAgIH0gZWxzZSBpZiAoaGFzU2V0SW1tZWRpYXRlKSB7XG4gICAgICAgIF9kZWZlciA9IHNldEltbWVkaWF0ZTtcbiAgICB9IGVsc2UgaWYgKGhhc05leHRUaWNrKSB7XG4gICAgICAgIF9kZWZlciA9IHByb2Nlc3MubmV4dFRpY2s7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgX2RlZmVyID0gZmFsbGJhY2s7XG4gICAgfVxuXG4gICAgdmFyIHNldEltbWVkaWF0ZSQxID0gd3JhcChfZGVmZXIpO1xuXG4gICAgLyoqXG4gICAgICogVGFrZSBhIHN5bmMgZnVuY3Rpb24gYW5kIG1ha2UgaXQgYXN5bmMsIHBhc3NpbmcgaXRzIHJldHVybiB2YWx1ZSB0byBhXG4gICAgICogY2FsbGJhY2suIFRoaXMgaXMgdXNlZnVsIGZvciBwbHVnZ2luZyBzeW5jIGZ1bmN0aW9ucyBpbnRvIGEgd2F0ZXJmYWxsLFxuICAgICAqIHNlcmllcywgb3Igb3RoZXIgYXN5bmMgZnVuY3Rpb25zLiBBbnkgYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgZ2VuZXJhdGVkXG4gICAgICogZnVuY3Rpb24gd2lsbCBiZSBwYXNzZWQgdG8gdGhlIHdyYXBwZWQgZnVuY3Rpb24gKGV4Y2VwdCBmb3IgdGhlIGZpbmFsXG4gICAgICogY2FsbGJhY2sgYXJndW1lbnQpLiBFcnJvcnMgdGhyb3duIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBjYWxsYmFjay5cbiAgICAgKlxuICAgICAqIElmIHRoZSBmdW5jdGlvbiBwYXNzZWQgdG8gYGFzeW5jaWZ5YCByZXR1cm5zIGEgUHJvbWlzZSwgdGhhdCBwcm9taXNlcydzXG4gICAgICogcmVzb2x2ZWQvcmVqZWN0ZWQgc3RhdGUgd2lsbCBiZSB1c2VkIHRvIGNhbGwgdGhlIGNhbGxiYWNrLCByYXRoZXIgdGhhbiBzaW1wbHlcbiAgICAgKiB0aGUgc3luY2hyb25vdXMgcmV0dXJuIHZhbHVlLlxuICAgICAqXG4gICAgICogVGhpcyBhbHNvIG1lYW5zIHlvdSBjYW4gYXN5bmNpZnkgRVMyMDE3IGBhc3luY2AgZnVuY3Rpb25zLlxuICAgICAqXG4gICAgICogQG5hbWUgYXN5bmNpZnlcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpVdGlsc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAYWxpYXMgd3JhcFN5bmNcbiAgICAgKiBAY2F0ZWdvcnkgVXRpbFxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgLSBUaGUgc3luY2hyb25vdXMgZnVuY3Rpb24sIG9yIFByb21pc2UtcmV0dXJuaW5nXG4gICAgICogZnVuY3Rpb24gdG8gY29udmVydCB0byBhbiB7QGxpbmsgQXN5bmNGdW5jdGlvbn0uXG4gICAgICogQHJldHVybnMge0FzeW5jRnVuY3Rpb259IEFuIGFzeW5jaHJvbm91cyB3cmFwcGVyIG9mIHRoZSBgZnVuY2AuIFRvIGJlXG4gICAgICogaW52b2tlZCB3aXRoIGAoYXJncy4uLiwgY2FsbGJhY2spYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gcGFzc2luZyBhIHJlZ3VsYXIgc3luY2hyb25vdXMgZnVuY3Rpb25cbiAgICAgKiBhc3luYy53YXRlcmZhbGwoW1xuICAgICAqICAgICBhc3luYy5hcHBseShmcy5yZWFkRmlsZSwgZmlsZW5hbWUsIFwidXRmOFwiKSxcbiAgICAgKiAgICAgYXN5bmMuYXN5bmNpZnkoSlNPTi5wYXJzZSksXG4gICAgICogICAgIGZ1bmN0aW9uIChkYXRhLCBuZXh0KSB7XG4gICAgICogICAgICAgICAvLyBkYXRhIGlzIHRoZSByZXN1bHQgb2YgcGFyc2luZyB0aGUgdGV4dC5cbiAgICAgKiAgICAgICAgIC8vIElmIHRoZXJlIHdhcyBhIHBhcnNpbmcgZXJyb3IsIGl0IHdvdWxkIGhhdmUgYmVlbiBjYXVnaHQuXG4gICAgICogICAgIH1cbiAgICAgKiBdLCBjYWxsYmFjayk7XG4gICAgICpcbiAgICAgKiAvLyBwYXNzaW5nIGEgZnVuY3Rpb24gcmV0dXJuaW5nIGEgcHJvbWlzZVxuICAgICAqIGFzeW5jLndhdGVyZmFsbChbXG4gICAgICogICAgIGFzeW5jLmFwcGx5KGZzLnJlYWRGaWxlLCBmaWxlbmFtZSwgXCJ1dGY4XCIpLFxuICAgICAqICAgICBhc3luYy5hc3luY2lmeShmdW5jdGlvbiAoY29udGVudHMpIHtcbiAgICAgKiAgICAgICAgIHJldHVybiBkYi5tb2RlbC5jcmVhdGUoY29udGVudHMpO1xuICAgICAqICAgICB9KSxcbiAgICAgKiAgICAgZnVuY3Rpb24gKG1vZGVsLCBuZXh0KSB7XG4gICAgICogICAgICAgICAvLyBgbW9kZWxgIGlzIHRoZSBpbnN0YW50aWF0ZWQgbW9kZWwgb2JqZWN0LlxuICAgICAqICAgICAgICAgLy8gSWYgdGhlcmUgd2FzIGFuIGVycm9yLCB0aGlzIGZ1bmN0aW9uIHdvdWxkIGJlIHNraXBwZWQuXG4gICAgICogICAgIH1cbiAgICAgKiBdLCBjYWxsYmFjayk7XG4gICAgICpcbiAgICAgKiAvLyBlczIwMTcgZXhhbXBsZSwgdGhvdWdoIGBhc3luY2lmeWAgaXMgbm90IG5lZWRlZCBpZiB5b3VyIEpTIGVudmlyb25tZW50XG4gICAgICogLy8gc3VwcG9ydHMgYXN5bmMgZnVuY3Rpb25zIG91dCBvZiB0aGUgYm94XG4gICAgICogdmFyIHEgPSBhc3luYy5xdWV1ZShhc3luYy5hc3luY2lmeShhc3luYyBmdW5jdGlvbihmaWxlKSB7XG4gICAgICogICAgIHZhciBpbnRlcm1lZGlhdGVTdGVwID0gYXdhaXQgcHJvY2Vzc0ZpbGUoZmlsZSk7XG4gICAgICogICAgIHJldHVybiBhd2FpdCBzb21lUHJvbWlzZShpbnRlcm1lZGlhdGVTdGVwKVxuICAgICAqIH0pKTtcbiAgICAgKlxuICAgICAqIHEucHVzaChmaWxlcyk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gYXN5bmNpZnkoZnVuYykge1xuICAgICAgICBpZiAoaXNBc3luYyhmdW5jKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzLyosIGNhbGxiYWNrKi8pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IGFyZ3MucG9wKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9IGZ1bmMuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZVByb21pc2UocHJvbWlzZSwgY2FsbGJhY2spXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5pdGlhbFBhcmFtcyhmdW5jdGlvbiAoYXJncywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHZhciByZXN1bHQ7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaWYgcmVzdWx0IGlzIFByb21pc2Ugb2JqZWN0XG4gICAgICAgICAgICBpZiAocmVzdWx0ICYmIHR5cGVvZiByZXN1bHQudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVQcm9taXNlKHJlc3VsdCwgY2FsbGJhY2spXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3VsdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZVByb21pc2UocHJvbWlzZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2UudGhlbih2YWx1ZSA9PiB7XG4gICAgICAgICAgICBpbnZva2VDYWxsYmFjayhjYWxsYmFjaywgbnVsbCwgdmFsdWUpO1xuICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgaW52b2tlQ2FsbGJhY2soY2FsbGJhY2ssIGVyciAmJiBlcnIubWVzc2FnZSA/IGVyciA6IG5ldyBFcnJvcihlcnIpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW52b2tlQ2FsbGJhY2soY2FsbGJhY2ssIGVycm9yLCB2YWx1ZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY2FsbGJhY2soZXJyb3IsIHZhbHVlKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBzZXRJbW1lZGlhdGUkMShlID0+IHsgdGhyb3cgZSB9LCBlcnIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNBc3luYyhmbikge1xuICAgICAgICByZXR1cm4gZm5bU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ0FzeW5jRnVuY3Rpb24nO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzQXN5bmNHZW5lcmF0b3IoZm4pIHtcbiAgICAgICAgcmV0dXJuIGZuW1N5bWJvbC50b1N0cmluZ1RhZ10gPT09ICdBc3luY0dlbmVyYXRvcic7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlKG9iaikge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9ialtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPT09ICdmdW5jdGlvbic7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gd3JhcEFzeW5jKGFzeW5jRm4pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhc3luY0ZuICE9PSAnZnVuY3Rpb24nKSB0aHJvdyBuZXcgRXJyb3IoJ2V4cGVjdGVkIGEgZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gaXNBc3luYyhhc3luY0ZuKSA/IGFzeW5jaWZ5KGFzeW5jRm4pIDogYXN5bmNGbjtcbiAgICB9XG5cbiAgICAvLyBjb25kaXRpb25hbGx5IHByb21pc2lmeSBhIGZ1bmN0aW9uLlxuICAgIC8vIG9ubHkgcmV0dXJuIGEgcHJvbWlzZSBpZiBhIGNhbGxiYWNrIGlzIG9taXR0ZWRcbiAgICBmdW5jdGlvbiBhd2FpdGlmeSAoYXN5bmNGbiwgYXJpdHkgPSBhc3luY0ZuLmxlbmd0aCkge1xuICAgICAgICBpZiAoIWFyaXR5KSB0aHJvdyBuZXcgRXJyb3IoJ2FyaXR5IGlzIHVuZGVmaW5lZCcpXG4gICAgICAgIGZ1bmN0aW9uIGF3YWl0YWJsZSAoLi4uYXJncykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmdzW2FyaXR5IC0gMV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXN5bmNGbi5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIGFyZ3NbYXJpdHkgLSAxXSA9IChlcnIsIC4uLmNiQXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShjYkFyZ3MubGVuZ3RoID4gMSA/IGNiQXJncyA6IGNiQXJnc1swXSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBhc3luY0ZuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhd2FpdGFibGVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhcHBseUVhY2ggKGVhY2hmbikge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gYXBwbHlFYWNoKGZucywgLi4uY2FsbEFyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGdvID0gYXdhaXRpZnkoZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHJldHVybiBlYWNoZm4oZm5zLCAoZm4sIGNiKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHdyYXBBc3luYyhmbikuYXBwbHkodGhhdCwgY2FsbEFyZ3MuY29uY2F0KGNiKSk7XG4gICAgICAgICAgICAgICAgfSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZ287XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX2FzeW5jTWFwKGVhY2hmbiwgYXJyLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgYXJyID0gYXJyIHx8IFtdO1xuICAgICAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgICAgICB2YXIgY291bnRlciA9IDA7XG4gICAgICAgIHZhciBfaXRlcmF0ZWUgPSB3cmFwQXN5bmMoaXRlcmF0ZWUpO1xuXG4gICAgICAgIHJldHVybiBlYWNoZm4oYXJyLCAodmFsdWUsIF8sIGl0ZXJDYikgPT4ge1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gY291bnRlcisrO1xuICAgICAgICAgICAgX2l0ZXJhdGVlKHZhbHVlLCAoZXJyLCB2KSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzdWx0c1tpbmRleF0gPSB2O1xuICAgICAgICAgICAgICAgIGl0ZXJDYihlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICBjYWxsYmFjayhlcnIsIHJlc3VsdHMpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0FycmF5TGlrZSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZS5sZW5ndGggPT09ICdudW1iZXInICYmXG4gICAgICAgICAgICB2YWx1ZS5sZW5ndGggPj0gMCAmJlxuICAgICAgICAgICAgdmFsdWUubGVuZ3RoICUgMSA9PT0gMDtcbiAgICB9XG5cbiAgICAvLyBBIHRlbXBvcmFyeSB2YWx1ZSB1c2VkIHRvIGlkZW50aWZ5IGlmIHRoZSBsb29wIHNob3VsZCBiZSBicm9rZW4uXG4gICAgLy8gU2VlICMxMDY0LCAjMTI5M1xuICAgIGNvbnN0IGJyZWFrTG9vcCA9IHt9O1xuXG4gICAgZnVuY3Rpb24gb25jZShmbikge1xuICAgICAgICBmdW5jdGlvbiB3cmFwcGVyICguLi5hcmdzKSB7XG4gICAgICAgICAgICBpZiAoZm4gPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgICAgIHZhciBjYWxsRm4gPSBmbjtcbiAgICAgICAgICAgIGZuID0gbnVsbDtcbiAgICAgICAgICAgIGNhbGxGbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuYXNzaWduKHdyYXBwZXIsIGZuKTtcbiAgICAgICAgcmV0dXJuIHdyYXBwZXJcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRJdGVyYXRvciAoY29sbCkge1xuICAgICAgICByZXR1cm4gY29sbFtTeW1ib2wuaXRlcmF0b3JdICYmIGNvbGxbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUFycmF5SXRlcmF0b3IoY29sbCkge1xuICAgICAgICB2YXIgaSA9IC0xO1xuICAgICAgICB2YXIgbGVuID0gY29sbC5sZW5ndGg7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgICAgcmV0dXJuICsraSA8IGxlbiA/IHt2YWx1ZTogY29sbFtpXSwga2V5OiBpfSA6IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVFUzIwMTVJdGVyYXRvcihpdGVyYXRvcikge1xuICAgICAgICB2YXIgaSA9IC0xO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICAgIHZhciBpdGVtID0gaXRlcmF0b3IubmV4dCgpO1xuICAgICAgICAgICAgaWYgKGl0ZW0uZG9uZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIHJldHVybiB7dmFsdWU6IGl0ZW0udmFsdWUsIGtleTogaX07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVPYmplY3RJdGVyYXRvcihvYmopIHtcbiAgICAgICAgdmFyIG9rZXlzID0gb2JqID8gT2JqZWN0LmtleXMob2JqKSA6IFtdO1xuICAgICAgICB2YXIgaSA9IC0xO1xuICAgICAgICB2YXIgbGVuID0gb2tleXMubGVuZ3RoO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBva2V5c1srK2ldO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ19fcHJvdG9fXycpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGkgPCBsZW4gPyB7dmFsdWU6IG9ialtrZXldLCBrZXl9IDogbnVsbDtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVJdGVyYXRvcihjb2xsKSB7XG4gICAgICAgIGlmIChpc0FycmF5TGlrZShjb2xsKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUFycmF5SXRlcmF0b3IoY29sbCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaXRlcmF0b3IgPSBnZXRJdGVyYXRvcihjb2xsKTtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yID8gY3JlYXRlRVMyMDE1SXRlcmF0b3IoaXRlcmF0b3IpIDogY3JlYXRlT2JqZWN0SXRlcmF0b3IoY29sbCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25seU9uY2UoZm4pIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgICAgICBpZiAoZm4gPT09IG51bGwpIHRocm93IG5ldyBFcnJvcihcIkNhbGxiYWNrIHdhcyBhbHJlYWR5IGNhbGxlZC5cIik7XG4gICAgICAgICAgICB2YXIgY2FsbEZuID0gZm47XG4gICAgICAgICAgICBmbiA9IG51bGw7XG4gICAgICAgICAgICBjYWxsRm4uYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gZm9yIGFzeW5jIGdlbmVyYXRvcnNcbiAgICBmdW5jdGlvbiBhc3luY0VhY2hPZkxpbWl0KGdlbmVyYXRvciwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICBsZXQgZG9uZSA9IGZhbHNlO1xuICAgICAgICBsZXQgY2FuY2VsZWQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGF3YWl0aW5nID0gZmFsc2U7XG4gICAgICAgIGxldCBydW5uaW5nID0gMDtcbiAgICAgICAgbGV0IGlkeCA9IDA7XG5cbiAgICAgICAgZnVuY3Rpb24gcmVwbGVuaXNoKCkge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZygncmVwbGVuaXNoJylcbiAgICAgICAgICAgIGlmIChydW5uaW5nID49IGxpbWl0IHx8IGF3YWl0aW5nIHx8IGRvbmUpIHJldHVyblxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZygncmVwbGVuaXNoIGF3YWl0aW5nJylcbiAgICAgICAgICAgIGF3YWl0aW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIGdlbmVyYXRvci5uZXh0KCkudGhlbigoe3ZhbHVlLCBkb25lOiBpdGVyRG9uZX0pID0+IHtcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdnb3QgdmFsdWUnLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICBpZiAoY2FuY2VsZWQgfHwgZG9uZSkgcmV0dXJuXG4gICAgICAgICAgICAgICAgYXdhaXRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlckRvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChydW5uaW5nIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2RvbmUgbmV4dENiJylcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcnVubmluZysrO1xuICAgICAgICAgICAgICAgIGl0ZXJhdGVlKHZhbHVlLCBpZHgsIGl0ZXJhdGVlQ2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIGlkeCsrO1xuICAgICAgICAgICAgICAgIHJlcGxlbmlzaCgpO1xuICAgICAgICAgICAgfSkuY2F0Y2goaGFuZGxlRXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaXRlcmF0ZWVDYWxsYmFjayhlcnIsIHJlc3VsdCkge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnaXRlcmF0ZWVDYWxsYmFjaycpXG4gICAgICAgICAgICBydW5uaW5nIC09IDE7XG4gICAgICAgICAgICBpZiAoY2FuY2VsZWQpIHJldHVyblxuICAgICAgICAgICAgaWYgKGVycikgcmV0dXJuIGhhbmRsZUVycm9yKGVycilcblxuICAgICAgICAgICAgaWYgKGVyciA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBjYW5jZWxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChyZXN1bHQgPT09IGJyZWFrTG9vcCB8fCAoZG9uZSAmJiBydW5uaW5nIDw9IDApKSB7XG4gICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnZG9uZSBpdGVyQ2InKVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcGxlbmlzaCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaGFuZGxlRXJyb3IoZXJyKSB7XG4gICAgICAgICAgICBpZiAoY2FuY2VsZWQpIHJldHVyblxuICAgICAgICAgICAgYXdhaXRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcGxlbmlzaCgpO1xuICAgIH1cblxuICAgIHZhciBlYWNoT2ZMaW1pdCA9IChsaW1pdCkgPT4ge1xuICAgICAgICByZXR1cm4gKG9iaiwgaXRlcmF0ZWUsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2spO1xuICAgICAgICAgICAgaWYgKGxpbWl0IDw9IDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignY29uY3VycmVuY3kgbGltaXQgY2Fubm90IGJlIGxlc3MgdGhhbiAxJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghb2JqKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzQXN5bmNHZW5lcmF0b3Iob2JqKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhc3luY0VhY2hPZkxpbWl0KG9iaiwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc0FzeW5jSXRlcmFibGUob2JqKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhc3luY0VhY2hPZkxpbWl0KG9ialtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBuZXh0RWxlbSA9IGNyZWF0ZUl0ZXJhdG9yKG9iaik7XG4gICAgICAgICAgICB2YXIgZG9uZSA9IGZhbHNlO1xuICAgICAgICAgICAgdmFyIGNhbmNlbGVkID0gZmFsc2U7XG4gICAgICAgICAgICB2YXIgcnVubmluZyA9IDA7XG4gICAgICAgICAgICB2YXIgbG9vcGluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiBpdGVyYXRlZUNhbGxiYWNrKGVyciwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2FuY2VsZWQpIHJldHVyblxuICAgICAgICAgICAgICAgIHJ1bm5pbmcgLT0gMTtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChlcnIgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBjYW5jZWxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlID09PSBicmVha0xvb3AgfHwgKGRvbmUgJiYgcnVubmluZyA8PSAwKSkge1xuICAgICAgICAgICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICghbG9vcGluZykge1xuICAgICAgICAgICAgICAgICAgICByZXBsZW5pc2goKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlcGxlbmlzaCAoKSB7XG4gICAgICAgICAgICAgICAgbG9vcGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHJ1bm5pbmcgPCBsaW1pdCAmJiAhZG9uZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlbSA9IG5leHRFbGVtKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChydW5uaW5nIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBydW5uaW5nICs9IDE7XG4gICAgICAgICAgICAgICAgICAgIGl0ZXJhdGVlKGVsZW0udmFsdWUsIGVsZW0ua2V5LCBvbmx5T25jZShpdGVyYXRlZUNhbGxiYWNrKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxvb3BpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVwbGVuaXNoKCk7XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgZWFjaE9mYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmVhY2hPZn0gYnV0IHJ1bnMgYSBtYXhpbXVtIG9mIGBsaW1pdGAgYXN5bmMgb3BlcmF0aW9ucyBhdCBhXG4gICAgICogdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGVhY2hPZkxpbWl0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMuZWFjaE9mXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZWFjaE9mfVxuICAgICAqIEBhbGlhcyBmb3JFYWNoT2ZMaW1pdFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxpbWl0IC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBbiBhc3luYyBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoXG4gICAgICogaXRlbSBpbiBgY29sbGAuIFRoZSBga2V5YCBpcyB0aGUgaXRlbSdzIGtleSwgb3IgaW5kZXggaW4gdGhlIGNhc2Ugb2YgYW5cbiAgICAgKiBhcnJheS5cbiAgICAgKiBJbnZva2VkIHdpdGggKGl0ZW0sIGtleSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbFxuICAgICAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIGEgY2FsbGJhY2sgaXMgb21pdHRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGVhY2hPZkxpbWl0JDEoY29sbCwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gZWFjaE9mTGltaXQobGltaXQpKGNvbGwsIHdyYXBBc3luYyhpdGVyYXRlZSksIGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICB2YXIgZWFjaE9mTGltaXQkMiA9IGF3YWl0aWZ5KGVhY2hPZkxpbWl0JDEsIDQpO1xuXG4gICAgLy8gZWFjaE9mIGltcGxlbWVudGF0aW9uIG9wdGltaXplZCBmb3IgYXJyYXktbGlrZXNcbiAgICBmdW5jdGlvbiBlYWNoT2ZBcnJheUxpa2UoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrID0gb25jZShjYWxsYmFjayk7XG4gICAgICAgIHZhciBpbmRleCA9IDAsXG4gICAgICAgICAgICBjb21wbGV0ZWQgPSAwLFxuICAgICAgICAgICAge2xlbmd0aH0gPSBjb2xsLFxuICAgICAgICAgICAgY2FuY2VsZWQgPSBmYWxzZTtcbiAgICAgICAgaWYgKGxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBpdGVyYXRvckNhbGxiYWNrKGVyciwgdmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChlcnIgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgY2FuY2VsZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNhbmNlbGVkID09PSB0cnVlKSByZXR1cm5cbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICgoKytjb21wbGV0ZWQgPT09IGxlbmd0aCkgfHwgdmFsdWUgPT09IGJyZWFrTG9vcCkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICg7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICBpdGVyYXRlZShjb2xsW2luZGV4XSwgaW5kZXgsIG9ubHlPbmNlKGl0ZXJhdG9yQ2FsbGJhY2spKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGEgZ2VuZXJpYyB2ZXJzaW9uIG9mIGVhY2hPZiB3aGljaCBjYW4gaGFuZGxlIGFycmF5LCBvYmplY3QsIGFuZCBpdGVyYXRvciBjYXNlcy5cbiAgICBmdW5jdGlvbiBlYWNoT2ZHZW5lcmljIChjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGVhY2hPZkxpbWl0JDIoY29sbCwgSW5maW5pdHksIGl0ZXJhdGVlLCBjYWxsYmFjayk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTGlrZSBbYGVhY2hgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZWFjaH0sIGV4Y2VwdCB0aGF0IGl0IHBhc3NlcyB0aGUga2V5IChvciBpbmRleCkgYXMgdGhlIHNlY29uZCBhcmd1bWVudFxuICAgICAqIHRvIHRoZSBpdGVyYXRlZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGVhY2hPZlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBhbGlhcyBmb3JFYWNoT2ZcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBzZWUgW2FzeW5jLmVhY2hde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNofVxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBIGZ1bmN0aW9uIHRvIGFwcGx5IHRvIGVhY2hcbiAgICAgKiBpdGVtIGluIGBjb2xsYC5cbiAgICAgKiBUaGUgYGtleWAgaXMgdGhlIGl0ZW0ncyBrZXksIG9yIGluZGV4IGluIHRoZSBjYXNlIG9mIGFuIGFycmF5LlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwga2V5LCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIHdoZW4gYWxsXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZCwgb3IgYW4gZXJyb3Igb2NjdXJzLiBJbnZva2VkIHdpdGggKGVycikuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBvbWl0dGVkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGRldi5qc29uIGlzIGEgZmlsZSBjb250YWluaW5nIGEgdmFsaWQganNvbiBvYmplY3QgY29uZmlnIGZvciBkZXYgZW52aXJvbm1lbnRcbiAgICAgKiAvLyBkZXYuanNvbiBpcyBhIGZpbGUgY29udGFpbmluZyBhIHZhbGlkIGpzb24gb2JqZWN0IGNvbmZpZyBmb3IgdGVzdCBlbnZpcm9ubWVudFxuICAgICAqIC8vIHByb2QuanNvbiBpcyBhIGZpbGUgY29udGFpbmluZyBhIHZhbGlkIGpzb24gb2JqZWN0IGNvbmZpZyBmb3IgcHJvZCBlbnZpcm9ubWVudFxuICAgICAqIC8vIGludmFsaWQuanNvbiBpcyBhIGZpbGUgd2l0aCBhIG1hbGZvcm1lZCBqc29uIG9iamVjdFxuICAgICAqXG4gICAgICogbGV0IGNvbmZpZ3MgPSB7fTsgLy9nbG9iYWwgdmFyaWFibGVcbiAgICAgKiBsZXQgdmFsaWRDb25maWdGaWxlTWFwID0ge2RldjogJ2Rldi5qc29uJywgdGVzdDogJ3Rlc3QuanNvbicsIHByb2Q6ICdwcm9kLmpzb24nfTtcbiAgICAgKiBsZXQgaW52YWxpZENvbmZpZ0ZpbGVNYXAgPSB7ZGV2OiAnZGV2Lmpzb24nLCB0ZXN0OiAndGVzdC5qc29uJywgaW52YWxpZDogJ2ludmFsaWQuanNvbid9O1xuICAgICAqXG4gICAgICogLy8gYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRoYXQgcmVhZHMgYSBqc29uIGZpbGUgYW5kIHBhcnNlcyB0aGUgY29udGVudHMgYXMganNvbiBvYmplY3RcbiAgICAgKiBmdW5jdGlvbiBwYXJzZUZpbGUoZmlsZSwga2V5LCBjYWxsYmFjaykge1xuICAgICAqICAgICBmcy5yZWFkRmlsZShmaWxlLCBcInV0ZjhcIiwgZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgICogICAgICAgICBpZiAoZXJyKSByZXR1cm4gY2FsYmFjayhlcnIpO1xuICAgICAqICAgICAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgICAgICBjb25maWdzW2tleV0gPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAqICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAqICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhlKTtcbiAgICAgKiAgICAgICAgIH1cbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICogICAgIH0pO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGNhbGxiYWNrc1xuICAgICAqIGFzeW5jLmZvckVhY2hPZih2YWxpZENvbmZpZ0ZpbGVNYXAsIHBhcnNlRmlsZSwgZnVuY3Rpb24gKGVycikge1xuICAgICAqICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICogICAgIH0gZWxzZSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhjb25maWdzKTtcbiAgICAgKiAgICAgICAgIC8vIGNvbmZpZ3MgaXMgbm93IGEgbWFwIG9mIEpTT04gZGF0YSwgZS5nLlxuICAgICAqICAgICAgICAgLy8geyBkZXY6IC8vcGFyc2VkIGRldi5qc29uLCB0ZXN0OiAvL3BhcnNlZCB0ZXN0Lmpzb24sIHByb2Q6IC8vcGFyc2VkIHByb2QuanNvbn1cbiAgICAgKiAgICAgfVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy9FcnJvciBoYW5kaW5nXG4gICAgICogYXN5bmMuZm9yRWFjaE9mKGludmFsaWRDb25maWdGaWxlTWFwLCBwYXJzZUZpbGUsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgKiAgICAgaWYgKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAqICAgICAgICAgLy8gSlNPTiBwYXJzZSBlcnJvciBleGNlcHRpb25cbiAgICAgKiAgICAgfSBlbHNlIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGNvbmZpZ3MpO1xuICAgICAqICAgICB9XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBQcm9taXNlc1xuICAgICAqIGFzeW5jLmZvckVhY2hPZih2YWxpZENvbmZpZ0ZpbGVNYXAsIHBhcnNlRmlsZSlcbiAgICAgKiAudGhlbiggKCkgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhjb25maWdzKTtcbiAgICAgKiAgICAgLy8gY29uZmlncyBpcyBub3cgYSBtYXAgb2YgSlNPTiBkYXRhLCBlLmcuXG4gICAgICogICAgIC8vIHsgZGV2OiAvL3BhcnNlZCBkZXYuanNvbiwgdGVzdDogLy9wYXJzZWQgdGVzdC5qc29uLCBwcm9kOiAvL3BhcnNlZCBwcm9kLmpzb259XG4gICAgICogfSkuY2F0Y2goIGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vRXJyb3IgaGFuZGluZ1xuICAgICAqIGFzeW5jLmZvckVhY2hPZihpbnZhbGlkQ29uZmlnRmlsZU1hcCwgcGFyc2VGaWxlKVxuICAgICAqIC50aGVuKCAoKSA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGNvbmZpZ3MpO1xuICAgICAqIH0pLmNhdGNoKCBlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICogICAgIC8vIEpTT04gcGFyc2UgZXJyb3IgZXhjZXB0aW9uXG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBhc3luYy9hd2FpdFxuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhc3luYy5mb3JFYWNoT2YodmFsaWRDb25maWdGaWxlTWFwLCBwYXJzZUZpbGUpO1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coY29uZmlncyk7XG4gICAgICogICAgICAgICAvLyBjb25maWdzIGlzIG5vdyBhIG1hcCBvZiBKU09OIGRhdGEsIGUuZy5cbiAgICAgKiAgICAgICAgIC8vIHsgZGV2OiAvL3BhcnNlZCBkZXYuanNvbiwgdGVzdDogLy9wYXJzZWQgdGVzdC5qc29uLCBwcm9kOiAvL3BhcnNlZCBwcm9kLmpzb259XG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vRXJyb3IgaGFuZGluZ1xuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhc3luYy5mb3JFYWNoT2YoaW52YWxpZENvbmZpZ0ZpbGVNYXAsIHBhcnNlRmlsZSk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhjb25maWdzKTtcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAgICAgLy8gSlNPTiBwYXJzZSBlcnJvciBleGNlcHRpb25cbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGVhY2hPZihjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGVhY2hPZkltcGxlbWVudGF0aW9uID0gaXNBcnJheUxpa2UoY29sbCkgPyBlYWNoT2ZBcnJheUxpa2UgOiBlYWNoT2ZHZW5lcmljO1xuICAgICAgICByZXR1cm4gZWFjaE9mSW1wbGVtZW50YXRpb24oY29sbCwgd3JhcEFzeW5jKGl0ZXJhdGVlKSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIHZhciBlYWNoT2YkMSA9IGF3YWl0aWZ5KGVhY2hPZiwgMyk7XG5cbiAgICAvKipcbiAgICAgKiBQcm9kdWNlcyBhIG5ldyBjb2xsZWN0aW9uIG9mIHZhbHVlcyBieSBtYXBwaW5nIGVhY2ggdmFsdWUgaW4gYGNvbGxgIHRocm91Z2hcbiAgICAgKiB0aGUgYGl0ZXJhdGVlYCBmdW5jdGlvbi4gVGhlIGBpdGVyYXRlZWAgaXMgY2FsbGVkIHdpdGggYW4gaXRlbSBmcm9tIGBjb2xsYFxuICAgICAqIGFuZCBhIGNhbGxiYWNrIGZvciB3aGVuIGl0IGhhcyBmaW5pc2hlZCBwcm9jZXNzaW5nLiBFYWNoIG9mIHRoZXNlIGNhbGxiYWNrc1xuICAgICAqIHRha2VzIDIgYXJndW1lbnRzOiBhbiBgZXJyb3JgLCBhbmQgdGhlIHRyYW5zZm9ybWVkIGl0ZW0gZnJvbSBgY29sbGAuIElmXG4gICAgICogYGl0ZXJhdGVlYCBwYXNzZXMgYW4gZXJyb3IgdG8gaXRzIGNhbGxiYWNrLCB0aGUgbWFpbiBgY2FsbGJhY2tgIChmb3IgdGhlXG4gICAgICogYG1hcGAgZnVuY3Rpb24pIGlzIGltbWVkaWF0ZWx5IGNhbGxlZCB3aXRoIHRoZSBlcnJvci5cbiAgICAgKlxuICAgICAqIE5vdGUsIHRoYXQgc2luY2UgdGhpcyBmdW5jdGlvbiBhcHBsaWVzIHRoZSBgaXRlcmF0ZWVgIHRvIGVhY2ggaXRlbSBpblxuICAgICAqIHBhcmFsbGVsLCB0aGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCB0aGUgYGl0ZXJhdGVlYCBmdW5jdGlvbnMgd2lsbCBjb21wbGV0ZVxuICAgICAqIGluIG9yZGVyLiBIb3dldmVyLCB0aGUgcmVzdWx0cyBhcnJheSB3aWxsIGJlIGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuICAgICAqIG9yaWdpbmFsIGBjb2xsYC5cbiAgICAgKlxuICAgICAqIElmIGBtYXBgIGlzIHBhc3NlZCBhbiBPYmplY3QsIHRoZSByZXN1bHRzIHdpbGwgYmUgYW4gQXJyYXkuICBUaGUgcmVzdWx0c1xuICAgICAqIHdpbGwgcm91Z2hseSBiZSBpbiB0aGUgb3JkZXIgb2YgdGhlIG9yaWdpbmFsIE9iamVjdHMnIGtleXMgKGJ1dCB0aGlzIGNhblxuICAgICAqIHZhcnkgYWNyb3NzIEphdmFTY3JpcHQgZW5naW5lcykuXG4gICAgICpcbiAgICAgKiBAbmFtZSBtYXBcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBbiBhc3luYyBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoIGl0ZW0gaW5cbiAgICAgKiBgY29sbGAuXG4gICAgICogVGhlIGl0ZXJhdGVlIHNob3VsZCBjb21wbGV0ZSB3aXRoIHRoZSB0cmFuc2Zvcm1lZCBpdGVtLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbCBgaXRlcmF0ZWVgXG4gICAgICogZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gUmVzdWx0cyBpcyBhbiBBcnJheSBvZiB0aGVcbiAgICAgKiB0cmFuc2Zvcm1lZCBpdGVtcyBmcm9tIHRoZSBgY29sbGAuIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHRzKS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBpcyBwYXNzZWRcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gZmlsZTEudHh0IGlzIGEgZmlsZSB0aGF0IGlzIDEwMDAgYnl0ZXMgaW4gc2l6ZVxuICAgICAqIC8vIGZpbGUyLnR4dCBpcyBhIGZpbGUgdGhhdCBpcyAyMDAwIGJ5dGVzIGluIHNpemVcbiAgICAgKiAvLyBmaWxlMy50eHQgaXMgYSBmaWxlIHRoYXQgaXMgMzAwMCBieXRlcyBpbiBzaXplXG4gICAgICogLy8gZmlsZTQudHh0IGRvZXMgbm90IGV4aXN0XG4gICAgICpcbiAgICAgKiBjb25zdCBmaWxlTGlzdCA9IFsnZmlsZTEudHh0JywnZmlsZTIudHh0JywnZmlsZTMudHh0J107XG4gICAgICogY29uc3Qgd2l0aE1pc3NpbmdGaWxlTGlzdCA9IFsnZmlsZTEudHh0JywnZmlsZTIudHh0JywnZmlsZTQudHh0J107XG4gICAgICpcbiAgICAgKiAvLyBhc3luY2hyb25vdXMgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBmaWxlIHNpemUgaW4gYnl0ZXNcbiAgICAgKiBmdW5jdGlvbiBnZXRGaWxlU2l6ZUluQnl0ZXMoZmlsZSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgZnMuc3RhdChmaWxlLCBmdW5jdGlvbihlcnIsIHN0YXQpIHtcbiAgICAgKiAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICAgKiAgICAgICAgIH1cbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsIHN0YXQuc2l6ZSk7XG4gICAgICogICAgIH0pO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGNhbGxiYWNrc1xuICAgICAqIGFzeW5jLm1hcChmaWxlTGlzdCwgZ2V0RmlsZVNpemVJbkJ5dGVzLCBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAgICAgKiAgICAgaWYgKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfSBlbHNlIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgLy8gcmVzdWx0cyBpcyBub3cgYW4gYXJyYXkgb2YgdGhlIGZpbGUgc2l6ZSBpbiBieXRlcyBmb3IgZWFjaCBmaWxlLCBlLmcuXG4gICAgICogICAgICAgICAvLyBbIDEwMDAsIDIwMDAsIDMwMDBdXG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIEVycm9yIEhhbmRsaW5nXG4gICAgICogYXN5bmMubWFwKHdpdGhNaXNzaW5nRmlsZUxpc3QsIGdldEZpbGVTaXplSW5CeXRlcywgZnVuY3Rpb24oZXJyLCByZXN1bHRzKSB7XG4gICAgICogICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgICAgICAvLyBbIEVycm9yOiBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkgXVxuICAgICAqICAgICB9IGVsc2Uge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMubWFwKGZpbGVMaXN0LCBnZXRGaWxlU2l6ZUluQnl0ZXMpXG4gICAgICogLnRoZW4oIHJlc3VsdHMgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgLy8gcmVzdWx0cyBpcyBub3cgYW4gYXJyYXkgb2YgdGhlIGZpbGUgc2l6ZSBpbiBieXRlcyBmb3IgZWFjaCBmaWxlLCBlLmcuXG4gICAgICogICAgIC8vIFsgMTAwMCwgMjAwMCwgMzAwMF1cbiAgICAgKiB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIEVycm9yIEhhbmRsaW5nXG4gICAgICogYXN5bmMubWFwKHdpdGhNaXNzaW5nRmlsZUxpc3QsIGdldEZpbGVTaXplSW5CeXRlcylcbiAgICAgKiAudGhlbiggcmVzdWx0cyA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqIH0pLmNhdGNoKCBlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAvLyBbIEVycm9yOiBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkgXVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgYXN5bmMvYXdhaXRcbiAgICAgKiBhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0cyA9IGF3YWl0IGFzeW5jLm1hcChmaWxlTGlzdCwgZ2V0RmlsZVNpemVJbkJ5dGVzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgLy8gcmVzdWx0cyBpcyBub3cgYW4gYXJyYXkgb2YgdGhlIGZpbGUgc2l6ZSBpbiBieXRlcyBmb3IgZWFjaCBmaWxlLCBlLmcuXG4gICAgICogICAgICAgICAvLyBbIDEwMDAsIDIwMDAsIDMwMDBdXG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIEVycm9yIEhhbmRsaW5nXG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdHMgPSBhd2FpdCBhc3luYy5tYXAod2l0aE1pc3NpbmdGaWxlTGlzdCwgZ2V0RmlsZVNpemVJbkJ5dGVzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICB9XG4gICAgICogICAgIGNhdGNoIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgICAgICAvLyBbIEVycm9yOiBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkgXVxuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gbWFwIChjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIF9hc3luY01hcChlYWNoT2YkMSwgY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cbiAgICB2YXIgbWFwJDEgPSBhd2FpdGlmeShtYXAsIDMpO1xuXG4gICAgLyoqXG4gICAgICogQXBwbGllcyB0aGUgcHJvdmlkZWQgYXJndW1lbnRzIHRvIGVhY2ggZnVuY3Rpb24gaW4gdGhlIGFycmF5LCBjYWxsaW5nXG4gICAgICogYGNhbGxiYWNrYCBhZnRlciBhbGwgZnVuY3Rpb25zIGhhdmUgY29tcGxldGVkLiBJZiB5b3Ugb25seSBwcm92aWRlIHRoZSBmaXJzdFxuICAgICAqIGFyZ3VtZW50LCBgZm5zYCwgdGhlbiBpdCB3aWxsIHJldHVybiBhIGZ1bmN0aW9uIHdoaWNoIGxldHMgeW91IHBhc3MgaW4gdGhlXG4gICAgICogYXJndW1lbnRzIGFzIGlmIGl0IHdlcmUgYSBzaW5nbGUgZnVuY3Rpb24gY2FsbC4gSWYgbW9yZSBhcmd1bWVudHMgYXJlXG4gICAgICogcHJvdmlkZWQsIGBjYWxsYmFja2AgaXMgcmVxdWlyZWQgd2hpbGUgYGFyZ3NgIGlzIHN0aWxsIG9wdGlvbmFsLiBUaGUgcmVzdWx0c1xuICAgICAqIGZvciBlYWNoIG9mIHRoZSBhcHBsaWVkIGFzeW5jIGZ1bmN0aW9ucyBhcmUgcGFzc2VkIHRvIHRoZSBmaW5hbCBjYWxsYmFja1xuICAgICAqIGFzIGFuIGFycmF5LlxuICAgICAqXG4gICAgICogQG5hbWUgYXBwbHlFYWNoXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGZucyAtIEEgY29sbGVjdGlvbiBvZiB7QGxpbmsgQXN5bmNGdW5jdGlvbn1zXG4gICAgICogdG8gYWxsIGNhbGwgd2l0aCB0aGUgc2FtZSBhcmd1bWVudHNcbiAgICAgKiBAcGFyYW0gey4uLip9IFthcmdzXSAtIGFueSBudW1iZXIgb2Ygc2VwYXJhdGUgYXJndW1lbnRzIHRvIHBhc3MgdG8gdGhlXG4gICAgICogZnVuY3Rpb24uXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIHRoZSBmaW5hbCBhcmd1bWVudCBzaG91bGQgYmUgdGhlIGNhbGxiYWNrLFxuICAgICAqIGNhbGxlZCB3aGVuIGFsbCBmdW5jdGlvbnMgaGF2ZSBjb21wbGV0ZWQgcHJvY2Vzc2luZy5cbiAgICAgKiBAcmV0dXJucyB7QXN5bmNGdW5jdGlvbn0gLSBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBubyBhcmdzIG90aGVyIHRoYW5cbiAgICAgKiBhbiBvcHRpb25hbCBjYWxsYmFjaywgdGhhdCBpcyB0aGUgcmVzdWx0IG9mIGFwcGx5aW5nIHRoZSBgYXJnc2AgdG8gZWFjaFxuICAgICAqIG9mIHRoZSBmdW5jdGlvbnMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIGNvbnN0IGFwcGxpZWRGbiA9IGFzeW5jLmFwcGx5RWFjaChbZW5hYmxlU2VhcmNoLCB1cGRhdGVTY2hlbWFdLCAnYnVja2V0JylcbiAgICAgKlxuICAgICAqIGFwcGxpZWRGbigoZXJyLCByZXN1bHRzKSA9PiB7XG4gICAgICogICAgIC8vIHJlc3VsdHNbMF0gaXMgdGhlIHJlc3VsdHMgZm9yIGBlbmFibGVTZWFyY2hgXG4gICAgICogICAgIC8vIHJlc3VsdHNbMV0gaXMgdGhlIHJlc3VsdHMgZm9yIGB1cGRhdGVTY2hlbWFgXG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBwYXJ0aWFsIGFwcGxpY2F0aW9uIGV4YW1wbGU6XG4gICAgICogYXN5bmMuZWFjaChcbiAgICAgKiAgICAgYnVja2V0cyxcbiAgICAgKiAgICAgYXN5bmMgKGJ1Y2tldCkgPT4gYXN5bmMuYXBwbHlFYWNoKFtlbmFibGVTZWFyY2gsIHVwZGF0ZVNjaGVtYV0sIGJ1Y2tldCkoKSxcbiAgICAgKiAgICAgY2FsbGJhY2tcbiAgICAgKiApO1xuICAgICAqL1xuICAgIHZhciBhcHBseUVhY2gkMSA9IGFwcGx5RWFjaChtYXAkMSk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGVhY2hPZmBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNoT2Z9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGVhY2hPZlNlcmllc1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmVhY2hPZl17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmVhY2hPZn1cbiAgICAgKiBAYWxpYXMgZm9yRWFjaE9mU2VyaWVzXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gICAgICogYGNvbGxgLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwga2V5LCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIHdoZW4gYWxsIGBpdGVyYXRlZWBcbiAgICAgKiBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZCwgb3IgYW4gZXJyb3Igb2NjdXJzLiBJbnZva2VkIHdpdGggKGVycikuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBvbWl0dGVkXG4gICAgICovXG4gICAgZnVuY3Rpb24gZWFjaE9mU2VyaWVzKGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gZWFjaE9mTGltaXQkMihjb2xsLCAxLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciBlYWNoT2ZTZXJpZXMkMSA9IGF3YWl0aWZ5KGVhY2hPZlNlcmllcywgMyk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYG1hcGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5tYXB9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIG1hcFNlcmllc1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLm1hcF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLm1hcH1cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBbiBhc3luYyBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoIGl0ZW0gaW5cbiAgICAgKiBgY29sbGAuXG4gICAgICogVGhlIGl0ZXJhdGVlIHNob3VsZCBjb21wbGV0ZSB3aXRoIHRoZSB0cmFuc2Zvcm1lZCBpdGVtLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbCBgaXRlcmF0ZWVgXG4gICAgICogZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gUmVzdWx0cyBpcyBhbiBhcnJheSBvZiB0aGVcbiAgICAgKiB0cmFuc2Zvcm1lZCBpdGVtcyBmcm9tIHRoZSBgY29sbGAuIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHRzKS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBpcyBwYXNzZWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBtYXBTZXJpZXMgKGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX2FzeW5jTWFwKGVhY2hPZlNlcmllcyQxLCBjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciBtYXBTZXJpZXMkMSA9IGF3YWl0aWZ5KG1hcFNlcmllcywgMyk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGFwcGx5RWFjaGBde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5hcHBseUVhY2h9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGFwcGx5RWFjaFNlcmllc1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbnRyb2xGbG93XG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmFwcGx5RWFjaF17QGxpbmsgbW9kdWxlOkNvbnRyb2xGbG93LmFwcGx5RWFjaH1cbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gZm5zIC0gQSBjb2xsZWN0aW9uIG9mIHtAbGluayBBc3luY0Z1bmN0aW9ufXMgdG8gYWxsXG4gICAgICogY2FsbCB3aXRoIHRoZSBzYW1lIGFyZ3VtZW50c1xuICAgICAqIEBwYXJhbSB7Li4uKn0gW2FyZ3NdIC0gYW55IG51bWJlciBvZiBzZXBhcmF0ZSBhcmd1bWVudHMgdG8gcGFzcyB0byB0aGVcbiAgICAgKiBmdW5jdGlvbi5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gdGhlIGZpbmFsIGFyZ3VtZW50IHNob3VsZCBiZSB0aGUgY2FsbGJhY2ssXG4gICAgICogY2FsbGVkIHdoZW4gYWxsIGZ1bmN0aW9ucyBoYXZlIGNvbXBsZXRlZCBwcm9jZXNzaW5nLlxuICAgICAqIEByZXR1cm5zIHtBc3luY0Z1bmN0aW9ufSAtIEEgZnVuY3Rpb24sIHRoYXQgd2hlbiBjYWxsZWQsIGlzIHRoZSByZXN1bHQgb2ZcbiAgICAgKiBhcHBsaW5nIHRoZSBgYXJnc2AgdG8gdGhlIGxpc3Qgb2YgZnVuY3Rpb25zLiAgSXQgdGFrZXMgbm8gYXJncywgb3RoZXIgdGhhblxuICAgICAqIGEgY2FsbGJhY2suXG4gICAgICovXG4gICAgdmFyIGFwcGx5RWFjaFNlcmllcyA9IGFwcGx5RWFjaChtYXBTZXJpZXMkMSk7XG5cbiAgICBjb25zdCBQUk9NSVNFX1NZTUJPTCA9IFN5bWJvbCgncHJvbWlzZUNhbGxiYWNrJyk7XG5cbiAgICBmdW5jdGlvbiBwcm9taXNlQ2FsbGJhY2sgKCkge1xuICAgICAgICBsZXQgcmVzb2x2ZSwgcmVqZWN0O1xuICAgICAgICBmdW5jdGlvbiBjYWxsYmFjayAoZXJyLCAuLi5hcmdzKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgICAgICAgIHJlc29sdmUoYXJncy5sZW5ndGggPiAxID8gYXJncyA6IGFyZ3NbMF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgY2FsbGJhY2tbUFJPTUlTRV9TWU1CT0xdID0gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlID0gcmVzLFxuICAgICAgICAgICAgcmVqZWN0ID0gcmVqO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gY2FsbGJhY2tcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHRoZSBiZXN0IG9yZGVyIGZvciBydW5uaW5nIHRoZSB7QGxpbmsgQXN5bmNGdW5jdGlvbn1zIGluIGB0YXNrc2AsIGJhc2VkIG9uXG4gICAgICogdGhlaXIgcmVxdWlyZW1lbnRzLiBFYWNoIGZ1bmN0aW9uIGNhbiBvcHRpb25hbGx5IGRlcGVuZCBvbiBvdGhlciBmdW5jdGlvbnNcbiAgICAgKiBiZWluZyBjb21wbGV0ZWQgZmlyc3QsIGFuZCBlYWNoIGZ1bmN0aW9uIGlzIHJ1biBhcyBzb29uIGFzIGl0cyByZXF1aXJlbWVudHNcbiAgICAgKiBhcmUgc2F0aXNmaWVkLlxuICAgICAqXG4gICAgICogSWYgYW55IG9mIHRoZSB7QGxpbmsgQXN5bmNGdW5jdGlvbn1zIHBhc3MgYW4gZXJyb3IgdG8gdGhlaXIgY2FsbGJhY2ssIHRoZSBgYXV0b2Agc2VxdWVuY2VcbiAgICAgKiB3aWxsIHN0b3AuIEZ1cnRoZXIgdGFza3Mgd2lsbCBub3QgZXhlY3V0ZSAoc28gYW55IG90aGVyIGZ1bmN0aW9ucyBkZXBlbmRpbmdcbiAgICAgKiBvbiBpdCB3aWxsIG5vdCBydW4pLCBhbmQgdGhlIG1haW4gYGNhbGxiYWNrYCBpcyBpbW1lZGlhdGVseSBjYWxsZWQgd2l0aCB0aGVcbiAgICAgKiBlcnJvci5cbiAgICAgKlxuICAgICAqIHtAbGluayBBc3luY0Z1bmN0aW9ufXMgYWxzbyByZWNlaXZlIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSByZXN1bHRzIG9mIGZ1bmN0aW9ucyB3aGljaFxuICAgICAqIGhhdmUgY29tcGxldGVkIHNvIGZhciBhcyB0aGUgZmlyc3QgYXJndW1lbnQsIGlmIHRoZXkgaGF2ZSBkZXBlbmRlbmNpZXMuIElmIGFcbiAgICAgKiB0YXNrIGZ1bmN0aW9uIGhhcyBubyBkZXBlbmRlbmNpZXMsIGl0IHdpbGwgb25seSBiZSBwYXNzZWQgYSBjYWxsYmFjay5cbiAgICAgKlxuICAgICAqIEBuYW1lIGF1dG9cbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtPYmplY3R9IHRhc2tzIC0gQW4gb2JqZWN0LiBFYWNoIG9mIGl0cyBwcm9wZXJ0aWVzIGlzIGVpdGhlciBhXG4gICAgICogZnVuY3Rpb24gb3IgYW4gYXJyYXkgb2YgcmVxdWlyZW1lbnRzLCB3aXRoIHRoZSB7QGxpbmsgQXN5bmNGdW5jdGlvbn0gaXRzZWxmIHRoZSBsYXN0IGl0ZW1cbiAgICAgKiBpbiB0aGUgYXJyYXkuIFRoZSBvYmplY3QncyBrZXkgb2YgYSBwcm9wZXJ0eSBzZXJ2ZXMgYXMgdGhlIG5hbWUgb2YgdGhlIHRhc2tcbiAgICAgKiBkZWZpbmVkIGJ5IHRoYXQgcHJvcGVydHksIGkuZS4gY2FuIGJlIHVzZWQgd2hlbiBzcGVjaWZ5aW5nIHJlcXVpcmVtZW50cyBmb3JcbiAgICAgKiBvdGhlciB0YXNrcy4gVGhlIGZ1bmN0aW9uIHJlY2VpdmVzIG9uZSBvciB0d28gYXJndW1lbnRzOlxuICAgICAqICogYSBgcmVzdWx0c2Agb2JqZWN0LCBjb250YWluaW5nIHRoZSByZXN1bHRzIG9mIHRoZSBwcmV2aW91c2x5IGV4ZWN1dGVkXG4gICAgICogICBmdW5jdGlvbnMsIG9ubHkgcGFzc2VkIGlmIHRoZSB0YXNrIGhhcyBhbnkgZGVwZW5kZW5jaWVzLFxuICAgICAqICogYSBgY2FsbGJhY2soZXJyLCByZXN1bHQpYCBmdW5jdGlvbiwgd2hpY2ggbXVzdCBiZSBjYWxsZWQgd2hlbiBmaW5pc2hlZCxcbiAgICAgKiAgIHBhc3NpbmcgYW4gYGVycm9yYCAod2hpY2ggY2FuIGJlIGBudWxsYCkgYW5kIHRoZSByZXN1bHQgb2YgdGhlIGZ1bmN0aW9uJ3NcbiAgICAgKiAgIGV4ZWN1dGlvbi5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW2NvbmN1cnJlbmN5PUluZmluaXR5XSAtIEFuIG9wdGlvbmFsIGBpbnRlZ2VyYCBmb3JcbiAgICAgKiBkZXRlcm1pbmluZyB0aGUgbWF4aW11bSBudW1iZXIgb2YgdGFza3MgdGhhdCBjYW4gYmUgcnVuIGluIHBhcmFsbGVsLiBCeVxuICAgICAqIGRlZmF1bHQsIGFzIG1hbnkgYXMgcG9zc2libGUuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEFuIG9wdGlvbmFsIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbFxuICAgICAqIHRoZSB0YXNrcyBoYXZlIGJlZW4gY29tcGxldGVkLiBJdCByZWNlaXZlcyB0aGUgYGVycmAgYXJndW1lbnQgaWYgYW55IGB0YXNrc2BcbiAgICAgKiBwYXNzIGFuIGVycm9yIHRvIHRoZWlyIGNhbGxiYWNrLiBSZXN1bHRzIGFyZSBhbHdheXMgcmV0dXJuZWQ7IGhvd2V2ZXIsIGlmIGFuXG4gICAgICogZXJyb3Igb2NjdXJzLCBubyBmdXJ0aGVyIGB0YXNrc2Agd2lsbCBiZSBwZXJmb3JtZWQsIGFuZCB0aGUgcmVzdWx0cyBvYmplY3RcbiAgICAgKiB3aWxsIG9ubHkgY29udGFpbiBwYXJ0aWFsIHJlc3VsdHMuIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHRzKS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBhIGNhbGxiYWNrIGlzIG5vdCBwYXNzZWRcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy9Vc2luZyBDYWxsYmFja3NcbiAgICAgKiBhc3luYy5hdXRvKHtcbiAgICAgKiAgICAgZ2V0X2RhdGE6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAvLyBhc3luYyBjb2RlIHRvIGdldCBzb21lIGRhdGFcbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsICdkYXRhJywgJ2NvbnZlcnRlZCB0byBhcnJheScpO1xuICAgICAqICAgICB9LFxuICAgICAqICAgICBtYWtlX2ZvbGRlcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIC8vIGFzeW5jIGNvZGUgdG8gY3JlYXRlIGEgZGlyZWN0b3J5IHRvIHN0b3JlIGEgZmlsZSBpblxuICAgICAqICAgICAgICAgLy8gdGhpcyBpcyBydW4gYXQgdGhlIHNhbWUgdGltZSBhcyBnZXR0aW5nIHRoZSBkYXRhXG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCAnZm9sZGVyJyk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIHdyaXRlX2ZpbGU6IFsnZ2V0X2RhdGEnLCAnbWFrZV9mb2xkZXInLCBmdW5jdGlvbihyZXN1bHRzLCBjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgLy8gb25jZSB0aGVyZSBpcyBzb21lIGRhdGEgYW5kIHRoZSBkaXJlY3RvcnkgZXhpc3RzLFxuICAgICAqICAgICAgICAgLy8gd3JpdGUgdGhlIGRhdGEgdG8gYSBmaWxlIGluIHRoZSBkaXJlY3RvcnlcbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsICdmaWxlbmFtZScpO1xuICAgICAqICAgICB9XSxcbiAgICAgKiAgICAgZW1haWxfbGluazogWyd3cml0ZV9maWxlJywgZnVuY3Rpb24ocmVzdWx0cywgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIC8vIG9uY2UgdGhlIGZpbGUgaXMgd3JpdHRlbiBsZXQncyBlbWFpbCBhIGxpbmsgdG8gaXQuLi5cbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsIHsnZmlsZSc6cmVzdWx0cy53cml0ZV9maWxlLCAnZW1haWwnOid1c2VyQGV4YW1wbGUuY29tJ30pO1xuICAgICAqICAgICB9XVxuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZygnZXJyID0gJywgZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjb25zb2xlLmxvZygncmVzdWx0cyA9ICcsIHJlc3VsdHMpO1xuICAgICAqICAgICAvLyByZXN1bHRzID0ge1xuICAgICAqICAgICAvLyAgICAgZ2V0X2RhdGE6IFsnZGF0YScsICdjb252ZXJ0ZWQgdG8gYXJyYXknXVxuICAgICAqICAgICAvLyAgICAgbWFrZV9mb2xkZXI7ICdmb2xkZXInLFxuICAgICAqICAgICAvLyAgICAgd3JpdGVfZmlsZTogJ2ZpbGVuYW1lJ1xuICAgICAqICAgICAvLyAgICAgZW1haWxfbGluazogeyBmaWxlOiAnZmlsZW5hbWUnLCBlbWFpbDogJ3VzZXJAZXhhbXBsZS5jb20nIH1cbiAgICAgKiAgICAgLy8gfVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy9Vc2luZyBQcm9taXNlc1xuICAgICAqIGFzeW5jLmF1dG8oe1xuICAgICAqICAgICBnZXRfZGF0YTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKCdpbiBnZXRfZGF0YScpO1xuICAgICAqICAgICAgICAgLy8gYXN5bmMgY29kZSB0byBnZXQgc29tZSBkYXRhXG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCAnZGF0YScsICdjb252ZXJ0ZWQgdG8gYXJyYXknKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgbWFrZV9mb2xkZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZygnaW4gbWFrZV9mb2xkZXInKTtcbiAgICAgKiAgICAgICAgIC8vIGFzeW5jIGNvZGUgdG8gY3JlYXRlIGEgZGlyZWN0b3J5IHRvIHN0b3JlIGEgZmlsZSBpblxuICAgICAqICAgICAgICAgLy8gdGhpcyBpcyBydW4gYXQgdGhlIHNhbWUgdGltZSBhcyBnZXR0aW5nIHRoZSBkYXRhXG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCAnZm9sZGVyJyk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIHdyaXRlX2ZpbGU6IFsnZ2V0X2RhdGEnLCAnbWFrZV9mb2xkZXInLCBmdW5jdGlvbihyZXN1bHRzLCBjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgLy8gb25jZSB0aGVyZSBpcyBzb21lIGRhdGEgYW5kIHRoZSBkaXJlY3RvcnkgZXhpc3RzLFxuICAgICAqICAgICAgICAgLy8gd3JpdGUgdGhlIGRhdGEgdG8gYSBmaWxlIGluIHRoZSBkaXJlY3RvcnlcbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsICdmaWxlbmFtZScpO1xuICAgICAqICAgICB9XSxcbiAgICAgKiAgICAgZW1haWxfbGluazogWyd3cml0ZV9maWxlJywgZnVuY3Rpb24ocmVzdWx0cywgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIC8vIG9uY2UgdGhlIGZpbGUgaXMgd3JpdHRlbiBsZXQncyBlbWFpbCBhIGxpbmsgdG8gaXQuLi5cbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsIHsnZmlsZSc6cmVzdWx0cy53cml0ZV9maWxlLCAnZW1haWwnOid1c2VyQGV4YW1wbGUuY29tJ30pO1xuICAgICAqICAgICB9XVxuICAgICAqIH0pLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdyZXN1bHRzID0gJywgcmVzdWx0cyk7XG4gICAgICogICAgIC8vIHJlc3VsdHMgPSB7XG4gICAgICogICAgIC8vICAgICBnZXRfZGF0YTogWydkYXRhJywgJ2NvbnZlcnRlZCB0byBhcnJheSddXG4gICAgICogICAgIC8vICAgICBtYWtlX2ZvbGRlcjsgJ2ZvbGRlcicsXG4gICAgICogICAgIC8vICAgICB3cml0ZV9maWxlOiAnZmlsZW5hbWUnXG4gICAgICogICAgIC8vICAgICBlbWFpbF9saW5rOiB7IGZpbGU6ICdmaWxlbmFtZScsIGVtYWlsOiAndXNlckBleGFtcGxlLmNvbScgfVxuICAgICAqICAgICAvLyB9XG4gICAgICogfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coJ2VyciA9ICcsIGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvL1VzaW5nIGFzeW5jL2F3YWl0XG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdHMgPSBhd2FpdCBhc3luYy5hdXRvKHtcbiAgICAgKiAgICAgICAgICAgICBnZXRfZGF0YTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgLy8gYXN5bmMgY29kZSB0byBnZXQgc29tZSBkYXRhXG4gICAgICogICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICdkYXRhJywgJ2NvbnZlcnRlZCB0byBhcnJheScpO1xuICAgICAqICAgICAgICAgICAgIH0sXG4gICAgICogICAgICAgICAgICAgbWFrZV9mb2xkZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAgICAgICAgIC8vIGFzeW5jIGNvZGUgdG8gY3JlYXRlIGEgZGlyZWN0b3J5IHRvIHN0b3JlIGEgZmlsZSBpblxuICAgICAqICAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIHJ1biBhdCB0aGUgc2FtZSB0aW1lIGFzIGdldHRpbmcgdGhlIGRhdGFcbiAgICAgKiAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ2ZvbGRlcicpO1xuICAgICAqICAgICAgICAgICAgIH0sXG4gICAgICogICAgICAgICAgICAgd3JpdGVfZmlsZTogWydnZXRfZGF0YScsICdtYWtlX2ZvbGRlcicsIGZ1bmN0aW9uKHJlc3VsdHMsIGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAgICAgICAgIC8vIG9uY2UgdGhlcmUgaXMgc29tZSBkYXRhIGFuZCB0aGUgZGlyZWN0b3J5IGV4aXN0cyxcbiAgICAgKiAgICAgICAgICAgICAgICAgLy8gd3JpdGUgdGhlIGRhdGEgdG8gYSBmaWxlIGluIHRoZSBkaXJlY3RvcnlcbiAgICAgKiAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ2ZpbGVuYW1lJyk7XG4gICAgICogICAgICAgICAgICAgfV0sXG4gICAgICogICAgICAgICAgICAgZW1haWxfbGluazogWyd3cml0ZV9maWxlJywgZnVuY3Rpb24ocmVzdWx0cywgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgLy8gb25jZSB0aGUgZmlsZSBpcyB3cml0dGVuIGxldCdzIGVtYWlsIGEgbGluayB0byBpdC4uLlxuICAgICAqICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCB7J2ZpbGUnOnJlc3VsdHMud3JpdGVfZmlsZSwgJ2VtYWlsJzondXNlckBleGFtcGxlLmNvbSd9KTtcbiAgICAgKiAgICAgICAgICAgICB9XVxuICAgICAqICAgICAgICAgfSk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZygncmVzdWx0cyA9ICcsIHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgLy8gcmVzdWx0cyA9IHtcbiAgICAgKiAgICAgICAgIC8vICAgICBnZXRfZGF0YTogWydkYXRhJywgJ2NvbnZlcnRlZCB0byBhcnJheSddXG4gICAgICogICAgICAgICAvLyAgICAgbWFrZV9mb2xkZXI7ICdmb2xkZXInLFxuICAgICAqICAgICAgICAgLy8gICAgIHdyaXRlX2ZpbGU6ICdmaWxlbmFtZSdcbiAgICAgKiAgICAgICAgIC8vICAgICBlbWFpbF9saW5rOiB7IGZpbGU6ICdmaWxlbmFtZScsIGVtYWlsOiAndXNlckBleGFtcGxlLmNvbScgfVxuICAgICAqICAgICAgICAgLy8gfVxuICAgICAqICAgICB9XG4gICAgICogICAgIGNhdGNoIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBhdXRvKHRhc2tzLCBjb25jdXJyZW5jeSwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjb25jdXJyZW5jeSAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIC8vIGNvbmN1cnJlbmN5IGlzIG9wdGlvbmFsLCBzaGlmdCB0aGUgYXJncy5cbiAgICAgICAgICAgIGNhbGxiYWNrID0gY29uY3VycmVuY3k7XG4gICAgICAgICAgICBjb25jdXJyZW5jeSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY2FsbGJhY2sgPSBvbmNlKGNhbGxiYWNrIHx8IHByb21pc2VDYWxsYmFjaygpKTtcbiAgICAgICAgdmFyIG51bVRhc2tzID0gT2JqZWN0LmtleXModGFza3MpLmxlbmd0aDtcbiAgICAgICAgaWYgKCFudW1UYXNrcykge1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghY29uY3VycmVuY3kpIHtcbiAgICAgICAgICAgIGNvbmN1cnJlbmN5ID0gbnVtVGFza3M7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVzdWx0cyA9IHt9O1xuICAgICAgICB2YXIgcnVubmluZ1Rhc2tzID0gMDtcbiAgICAgICAgdmFyIGNhbmNlbGVkID0gZmFsc2U7XG4gICAgICAgIHZhciBoYXNFcnJvciA9IGZhbHNlO1xuXG4gICAgICAgIHZhciBsaXN0ZW5lcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gICAgICAgIHZhciByZWFkeVRhc2tzID0gW107XG5cbiAgICAgICAgLy8gZm9yIGN5Y2xlIGRldGVjdGlvbjpcbiAgICAgICAgdmFyIHJlYWR5VG9DaGVjayA9IFtdOyAvLyB0YXNrcyB0aGF0IGhhdmUgYmVlbiBpZGVudGlmaWVkIGFzIHJlYWNoYWJsZVxuICAgICAgICAvLyB3aXRob3V0IHRoZSBwb3NzaWJpbGl0eSBvZiByZXR1cm5pbmcgdG8gYW4gYW5jZXN0b3IgdGFza1xuICAgICAgICB2YXIgdW5jaGVja2VkRGVwZW5kZW5jaWVzID0ge307XG5cbiAgICAgICAgT2JqZWN0LmtleXModGFza3MpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgICAgICAgIHZhciB0YXNrID0gdGFza3Nba2V5XTtcbiAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh0YXNrKSkge1xuICAgICAgICAgICAgICAgIC8vIG5vIGRlcGVuZGVuY2llc1xuICAgICAgICAgICAgICAgIGVucXVldWVUYXNrKGtleSwgW3Rhc2tdKTtcbiAgICAgICAgICAgICAgICByZWFkeVRvQ2hlY2sucHVzaChrZXkpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGRlcGVuZGVuY2llcyA9IHRhc2suc2xpY2UoMCwgdGFzay5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgIHZhciByZW1haW5pbmdEZXBlbmRlbmNpZXMgPSBkZXBlbmRlbmNpZXMubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKHJlbWFpbmluZ0RlcGVuZGVuY2llcyA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGVucXVldWVUYXNrKGtleSwgdGFzayk7XG4gICAgICAgICAgICAgICAgcmVhZHlUb0NoZWNrLnB1c2goa2V5KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1bmNoZWNrZWREZXBlbmRlbmNpZXNba2V5XSA9IHJlbWFpbmluZ0RlcGVuZGVuY2llcztcblxuICAgICAgICAgICAgZGVwZW5kZW5jaWVzLmZvckVhY2goZGVwZW5kZW5jeU5hbWUgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdGFza3NbZGVwZW5kZW5jeU5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignYXN5bmMuYXV0byB0YXNrIGAnICsga2V5ICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdgIGhhcyBhIG5vbi1leGlzdGVudCBkZXBlbmRlbmN5IGAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlcGVuZGVuY3lOYW1lICsgJ2AgaW4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXBlbmRlbmNpZXMuam9pbignLCAnKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGFkZExpc3RlbmVyKGRlcGVuZGVuY3lOYW1lLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0RlcGVuZGVuY2llcy0tO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVtYWluaW5nRGVwZW5kZW5jaWVzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbnF1ZXVlVGFzayhrZXksIHRhc2spO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY2hlY2tGb3JEZWFkbG9ja3MoKTtcbiAgICAgICAgcHJvY2Vzc1F1ZXVlKCk7XG5cbiAgICAgICAgZnVuY3Rpb24gZW5xdWV1ZVRhc2soa2V5LCB0YXNrKSB7XG4gICAgICAgICAgICByZWFkeVRhc2tzLnB1c2goKCkgPT4gcnVuVGFzayhrZXksIHRhc2spKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHByb2Nlc3NRdWV1ZSgpIHtcbiAgICAgICAgICAgIGlmIChjYW5jZWxlZCkgcmV0dXJuXG4gICAgICAgICAgICBpZiAocmVhZHlUYXNrcy5sZW5ndGggPT09IDAgJiYgcnVubmluZ1Rhc2tzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwsIHJlc3VsdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgd2hpbGUocmVhZHlUYXNrcy5sZW5ndGggJiYgcnVubmluZ1Rhc2tzIDwgY29uY3VycmVuY3kpIHtcbiAgICAgICAgICAgICAgICB2YXIgcnVuID0gcmVhZHlUYXNrcy5zaGlmdCgpO1xuICAgICAgICAgICAgICAgIHJ1bigpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBhZGRMaXN0ZW5lcih0YXNrTmFtZSwgZm4pIHtcbiAgICAgICAgICAgIHZhciB0YXNrTGlzdGVuZXJzID0gbGlzdGVuZXJzW3Rhc2tOYW1lXTtcbiAgICAgICAgICAgIGlmICghdGFza0xpc3RlbmVycykge1xuICAgICAgICAgICAgICAgIHRhc2tMaXN0ZW5lcnMgPSBsaXN0ZW5lcnNbdGFza05hbWVdID0gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRhc2tMaXN0ZW5lcnMucHVzaChmbik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB0YXNrQ29tcGxldGUodGFza05hbWUpIHtcbiAgICAgICAgICAgIHZhciB0YXNrTGlzdGVuZXJzID0gbGlzdGVuZXJzW3Rhc2tOYW1lXSB8fCBbXTtcbiAgICAgICAgICAgIHRhc2tMaXN0ZW5lcnMuZm9yRWFjaChmbiA9PiBmbigpKTtcbiAgICAgICAgICAgIHByb2Nlc3NRdWV1ZSgpO1xuICAgICAgICB9XG5cblxuICAgICAgICBmdW5jdGlvbiBydW5UYXNrKGtleSwgdGFzaykge1xuICAgICAgICAgICAgaWYgKGhhc0Vycm9yKSByZXR1cm47XG5cbiAgICAgICAgICAgIHZhciB0YXNrQ2FsbGJhY2sgPSBvbmx5T25jZSgoZXJyLCAuLi5yZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBydW5uaW5nVGFza3MtLTtcbiAgICAgICAgICAgICAgICBpZiAoZXJyID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBjYW5jZWxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Lmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgW3Jlc3VsdF0gPSByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNhZmVSZXN1bHRzID0ge307XG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKHJlc3VsdHMpLmZvckVhY2gocmtleSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzYWZlUmVzdWx0c1tya2V5XSA9IHJlc3VsdHNbcmtleV07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBzYWZlUmVzdWx0c1trZXldID0gcmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICBoYXNFcnJvciA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYW5jZWxlZCkgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVyciwgc2FmZVJlc3VsdHMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdHNba2V5XSA9IHJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgdGFza0NvbXBsZXRlKGtleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJ1bm5pbmdUYXNrcysrO1xuICAgICAgICAgICAgdmFyIHRhc2tGbiA9IHdyYXBBc3luYyh0YXNrW3Rhc2subGVuZ3RoIC0gMV0pO1xuICAgICAgICAgICAgaWYgKHRhc2subGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIHRhc2tGbihyZXN1bHRzLCB0YXNrQ2FsbGJhY2spO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXNrRm4odGFza0NhbGxiYWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNoZWNrRm9yRGVhZGxvY2tzKCkge1xuICAgICAgICAgICAgLy8gS2FobidzIGFsZ29yaXRobVxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVG9wb2xvZ2ljYWxfc29ydGluZyNLYWhuLjI3c19hbGdvcml0aG1cbiAgICAgICAgICAgIC8vIGh0dHA6Ly9jb25uYWxsZS5ibG9nc3BvdC5jb20vMjAxMy8xMC90b3BvbG9naWNhbC1zb3J0aW5na2Fobi1hbGdvcml0aG0uaHRtbFxuICAgICAgICAgICAgdmFyIGN1cnJlbnRUYXNrO1xuICAgICAgICAgICAgdmFyIGNvdW50ZXIgPSAwO1xuICAgICAgICAgICAgd2hpbGUgKHJlYWR5VG9DaGVjay5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50VGFzayA9IHJlYWR5VG9DaGVjay5wb3AoKTtcbiAgICAgICAgICAgICAgICBjb3VudGVyKys7XG4gICAgICAgICAgICAgICAgZ2V0RGVwZW5kZW50cyhjdXJyZW50VGFzaykuZm9yRWFjaChkZXBlbmRlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoLS11bmNoZWNrZWREZXBlbmRlbmNpZXNbZGVwZW5kZW50XSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHlUb0NoZWNrLnB1c2goZGVwZW5kZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY291bnRlciAhPT0gbnVtVGFza3MpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICdhc3luYy5hdXRvIGNhbm5vdCBleGVjdXRlIHRhc2tzIGR1ZSB0byBhIHJlY3Vyc2l2ZSBkZXBlbmRlbmN5J1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBnZXREZXBlbmRlbnRzKHRhc2tOYW1lKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICAgICAgICBPYmplY3Qua2V5cyh0YXNrcykuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhc2sgPSB0YXNrc1trZXldO1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRhc2spICYmIHRhc2suaW5kZXhPZih0YXNrTmFtZSkgPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjYWxsYmFja1tQUk9NSVNFX1NZTUJPTF1cbiAgICB9XG5cbiAgICB2YXIgRk5fQVJHUyA9IC9eKD86YXN5bmNcXHMrKT8oPzpmdW5jdGlvbik/XFxzKlxcdypcXHMqXFwoXFxzKihbXildKylcXHMqXFwpKD86XFxzKnspLztcbiAgICB2YXIgQVJST1dfRk5fQVJHUyA9IC9eKD86YXN5bmNcXHMrKT9cXCg/XFxzKihbXik9XSspXFxzKlxcKT8oPzpcXHMqPT4pLztcbiAgICB2YXIgRk5fQVJHX1NQTElUID0gLywvO1xuICAgIHZhciBGTl9BUkcgPSAvKD0uKyk/KFxccyopJC87XG5cbiAgICBmdW5jdGlvbiBzdHJpcENvbW1lbnRzKHN0cmluZykge1xuICAgICAgICBsZXQgc3RyaXBwZWQgPSAnJztcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgbGV0IGVuZEJsb2NrQ29tbWVudCA9IHN0cmluZy5pbmRleE9mKCcqLycpO1xuICAgICAgICB3aGlsZSAoaW5kZXggPCBzdHJpbmcubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoc3RyaW5nW2luZGV4XSA9PT0gJy8nICYmIHN0cmluZ1tpbmRleCsxXSA9PT0gJy8nKSB7XG4gICAgICAgICAgICAgICAgLy8gaW5saW5lIGNvbW1lbnRcbiAgICAgICAgICAgICAgICBsZXQgZW5kSW5kZXggPSBzdHJpbmcuaW5kZXhPZignXFxuJywgaW5kZXgpO1xuICAgICAgICAgICAgICAgIGluZGV4ID0gKGVuZEluZGV4ID09PSAtMSkgPyBzdHJpbmcubGVuZ3RoIDogZW5kSW5kZXg7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKChlbmRCbG9ja0NvbW1lbnQgIT09IC0xKSAmJiAoc3RyaW5nW2luZGV4XSA9PT0gJy8nKSAmJiAoc3RyaW5nW2luZGV4KzFdID09PSAnKicpKSB7XG4gICAgICAgICAgICAgICAgLy8gYmxvY2sgY29tbWVudFxuICAgICAgICAgICAgICAgIGxldCBlbmRJbmRleCA9IHN0cmluZy5pbmRleE9mKCcqLycsIGluZGV4KTtcbiAgICAgICAgICAgICAgICBpZiAoZW5kSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4ID0gZW5kSW5kZXggKyAyO1xuICAgICAgICAgICAgICAgICAgICBlbmRCbG9ja0NvbW1lbnQgPSBzdHJpbmcuaW5kZXhPZignKi8nLCBpbmRleCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc3RyaXBwZWQgKz0gc3RyaW5nW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0cmlwcGVkICs9IHN0cmluZ1tpbmRleF07XG4gICAgICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyaXBwZWQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcGFyc2VQYXJhbXMoZnVuYykge1xuICAgICAgICBjb25zdCBzcmMgPSBzdHJpcENvbW1lbnRzKGZ1bmMudG9TdHJpbmcoKSk7XG4gICAgICAgIGxldCBtYXRjaCA9IHNyYy5tYXRjaChGTl9BUkdTKTtcbiAgICAgICAgaWYgKCFtYXRjaCkge1xuICAgICAgICAgICAgbWF0Y2ggPSBzcmMubWF0Y2goQVJST1dfRk5fQVJHUyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFtYXRjaCkgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgcGFyc2UgYXJncyBpbiBhdXRvSW5qZWN0XFxuU291cmNlOlxcbicgKyBzcmMpXG4gICAgICAgIGxldCBbLCBhcmdzXSA9IG1hdGNoO1xuICAgICAgICByZXR1cm4gYXJnc1xuICAgICAgICAgICAgLnJlcGxhY2UoL1xccy9nLCAnJylcbiAgICAgICAgICAgIC5zcGxpdChGTl9BUkdfU1BMSVQpXG4gICAgICAgICAgICAubWFwKChhcmcpID0+IGFyZy5yZXBsYWNlKEZOX0FSRywgJycpLnRyaW0oKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQSBkZXBlbmRlbmN5LWluamVjdGVkIHZlcnNpb24gb2YgdGhlIFthc3luYy5hdXRvXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cuYXV0b30gZnVuY3Rpb24uIERlcGVuZGVudFxuICAgICAqIHRhc2tzIGFyZSBzcGVjaWZpZWQgYXMgcGFyYW1ldGVycyB0byB0aGUgZnVuY3Rpb24sIGFmdGVyIHRoZSB1c3VhbCBjYWxsYmFja1xuICAgICAqIHBhcmFtZXRlciwgd2l0aCB0aGUgcGFyYW1ldGVyIG5hbWVzIG1hdGNoaW5nIHRoZSBuYW1lcyBvZiB0aGUgdGFza3MgaXRcbiAgICAgKiBkZXBlbmRzIG9uLiBUaGlzIGNhbiBwcm92aWRlIGV2ZW4gbW9yZSByZWFkYWJsZSB0YXNrIGdyYXBocyB3aGljaCBjYW4gYmVcbiAgICAgKiBlYXNpZXIgdG8gbWFpbnRhaW4uXG4gICAgICpcbiAgICAgKiBJZiBhIGZpbmFsIGNhbGxiYWNrIGlzIHNwZWNpZmllZCwgdGhlIHRhc2sgcmVzdWx0cyBhcmUgc2ltaWxhcmx5IGluamVjdGVkLFxuICAgICAqIHNwZWNpZmllZCBhcyBuYW1lZCBwYXJhbWV0ZXJzIGFmdGVyIHRoZSBpbml0aWFsIGVycm9yIHBhcmFtZXRlci5cbiAgICAgKlxuICAgICAqIFRoZSBhdXRvSW5qZWN0IGZ1bmN0aW9uIGlzIHB1cmVseSBzeW50YWN0aWMgc3VnYXIgYW5kIGl0cyBzZW1hbnRpY3MgYXJlXG4gICAgICogb3RoZXJ3aXNlIGVxdWl2YWxlbnQgdG8gW2FzeW5jLmF1dG9de0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5hdXRvfS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGF1dG9JbmplY3RcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy5hdXRvXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cuYXV0b31cbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtPYmplY3R9IHRhc2tzIC0gQW4gb2JqZWN0LCBlYWNoIG9mIHdob3NlIHByb3BlcnRpZXMgaXMgYW4ge0BsaW5rIEFzeW5jRnVuY3Rpb259IG9mXG4gICAgICogdGhlIGZvcm0gJ2Z1bmMoW2RlcGVuZGVuY2llcy4uLl0sIGNhbGxiYWNrKS4gVGhlIG9iamVjdCdzIGtleSBvZiBhIHByb3BlcnR5XG4gICAgICogc2VydmVzIGFzIHRoZSBuYW1lIG9mIHRoZSB0YXNrIGRlZmluZWQgYnkgdGhhdCBwcm9wZXJ0eSwgaS5lLiBjYW4gYmUgdXNlZFxuICAgICAqIHdoZW4gc3BlY2lmeWluZyByZXF1aXJlbWVudHMgZm9yIG90aGVyIHRhc2tzLlxuICAgICAqICogVGhlIGBjYWxsYmFja2AgcGFyYW1ldGVyIGlzIGEgYGNhbGxiYWNrKGVyciwgcmVzdWx0KWAgd2hpY2ggbXVzdCBiZSBjYWxsZWRcbiAgICAgKiAgIHdoZW4gZmluaXNoZWQsIHBhc3NpbmcgYW4gYGVycm9yYCAod2hpY2ggY2FuIGJlIGBudWxsYCkgYW5kIHRoZSByZXN1bHQgb2ZcbiAgICAgKiAgIHRoZSBmdW5jdGlvbidzIGV4ZWN1dGlvbi4gVGhlIHJlbWFpbmluZyBwYXJhbWV0ZXJzIG5hbWUgb3RoZXIgdGFza3Mgb25cbiAgICAgKiAgIHdoaWNoIHRoZSB0YXNrIGlzIGRlcGVuZGVudCwgYW5kIHRoZSByZXN1bHRzIGZyb20gdGhvc2UgdGFza3MgYXJlIHRoZVxuICAgICAqICAgYXJndW1lbnRzIG9mIHRob3NlIHBhcmFtZXRlcnMuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEFuIG9wdGlvbmFsIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbFxuICAgICAqIHRoZSB0YXNrcyBoYXZlIGJlZW4gY29tcGxldGVkLiBJdCByZWNlaXZlcyB0aGUgYGVycmAgYXJndW1lbnQgaWYgYW55IGB0YXNrc2BcbiAgICAgKiBwYXNzIGFuIGVycm9yIHRvIHRoZWlyIGNhbGxiYWNrLCBhbmQgYSBgcmVzdWx0c2Agb2JqZWN0IHdpdGggYW55IGNvbXBsZXRlZFxuICAgICAqIHRhc2sgcmVzdWx0cywgc2ltaWxhciB0byBgYXV0b2AuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vICBUaGUgZXhhbXBsZSBmcm9tIGBhdXRvYCBjYW4gYmUgcmV3cml0dGVuIGFzIGZvbGxvd3M6XG4gICAgICogYXN5bmMuYXV0b0luamVjdCh7XG4gICAgICogICAgIGdldF9kYXRhOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgLy8gYXN5bmMgY29kZSB0byBnZXQgc29tZSBkYXRhXG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCAnZGF0YScsICdjb252ZXJ0ZWQgdG8gYXJyYXknKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgbWFrZV9mb2xkZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAvLyBhc3luYyBjb2RlIHRvIGNyZWF0ZSBhIGRpcmVjdG9yeSB0byBzdG9yZSBhIGZpbGUgaW5cbiAgICAgKiAgICAgICAgIC8vIHRoaXMgaXMgcnVuIGF0IHRoZSBzYW1lIHRpbWUgYXMgZ2V0dGluZyB0aGUgZGF0YVxuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ2ZvbGRlcicpO1xuICAgICAqICAgICB9LFxuICAgICAqICAgICB3cml0ZV9maWxlOiBmdW5jdGlvbihnZXRfZGF0YSwgbWFrZV9mb2xkZXIsIGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAvLyBvbmNlIHRoZXJlIGlzIHNvbWUgZGF0YSBhbmQgdGhlIGRpcmVjdG9yeSBleGlzdHMsXG4gICAgICogICAgICAgICAvLyB3cml0ZSB0aGUgZGF0YSB0byBhIGZpbGUgaW4gdGhlIGRpcmVjdG9yeVxuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ2ZpbGVuYW1lJyk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIGVtYWlsX2xpbms6IGZ1bmN0aW9uKHdyaXRlX2ZpbGUsIGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAvLyBvbmNlIHRoZSBmaWxlIGlzIHdyaXR0ZW4gbGV0J3MgZW1haWwgYSBsaW5rIHRvIGl0Li4uXG4gICAgICogICAgICAgICAvLyB3cml0ZV9maWxlIGNvbnRhaW5zIHRoZSBmaWxlbmFtZSByZXR1cm5lZCBieSB3cml0ZV9maWxlLlxuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgeydmaWxlJzp3cml0ZV9maWxlLCAnZW1haWwnOid1c2VyQGV4YW1wbGUuY29tJ30pO1xuICAgICAqICAgICB9XG4gICAgICogfSwgZnVuY3Rpb24oZXJyLCByZXN1bHRzKSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdlcnIgPSAnLCBlcnIpO1xuICAgICAqICAgICBjb25zb2xlLmxvZygnZW1haWxfbGluayA9ICcsIHJlc3VsdHMuZW1haWxfbGluayk7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBJZiB5b3UgYXJlIHVzaW5nIGEgSlMgbWluaWZpZXIgdGhhdCBtYW5nbGVzIHBhcmFtZXRlciBuYW1lcywgYGF1dG9JbmplY3RgXG4gICAgICogLy8gd2lsbCBub3Qgd29yayB3aXRoIHBsYWluIGZ1bmN0aW9ucywgc2luY2UgdGhlIHBhcmFtZXRlciBuYW1lcyB3aWxsIGJlXG4gICAgICogLy8gY29sbGFwc2VkIHRvIGEgc2luZ2xlIGxldHRlciBpZGVudGlmaWVyLiAgVG8gd29yayBhcm91bmQgdGhpcywgeW91IGNhblxuICAgICAqIC8vIGV4cGxpY2l0bHkgc3BlY2lmeSB0aGUgbmFtZXMgb2YgdGhlIHBhcmFtZXRlcnMgeW91ciB0YXNrIGZ1bmN0aW9uIG5lZWRzXG4gICAgICogLy8gaW4gYW4gYXJyYXksIHNpbWlsYXIgdG8gQW5ndWxhci5qcyBkZXBlbmRlbmN5IGluamVjdGlvbi5cbiAgICAgKlxuICAgICAqIC8vIFRoaXMgc3RpbGwgaGFzIGFuIGFkdmFudGFnZSBvdmVyIHBsYWluIGBhdXRvYCwgc2luY2UgdGhlIHJlc3VsdHMgYSB0YXNrXG4gICAgICogLy8gZGVwZW5kcyBvbiBhcmUgc3RpbGwgc3ByZWFkIGludG8gYXJndW1lbnRzLlxuICAgICAqIGFzeW5jLmF1dG9JbmplY3Qoe1xuICAgICAqICAgICAvLy4uLlxuICAgICAqICAgICB3cml0ZV9maWxlOiBbJ2dldF9kYXRhJywgJ21ha2VfZm9sZGVyJywgZnVuY3Rpb24oZ2V0X2RhdGEsIG1ha2VfZm9sZGVyLCBjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ2ZpbGVuYW1lJyk7XG4gICAgICogICAgIH1dLFxuICAgICAqICAgICBlbWFpbF9saW5rOiBbJ3dyaXRlX2ZpbGUnLCBmdW5jdGlvbih3cml0ZV9maWxlLCBjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgeydmaWxlJzp3cml0ZV9maWxlLCAnZW1haWwnOid1c2VyQGV4YW1wbGUuY29tJ30pO1xuICAgICAqICAgICB9XVxuICAgICAqICAgICAvLy4uLlxuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICBjb25zb2xlLmxvZygnZXJyID0gJywgZXJyKTtcbiAgICAgKiAgICAgY29uc29sZS5sb2coJ2VtYWlsX2xpbmsgPSAnLCByZXN1bHRzLmVtYWlsX2xpbmspO1xuICAgICAqIH0pO1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGF1dG9JbmplY3QodGFza3MsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBuZXdUYXNrcyA9IHt9O1xuXG4gICAgICAgIE9iamVjdC5rZXlzKHRhc2tzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgICB2YXIgdGFza0ZuID0gdGFza3Nba2V5XTtcbiAgICAgICAgICAgIHZhciBwYXJhbXM7XG4gICAgICAgICAgICB2YXIgZm5Jc0FzeW5jID0gaXNBc3luYyh0YXNrRm4pO1xuICAgICAgICAgICAgdmFyIGhhc05vRGVwcyA9XG4gICAgICAgICAgICAgICAgKCFmbklzQXN5bmMgJiYgdGFza0ZuLmxlbmd0aCA9PT0gMSkgfHxcbiAgICAgICAgICAgICAgICAoZm5Jc0FzeW5jICYmIHRhc2tGbi5sZW5ndGggPT09IDApO1xuXG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0YXNrRm4pKSB7XG4gICAgICAgICAgICAgICAgcGFyYW1zID0gWy4uLnRhc2tGbl07XG4gICAgICAgICAgICAgICAgdGFza0ZuID0gcGFyYW1zLnBvcCgpO1xuXG4gICAgICAgICAgICAgICAgbmV3VGFza3Nba2V5XSA9IHBhcmFtcy5jb25jYXQocGFyYW1zLmxlbmd0aCA+IDAgPyBuZXdUYXNrIDogdGFza0ZuKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaGFzTm9EZXBzKSB7XG4gICAgICAgICAgICAgICAgLy8gbm8gZGVwZW5kZW5jaWVzLCB1c2UgdGhlIGZ1bmN0aW9uIGFzLWlzXG4gICAgICAgICAgICAgICAgbmV3VGFza3Nba2V5XSA9IHRhc2tGbjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcGFyYW1zID0gcGFyc2VQYXJhbXModGFza0ZuKTtcbiAgICAgICAgICAgICAgICBpZiAoKHRhc2tGbi5sZW5ndGggPT09IDAgJiYgIWZuSXNBc3luYykgJiYgcGFyYW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhdXRvSW5qZWN0IHRhc2sgZnVuY3Rpb25zIHJlcXVpcmUgZXhwbGljaXQgcGFyYW1ldGVycy5cIik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gcmVtb3ZlIGNhbGxiYWNrIHBhcmFtXG4gICAgICAgICAgICAgICAgaWYgKCFmbklzQXN5bmMpIHBhcmFtcy5wb3AoKTtcblxuICAgICAgICAgICAgICAgIG5ld1Rhc2tzW2tleV0gPSBwYXJhbXMuY29uY2F0KG5ld1Rhc2spO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiBuZXdUYXNrKHJlc3VsdHMsIHRhc2tDYikge1xuICAgICAgICAgICAgICAgIHZhciBuZXdBcmdzID0gcGFyYW1zLm1hcChuYW1lID0+IHJlc3VsdHNbbmFtZV0pO1xuICAgICAgICAgICAgICAgIG5ld0FyZ3MucHVzaCh0YXNrQ2IpO1xuICAgICAgICAgICAgICAgIHdyYXBBc3luYyh0YXNrRm4pKC4uLm5ld0FyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gYXV0byhuZXdUYXNrcywgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8vIFNpbXBsZSBkb3VibHkgbGlua2VkIGxpc3QgKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0RvdWJseV9saW5rZWRfbGlzdCkgaW1wbGVtZW50YXRpb25cbiAgICAvLyB1c2VkIGZvciBxdWV1ZXMuIFRoaXMgaW1wbGVtZW50YXRpb24gYXNzdW1lcyB0aGF0IHRoZSBub2RlIHByb3ZpZGVkIGJ5IHRoZSB1c2VyIGNhbiBiZSBtb2RpZmllZFxuICAgIC8vIHRvIGFkanVzdCB0aGUgbmV4dCBhbmQgbGFzdCBwcm9wZXJ0aWVzLiBXZSBpbXBsZW1lbnQgb25seSB0aGUgbWluaW1hbCBmdW5jdGlvbmFsaXR5XG4gICAgLy8gZm9yIHF1ZXVlIHN1cHBvcnQuXG4gICAgY2xhc3MgRExMIHtcbiAgICAgICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgICAgICB0aGlzLmhlYWQgPSB0aGlzLnRhaWwgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5sZW5ndGggPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVtb3ZlTGluayhub2RlKSB7XG4gICAgICAgICAgICBpZiAobm9kZS5wcmV2KSBub2RlLnByZXYubmV4dCA9IG5vZGUubmV4dDtcbiAgICAgICAgICAgIGVsc2UgdGhpcy5oZWFkID0gbm9kZS5uZXh0O1xuICAgICAgICAgICAgaWYgKG5vZGUubmV4dCkgbm9kZS5uZXh0LnByZXYgPSBub2RlLnByZXY7XG4gICAgICAgICAgICBlbHNlIHRoaXMudGFpbCA9IG5vZGUucHJldjtcblxuICAgICAgICAgICAgbm9kZS5wcmV2ID0gbm9kZS5uZXh0ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoIC09IDE7XG4gICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVtcHR5ICgpIHtcbiAgICAgICAgICAgIHdoaWxlKHRoaXMuaGVhZCkgdGhpcy5zaGlmdCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cblxuICAgICAgICBpbnNlcnRBZnRlcihub2RlLCBuZXdOb2RlKSB7XG4gICAgICAgICAgICBuZXdOb2RlLnByZXYgPSBub2RlO1xuICAgICAgICAgICAgbmV3Tm9kZS5uZXh0ID0gbm9kZS5uZXh0O1xuICAgICAgICAgICAgaWYgKG5vZGUubmV4dCkgbm9kZS5uZXh0LnByZXYgPSBuZXdOb2RlO1xuICAgICAgICAgICAgZWxzZSB0aGlzLnRhaWwgPSBuZXdOb2RlO1xuICAgICAgICAgICAgbm9kZS5uZXh0ID0gbmV3Tm9kZTtcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoICs9IDE7XG4gICAgICAgIH1cblxuICAgICAgICBpbnNlcnRCZWZvcmUobm9kZSwgbmV3Tm9kZSkge1xuICAgICAgICAgICAgbmV3Tm9kZS5wcmV2ID0gbm9kZS5wcmV2O1xuICAgICAgICAgICAgbmV3Tm9kZS5uZXh0ID0gbm9kZTtcbiAgICAgICAgICAgIGlmIChub2RlLnByZXYpIG5vZGUucHJldi5uZXh0ID0gbmV3Tm9kZTtcbiAgICAgICAgICAgIGVsc2UgdGhpcy5oZWFkID0gbmV3Tm9kZTtcbiAgICAgICAgICAgIG5vZGUucHJldiA9IG5ld05vZGU7XG4gICAgICAgICAgICB0aGlzLmxlbmd0aCArPSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgdW5zaGlmdChub2RlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5oZWFkKSB0aGlzLmluc2VydEJlZm9yZSh0aGlzLmhlYWQsIG5vZGUpO1xuICAgICAgICAgICAgZWxzZSBzZXRJbml0aWFsKHRoaXMsIG5vZGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVzaChub2RlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy50YWlsKSB0aGlzLmluc2VydEFmdGVyKHRoaXMudGFpbCwgbm9kZSk7XG4gICAgICAgICAgICBlbHNlIHNldEluaXRpYWwodGhpcywgbm9kZSk7XG4gICAgICAgIH1cblxuICAgICAgICBzaGlmdCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmhlYWQgJiYgdGhpcy5yZW1vdmVMaW5rKHRoaXMuaGVhZCk7XG4gICAgICAgIH1cblxuICAgICAgICBwb3AoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy50YWlsICYmIHRoaXMucmVtb3ZlTGluayh0aGlzLnRhaWwpO1xuICAgICAgICB9XG5cbiAgICAgICAgdG9BcnJheSgpIHtcbiAgICAgICAgICAgIHJldHVybiBbLi4udGhpc11cbiAgICAgICAgfVxuXG4gICAgICAgICpbU3ltYm9sLml0ZXJhdG9yXSAoKSB7XG4gICAgICAgICAgICB2YXIgY3VyID0gdGhpcy5oZWFkO1xuICAgICAgICAgICAgd2hpbGUgKGN1cikge1xuICAgICAgICAgICAgICAgIHlpZWxkIGN1ci5kYXRhO1xuICAgICAgICAgICAgICAgIGN1ciA9IGN1ci5uZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmVtb3ZlICh0ZXN0Rm4pIHtcbiAgICAgICAgICAgIHZhciBjdXJyID0gdGhpcy5oZWFkO1xuICAgICAgICAgICAgd2hpbGUoY3Vycikge1xuICAgICAgICAgICAgICAgIHZhciB7bmV4dH0gPSBjdXJyO1xuICAgICAgICAgICAgICAgIGlmICh0ZXN0Rm4oY3VycikpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVMaW5rKGN1cnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjdXJyID0gbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0SW5pdGlhbChkbGwsIG5vZGUpIHtcbiAgICAgICAgZGxsLmxlbmd0aCA9IDE7XG4gICAgICAgIGRsbC5oZWFkID0gZGxsLnRhaWwgPSBub2RlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHF1ZXVlKHdvcmtlciwgY29uY3VycmVuY3ksIHBheWxvYWQpIHtcbiAgICAgICAgaWYgKGNvbmN1cnJlbmN5ID09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbmN1cnJlbmN5ID0gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKGNvbmN1cnJlbmN5ID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ29uY3VycmVuY3kgbXVzdCBub3QgYmUgemVybycpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIF93b3JrZXIgPSB3cmFwQXN5bmMod29ya2VyKTtcbiAgICAgICAgdmFyIG51bVJ1bm5pbmcgPSAwO1xuICAgICAgICB2YXIgd29ya2Vyc0xpc3QgPSBbXTtcbiAgICAgICAgY29uc3QgZXZlbnRzID0ge1xuICAgICAgICAgICAgZXJyb3I6IFtdLFxuICAgICAgICAgICAgZHJhaW46IFtdLFxuICAgICAgICAgICAgc2F0dXJhdGVkOiBbXSxcbiAgICAgICAgICAgIHVuc2F0dXJhdGVkOiBbXSxcbiAgICAgICAgICAgIGVtcHR5OiBbXVxuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIG9uIChldmVudCwgaGFuZGxlcikge1xuICAgICAgICAgICAgZXZlbnRzW2V2ZW50XS5wdXNoKGhhbmRsZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gb25jZSAoZXZlbnQsIGhhbmRsZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGhhbmRsZUFuZFJlbW92ZSA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgb2ZmKGV2ZW50LCBoYW5kbGVBbmRSZW1vdmUpO1xuICAgICAgICAgICAgICAgIGhhbmRsZXIoLi4uYXJncyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZXZlbnRzW2V2ZW50XS5wdXNoKGhhbmRsZUFuZFJlbW92ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvZmYgKGV2ZW50LCBoYW5kbGVyKSB7XG4gICAgICAgICAgICBpZiAoIWV2ZW50KSByZXR1cm4gT2JqZWN0LmtleXMoZXZlbnRzKS5mb3JFYWNoKGV2ID0+IGV2ZW50c1tldl0gPSBbXSlcbiAgICAgICAgICAgIGlmICghaGFuZGxlcikgcmV0dXJuIGV2ZW50c1tldmVudF0gPSBbXVxuICAgICAgICAgICAgZXZlbnRzW2V2ZW50XSA9IGV2ZW50c1tldmVudF0uZmlsdGVyKGV2ID0+IGV2ICE9PSBoYW5kbGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHRyaWdnZXIgKGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgICAgICAgICBldmVudHNbZXZlbnRdLmZvckVhY2goaGFuZGxlciA9PiBoYW5kbGVyKC4uLmFyZ3MpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwcm9jZXNzaW5nU2NoZWR1bGVkID0gZmFsc2U7XG4gICAgICAgIGZ1bmN0aW9uIF9pbnNlcnQoZGF0YSwgaW5zZXJ0QXRGcm9udCwgcmVqZWN0T25FcnJvciwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsICYmIHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndGFzayBjYWxsYmFjayBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHEuc3RhcnRlZCA9IHRydWU7XG5cbiAgICAgICAgICAgIHZhciByZXMsIHJlajtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHByb21pc2VDYWxsYmFjayAoZXJyLCAuLi5hcmdzKSB7XG4gICAgICAgICAgICAgICAgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCB0aGUgZXJyb3IsIGxldCB0aGUgZ2xvYmFsIGVycm9yIGhhbmRsZXJcbiAgICAgICAgICAgICAgICAvLyBkZWFsIHdpdGggaXRcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0T25FcnJvciA/IHJlaihlcnIpIDogcmVzKClcbiAgICAgICAgICAgICAgICBpZiAoYXJncy5sZW5ndGggPD0gMSkgcmV0dXJuIHJlcyhhcmdzWzBdKVxuICAgICAgICAgICAgICAgIHJlcyhhcmdzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgICAgICBjYWxsYmFjazogcmVqZWN0T25FcnJvciA/XG4gICAgICAgICAgICAgICAgICAgIHByb21pc2VDYWxsYmFjayA6XG4gICAgICAgICAgICAgICAgICAgIChjYWxsYmFjayB8fCBwcm9taXNlQ2FsbGJhY2spXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBpZiAoaW5zZXJ0QXRGcm9udCkge1xuICAgICAgICAgICAgICAgIHEuX3Rhc2tzLnVuc2hpZnQoaXRlbSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHEuX3Rhc2tzLnB1c2goaXRlbSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghcHJvY2Vzc2luZ1NjaGVkdWxlZCkge1xuICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdTY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHNldEltbWVkaWF0ZSQxKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1NjaGVkdWxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBxLnByb2Nlc3MoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHJlamVjdE9uRXJyb3IgfHwgIWNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzID0gcmVzb2x2ZTtcbiAgICAgICAgICAgICAgICAgICAgcmVqID0gcmVqZWN0O1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBfY3JlYXRlQ0IodGFza3MpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoZXJyLCAuLi5hcmdzKSB7XG4gICAgICAgICAgICAgICAgbnVtUnVubmluZyAtPSAxO1xuXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0YXNrcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRhc2sgPSB0YXNrc1tpXTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSB3b3JrZXJzTGlzdC5pbmRleE9mKHRhc2spO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdvcmtlcnNMaXN0LnNoaWZ0KCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3b3JrZXJzTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdGFzay5jYWxsYmFjayhlcnIsIC4uLmFyZ3MpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnIgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcignZXJyb3InLCBlcnIsIHRhc2suZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAobnVtUnVubmluZyA8PSAocS5jb25jdXJyZW5jeSAtIHEuYnVmZmVyKSApIHtcbiAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcigndW5zYXR1cmF0ZWQnKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAocS5pZGxlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcignZHJhaW4nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcS5wcm9jZXNzKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gX21heWJlRHJhaW4oZGF0YSkge1xuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID09PSAwICYmIHEuaWRsZSgpKSB7XG4gICAgICAgICAgICAgICAgLy8gY2FsbCBkcmFpbiBpbW1lZGlhdGVseSBpZiB0aGVyZSBhcmUgbm8gdGFza3NcbiAgICAgICAgICAgICAgICBzZXRJbW1lZGlhdGUkMSgoKSA9PiB0cmlnZ2VyKCdkcmFpbicpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBldmVudE1ldGhvZCA9IChuYW1lKSA9PiAoaGFuZGxlcikgPT4ge1xuICAgICAgICAgICAgaWYgKCFoYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgb25jZShuYW1lLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvZmYobmFtZSk7XG4gICAgICAgICAgICBvbihuYW1lLCBoYW5kbGVyKTtcblxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBpc1Byb2Nlc3NpbmcgPSBmYWxzZTtcbiAgICAgICAgdmFyIHEgPSB7XG4gICAgICAgICAgICBfdGFza3M6IG5ldyBETEwoKSxcbiAgICAgICAgICAgICpbU3ltYm9sLml0ZXJhdG9yXSAoKSB7XG4gICAgICAgICAgICAgICAgeWllbGQqIHEuX3Rhc2tzW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb25jdXJyZW5jeSxcbiAgICAgICAgICAgIHBheWxvYWQsXG4gICAgICAgICAgICBidWZmZXI6IGNvbmN1cnJlbmN5IC8gNCxcbiAgICAgICAgICAgIHN0YXJ0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgcGF1c2VkOiBmYWxzZSxcbiAgICAgICAgICAgIHB1c2ggKGRhdGEsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9tYXliZURyYWluKGRhdGEpKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEubWFwKGRhdHVtID0+IF9pbnNlcnQoZGF0dW0sIGZhbHNlLCBmYWxzZSwgY2FsbGJhY2spKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gX2luc2VydChkYXRhLCBmYWxzZSwgZmFsc2UsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwdXNoQXN5bmMgKGRhdGEsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9tYXliZURyYWluKGRhdGEpKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEubWFwKGRhdHVtID0+IF9pbnNlcnQoZGF0dW0sIGZhbHNlLCB0cnVlLCBjYWxsYmFjaykpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBfaW5zZXJ0KGRhdGEsIGZhbHNlLCB0cnVlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAga2lsbCAoKSB7XG4gICAgICAgICAgICAgICAgb2ZmKCk7XG4gICAgICAgICAgICAgICAgcS5fdGFza3MuZW1wdHkoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1bnNoaWZ0IChkYXRhLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfbWF5YmVEcmFpbihkYXRhKSkgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLm1hcChkYXR1bSA9PiBfaW5zZXJ0KGRhdHVtLCB0cnVlLCBmYWxzZSwgY2FsbGJhY2spKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gX2luc2VydChkYXRhLCB0cnVlLCBmYWxzZSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVuc2hpZnRBc3luYyAoZGF0YSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoX21heWJlRHJhaW4oZGF0YSkpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS5tYXAoZGF0dW0gPT4gX2luc2VydChkYXR1bSwgdHJ1ZSwgdHJ1ZSwgY2FsbGJhY2spKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gX2luc2VydChkYXRhLCB0cnVlLCB0cnVlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVtb3ZlICh0ZXN0Rm4pIHtcbiAgICAgICAgICAgICAgICBxLl90YXNrcy5yZW1vdmUodGVzdEZuKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcm9jZXNzICgpIHtcbiAgICAgICAgICAgICAgICAvLyBBdm9pZCB0cnlpbmcgdG8gc3RhcnQgdG9vIG1hbnkgcHJvY2Vzc2luZyBvcGVyYXRpb25zLiBUaGlzIGNhbiBvY2N1clxuICAgICAgICAgICAgICAgIC8vIHdoZW4gY2FsbGJhY2tzIHJlc29sdmUgc3luY2hyb25vdXNseSAoIzEyNjcpLlxuICAgICAgICAgICAgICAgIGlmIChpc1Byb2Nlc3NpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpc1Byb2Nlc3NpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHdoaWxlKCFxLnBhdXNlZCAmJiBudW1SdW5uaW5nIDwgcS5jb25jdXJyZW5jeSAmJiBxLl90YXNrcy5sZW5ndGgpe1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGFza3MgPSBbXSwgZGF0YSA9IFtdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbCA9IHEuX3Rhc2tzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHEucGF5bG9hZCkgbCA9IE1hdGgubWluKGwsIHEucGF5bG9hZCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IHEuX3Rhc2tzLnNoaWZ0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXNrcy5wdXNoKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd29ya2Vyc0xpc3QucHVzaChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEucHVzaChub2RlLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbnVtUnVubmluZyArPSAxO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChxLl90YXNrcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyaWdnZXIoJ2VtcHR5Jyk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAobnVtUnVubmluZyA9PT0gcS5jb25jdXJyZW5jeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcignc2F0dXJhdGVkJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB2YXIgY2IgPSBvbmx5T25jZShfY3JlYXRlQ0IodGFza3MpKTtcbiAgICAgICAgICAgICAgICAgICAgX3dvcmtlcihkYXRhLCBjYik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlzUHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxlbmd0aCAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHEuX3Rhc2tzLmxlbmd0aDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBydW5uaW5nICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVtUnVubmluZztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB3b3JrZXJzTGlzdCAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHdvcmtlcnNMaXN0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlkbGUoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHEuX3Rhc2tzLmxlbmd0aCArIG51bVJ1bm5pbmcgPT09IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGF1c2UgKCkge1xuICAgICAgICAgICAgICAgIHEucGF1c2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZXN1bWUgKCkge1xuICAgICAgICAgICAgICAgIGlmIChxLnBhdXNlZCA9PT0gZmFsc2UpIHsgcmV0dXJuOyB9XG4gICAgICAgICAgICAgICAgcS5wYXVzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBzZXRJbW1lZGlhdGUkMShxLnByb2Nlc3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvLyBkZWZpbmUgdGhlc2UgYXMgZml4ZWQgcHJvcGVydGllcywgc28gcGVvcGxlIGdldCB1c2VmdWwgZXJyb3JzIHdoZW4gdXBkYXRpbmdcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocSwge1xuICAgICAgICAgICAgc2F0dXJhdGVkOiB7XG4gICAgICAgICAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBldmVudE1ldGhvZCgnc2F0dXJhdGVkJylcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1bnNhdHVyYXRlZDoge1xuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZXZlbnRNZXRob2QoJ3Vuc2F0dXJhdGVkJylcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbXB0eToge1xuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZXZlbnRNZXRob2QoJ2VtcHR5JylcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkcmFpbjoge1xuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZXZlbnRNZXRob2QoJ2RyYWluJylcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjoge1xuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZXZlbnRNZXRob2QoJ2Vycm9yJylcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgYGNhcmdvYCBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIHBheWxvYWQuIFRhc2tzIGFkZGVkIHRvIHRoZVxuICAgICAqIGNhcmdvIHdpbGwgYmUgcHJvY2Vzc2VkIGFsdG9nZXRoZXIgKHVwIHRvIHRoZSBgcGF5bG9hZGAgbGltaXQpLiBJZiB0aGVcbiAgICAgKiBgd29ya2VyYCBpcyBpbiBwcm9ncmVzcywgdGhlIHRhc2sgaXMgcXVldWVkIHVudGlsIGl0IGJlY29tZXMgYXZhaWxhYmxlLiBPbmNlXG4gICAgICogdGhlIGB3b3JrZXJgIGhhcyBjb21wbGV0ZWQgc29tZSB0YXNrcywgZWFjaCBjYWxsYmFjayBvZiB0aG9zZSB0YXNrcyBpc1xuICAgICAqIGNhbGxlZC4gQ2hlY2sgb3V0IFt0aGVzZV0oaHR0cHM6Ly9jYW1vLmdpdGh1YnVzZXJjb250ZW50LmNvbS82YmJkMzZmNGNmNWIzNWEwZjExYTk2ZGNkMmU5NzcxMWZmYzJmYjM3LzY4NzQ3NDcwNzMzYTJmMmY2NjJlNjM2YzZmNzU2NDJlNjc2OTc0Njg3NTYyMmU2MzZmNmQyZjYxNzM3MzY1NzQ3MzJmMzEzNjM3MzYzODM3MzEyZjM2MzgzMTMwMzgyZjYyNjI2MzMwNjM2NjYyMzAyZDM1NjYzMjM5MmQzMTMxNjUzMjJkMzkzNzM0NjYyZDMzMzMzOTM3NjMzNjM0NjQ2MzM4MzUzODJlNjc2OTY2KSBbYW5pbWF0aW9uc10oaHR0cHM6Ly9jYW1vLmdpdGh1YnVzZXJjb250ZW50LmNvbS9mNDgxMGUwMGUxYzVmNWY4YWRkYmUzZTlmNDkwNjRmZDVkMTAyNjk5LzY4NzQ3NDcwNzMzYTJmMmY2NjJlNjM2YzZmNzU2NDJlNjc2OTc0Njg3NTYyMmU2MzZmNmQyZjYxNzM3MzY1NzQ3MzJmMzEzNjM3MzYzODM3MzEyZjM2MzgzMTMwMzEyZjM4MzQ2MzM5MzIzMDM2MzYyZDM1NjYzMjM5MmQzMTMxNjUzMjJkMzgzMTM0NjYyZDM5NjQzMzY0MzAzMjM0MzEzMzYyNjY2NDJlNjc2OTY2KVxuICAgICAqIGZvciBob3cgYGNhcmdvYCBhbmQgYHF1ZXVlYCB3b3JrLlxuICAgICAqXG4gICAgICogV2hpbGUgW2BxdWV1ZWBde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5xdWV1ZX0gcGFzc2VzIG9ubHkgb25lIHRhc2sgdG8gb25lIG9mIGEgZ3JvdXAgb2Ygd29ya2Vyc1xuICAgICAqIGF0IGEgdGltZSwgY2FyZ28gcGFzc2VzIGFuIGFycmF5IG9mIHRhc2tzIHRvIGEgc2luZ2xlIHdvcmtlciwgcmVwZWF0aW5nXG4gICAgICogd2hlbiB0aGUgd29ya2VyIGlzIGZpbmlzaGVkLlxuICAgICAqXG4gICAgICogQG5hbWUgY2FyZ29cbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy5xdWV1ZV17QGxpbmsgbW9kdWxlOkNvbnRyb2xGbG93LnF1ZXVlfVxuICAgICAqIEBjYXRlZ29yeSBDb250cm9sIEZsb3dcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IHdvcmtlciAtIEFuIGFzeW5jaHJvbm91cyBmdW5jdGlvbiBmb3IgcHJvY2Vzc2luZyBhbiBhcnJheVxuICAgICAqIG9mIHF1ZXVlZCB0YXNrcy4gSW52b2tlZCB3aXRoIGAodGFza3MsIGNhbGxiYWNrKWAuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtwYXlsb2FkPUluZmluaXR5XSAtIEFuIG9wdGlvbmFsIGBpbnRlZ2VyYCBmb3IgZGV0ZXJtaW5pbmdcbiAgICAgKiBob3cgbWFueSB0YXNrcyBzaG91bGQgYmUgcHJvY2Vzc2VkIHBlciByb3VuZDsgaWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXNcbiAgICAgKiB1bmxpbWl0ZWQuXG4gICAgICogQHJldHVybnMge21vZHVsZTpDb250cm9sRmxvdy5RdWV1ZU9iamVjdH0gQSBjYXJnbyBvYmplY3QgdG8gbWFuYWdlIHRoZSB0YXNrcy4gQ2FsbGJhY2tzIGNhblxuICAgICAqIGF0dGFjaGVkIGFzIGNlcnRhaW4gcHJvcGVydGllcyB0byBsaXN0ZW4gZm9yIHNwZWNpZmljIGV2ZW50cyBkdXJpbmcgdGhlXG4gICAgICogbGlmZWN5Y2xlIG9mIHRoZSBjYXJnbyBhbmQgaW5uZXIgcXVldWUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGNyZWF0ZSBhIGNhcmdvIG9iamVjdCB3aXRoIHBheWxvYWQgMlxuICAgICAqIHZhciBjYXJnbyA9IGFzeW5jLmNhcmdvKGZ1bmN0aW9uKHRhc2tzLCBjYWxsYmFjaykge1xuICAgICAqICAgICBmb3IgKHZhciBpPTA7IGk8dGFza3MubGVuZ3RoOyBpKyspIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKCdoZWxsbyAnICsgdGFza3NbaV0ubmFtZSk7XG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2FsbGJhY2soKTtcbiAgICAgKiB9LCAyKTtcbiAgICAgKlxuICAgICAqIC8vIGFkZCBzb21lIGl0ZW1zXG4gICAgICogY2FyZ28ucHVzaCh7bmFtZTogJ2Zvbyd9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coJ2ZpbmlzaGVkIHByb2Nlc3NpbmcgZm9vJyk7XG4gICAgICogfSk7XG4gICAgICogY2FyZ28ucHVzaCh7bmFtZTogJ2Jhcid9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coJ2ZpbmlzaGVkIHByb2Nlc3NpbmcgYmFyJyk7XG4gICAgICogfSk7XG4gICAgICogYXdhaXQgY2FyZ28ucHVzaCh7bmFtZTogJ2Jheid9KTtcbiAgICAgKiBjb25zb2xlLmxvZygnZmluaXNoZWQgcHJvY2Vzc2luZyBiYXonKTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjYXJnbyh3b3JrZXIsIHBheWxvYWQpIHtcbiAgICAgICAgcmV0dXJuIHF1ZXVlKHdvcmtlciwgMSwgcGF5bG9hZCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGBjYXJnb1F1ZXVlYCBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIHBheWxvYWQuIFRhc2tzIGFkZGVkIHRvIHRoZVxuICAgICAqIGNhcmdvUXVldWUgd2lsbCBiZSBwcm9jZXNzZWQgdG9nZXRoZXIgKHVwIHRvIHRoZSBgcGF5bG9hZGAgbGltaXQpIGluIGBjb25jdXJyZW5jeWAgcGFyYWxsZWwgd29ya2Vycy5cbiAgICAgKiBJZiB0aGUgYWxsIGB3b3JrZXJzYCBhcmUgaW4gcHJvZ3Jlc3MsIHRoZSB0YXNrIGlzIHF1ZXVlZCB1bnRpbCBvbmUgYmVjb21lcyBhdmFpbGFibGUuIE9uY2VcbiAgICAgKiBhIGB3b3JrZXJgIGhhcyBjb21wbGV0ZWQgc29tZSB0YXNrcywgZWFjaCBjYWxsYmFjayBvZiB0aG9zZSB0YXNrcyBpc1xuICAgICAqIGNhbGxlZC4gQ2hlY2sgb3V0IFt0aGVzZV0oaHR0cHM6Ly9jYW1vLmdpdGh1YnVzZXJjb250ZW50LmNvbS82YmJkMzZmNGNmNWIzNWEwZjExYTk2ZGNkMmU5NzcxMWZmYzJmYjM3LzY4NzQ3NDcwNzMzYTJmMmY2NjJlNjM2YzZmNzU2NDJlNjc2OTc0Njg3NTYyMmU2MzZmNmQyZjYxNzM3MzY1NzQ3MzJmMzEzNjM3MzYzODM3MzEyZjM2MzgzMTMwMzgyZjYyNjI2MzMwNjM2NjYyMzAyZDM1NjYzMjM5MmQzMTMxNjUzMjJkMzkzNzM0NjYyZDMzMzMzOTM3NjMzNjM0NjQ2MzM4MzUzODJlNjc2OTY2KSBbYW5pbWF0aW9uc10oaHR0cHM6Ly9jYW1vLmdpdGh1YnVzZXJjb250ZW50LmNvbS9mNDgxMGUwMGUxYzVmNWY4YWRkYmUzZTlmNDkwNjRmZDVkMTAyNjk5LzY4NzQ3NDcwNzMzYTJmMmY2NjJlNjM2YzZmNzU2NDJlNjc2OTc0Njg3NTYyMmU2MzZmNmQyZjYxNzM3MzY1NzQ3MzJmMzEzNjM3MzYzODM3MzEyZjM2MzgzMTMwMzEyZjM4MzQ2MzM5MzIzMDM2MzYyZDM1NjYzMjM5MmQzMTMxNjUzMjJkMzgzMTM0NjYyZDM5NjQzMzY0MzAzMjM0MzEzMzYyNjY2NDJlNjc2OTY2KVxuICAgICAqIGZvciBob3cgYGNhcmdvYCBhbmQgYHF1ZXVlYCB3b3JrLlxuICAgICAqXG4gICAgICogV2hpbGUgW2BxdWV1ZWBde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5xdWV1ZX0gcGFzc2VzIG9ubHkgb25lIHRhc2sgdG8gb25lIG9mIGEgZ3JvdXAgb2Ygd29ya2Vyc1xuICAgICAqIGF0IGEgdGltZSwgYW5kIFtgY2FyZ29gXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cuY2FyZ299IHBhc3NlcyBhbiBhcnJheSBvZiB0YXNrcyB0byBhIHNpbmdsZSB3b3JrZXIsXG4gICAgICogdGhlIGNhcmdvUXVldWUgcGFzc2VzIGFuIGFycmF5IG9mIHRhc2tzIHRvIG11bHRpcGxlIHBhcmFsbGVsIHdvcmtlcnMuXG4gICAgICpcbiAgICAgKiBAbmFtZSBjYXJnb1F1ZXVlXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMucXVldWVde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5xdWV1ZX1cbiAgICAgKiBAc2VlIFthc3luYy5jYXJnb117QGxpbmsgbW9kdWxlOkNvbnRyb2xGTG93LmNhcmdvfVxuICAgICAqIEBjYXRlZ29yeSBDb250cm9sIEZsb3dcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IHdvcmtlciAtIEFuIGFzeW5jaHJvbm91cyBmdW5jdGlvbiBmb3IgcHJvY2Vzc2luZyBhbiBhcnJheVxuICAgICAqIG9mIHF1ZXVlZCB0YXNrcy4gSW52b2tlZCB3aXRoIGAodGFza3MsIGNhbGxiYWNrKWAuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtjb25jdXJyZW5jeT0xXSAtIEFuIGBpbnRlZ2VyYCBmb3IgZGV0ZXJtaW5pbmcgaG93IG1hbnlcbiAgICAgKiBgd29ya2VyYCBmdW5jdGlvbnMgc2hvdWxkIGJlIHJ1biBpbiBwYXJhbGxlbC4gIElmIG9taXR0ZWQsIHRoZSBjb25jdXJyZW5jeVxuICAgICAqIGRlZmF1bHRzIHRvIGAxYC4gIElmIHRoZSBjb25jdXJyZW5jeSBpcyBgMGAsIGFuIGVycm9yIGlzIHRocm93bi5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW3BheWxvYWQ9SW5maW5pdHldIC0gQW4gb3B0aW9uYWwgYGludGVnZXJgIGZvciBkZXRlcm1pbmluZ1xuICAgICAqIGhvdyBtYW55IHRhc2tzIHNob3VsZCBiZSBwcm9jZXNzZWQgcGVyIHJvdW5kOyBpZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpc1xuICAgICAqIHVubGltaXRlZC5cbiAgICAgKiBAcmV0dXJucyB7bW9kdWxlOkNvbnRyb2xGbG93LlF1ZXVlT2JqZWN0fSBBIGNhcmdvUXVldWUgb2JqZWN0IHRvIG1hbmFnZSB0aGUgdGFza3MuIENhbGxiYWNrcyBjYW5cbiAgICAgKiBhdHRhY2hlZCBhcyBjZXJ0YWluIHByb3BlcnRpZXMgdG8gbGlzdGVuIGZvciBzcGVjaWZpYyBldmVudHMgZHVyaW5nIHRoZVxuICAgICAqIGxpZmVjeWNsZSBvZiB0aGUgY2FyZ29RdWV1ZSBhbmQgaW5uZXIgcXVldWUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGNyZWF0ZSBhIGNhcmdvUXVldWUgb2JqZWN0IHdpdGggcGF5bG9hZCAyIGFuZCBjb25jdXJyZW5jeSAyXG4gICAgICogdmFyIGNhcmdvUXVldWUgPSBhc3luYy5jYXJnb1F1ZXVlKGZ1bmN0aW9uKHRhc2tzLCBjYWxsYmFjaykge1xuICAgICAqICAgICBmb3IgKHZhciBpPTA7IGk8dGFza3MubGVuZ3RoOyBpKyspIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKCdoZWxsbyAnICsgdGFza3NbaV0ubmFtZSk7XG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2FsbGJhY2soKTtcbiAgICAgKiB9LCAyLCAyKTtcbiAgICAgKlxuICAgICAqIC8vIGFkZCBzb21lIGl0ZW1zXG4gICAgICogY2FyZ29RdWV1ZS5wdXNoKHtuYW1lOiAnZm9vJ30sIGZ1bmN0aW9uKGVycikge1xuICAgICAqICAgICBjb25zb2xlLmxvZygnZmluaXNoZWQgcHJvY2Vzc2luZyBmb28nKTtcbiAgICAgKiB9KTtcbiAgICAgKiBjYXJnb1F1ZXVlLnB1c2goe25hbWU6ICdiYXInfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdmaW5pc2hlZCBwcm9jZXNzaW5nIGJhcicpO1xuICAgICAqIH0pO1xuICAgICAqIGNhcmdvUXVldWUucHVzaCh7bmFtZTogJ2Jheid9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coJ2ZpbmlzaGVkIHByb2Nlc3NpbmcgYmF6Jyk7XG4gICAgICogfSk7XG4gICAgICogY2FyZ29RdWV1ZS5wdXNoKHtuYW1lOiAnYm9vJ30sIGZ1bmN0aW9uKGVycikge1xuICAgICAqICAgICBjb25zb2xlLmxvZygnZmluaXNoZWQgcHJvY2Vzc2luZyBib28nKTtcbiAgICAgKiB9KTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjYXJnbyQxKHdvcmtlciwgY29uY3VycmVuY3ksIHBheWxvYWQpIHtcbiAgICAgICAgcmV0dXJuIHF1ZXVlKHdvcmtlciwgY29uY3VycmVuY3ksIHBheWxvYWQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlZHVjZXMgYGNvbGxgIGludG8gYSBzaW5nbGUgdmFsdWUgdXNpbmcgYW4gYXN5bmMgYGl0ZXJhdGVlYCB0byByZXR1cm4gZWFjaFxuICAgICAqIHN1Y2Nlc3NpdmUgc3RlcC4gYG1lbW9gIGlzIHRoZSBpbml0aWFsIHN0YXRlIG9mIHRoZSByZWR1Y3Rpb24uIFRoaXMgZnVuY3Rpb25cbiAgICAgKiBvbmx5IG9wZXJhdGVzIGluIHNlcmllcy5cbiAgICAgKlxuICAgICAqIEZvciBwZXJmb3JtYW5jZSByZWFzb25zLCBpdCBtYXkgbWFrZSBzZW5zZSB0byBzcGxpdCBhIGNhbGwgdG8gdGhpcyBmdW5jdGlvblxuICAgICAqIGludG8gYSBwYXJhbGxlbCBtYXAsIGFuZCB0aGVuIHVzZSB0aGUgbm9ybWFsIGBBcnJheS5wcm90b3R5cGUucmVkdWNlYCBvbiB0aGVcbiAgICAgKiByZXN1bHRzLiBUaGlzIGZ1bmN0aW9uIGlzIGZvciBzaXR1YXRpb25zIHdoZXJlIGVhY2ggc3RlcCBpbiB0aGUgcmVkdWN0aW9uXG4gICAgICogbmVlZHMgdG8gYmUgYXN5bmM7IGlmIHlvdSBjYW4gZ2V0IHRoZSBkYXRhIGJlZm9yZSByZWR1Y2luZyBpdCwgdGhlbiBpdCdzXG4gICAgICogcHJvYmFibHkgYSBnb29kIGlkZWEgdG8gZG8gc28uXG4gICAgICpcbiAgICAgKiBAbmFtZSByZWR1Y2VcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAYWxpYXMgaW5qZWN0XG4gICAgICogQGFsaWFzIGZvbGRsXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0geyp9IG1lbW8gLSBUaGUgaW5pdGlhbCBzdGF0ZSBvZiB0aGUgcmVkdWN0aW9uLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBIGZ1bmN0aW9uIGFwcGxpZWQgdG8gZWFjaCBpdGVtIGluIHRoZVxuICAgICAqIGFycmF5IHRvIHByb2R1Y2UgdGhlIG5leHQgc3RlcCBpbiB0aGUgcmVkdWN0aW9uLlxuICAgICAqIFRoZSBgaXRlcmF0ZWVgIHNob3VsZCBjb21wbGV0ZSB3aXRoIHRoZSBuZXh0IHN0YXRlIG9mIHRoZSByZWR1Y3Rpb24uXG4gICAgICogSWYgdGhlIGl0ZXJhdGVlIGNvbXBsZXRlcyB3aXRoIGFuIGVycm9yLCB0aGUgcmVkdWN0aW9uIGlzIHN0b3BwZWQgYW5kIHRoZVxuICAgICAqIG1haW4gYGNhbGxiYWNrYCBpcyBpbW1lZGlhdGVseSBjYWxsZWQgd2l0aCB0aGUgZXJyb3IuXG4gICAgICogSW52b2tlZCB3aXRoIChtZW1vLCBpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFmdGVyIGFsbCB0aGVcbiAgICAgKiBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLiBSZXN1bHQgaXMgdGhlIHJlZHVjZWQgdmFsdWUuIEludm9rZWQgd2l0aFxuICAgICAqIChlcnIsIHJlc3VsdCkuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGZpbGUxLnR4dCBpcyBhIGZpbGUgdGhhdCBpcyAxMDAwIGJ5dGVzIGluIHNpemVcbiAgICAgKiAvLyBmaWxlMi50eHQgaXMgYSBmaWxlIHRoYXQgaXMgMjAwMCBieXRlcyBpbiBzaXplXG4gICAgICogLy8gZmlsZTMudHh0IGlzIGEgZmlsZSB0aGF0IGlzIDMwMDAgYnl0ZXMgaW4gc2l6ZVxuICAgICAqIC8vIGZpbGU0LnR4dCBkb2VzIG5vdCBleGlzdFxuICAgICAqXG4gICAgICogY29uc3QgZmlsZUxpc3QgPSBbJ2ZpbGUxLnR4dCcsJ2ZpbGUyLnR4dCcsJ2ZpbGUzLnR4dCddO1xuICAgICAqIGNvbnN0IHdpdGhNaXNzaW5nRmlsZUxpc3QgPSBbJ2ZpbGUxLnR4dCcsJ2ZpbGUyLnR4dCcsJ2ZpbGUzLnR4dCcsICdmaWxlNC50eHQnXTtcbiAgICAgKlxuICAgICAqIC8vIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IGNvbXB1dGVzIHRoZSBmaWxlIHNpemUgaW4gYnl0ZXNcbiAgICAgKiAvLyBmaWxlIHNpemUgaXMgYWRkZWQgdG8gdGhlIG1lbW9pemVkIHZhbHVlLCB0aGVuIHJldHVybmVkXG4gICAgICogZnVuY3Rpb24gZ2V0RmlsZVNpemVJbkJ5dGVzKG1lbW8sIGZpbGUsIGNhbGxiYWNrKSB7XG4gICAgICogICAgIGZzLnN0YXQoZmlsZSwgZnVuY3Rpb24oZXJyLCBzdGF0KSB7XG4gICAgICogICAgICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICogICAgICAgICB9XG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCBtZW1vICsgc3RhdC5zaXplKTtcbiAgICAgKiAgICAgfSk7XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gVXNpbmcgY2FsbGJhY2tzXG4gICAgICogYXN5bmMucmVkdWNlKGZpbGVMaXN0LCAwLCBnZXRGaWxlU2l6ZUluQnl0ZXMsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH0gZWxzZSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8gNjAwMFxuICAgICAqICAgICAgICAgLy8gd2hpY2ggaXMgdGhlIHN1bSBvZiB0aGUgZmlsZSBzaXplcyBvZiB0aGUgdGhyZWUgZmlsZXNcbiAgICAgKiAgICAgfVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gRXJyb3IgSGFuZGxpbmdcbiAgICAgKiBhc3luYy5yZWR1Y2Uod2l0aE1pc3NpbmdGaWxlTGlzdCwgMCwgZ2V0RmlsZVNpemVJbkJ5dGVzLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAqICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAgICAgLy8gWyBFcnJvcjogRU5PRU5UOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IF1cbiAgICAgKiAgICAgfSBlbHNlIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMucmVkdWNlKGZpbGVMaXN0LCAwLCBnZXRGaWxlU2l6ZUluQnl0ZXMpXG4gICAgICogLnRoZW4oIHJlc3VsdCA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIC8vIDYwMDBcbiAgICAgKiAgICAgLy8gd2hpY2ggaXMgdGhlIHN1bSBvZiB0aGUgZmlsZSBzaXplcyBvZiB0aGUgdGhyZWUgZmlsZXNcbiAgICAgKiB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIEVycm9yIEhhbmRsaW5nXG4gICAgICogYXN5bmMucmVkdWNlKHdpdGhNaXNzaW5nRmlsZUxpc3QsIDAsIGdldEZpbGVTaXplSW5CeXRlcylcbiAgICAgKiAudGhlbiggcmVzdWx0ID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgLy8gWyBFcnJvcjogRU5PRU5UOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IF1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGFzeW5jL2F3YWl0XG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGFzeW5jLnJlZHVjZShmaWxlTGlzdCwgMCwgZ2V0RmlsZVNpemVJbkJ5dGVzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgICAgICAvLyA2MDAwXG4gICAgICogICAgICAgICAvLyB3aGljaCBpcyB0aGUgc3VtIG9mIHRoZSBmaWxlIHNpemVzIG9mIHRoZSB0aHJlZSBmaWxlc1xuICAgICAqICAgICB9XG4gICAgICogICAgIGNhdGNoIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiAvLyBFcnJvciBIYW5kbGluZ1xuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhc3luYy5yZWR1Y2Uod2l0aE1pc3NpbmdGaWxlTGlzdCwgMCwgZ2V0RmlsZVNpemVJbkJ5dGVzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgICAgIC8vIFsgRXJyb3I6IEVOT0VOVDogbm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeSBdXG4gICAgICogICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKi9cbiAgICBmdW5jdGlvbiByZWR1Y2UoY29sbCwgbWVtbywgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrID0gb25jZShjYWxsYmFjayk7XG4gICAgICAgIHZhciBfaXRlcmF0ZWUgPSB3cmFwQXN5bmMoaXRlcmF0ZWUpO1xuICAgICAgICByZXR1cm4gZWFjaE9mU2VyaWVzJDEoY29sbCwgKHgsIGksIGl0ZXJDYikgPT4ge1xuICAgICAgICAgICAgX2l0ZXJhdGVlKG1lbW8sIHgsIChlcnIsIHYpID0+IHtcbiAgICAgICAgICAgICAgICBtZW1vID0gdjtcbiAgICAgICAgICAgICAgICBpdGVyQ2IoZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBlcnIgPT4gY2FsbGJhY2soZXJyLCBtZW1vKSk7XG4gICAgfVxuICAgIHZhciByZWR1Y2UkMSA9IGF3YWl0aWZ5KHJlZHVjZSwgNCk7XG5cbiAgICAvKipcbiAgICAgKiBWZXJzaW9uIG9mIHRoZSBjb21wb3NlIGZ1bmN0aW9uIHRoYXQgaXMgbW9yZSBuYXR1cmFsIHRvIHJlYWQuIEVhY2ggZnVuY3Rpb25cbiAgICAgKiBjb25zdW1lcyB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBwcmV2aW91cyBmdW5jdGlvbi4gSXQgaXMgdGhlIGVxdWl2YWxlbnQgb2ZcbiAgICAgKiBbY29tcG9zZV17QGxpbmsgbW9kdWxlOkNvbnRyb2xGbG93LmNvbXBvc2V9IHdpdGggdGhlIGFyZ3VtZW50cyByZXZlcnNlZC5cbiAgICAgKlxuICAgICAqIEVhY2ggZnVuY3Rpb24gaXMgZXhlY3V0ZWQgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIGNvbXBvc2VkIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQG5hbWUgc2VxXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMuY29tcG9zZV17QGxpbmsgbW9kdWxlOkNvbnRyb2xGbG93LmNvbXBvc2V9XG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7Li4uQXN5bmNGdW5jdGlvbn0gZnVuY3Rpb25zIC0gdGhlIGFzeW5jaHJvbm91cyBmdW5jdGlvbnMgdG8gY29tcG9zZVxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gYSBmdW5jdGlvbiB0aGF0IGNvbXBvc2VzIHRoZSBgZnVuY3Rpb25zYCBpbiBvcmRlclxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBSZXF1aXJlcyBsb2Rhc2ggKG9yIHVuZGVyc2NvcmUpLCBleHByZXNzMyBhbmQgZHJlc2VuZGUncyBvcm0yLlxuICAgICAqIC8vIFBhcnQgb2YgYW4gYXBwLCB0aGF0IGZldGNoZXMgY2F0cyBvZiB0aGUgbG9nZ2VkIHVzZXIuXG4gICAgICogLy8gVGhpcyBleGFtcGxlIHVzZXMgYHNlcWAgZnVuY3Rpb24gdG8gYXZvaWQgb3Zlcm5lc3RpbmcgYW5kIGVycm9yXG4gICAgICogLy8gaGFuZGxpbmcgY2x1dHRlci5cbiAgICAgKiBhcHAuZ2V0KCcvY2F0cycsIGZ1bmN0aW9uKHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gICAgICogICAgIHZhciBVc2VyID0gcmVxdWVzdC5tb2RlbHMuVXNlcjtcbiAgICAgKiAgICAgYXN5bmMuc2VxKFxuICAgICAqICAgICAgICAgVXNlci5nZXQuYmluZChVc2VyKSwgIC8vICdVc2VyLmdldCcgaGFzIHNpZ25hdHVyZSAoaWQsIGNhbGxiYWNrKGVyciwgZGF0YSkpXG4gICAgICogICAgICAgICBmdW5jdGlvbih1c2VyLCBmbikge1xuICAgICAqICAgICAgICAgICAgIHVzZXIuZ2V0Q2F0cyhmbik7ICAgICAgLy8gJ2dldENhdHMnIGhhcyBzaWduYXR1cmUgKGNhbGxiYWNrKGVyciwgZGF0YSkpXG4gICAgICogICAgICAgICB9XG4gICAgICogICAgICkocmVxLnNlc3Npb24udXNlcl9pZCwgZnVuY3Rpb24gKGVyciwgY2F0cykge1xuICAgICAqICAgICAgICAgaWYgKGVycikge1xuICAgICAqICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgKiAgICAgICAgICAgICByZXNwb25zZS5qc29uKHsgc3RhdHVzOiAnZXJyb3InLCBtZXNzYWdlOiBlcnIubWVzc2FnZSB9KTtcbiAgICAgKiAgICAgICAgIH0gZWxzZSB7XG4gICAgICogICAgICAgICAgICAgcmVzcG9uc2UuanNvbih7IHN0YXR1czogJ29rJywgbWVzc2FnZTogJ0NhdHMgZm91bmQnLCBkYXRhOiBjYXRzIH0pO1xuICAgICAqICAgICAgICAgfVxuICAgICAqICAgICB9KTtcbiAgICAgKiB9KTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBzZXEoLi4uZnVuY3Rpb25zKSB7XG4gICAgICAgIHZhciBfZnVuY3Rpb25zID0gZnVuY3Rpb25zLm1hcCh3cmFwQXN5bmMpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgICAgICAgICAgdmFyIGNiID0gYXJnc1thcmdzLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjYiA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgYXJncy5wb3AoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY2IgPSBwcm9taXNlQ2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVkdWNlJDEoX2Z1bmN0aW9ucywgYXJncywgKG5ld2FyZ3MsIGZuLCBpdGVyQ2IpID0+IHtcbiAgICAgICAgICAgICAgICBmbi5hcHBseSh0aGF0LCBuZXdhcmdzLmNvbmNhdCgoZXJyLCAuLi5uZXh0YXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpdGVyQ2IoZXJyLCBuZXh0YXJncyk7XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIChlcnIsIHJlc3VsdHMpID0+IGNiKGVyciwgLi4ucmVzdWx0cykpO1xuXG4gICAgICAgICAgICByZXR1cm4gY2JbUFJPTUlTRV9TWU1CT0xdXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHdoaWNoIGlzIGEgY29tcG9zaXRpb24gb2YgdGhlIHBhc3NlZCBhc3luY2hyb25vdXNcbiAgICAgKiBmdW5jdGlvbnMuIEVhY2ggZnVuY3Rpb24gY29uc3VtZXMgdGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgZnVuY3Rpb24gdGhhdFxuICAgICAqIGZvbGxvd3MuIENvbXBvc2luZyBmdW5jdGlvbnMgYGYoKWAsIGBnKClgLCBhbmQgYGgoKWAgd291bGQgcHJvZHVjZSB0aGUgcmVzdWx0XG4gICAgICogb2YgYGYoZyhoKCkpKWAsIG9ubHkgdGhpcyB2ZXJzaW9uIHVzZXMgY2FsbGJhY2tzIHRvIG9idGFpbiB0aGUgcmV0dXJuIHZhbHVlcy5cbiAgICAgKlxuICAgICAqIElmIHRoZSBsYXN0IGFyZ3VtZW50IHRvIHRoZSBjb21wb3NlZCBmdW5jdGlvbiBpcyBub3QgYSBmdW5jdGlvbiwgYSBwcm9taXNlXG4gICAgICogaXMgcmV0dXJuZWQgd2hlbiB5b3UgY2FsbCBpdC5cbiAgICAgKlxuICAgICAqIEVhY2ggZnVuY3Rpb24gaXMgZXhlY3V0ZWQgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIGNvbXBvc2VkIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQG5hbWUgY29tcG9zZVxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbnRyb2xGbG93XG4gICAgICogQG1ldGhvZFxuICAgICAqIEBjYXRlZ29yeSBDb250cm9sIEZsb3dcbiAgICAgKiBAcGFyYW0gey4uLkFzeW5jRnVuY3Rpb259IGZ1bmN0aW9ucyAtIHRoZSBhc3luY2hyb25vdXMgZnVuY3Rpb25zIHRvIGNvbXBvc2VcbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IGFuIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IGlzIHRoZSBjb21wb3NlZFxuICAgICAqIGFzeW5jaHJvbm91cyBgZnVuY3Rpb25zYFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBmdW5jdGlvbiBhZGQxKG4sIGNhbGxiYWNrKSB7XG4gICAgICogICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgbiArIDEpO1xuICAgICAqICAgICB9LCAxMCk7XG4gICAgICogfVxuICAgICAqXG4gICAgICogZnVuY3Rpb24gbXVsMyhuLCBjYWxsYmFjaykge1xuICAgICAqICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsIG4gKiAzKTtcbiAgICAgKiAgICAgfSwgMTApO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIHZhciBhZGQxbXVsMyA9IGFzeW5jLmNvbXBvc2UobXVsMywgYWRkMSk7XG4gICAgICogYWRkMW11bDMoNCwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIC8vIHJlc3VsdCBub3cgZXF1YWxzIDE1XG4gICAgICogfSk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gY29tcG9zZSguLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiBzZXEoLi4uYXJncy5yZXZlcnNlKCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgbWFwYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLm1hcH0gYnV0IHJ1bnMgYSBtYXhpbXVtIG9mIGBsaW1pdGAgYXN5bmMgb3BlcmF0aW9ucyBhdCBhIHRpbWUuXG4gICAgICpcbiAgICAgKiBAbmFtZSBtYXBMaW1pdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLm1hcF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLm1hcH1cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsaW1pdCAtIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhc3luYyBvcGVyYXRpb25zIGF0IGEgdGltZS5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gICAgICogYGNvbGxgLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCB0aGUgdHJhbnNmb3JtZWQgaXRlbS5cbiAgICAgKiBJbnZva2VkIHdpdGggKGl0ZW0sIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGwgYGl0ZXJhdGVlYFxuICAgICAqIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIFJlc3VsdHMgaXMgYW4gYXJyYXkgb2YgdGhlXG4gICAgICogdHJhbnNmb3JtZWQgaXRlbXMgZnJvbSB0aGUgYGNvbGxgLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0cykuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICovXG4gICAgZnVuY3Rpb24gbWFwTGltaXQgKGNvbGwsIGxpbWl0LCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIF9hc3luY01hcChlYWNoT2ZMaW1pdChsaW1pdCksIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIG1hcExpbWl0JDEgPSBhd2FpdGlmeShtYXBMaW1pdCwgNCk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGNvbmNhdGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5jb25jYXR9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqXG4gICAgICogQG5hbWUgY29uY2F0TGltaXRcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy5jb25jYXRde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5jb25jYXR9XG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAYWxpYXMgZmxhdE1hcExpbWl0XG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxpbWl0IC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBIGZ1bmN0aW9uIHRvIGFwcGx5IHRvIGVhY2ggaXRlbSBpbiBgY29sbGAsXG4gICAgICogd2hpY2ggc2hvdWxkIHVzZSBhbiBhcnJheSBhcyBpdHMgcmVzdWx0LiBJbnZva2VkIHdpdGggKGl0ZW0sIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgYWZ0ZXIgYWxsIHRoZVxuICAgICAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gUmVzdWx0cyBpcyBhbiBhcnJheVxuICAgICAqIGNvbnRhaW5pbmcgdGhlIGNvbmNhdGVuYXRlZCByZXN1bHRzIG9mIHRoZSBgaXRlcmF0ZWVgIGZ1bmN0aW9uLiBJbnZva2VkIHdpdGhcbiAgICAgKiAoZXJyLCByZXN1bHRzKS5cbiAgICAgKiBAcmV0dXJucyBBIFByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNvbmNhdExpbWl0KGNvbGwsIGxpbWl0LCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIF9pdGVyYXRlZSA9IHdyYXBBc3luYyhpdGVyYXRlZSk7XG4gICAgICAgIHJldHVybiBtYXBMaW1pdCQxKGNvbGwsIGxpbWl0LCAodmFsLCBpdGVyQ2IpID0+IHtcbiAgICAgICAgICAgIF9pdGVyYXRlZSh2YWwsIChlcnIsIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gaXRlckNiKGVycik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZXJDYihlcnIsIGFyZ3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIChlcnIsIG1hcFJlc3VsdHMpID0+IHtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWFwUmVzdWx0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChtYXBSZXN1bHRzW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5jb25jYXQoLi4ubWFwUmVzdWx0c1tpXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyLCByZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgdmFyIGNvbmNhdExpbWl0JDEgPSBhd2FpdGlmeShjb25jYXRMaW1pdCwgNCk7XG5cbiAgICAvKipcbiAgICAgKiBBcHBsaWVzIGBpdGVyYXRlZWAgdG8gZWFjaCBpdGVtIGluIGBjb2xsYCwgY29uY2F0ZW5hdGluZyB0aGUgcmVzdWx0cy4gUmV0dXJuc1xuICAgICAqIHRoZSBjb25jYXRlbmF0ZWQgbGlzdC4gVGhlIGBpdGVyYXRlZWBzIGFyZSBjYWxsZWQgaW4gcGFyYWxsZWwsIGFuZCB0aGVcbiAgICAgKiByZXN1bHRzIGFyZSBjb25jYXRlbmF0ZWQgYXMgdGhleSByZXR1cm4uIFRoZSByZXN1bHRzIGFycmF5IHdpbGwgYmUgcmV0dXJuZWQgaW5cbiAgICAgKiB0aGUgb3JpZ2luYWwgb3JkZXIgb2YgYGNvbGxgIHBhc3NlZCB0byB0aGUgYGl0ZXJhdGVlYCBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBuYW1lIGNvbmNhdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQGFsaWFzIGZsYXRNYXBcbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQSBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoIGl0ZW0gaW4gYGNvbGxgLFxuICAgICAqIHdoaWNoIHNob3VsZCB1c2UgYW4gYXJyYXkgYXMgaXRzIHJlc3VsdC4gSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFmdGVyIGFsbCB0aGVcbiAgICAgKiBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIFJlc3VsdHMgaXMgYW4gYXJyYXlcbiAgICAgKiBjb250YWluaW5nIHRoZSBjb25jYXRlbmF0ZWQgcmVzdWx0cyBvZiB0aGUgYGl0ZXJhdGVlYCBmdW5jdGlvbi4gSW52b2tlZCB3aXRoXG4gICAgICogKGVyciwgcmVzdWx0cykuXG4gICAgICogQHJldHVybnMgQSBQcm9taXNlLCBpZiBubyBjYWxsYmFjayBpcyBwYXNzZWRcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gZGlyMSBpcyBhIGRpcmVjdG9yeSB0aGF0IGNvbnRhaW5zIGZpbGUxLnR4dCwgZmlsZTIudHh0XG4gICAgICogLy8gZGlyMiBpcyBhIGRpcmVjdG9yeSB0aGF0IGNvbnRhaW5zIGZpbGUzLnR4dCwgZmlsZTQudHh0XG4gICAgICogLy8gZGlyMyBpcyBhIGRpcmVjdG9yeSB0aGF0IGNvbnRhaW5zIGZpbGU1LnR4dFxuICAgICAqIC8vIGRpcjQgZG9lcyBub3QgZXhpc3RcbiAgICAgKlxuICAgICAqIGxldCBkaXJlY3RvcnlMaXN0ID0gWydkaXIxJywnZGlyMicsJ2RpcjMnXTtcbiAgICAgKiBsZXQgd2l0aE1pc3NpbmdEaXJlY3RvcnlMaXN0ID0gWydkaXIxJywnZGlyMicsJ2RpcjMnLCAnZGlyNCddO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgY2FsbGJhY2tzXG4gICAgICogYXN5bmMuY29uY2F0KGRpcmVjdG9yeUxpc3QsIGZzLnJlYWRkaXIsIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICB9IGVsc2Uge1xuICAgICAqICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgICAgLy8gWyAnZmlsZTEudHh0JywgJ2ZpbGUyLnR4dCcsICdmaWxlMy50eHQnLCAnZmlsZTQudHh0JywgZmlsZTUudHh0IF1cbiAgICAgKiAgICB9XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBFcnJvciBIYW5kbGluZ1xuICAgICAqIGFzeW5jLmNvbmNhdCh3aXRoTWlzc2luZ0RpcmVjdG9yeUxpc3QsIGZzLnJlYWRkaXIsIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgICAgLy8gWyBFcnJvcjogRU5PRU5UOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IF1cbiAgICAgKiAgICAgICAgLy8gc2luY2UgZGlyNCBkb2VzIG5vdCBleGlzdFxuICAgICAqICAgIH0gZWxzZSB7XG4gICAgICogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMuY29uY2F0KGRpcmVjdG9yeUxpc3QsIGZzLnJlYWRkaXIpXG4gICAgICogLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAvLyBbICdmaWxlMS50eHQnLCAnZmlsZTIudHh0JywgJ2ZpbGUzLnR4dCcsICdmaWxlNC50eHQnLCBmaWxlNS50eHQgXVxuICAgICAqIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICogICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gRXJyb3IgSGFuZGxpbmdcbiAgICAgKiBhc3luYy5jb25jYXQod2l0aE1pc3NpbmdEaXJlY3RvcnlMaXN0LCBmcy5yZWFkZGlyKVxuICAgICAqIC50aGVuKHJlc3VsdHMgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAvLyBbIEVycm9yOiBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkgXVxuICAgICAqICAgICAvLyBzaW5jZSBkaXI0IGRvZXMgbm90IGV4aXN0XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBhc3luYy9hd2FpdFxuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHRzID0gYXdhaXQgYXN5bmMuY29uY2F0KGRpcmVjdG9yeUxpc3QsIGZzLnJlYWRkaXIpO1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgICAgICAvLyBbICdmaWxlMS50eHQnLCAnZmlsZTIudHh0JywgJ2ZpbGUzLnR4dCcsICdmaWxlNC50eHQnLCBmaWxlNS50eHQgXVxuICAgICAqICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiAvLyBFcnJvciBIYW5kbGluZ1xuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHRzID0gYXdhaXQgYXN5bmMuY29uY2F0KHdpdGhNaXNzaW5nRGlyZWN0b3J5TGlzdCwgZnMucmVhZGRpcik7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAgICAgLy8gWyBFcnJvcjogRU5PRU5UOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IF1cbiAgICAgKiAgICAgICAgIC8vIHNpbmNlIGRpcjQgZG9lcyBub3QgZXhpc3RcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNvbmNhdChjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGNvbmNhdExpbWl0JDEoY29sbCwgSW5maW5pdHksIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIGNvbmNhdCQxID0gYXdhaXRpZnkoY29uY2F0LCAzKTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgY29uY2F0YF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmNvbmNhdH0gYnV0IHJ1bnMgb25seSBhIHNpbmdsZSBhc3luYyBvcGVyYXRpb24gYXQgYSB0aW1lLlxuICAgICAqXG4gICAgICogQG5hbWUgY29uY2F0U2VyaWVzXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMuY29uY2F0XXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuY29uY2F0fVxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQGFsaWFzIGZsYXRNYXBTZXJpZXNcbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQSBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoIGl0ZW0gaW4gYGNvbGxgLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCBhbiBhcnJheSBhbiBhcnJheSBvZiByZXN1bHRzLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciBhbGwgdGhlXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZCwgb3IgYW4gZXJyb3Igb2NjdXJzLiBSZXN1bHRzIGlzIGFuIGFycmF5XG4gICAgICogY29udGFpbmluZyB0aGUgY29uY2F0ZW5hdGVkIHJlc3VsdHMgb2YgdGhlIGBpdGVyYXRlZWAgZnVuY3Rpb24uIEludm9rZWQgd2l0aFxuICAgICAqIChlcnIsIHJlc3VsdHMpLlxuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICovXG4gICAgZnVuY3Rpb24gY29uY2F0U2VyaWVzKGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gY29uY2F0TGltaXQkMShjb2xsLCAxLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciBjb25jYXRTZXJpZXMkMSA9IGF3YWl0aWZ5KGNvbmNhdFNlcmllcywgMyk7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCB3aGVuIGNhbGxlZCwgY2FsbHMtYmFjayB3aXRoIHRoZSB2YWx1ZXMgcHJvdmlkZWQuXG4gICAgICogVXNlZnVsIGFzIHRoZSBmaXJzdCBmdW5jdGlvbiBpbiBhIFtgd2F0ZXJmYWxsYF17QGxpbmsgbW9kdWxlOkNvbnRyb2xGbG93LndhdGVyZmFsbH0sIG9yIGZvciBwbHVnZ2luZyB2YWx1ZXMgaW4gdG9cbiAgICAgKiBbYGF1dG9gXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cuYXV0b30uXG4gICAgICpcbiAgICAgKiBAbmFtZSBjb25zdGFudFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOlV0aWxzXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBjYXRlZ29yeSBVdGlsXG4gICAgICogQHBhcmFtIHsuLi4qfSBhcmd1bWVudHMuLi4gLSBBbnkgbnVtYmVyIG9mIGFyZ3VtZW50cyB0byBhdXRvbWF0aWNhbGx5IGludm9rZVxuICAgICAqIGNhbGxiYWNrIHdpdGguXG4gICAgICogQHJldHVybnMge0FzeW5jRnVuY3Rpb259IFJldHVybnMgYSBmdW5jdGlvbiB0aGF0IHdoZW4gaW52b2tlZCwgYXV0b21hdGljYWxseVxuICAgICAqIGludm9rZXMgdGhlIGNhbGxiYWNrIHdpdGggdGhlIHByZXZpb3VzIGdpdmVuIGFyZ3VtZW50cy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogYXN5bmMud2F0ZXJmYWxsKFtcbiAgICAgKiAgICAgYXN5bmMuY29uc3RhbnQoNDIpLFxuICAgICAqICAgICBmdW5jdGlvbiAodmFsdWUsIG5leHQpIHtcbiAgICAgKiAgICAgICAgIC8vIHZhbHVlID09PSA0MlxuICAgICAqICAgICB9LFxuICAgICAqICAgICAvLy4uLlxuICAgICAqIF0sIGNhbGxiYWNrKTtcbiAgICAgKlxuICAgICAqIGFzeW5jLndhdGVyZmFsbChbXG4gICAgICogICAgIGFzeW5jLmNvbnN0YW50KGZpbGVuYW1lLCBcInV0ZjhcIiksXG4gICAgICogICAgIGZzLnJlYWRGaWxlLFxuICAgICAqICAgICBmdW5jdGlvbiAoZmlsZURhdGEsIG5leHQpIHtcbiAgICAgKiAgICAgICAgIC8vLi4uXG4gICAgICogICAgIH1cbiAgICAgKiAgICAgLy8uLi5cbiAgICAgKiBdLCBjYWxsYmFjayk7XG4gICAgICpcbiAgICAgKiBhc3luYy5hdXRvKHtcbiAgICAgKiAgICAgaG9zdG5hbWU6IGFzeW5jLmNvbnN0YW50KFwiaHR0cHM6Ly9zZXJ2ZXIubmV0L1wiKSxcbiAgICAgKiAgICAgcG9ydDogZmluZEZyZWVQb3J0LFxuICAgICAqICAgICBsYXVuY2hTZXJ2ZXI6IFtcImhvc3RuYW1lXCIsIFwicG9ydFwiLCBmdW5jdGlvbiAob3B0aW9ucywgY2IpIHtcbiAgICAgKiAgICAgICAgIHN0YXJ0U2VydmVyKG9wdGlvbnMsIGNiKTtcbiAgICAgKiAgICAgfV0sXG4gICAgICogICAgIC8vLi4uXG4gICAgICogfSwgY2FsbGJhY2spO1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNvbnN0YW50KC4uLmFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5pZ25vcmVkQXJncy8qLCBjYWxsYmFjayovKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBpZ25vcmVkQXJncy5wb3AoKTtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhudWxsLCAuLi5hcmdzKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfY3JlYXRlVGVzdGVyKGNoZWNrLCBnZXRSZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIChlYWNoZm4sIGFyciwgX2l0ZXJhdGVlLCBjYikgPT4ge1xuICAgICAgICAgICAgdmFyIHRlc3RQYXNzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHZhciB0ZXN0UmVzdWx0O1xuICAgICAgICAgICAgY29uc3QgaXRlcmF0ZWUgPSB3cmFwQXN5bmMoX2l0ZXJhdGVlKTtcbiAgICAgICAgICAgIGVhY2hmbihhcnIsICh2YWx1ZSwgXywgY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICBpdGVyYXRlZSh2YWx1ZSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnIgfHwgZXJyID09PSBmYWxzZSkgcmV0dXJuIGNhbGxiYWNrKGVycik7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrKHJlc3VsdCkgJiYgIXRlc3RSZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3RQYXNzZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVzdFJlc3VsdCA9IGdldFJlc3VsdCh0cnVlLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgYnJlYWtMb29wKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gY2IoZXJyKTtcbiAgICAgICAgICAgICAgICBjYihudWxsLCB0ZXN0UGFzc2VkID8gdGVzdFJlc3VsdCA6IGdldFJlc3VsdChmYWxzZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgZmlyc3QgdmFsdWUgaW4gYGNvbGxgIHRoYXQgcGFzc2VzIGFuIGFzeW5jIHRydXRoIHRlc3QuIFRoZVxuICAgICAqIGBpdGVyYXRlZWAgaXMgYXBwbGllZCBpbiBwYXJhbGxlbCwgbWVhbmluZyB0aGUgZmlyc3QgaXRlcmF0ZWUgdG8gcmV0dXJuXG4gICAgICogYHRydWVgIHdpbGwgZmlyZSB0aGUgZGV0ZWN0IGBjYWxsYmFja2Agd2l0aCB0aGF0IHJlc3VsdC4gVGhhdCBtZWFucyB0aGVcbiAgICAgKiByZXN1bHQgbWlnaHQgbm90IGJlIHRoZSBmaXJzdCBpdGVtIGluIHRoZSBvcmlnaW5hbCBgY29sbGAgKGluIHRlcm1zIG9mIG9yZGVyKVxuICAgICAqIHRoYXQgcGFzc2VzIHRoZSB0ZXN0LlxuXG4gICAgICogSWYgb3JkZXIgd2l0aGluIHRoZSBvcmlnaW5hbCBgY29sbGAgaXMgaW1wb3J0YW50LCB0aGVuIGxvb2sgYXRcbiAgICAgKiBbYGRldGVjdFNlcmllc2Bde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5kZXRlY3RTZXJpZXN9LlxuICAgICAqXG4gICAgICogQG5hbWUgZGV0ZWN0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGFsaWFzIGZpbmRcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQSB0cnV0aCB0ZXN0IHRvIGFwcGx5IHRvIGVhY2ggaXRlbSBpbiBgY29sbGAuXG4gICAgICogVGhlIGl0ZXJhdGVlIG11c3QgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gdmFsdWUgYXMgaXRzIHJlc3VsdC5cbiAgICAgKiBJbnZva2VkIHdpdGggKGl0ZW0sIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgYXMgc29vbiBhcyBhbnlcbiAgICAgKiBpdGVyYXRlZSByZXR1cm5zIGB0cnVlYCwgb3IgYWZ0ZXIgYWxsIHRoZSBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLlxuICAgICAqIFJlc3VsdCB3aWxsIGJlIHRoZSBmaXJzdCBpdGVtIGluIHRoZSBhcnJheSB0aGF0IHBhc3NlcyB0aGUgdHJ1dGggdGVzdFxuICAgICAqIChpdGVyYXRlZSkgb3IgdGhlIHZhbHVlIGB1bmRlZmluZWRgIGlmIG5vbmUgcGFzc2VkLiBJbnZva2VkIHdpdGhcbiAgICAgKiAoZXJyLCByZXN1bHQpLlxuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGRpcjEgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlMS50eHQsIGZpbGUyLnR4dFxuICAgICAqIC8vIGRpcjIgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlMy50eHQsIGZpbGU0LnR4dFxuICAgICAqIC8vIGRpcjMgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlNS50eHRcbiAgICAgKlxuICAgICAqIC8vIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IGNoZWNrcyBpZiBhIGZpbGUgZXhpc3RzXG4gICAgICogZnVuY3Rpb24gZmlsZUV4aXN0cyhmaWxlLCBjYWxsYmFjaykge1xuICAgICAqICAgIGZzLmFjY2VzcyhmaWxlLCBmcy5jb25zdGFudHMuRl9PSywgKGVycikgPT4ge1xuICAgICAqICAgICAgICBjYWxsYmFjayhudWxsLCAhZXJyKTtcbiAgICAgKiAgICB9KTtcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiBhc3luYy5kZXRlY3QoWydmaWxlMy50eHQnLCdmaWxlMi50eHQnLCdkaXIxL2ZpbGUxLnR4dCddLCBmaWxlRXhpc3RzLFxuICAgICAqICAgIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgICAgIC8vIGRpcjEvZmlsZTEudHh0XG4gICAgICogICAgICAgIC8vIHJlc3VsdCBub3cgZXF1YWxzIHRoZSBmaXJzdCBmaWxlIGluIHRoZSBsaXN0IHRoYXQgZXhpc3RzXG4gICAgICogICAgfVxuICAgICAqKTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMuZGV0ZWN0KFsnZmlsZTMudHh0JywnZmlsZTIudHh0JywnZGlyMS9maWxlMS50eHQnXSwgZmlsZUV4aXN0cylcbiAgICAgKiAudGhlbihyZXN1bHQgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAvLyBkaXIxL2ZpbGUxLnR4dFxuICAgICAqICAgICAvLyByZXN1bHQgbm93IGVxdWFscyB0aGUgZmlyc3QgZmlsZSBpbiB0aGUgbGlzdCB0aGF0IGV4aXN0c1xuICAgICAqIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBhc3luYy9hd2FpdFxuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhc3luYy5kZXRlY3QoWydmaWxlMy50eHQnLCdmaWxlMi50eHQnLCdkaXIxL2ZpbGUxLnR4dCddLCBmaWxlRXhpc3RzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgICAgICAvLyBkaXIxL2ZpbGUxLnR4dFxuICAgICAqICAgICAgICAgLy8gcmVzdWx0IG5vdyBlcXVhbHMgdGhlIGZpbGUgaW4gdGhlIGxpc3QgdGhhdCBleGlzdHNcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gZGV0ZWN0KGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX2NyZWF0ZVRlc3Rlcihib29sID0+IGJvb2wsIChyZXMsIGl0ZW0pID0+IGl0ZW0pKGVhY2hPZiQxLCBjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciBkZXRlY3QkMSA9IGF3YWl0aWZ5KGRldGVjdCwgMyk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGRldGVjdGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5kZXRlY3R9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYVxuICAgICAqIHRpbWUuXG4gICAgICpcbiAgICAgKiBAbmFtZSBkZXRlY3RMaW1pdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmRldGVjdF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmRldGVjdH1cbiAgICAgKiBAYWxpYXMgZmluZExpbWl0XG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxpbWl0IC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluIGBjb2xsYC5cbiAgICAgKiBUaGUgaXRlcmF0ZWUgbXVzdCBjb21wbGV0ZSB3aXRoIGEgYm9vbGVhbiB2YWx1ZSBhcyBpdHMgcmVzdWx0LlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhcyBzb29uIGFzIGFueVxuICAgICAqIGl0ZXJhdGVlIHJldHVybnMgYHRydWVgLCBvciBhZnRlciBhbGwgdGhlIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQuXG4gICAgICogUmVzdWx0IHdpbGwgYmUgdGhlIGZpcnN0IGl0ZW0gaW4gdGhlIGFycmF5IHRoYXQgcGFzc2VzIHRoZSB0cnV0aCB0ZXN0XG4gICAgICogKGl0ZXJhdGVlKSBvciB0aGUgdmFsdWUgYHVuZGVmaW5lZGAgaWYgbm9uZSBwYXNzZWQuIEludm9rZWQgd2l0aFxuICAgICAqIChlcnIsIHJlc3VsdCkuXG4gICAgICogQHJldHVybnMgYSBQcm9taXNlIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRldGVjdExpbWl0KGNvbGwsIGxpbWl0LCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIF9jcmVhdGVUZXN0ZXIoYm9vbCA9PiBib29sLCAocmVzLCBpdGVtKSA9PiBpdGVtKShlYWNoT2ZMaW1pdChsaW1pdCksIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIGRldGVjdExpbWl0JDEgPSBhd2FpdGlmeShkZXRlY3RMaW1pdCwgNCk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGRldGVjdGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5kZXRlY3R9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGRldGVjdFNlcmllc1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmRldGVjdF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmRldGVjdH1cbiAgICAgKiBAYWxpYXMgZmluZFNlcmllc1xuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluIGBjb2xsYC5cbiAgICAgKiBUaGUgaXRlcmF0ZWUgbXVzdCBjb21wbGV0ZSB3aXRoIGEgYm9vbGVhbiB2YWx1ZSBhcyBpdHMgcmVzdWx0LlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhcyBzb29uIGFzIGFueVxuICAgICAqIGl0ZXJhdGVlIHJldHVybnMgYHRydWVgLCBvciBhZnRlciBhbGwgdGhlIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQuXG4gICAgICogUmVzdWx0IHdpbGwgYmUgdGhlIGZpcnN0IGl0ZW0gaW4gdGhlIGFycmF5IHRoYXQgcGFzc2VzIHRoZSB0cnV0aCB0ZXN0XG4gICAgICogKGl0ZXJhdGVlKSBvciB0aGUgdmFsdWUgYHVuZGVmaW5lZGAgaWYgbm9uZSBwYXNzZWQuIEludm9rZWQgd2l0aFxuICAgICAqIChlcnIsIHJlc3VsdCkuXG4gICAgICogQHJldHVybnMgYSBQcm9taXNlIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRldGVjdFNlcmllcyhjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIF9jcmVhdGVUZXN0ZXIoYm9vbCA9PiBib29sLCAocmVzLCBpdGVtKSA9PiBpdGVtKShlYWNoT2ZMaW1pdCgxKSwgY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIHZhciBkZXRlY3RTZXJpZXMkMSA9IGF3YWl0aWZ5KGRldGVjdFNlcmllcywgMyk7XG5cbiAgICBmdW5jdGlvbiBjb25zb2xlRnVuYyhuYW1lKSB7XG4gICAgICAgIHJldHVybiAoZm4sIC4uLmFyZ3MpID0+IHdyYXBBc3luYyhmbikoLi4uYXJncywgKGVyciwgLi4ucmVzdWx0QXJncykgPT4ge1xuICAgICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29uc29sZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnNvbGUuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29uc29sZVtuYW1lXSkgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRBcmdzLmZvckVhY2goeCA9PiBjb25zb2xlW25hbWVdKHgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9ncyB0aGUgcmVzdWx0IG9mIGFuIFtgYXN5bmNgIGZ1bmN0aW9uXXtAbGluayBBc3luY0Z1bmN0aW9ufSB0byB0aGVcbiAgICAgKiBgY29uc29sZWAgdXNpbmcgYGNvbnNvbGUuZGlyYCB0byBkaXNwbGF5IHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSByZXN1bHRpbmcgb2JqZWN0LlxuICAgICAqIE9ubHkgd29ya3MgaW4gTm9kZS5qcyBvciBpbiBicm93c2VycyB0aGF0IHN1cHBvcnQgYGNvbnNvbGUuZGlyYCBhbmRcbiAgICAgKiBgY29uc29sZS5lcnJvcmAgKHN1Y2ggYXMgRkYgYW5kIENocm9tZSkuXG4gICAgICogSWYgbXVsdGlwbGUgYXJndW1lbnRzIGFyZSByZXR1cm5lZCBmcm9tIHRoZSBhc3luYyBmdW5jdGlvbixcbiAgICAgKiBgY29uc29sZS5kaXJgIGlzIGNhbGxlZCBvbiBlYWNoIGFyZ3VtZW50IGluIG9yZGVyLlxuICAgICAqXG4gICAgICogQG5hbWUgZGlyXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6VXRpbHNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IFV0aWxcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGZ1bmN0aW9uIC0gVGhlIGZ1bmN0aW9uIHlvdSB3YW50IHRvIGV2ZW50dWFsbHkgYXBwbHlcbiAgICAgKiBhbGwgYXJndW1lbnRzIHRvLlxuICAgICAqIEBwYXJhbSB7Li4uKn0gYXJndW1lbnRzLi4uIC0gQW55IG51bWJlciBvZiBhcmd1bWVudHMgdG8gYXBwbHkgdG8gdGhlIGZ1bmN0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBpbiBhIG1vZHVsZVxuICAgICAqIHZhciBoZWxsbyA9IGZ1bmN0aW9uKG5hbWUsIGNhbGxiYWNrKSB7XG4gICAgICogICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCB7aGVsbG86IG5hbWV9KTtcbiAgICAgKiAgICAgfSwgMTAwMCk7XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIC8vIGluIHRoZSBub2RlIHJlcGxcbiAgICAgKiBub2RlPiBhc3luYy5kaXIoaGVsbG8sICd3b3JsZCcpO1xuICAgICAqIHtoZWxsbzogJ3dvcmxkJ31cbiAgICAgKi9cbiAgICB2YXIgZGlyID0gY29uc29sZUZ1bmMoJ2RpcicpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHBvc3QtY2hlY2sgdmVyc2lvbiBvZiBbYHdoaWxzdGBde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy53aGlsc3R9LiBUbyByZWZsZWN0IHRoZSBkaWZmZXJlbmNlIGluXG4gICAgICogdGhlIG9yZGVyIG9mIG9wZXJhdGlvbnMsIHRoZSBhcmd1bWVudHMgYHRlc3RgIGFuZCBgaXRlcmF0ZWVgIGFyZSBzd2l0Y2hlZC5cbiAgICAgKlxuICAgICAqIGBkb1doaWxzdGAgaXMgdG8gYHdoaWxzdGAgYXMgYGRvIHdoaWxlYCBpcyB0byBgd2hpbGVgIGluIHBsYWluIEphdmFTY3JpcHQuXG4gICAgICpcbiAgICAgKiBAbmFtZSBkb1doaWxzdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbnRyb2xGbG93XG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLndoaWxzdF17QGxpbmsgbW9kdWxlOkNvbnRyb2xGbG93LndoaWxzdH1cbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEEgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGVhY2ggdGltZSBgdGVzdGBcbiAgICAgKiBwYXNzZXMuIEludm9rZWQgd2l0aCAoY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gdGVzdCAtIGFzeW5jaHJvbm91cyB0cnV0aCB0ZXN0IHRvIHBlcmZvcm0gYWZ0ZXIgZWFjaFxuICAgICAqIGV4ZWN1dGlvbiBvZiBgaXRlcmF0ZWVgLiBJbnZva2VkIHdpdGggKC4uLmFyZ3MsIGNhbGxiYWNrKSwgd2hlcmUgYC4uLmFyZ3NgIGFyZSB0aGVcbiAgICAgKiBub24tZXJyb3IgYXJncyBmcm9tIHRoZSBwcmV2aW91cyBjYWxsYmFjayBvZiBgaXRlcmF0ZWVgLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciB0aGUgdGVzdFxuICAgICAqIGZ1bmN0aW9uIGhhcyBmYWlsZWQgYW5kIHJlcGVhdGVkIGV4ZWN1dGlvbiBvZiBgaXRlcmF0ZWVgIGhhcyBzdG9wcGVkLlxuICAgICAqIGBjYWxsYmFja2Agd2lsbCBiZSBwYXNzZWQgYW4gZXJyb3IgYW5kIGFueSBhcmd1bWVudHMgcGFzc2VkIHRvIHRoZSBmaW5hbFxuICAgICAqIGBpdGVyYXRlZWAncyBjYWxsYmFjay4gSW52b2tlZCB3aXRoIChlcnIsIFtyZXN1bHRzXSk7XG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICovXG4gICAgZnVuY3Rpb24gZG9XaGlsc3QoaXRlcmF0ZWUsIHRlc3QsIGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrID0gb25seU9uY2UoY2FsbGJhY2spO1xuICAgICAgICB2YXIgX2ZuID0gd3JhcEFzeW5jKGl0ZXJhdGVlKTtcbiAgICAgICAgdmFyIF90ZXN0ID0gd3JhcEFzeW5jKHRlc3QpO1xuICAgICAgICB2YXIgcmVzdWx0cztcblxuICAgICAgICBmdW5jdGlvbiBuZXh0KGVyciwgLi4uYXJncykge1xuICAgICAgICAgICAgaWYgKGVycikgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICBpZiAoZXJyID09PSBmYWxzZSkgcmV0dXJuO1xuICAgICAgICAgICAgcmVzdWx0cyA9IGFyZ3M7XG4gICAgICAgICAgICBfdGVzdCguLi5hcmdzLCBjaGVjayk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBjaGVjayhlcnIsIHRydXRoKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgIGlmIChlcnIgPT09IGZhbHNlKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoIXRydXRoKSByZXR1cm4gY2FsbGJhY2sobnVsbCwgLi4ucmVzdWx0cyk7XG4gICAgICAgICAgICBfZm4obmV4dCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY2hlY2sobnVsbCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgdmFyIGRvV2hpbHN0JDEgPSBhd2FpdGlmeShkb1doaWxzdCwgMyk7XG5cbiAgICAvKipcbiAgICAgKiBMaWtlIFsnZG9XaGlsc3QnXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cuZG9XaGlsc3R9LCBleGNlcHQgdGhlIGB0ZXN0YCBpcyBpbnZlcnRlZC4gTm90ZSB0aGVcbiAgICAgKiBhcmd1bWVudCBvcmRlcmluZyBkaWZmZXJzIGZyb20gYHVudGlsYC5cbiAgICAgKlxuICAgICAqIEBuYW1lIGRvVW50aWxcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy5kb1doaWxzdF17QGxpbmsgbW9kdWxlOkNvbnRyb2xGbG93LmRvV2hpbHN0fVxuICAgICAqIEBjYXRlZ29yeSBDb250cm9sIEZsb3dcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGVhY2ggdGltZVxuICAgICAqIGB0ZXN0YCBmYWlscy4gSW52b2tlZCB3aXRoIChjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSB0ZXN0IC0gYXN5bmNocm9ub3VzIHRydXRoIHRlc3QgdG8gcGVyZm9ybSBhZnRlciBlYWNoXG4gICAgICogZXhlY3V0aW9uIG9mIGBpdGVyYXRlZWAuIEludm9rZWQgd2l0aCAoLi4uYXJncywgY2FsbGJhY2spLCB3aGVyZSBgLi4uYXJnc2AgYXJlIHRoZVxuICAgICAqIG5vbi1lcnJvciBhcmdzIGZyb20gdGhlIHByZXZpb3VzIGNhbGxiYWNrIG9mIGBpdGVyYXRlZWBcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgYWZ0ZXIgdGhlIHRlc3RcbiAgICAgKiBmdW5jdGlvbiBoYXMgcGFzc2VkIGFuZCByZXBlYXRlZCBleGVjdXRpb24gb2YgYGl0ZXJhdGVlYCBoYXMgc3RvcHBlZC4gYGNhbGxiYWNrYFxuICAgICAqIHdpbGwgYmUgcGFzc2VkIGFuIGVycm9yIGFuZCBhbnkgYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgZmluYWwgYGl0ZXJhdGVlYCdzXG4gICAgICogY2FsbGJhY2suIEludm9rZWQgd2l0aCAoZXJyLCBbcmVzdWx0c10pO1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRvVW50aWwoaXRlcmF0ZWUsIHRlc3QsIGNhbGxiYWNrKSB7XG4gICAgICAgIGNvbnN0IF90ZXN0ID0gd3JhcEFzeW5jKHRlc3QpO1xuICAgICAgICByZXR1cm4gZG9XaGlsc3QkMShpdGVyYXRlZSwgKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNiID0gYXJncy5wb3AoKTtcbiAgICAgICAgICAgIF90ZXN0KC4uLmFyZ3MsIChlcnIsIHRydXRoKSA9PiBjYiAoZXJyLCAhdHJ1dGgpKTtcbiAgICAgICAgfSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIF93aXRob3V0SW5kZXgoaXRlcmF0ZWUpIHtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSwgaW5kZXgsIGNhbGxiYWNrKSA9PiBpdGVyYXRlZSh2YWx1ZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFwcGxpZXMgdGhlIGZ1bmN0aW9uIGBpdGVyYXRlZWAgdG8gZWFjaCBpdGVtIGluIGBjb2xsYCwgaW4gcGFyYWxsZWwuXG4gICAgICogVGhlIGBpdGVyYXRlZWAgaXMgY2FsbGVkIHdpdGggYW4gaXRlbSBmcm9tIHRoZSBsaXN0LCBhbmQgYSBjYWxsYmFjayBmb3Igd2hlblxuICAgICAqIGl0IGhhcyBmaW5pc2hlZC4gSWYgdGhlIGBpdGVyYXRlZWAgcGFzc2VzIGFuIGVycm9yIHRvIGl0cyBgY2FsbGJhY2tgLCB0aGVcbiAgICAgKiBtYWluIGBjYWxsYmFja2AgKGZvciB0aGUgYGVhY2hgIGZ1bmN0aW9uKSBpcyBpbW1lZGlhdGVseSBjYWxsZWQgd2l0aCB0aGVcbiAgICAgKiBlcnJvci5cbiAgICAgKlxuICAgICAqIE5vdGUsIHRoYXQgc2luY2UgdGhpcyBmdW5jdGlvbiBhcHBsaWVzIGBpdGVyYXRlZWAgdG8gZWFjaCBpdGVtIGluIHBhcmFsbGVsLFxuICAgICAqIHRoZXJlIGlzIG5vIGd1YXJhbnRlZSB0aGF0IHRoZSBpdGVyYXRlZSBmdW5jdGlvbnMgd2lsbCBjb21wbGV0ZSBpbiBvcmRlci5cbiAgICAgKlxuICAgICAqIEBuYW1lIGVhY2hcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAYWxpYXMgZm9yRWFjaFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIGZ1bmN0aW9uIHRvIGFwcGx5IHRvXG4gICAgICogZWFjaCBpdGVtIGluIGBjb2xsYC4gSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogVGhlIGFycmF5IGluZGV4IGlzIG5vdCBwYXNzZWQgdG8gdGhlIGl0ZXJhdGVlLlxuICAgICAqIElmIHlvdSBuZWVkIHRoZSBpbmRleCwgdXNlIGBlYWNoT2ZgLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbFxuICAgICAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIGEgY2FsbGJhY2sgaXMgb21pdHRlZFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBkaXIxIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTEudHh0LCBmaWxlMi50eHRcbiAgICAgKiAvLyBkaXIyIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTMudHh0LCBmaWxlNC50eHRcbiAgICAgKiAvLyBkaXIzIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTUudHh0XG4gICAgICogLy8gZGlyNCBkb2VzIG5vdCBleGlzdFxuICAgICAqXG4gICAgICogY29uc3QgZmlsZUxpc3QgPSBbICdkaXIxL2ZpbGUyLnR4dCcsICdkaXIyL2ZpbGUzLnR4dCcsICdkaXIvZmlsZTUudHh0J107XG4gICAgICogY29uc3Qgd2l0aE1pc3NpbmdGaWxlTGlzdCA9IFsnZGlyMS9maWxlMS50eHQnLCAnZGlyNC9maWxlMi50eHQnXTtcbiAgICAgKlxuICAgICAqIC8vIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IGRlbGV0ZXMgYSBmaWxlXG4gICAgICogY29uc3QgZGVsZXRlRmlsZSA9IGZ1bmN0aW9uKGZpbGUsIGNhbGxiYWNrKSB7XG4gICAgICogICAgIGZzLnVubGluayhmaWxlLCBjYWxsYmFjayk7XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGNhbGxiYWNrc1xuICAgICAqIGFzeW5jLmVhY2goZmlsZUxpc3QsIGRlbGV0ZUZpbGUsIGZ1bmN0aW9uKGVycikge1xuICAgICAqICAgICBpZiggZXJyICkge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfSBlbHNlIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKCdBbGwgZmlsZXMgaGF2ZSBiZWVuIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIEVycm9yIEhhbmRsaW5nXG4gICAgICogYXN5bmMuZWFjaCh3aXRoTWlzc2luZ0ZpbGVMaXN0LCBkZWxldGVGaWxlLCBmdW5jdGlvbihlcnIpe1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAvLyBbIEVycm9yOiBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkgXVxuICAgICAqICAgICAvLyBzaW5jZSBkaXI0L2ZpbGUyLnR4dCBkb2VzIG5vdCBleGlzdFxuICAgICAqICAgICAvLyBkaXIxL2ZpbGUxLnR4dCBjb3VsZCBoYXZlIGJlZW4gZGVsZXRlZFxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgUHJvbWlzZXNcbiAgICAgKiBhc3luYy5lYWNoKGZpbGVMaXN0LCBkZWxldGVGaWxlKVxuICAgICAqIC50aGVuKCAoKSA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdBbGwgZmlsZXMgaGF2ZSBiZWVuIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgICogfSkuY2F0Y2goIGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBFcnJvciBIYW5kbGluZ1xuICAgICAqIGFzeW5jLmVhY2goZmlsZUxpc3QsIGRlbGV0ZUZpbGUpXG4gICAgICogLnRoZW4oICgpID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coJ0FsbCBmaWxlcyBoYXZlIGJlZW4gZGVsZXRlZCBzdWNjZXNzZnVsbHknKTtcbiAgICAgKiB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgLy8gWyBFcnJvcjogRU5PRU5UOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IF1cbiAgICAgKiAgICAgLy8gc2luY2UgZGlyNC9maWxlMi50eHQgZG9lcyBub3QgZXhpc3RcbiAgICAgKiAgICAgLy8gZGlyMS9maWxlMS50eHQgY291bGQgaGF2ZSBiZWVuIGRlbGV0ZWRcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGFzeW5jL2F3YWl0XG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgYXdhaXQgYXN5bmMuZWFjaChmaWxlcywgZGVsZXRlRmlsZSk7XG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIEVycm9yIEhhbmRsaW5nXG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgYXdhaXQgYXN5bmMuZWFjaCh3aXRoTWlzc2luZ0ZpbGVMaXN0LCBkZWxldGVGaWxlKTtcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAgICAgLy8gWyBFcnJvcjogRU5PRU5UOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IF1cbiAgICAgKiAgICAgICAgIC8vIHNpbmNlIGRpcjQvZmlsZTIudHh0IGRvZXMgbm90IGV4aXN0XG4gICAgICogICAgICAgICAvLyBkaXIxL2ZpbGUxLnR4dCBjb3VsZCBoYXZlIGJlZW4gZGVsZXRlZFxuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gZWFjaExpbWl0KGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gZWFjaE9mJDEoY29sbCwgX3dpdGhvdXRJbmRleCh3cmFwQXN5bmMoaXRlcmF0ZWUpKSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIHZhciBlYWNoID0gYXdhaXRpZnkoZWFjaExpbWl0LCAzKTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgZWFjaGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNofSBidXQgcnVucyBhIG1heGltdW0gb2YgYGxpbWl0YCBhc3luYyBvcGVyYXRpb25zIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGVhY2hMaW1pdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmVhY2hde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNofVxuICAgICAqIEBhbGlhcyBmb3JFYWNoTGltaXRcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsaW1pdCAtIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhc3luYyBvcGVyYXRpb25zIGF0IGEgdGltZS5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gICAgICogYGNvbGxgLlxuICAgICAqIFRoZSBhcnJheSBpbmRleCBpcyBub3QgcGFzc2VkIHRvIHRoZSBpdGVyYXRlZS5cbiAgICAgKiBJZiB5b3UgbmVlZCB0aGUgaW5kZXgsIHVzZSBgZWFjaE9mTGltaXRgLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbFxuICAgICAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIGEgY2FsbGJhY2sgaXMgb21pdHRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGVhY2hMaW1pdCQxKGNvbGwsIGxpbWl0LCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGVhY2hPZkxpbWl0KGxpbWl0KShjb2xsLCBfd2l0aG91dEluZGV4KHdyYXBBc3luYyhpdGVyYXRlZSkpLCBjYWxsYmFjayk7XG4gICAgfVxuICAgIHZhciBlYWNoTGltaXQkMiA9IGF3YWl0aWZ5KGVhY2hMaW1pdCQxLCA0KTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgZWFjaGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5lYWNofSBidXQgcnVucyBvbmx5IGEgc2luZ2xlIGFzeW5jIG9wZXJhdGlvbiBhdCBhIHRpbWUuXG4gICAgICpcbiAgICAgKiBOb3RlLCB0aGF0IHVubGlrZSBbYGVhY2hgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZWFjaH0sIHRoaXMgZnVuY3Rpb24gYXBwbGllcyBpdGVyYXRlZSB0byBlYWNoIGl0ZW1cbiAgICAgKiBpbiBzZXJpZXMgYW5kIHRoZXJlZm9yZSB0aGUgaXRlcmF0ZWUgZnVuY3Rpb25zIHdpbGwgY29tcGxldGUgaW4gb3JkZXIuXG5cbiAgICAgKiBAbmFtZSBlYWNoU2VyaWVzXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMuZWFjaF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmVhY2h9XG4gICAgICogQGFsaWFzIGZvckVhY2hTZXJpZXNcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBbiBhc3luYyBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoXG4gICAgICogaXRlbSBpbiBgY29sbGAuXG4gICAgICogVGhlIGFycmF5IGluZGV4IGlzIG5vdCBwYXNzZWQgdG8gdGhlIGl0ZXJhdGVlLlxuICAgICAqIElmIHlvdSBuZWVkIHRoZSBpbmRleCwgdXNlIGBlYWNoT2ZTZXJpZXNgLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbFxuICAgICAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIGEgY2FsbGJhY2sgaXMgb21pdHRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGVhY2hTZXJpZXMoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBlYWNoTGltaXQkMihjb2xsLCAxLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciBlYWNoU2VyaWVzJDEgPSBhd2FpdGlmeShlYWNoU2VyaWVzLCAzKTtcblxuICAgIC8qKlxuICAgICAqIFdyYXAgYW4gYXN5bmMgZnVuY3Rpb24gYW5kIGVuc3VyZSBpdCBjYWxscyBpdHMgY2FsbGJhY2sgb24gYSBsYXRlciB0aWNrIG9mXG4gICAgICogdGhlIGV2ZW50IGxvb3AuICBJZiB0aGUgZnVuY3Rpb24gYWxyZWFkeSBjYWxscyBpdHMgY2FsbGJhY2sgb24gYSBuZXh0IHRpY2ssXG4gICAgICogbm8gZXh0cmEgZGVmZXJyYWwgaXMgYWRkZWQuIFRoaXMgaXMgdXNlZnVsIGZvciBwcmV2ZW50aW5nIHN0YWNrIG92ZXJmbG93c1xuICAgICAqIChgUmFuZ2VFcnJvcjogTWF4aW11bSBjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRgKSBhbmQgZ2VuZXJhbGx5IGtlZXBpbmdcbiAgICAgKiBbWmFsZ29dKGh0dHA6Ly9ibG9nLml6cy5tZS9wb3N0LzU5MTQyNzQyMTQzL2Rlc2lnbmluZy1hcGlzLWZvci1hc3luY2hyb255KVxuICAgICAqIGNvbnRhaW5lZC4gRVMyMDE3IGBhc3luY2AgZnVuY3Rpb25zIGFyZSByZXR1cm5lZCBhcy1pcyAtLSB0aGV5IGFyZSBpbW11bmVcbiAgICAgKiB0byBaYWxnbydzIGNvcnJ1cHRpbmcgaW5mbHVlbmNlcywgYXMgdGhleSBhbHdheXMgcmVzb2x2ZSBvbiBhIGxhdGVyIHRpY2suXG4gICAgICpcbiAgICAgKiBAbmFtZSBlbnN1cmVBc3luY1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOlV0aWxzXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBjYXRlZ29yeSBVdGlsXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBmbiAtIGFuIGFzeW5jIGZ1bmN0aW9uLCBvbmUgdGhhdCBleHBlY3RzIGEgbm9kZS1zdHlsZVxuICAgICAqIGNhbGxiYWNrIGFzIGl0cyBsYXN0IGFyZ3VtZW50LlxuICAgICAqIEByZXR1cm5zIHtBc3luY0Z1bmN0aW9ufSBSZXR1cm5zIGEgd3JhcHBlZCBmdW5jdGlvbiB3aXRoIHRoZSBleGFjdCBzYW1lIGNhbGxcbiAgICAgKiBzaWduYXR1cmUgYXMgdGhlIGZ1bmN0aW9uIHBhc3NlZCBpbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogZnVuY3Rpb24gc29tZXRpbWVzQXN5bmMoYXJnLCBjYWxsYmFjaykge1xuICAgICAqICAgICBpZiAoY2FjaGVbYXJnXSkge1xuICAgICAqICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwsIGNhY2hlW2FyZ10pOyAvLyB0aGlzIHdvdWxkIGJlIHN5bmNocm9ub3VzISFcbiAgICAgKiAgICAgfSBlbHNlIHtcbiAgICAgKiAgICAgICAgIGRvU29tZUlPKGFyZywgY2FsbGJhY2spOyAvLyB0aGlzIElPIHdvdWxkIGJlIGFzeW5jaHJvbm91c1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gdGhpcyBoYXMgYSByaXNrIG9mIHN0YWNrIG92ZXJmbG93cyBpZiBtYW55IHJlc3VsdHMgYXJlIGNhY2hlZCBpbiBhIHJvd1xuICAgICAqIGFzeW5jLm1hcFNlcmllcyhhcmdzLCBzb21ldGltZXNBc3luYywgZG9uZSk7XG4gICAgICpcbiAgICAgKiAvLyB0aGlzIHdpbGwgZGVmZXIgc29tZXRpbWVzQXN5bmMncyBjYWxsYmFjayBpZiBuZWNlc3NhcnksXG4gICAgICogLy8gcHJldmVudGluZyBzdGFjayBvdmVyZmxvd3NcbiAgICAgKiBhc3luYy5tYXBTZXJpZXMoYXJncywgYXN5bmMuZW5zdXJlQXN5bmMoc29tZXRpbWVzQXN5bmMpLCBkb25lKTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBlbnN1cmVBc3luYyhmbikge1xuICAgICAgICBpZiAoaXNBc3luYyhmbikpIHJldHVybiBmbjtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzLyosIGNhbGxiYWNrKi8pIHtcbiAgICAgICAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3MucG9wKCk7XG4gICAgICAgICAgICB2YXIgc3luYyA9IHRydWU7XG4gICAgICAgICAgICBhcmdzLnB1c2goKC4uLmlubmVyQXJncykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChzeW5jKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldEltbWVkaWF0ZSQxKCgpID0+IGNhbGxiYWNrKC4uLmlubmVyQXJncykpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKC4uLmlubmVyQXJncyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBmbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgICAgIHN5bmMgPSBmYWxzZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGB0cnVlYCBpZiBldmVyeSBlbGVtZW50IGluIGBjb2xsYCBzYXRpc2ZpZXMgYW4gYXN5bmMgdGVzdC4gSWYgYW55XG4gICAgICogaXRlcmF0ZWUgY2FsbCByZXR1cm5zIGBmYWxzZWAsIHRoZSBtYWluIGBjYWxsYmFja2AgaXMgaW1tZWRpYXRlbHkgY2FsbGVkLlxuICAgICAqXG4gICAgICogQG5hbWUgZXZlcnlcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAYWxpYXMgYWxsXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgdHJ1dGggdGVzdCB0byBhcHBseSB0byBlYWNoIGl0ZW1cbiAgICAgKiBpbiB0aGUgY29sbGVjdGlvbiBpbiBwYXJhbGxlbC5cbiAgICAgKiBUaGUgaXRlcmF0ZWUgbXVzdCBjb21wbGV0ZSB3aXRoIGEgYm9vbGVhbiByZXN1bHQgdmFsdWUuXG4gICAgICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFmdGVyIGFsbCB0aGVcbiAgICAgKiBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLiBSZXN1bHQgd2lsbCBiZSBlaXRoZXIgYHRydWVgIG9yIGBmYWxzZWBcbiAgICAgKiBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBvZiB0aGUgYXN5bmMgdGVzdHMuIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHQpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIHByb3ZpZGVkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGRpcjEgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlMS50eHQsIGZpbGUyLnR4dFxuICAgICAqIC8vIGRpcjIgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlMy50eHQsIGZpbGU0LnR4dFxuICAgICAqIC8vIGRpcjMgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlNS50eHRcbiAgICAgKiAvLyBkaXI0IGRvZXMgbm90IGV4aXN0XG4gICAgICpcbiAgICAgKiBjb25zdCBmaWxlTGlzdCA9IFsnZGlyMS9maWxlMS50eHQnLCdkaXIyL2ZpbGUzLnR4dCcsJ2RpcjMvZmlsZTUudHh0J107XG4gICAgICogY29uc3Qgd2l0aE1pc3NpbmdGaWxlTGlzdCA9IFsnZmlsZTEudHh0JywnZmlsZTIudHh0JywnZmlsZTQudHh0J107XG4gICAgICpcbiAgICAgKiAvLyBhc3luY2hyb25vdXMgZnVuY3Rpb24gdGhhdCBjaGVja3MgaWYgYSBmaWxlIGV4aXN0c1xuICAgICAqIGZ1bmN0aW9uIGZpbGVFeGlzdHMoZmlsZSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICBmcy5hY2Nlc3MoZmlsZSwgZnMuY29uc3RhbnRzLkZfT0ssIChlcnIpID0+IHtcbiAgICAgKiAgICAgICAgY2FsbGJhY2sobnVsbCwgIWVycik7XG4gICAgICogICAgfSk7XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gVXNpbmcgY2FsbGJhY2tzXG4gICAgICogYXN5bmMuZXZlcnkoZmlsZUxpc3QsIGZpbGVFeGlzdHMsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIC8vIHRydWVcbiAgICAgKiAgICAgLy8gcmVzdWx0IGlzIHRydWUgc2luY2UgZXZlcnkgZmlsZSBleGlzdHNcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIGFzeW5jLmV2ZXJ5KHdpdGhNaXNzaW5nRmlsZUxpc3QsIGZpbGVFeGlzdHMsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIC8vIGZhbHNlXG4gICAgICogICAgIC8vIHJlc3VsdCBpcyBmYWxzZSBzaW5jZSBOT1QgZXZlcnkgZmlsZSBleGlzdHNcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMuZXZlcnkoZmlsZUxpc3QsIGZpbGVFeGlzdHMpXG4gICAgICogLnRoZW4oIHJlc3VsdCA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIC8vIHRydWVcbiAgICAgKiAgICAgLy8gcmVzdWx0IGlzIHRydWUgc2luY2UgZXZlcnkgZmlsZSBleGlzdHNcbiAgICAgKiB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIGFzeW5jLmV2ZXJ5KHdpdGhNaXNzaW5nRmlsZUxpc3QsIGZpbGVFeGlzdHMpXG4gICAgICogLnRoZW4oIHJlc3VsdCA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIC8vIGZhbHNlXG4gICAgICogICAgIC8vIHJlc3VsdCBpcyBmYWxzZSBzaW5jZSBOT1QgZXZlcnkgZmlsZSBleGlzdHNcbiAgICAgKiB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGFzeW5jL2F3YWl0XG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGFzeW5jLmV2ZXJ5KGZpbGVMaXN0LCBmaWxlRXhpc3RzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgICAgICAvLyB0cnVlXG4gICAgICogICAgICAgICAvLyByZXN1bHQgaXMgdHJ1ZSBzaW5jZSBldmVyeSBmaWxlIGV4aXN0c1xuICAgICAqICAgICB9XG4gICAgICogICAgIGNhdGNoIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiBhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXN5bmMuZXZlcnkod2l0aE1pc3NpbmdGaWxlTGlzdCwgZmlsZUV4aXN0cyk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8gZmFsc2VcbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdCBpcyBmYWxzZSBzaW5jZSBOT1QgZXZlcnkgZmlsZSBleGlzdHNcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gZXZlcnkoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBfY3JlYXRlVGVzdGVyKGJvb2wgPT4gIWJvb2wsIHJlcyA9PiAhcmVzKShlYWNoT2YkMSwgY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cbiAgICB2YXIgZXZlcnkkMSA9IGF3YWl0aWZ5KGV2ZXJ5LCAzKTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgZXZlcnlgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZXZlcnl9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqXG4gICAgICogQG5hbWUgZXZlcnlMaW1pdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmV2ZXJ5XXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZXZlcnl9XG4gICAgICogQGFsaWFzIGFsbExpbWl0XG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbGltaXQgLSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXN5bmMgb3BlcmF0aW9ucyBhdCBhIHRpbWUuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtXG4gICAgICogaW4gdGhlIGNvbGxlY3Rpb24gaW4gcGFyYWxsZWwuXG4gICAgICogVGhlIGl0ZXJhdGVlIG11c3QgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gcmVzdWx0IHZhbHVlLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciBhbGwgdGhlXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZC4gUmVzdWx0IHdpbGwgYmUgZWl0aGVyIGB0cnVlYCBvciBgZmFsc2VgXG4gICAgICogZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgb2YgdGhlIGFzeW5jIHRlc3RzLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwcm92aWRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGV2ZXJ5TGltaXQoY29sbCwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX2NyZWF0ZVRlc3Rlcihib29sID0+ICFib29sLCByZXMgPT4gIXJlcykoZWFjaE9mTGltaXQobGltaXQpLCBjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciBldmVyeUxpbWl0JDEgPSBhd2FpdGlmeShldmVyeUxpbWl0LCA0KTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgZXZlcnlgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZXZlcnl9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGV2ZXJ5U2VyaWVzXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMuZXZlcnlde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5ldmVyeX1cbiAgICAgKiBAYWxpYXMgYWxsU2VyaWVzXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgdHJ1dGggdGVzdCB0byBhcHBseSB0byBlYWNoIGl0ZW1cbiAgICAgKiBpbiB0aGUgY29sbGVjdGlvbiBpbiBzZXJpZXMuXG4gICAgICogVGhlIGl0ZXJhdGVlIG11c3QgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gcmVzdWx0IHZhbHVlLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciBhbGwgdGhlXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZC4gUmVzdWx0IHdpbGwgYmUgZWl0aGVyIGB0cnVlYCBvciBgZmFsc2VgXG4gICAgICogZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgb2YgdGhlIGFzeW5jIHRlc3RzLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwcm92aWRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGV2ZXJ5U2VyaWVzKGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX2NyZWF0ZVRlc3Rlcihib29sID0+ICFib29sLCByZXMgPT4gIXJlcykoZWFjaE9mU2VyaWVzJDEsIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIGV2ZXJ5U2VyaWVzJDEgPSBhd2FpdGlmeShldmVyeVNlcmllcywgMyk7XG5cbiAgICBmdW5jdGlvbiBmaWx0ZXJBcnJheShlYWNoZm4sIGFyciwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciB0cnV0aFZhbHVlcyA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTtcbiAgICAgICAgZWFjaGZuKGFyciwgKHgsIGluZGV4LCBpdGVyQ2IpID0+IHtcbiAgICAgICAgICAgIGl0ZXJhdGVlKHgsIChlcnIsIHYpID0+IHtcbiAgICAgICAgICAgICAgICB0cnV0aFZhbHVlc1tpbmRleF0gPSAhIXY7XG4gICAgICAgICAgICAgICAgaXRlckNiKGVycik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRydXRoVmFsdWVzW2ldKSByZXN1bHRzLnB1c2goYXJyW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3VsdHMpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaWx0ZXJHZW5lcmljKGVhY2hmbiwgY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICAgIGVhY2hmbihjb2xsLCAoeCwgaW5kZXgsIGl0ZXJDYikgPT4ge1xuICAgICAgICAgICAgaXRlcmF0ZWUoeCwgKGVyciwgdikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBpdGVyQ2IoZXJyKTtcbiAgICAgICAgICAgICAgICBpZiAodikge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goe2luZGV4LCB2YWx1ZTogeH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpdGVyQ2IoZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgaWYgKGVycikgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsLCByZXN1bHRzXG4gICAgICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IGEuaW5kZXggLSBiLmluZGV4KVxuICAgICAgICAgICAgICAgIC5tYXAodiA9PiB2LnZhbHVlKSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIF9maWx0ZXIoZWFjaGZuLCBjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGZpbHRlciA9IGlzQXJyYXlMaWtlKGNvbGwpID8gZmlsdGVyQXJyYXkgOiBmaWx0ZXJHZW5lcmljO1xuICAgICAgICByZXR1cm4gZmlsdGVyKGVhY2hmbiwgY29sbCwgd3JhcEFzeW5jKGl0ZXJhdGVlKSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBuZXcgYXJyYXkgb2YgYWxsIHRoZSB2YWx1ZXMgaW4gYGNvbGxgIHdoaWNoIHBhc3MgYW4gYXN5bmMgdHJ1dGhcbiAgICAgKiB0ZXN0LiBUaGlzIG9wZXJhdGlvbiBpcyBwZXJmb3JtZWQgaW4gcGFyYWxsZWwsIGJ1dCB0aGUgcmVzdWx0cyBhcnJheSB3aWxsIGJlXG4gICAgICogaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlIG9yaWdpbmFsLlxuICAgICAqXG4gICAgICogQG5hbWUgZmlsdGVyXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGFsaWFzIHNlbGVjdFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluIGBjb2xsYC5cbiAgICAgKiBUaGUgYGl0ZXJhdGVlYCBpcyBwYXNzZWQgYSBgY2FsbGJhY2soZXJyLCB0cnV0aFZhbHVlKWAsIHdoaWNoIG11c3QgYmUgY2FsbGVkXG4gICAgICogd2l0aCBhIGJvb2xlYW4gYXJndW1lbnQgb25jZSBpdCBoYXMgY29tcGxldGVkLiBJbnZva2VkIHdpdGggKGl0ZW0sIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgYWZ0ZXIgYWxsIHRoZVxuICAgICAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQuIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHRzKS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwcm92aWRlZFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBkaXIxIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTEudHh0LCBmaWxlMi50eHRcbiAgICAgKiAvLyBkaXIyIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTMudHh0LCBmaWxlNC50eHRcbiAgICAgKiAvLyBkaXIzIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTUudHh0XG4gICAgICpcbiAgICAgKiBjb25zdCBmaWxlcyA9IFsnZGlyMS9maWxlMS50eHQnLCdkaXIyL2ZpbGUzLnR4dCcsJ2RpcjMvZmlsZTYudHh0J107XG4gICAgICpcbiAgICAgKiAvLyBhc3luY2hyb25vdXMgZnVuY3Rpb24gdGhhdCBjaGVja3MgaWYgYSBmaWxlIGV4aXN0c1xuICAgICAqIGZ1bmN0aW9uIGZpbGVFeGlzdHMoZmlsZSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICBmcy5hY2Nlc3MoZmlsZSwgZnMuY29uc3RhbnRzLkZfT0ssIChlcnIpID0+IHtcbiAgICAgKiAgICAgICAgY2FsbGJhY2sobnVsbCwgIWVycik7XG4gICAgICogICAgfSk7XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gVXNpbmcgY2FsbGJhY2tzXG4gICAgICogYXN5bmMuZmlsdGVyKGZpbGVzLCBmaWxlRXhpc3RzLCBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAgICAgKiAgICBpZihlcnIpIHtcbiAgICAgKiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICB9IGVsc2Uge1xuICAgICAqICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgICAgLy8gWyAnZGlyMS9maWxlMS50eHQnLCAnZGlyMi9maWxlMy50eHQnIF1cbiAgICAgKiAgICAgICAgLy8gcmVzdWx0cyBpcyBub3cgYW4gYXJyYXkgb2YgdGhlIGV4aXN0aW5nIGZpbGVzXG4gICAgICogICAgfVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgUHJvbWlzZXNcbiAgICAgKiBhc3luYy5maWx0ZXIoZmlsZXMsIGZpbGVFeGlzdHMpXG4gICAgICogLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAvLyBbICdkaXIxL2ZpbGUxLnR4dCcsICdkaXIyL2ZpbGUzLnR4dCcgXVxuICAgICAqICAgICAvLyByZXN1bHRzIGlzIG5vdyBhbiBhcnJheSBvZiB0aGUgZXhpc3RpbmcgZmlsZXNcbiAgICAgKiB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgYXN5bmMvYXdhaXRcbiAgICAgKiBhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0cyA9IGF3YWl0IGFzeW5jLmZpbHRlcihmaWxlcywgZmlsZUV4aXN0cyk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgICAgIC8vIFsgJ2RpcjEvZmlsZTEudHh0JywgJ2RpcjIvZmlsZTMudHh0JyBdXG4gICAgICogICAgICAgICAvLyByZXN1bHRzIGlzIG5vdyBhbiBhcnJheSBvZiB0aGUgZXhpc3RpbmcgZmlsZXNcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gZmlsdGVyIChjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIF9maWx0ZXIoZWFjaE9mJDEsIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIGZpbHRlciQxID0gYXdhaXRpZnkoZmlsdGVyLCAzKTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgZmlsdGVyYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmZpbHRlcn0gYnV0IHJ1bnMgYSBtYXhpbXVtIG9mIGBsaW1pdGAgYXN5bmMgb3BlcmF0aW9ucyBhdCBhXG4gICAgICogdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGZpbHRlckxpbWl0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMuZmlsdGVyXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZmlsdGVyfVxuICAgICAqIEBhbGlhcyBzZWxlY3RMaW1pdFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxpbWl0IC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIC0gQSB0cnV0aCB0ZXN0IHRvIGFwcGx5IHRvIGVhY2ggaXRlbSBpbiBgY29sbGAuXG4gICAgICogVGhlIGBpdGVyYXRlZWAgaXMgcGFzc2VkIGEgYGNhbGxiYWNrKGVyciwgdHJ1dGhWYWx1ZSlgLCB3aGljaCBtdXN0IGJlIGNhbGxlZFxuICAgICAqIHdpdGggYSBib29sZWFuIGFyZ3VtZW50IG9uY2UgaXQgaGFzIGNvbXBsZXRlZC4gSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFmdGVyIGFsbCB0aGVcbiAgICAgKiBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0cykuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgcHJvdmlkZWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmaWx0ZXJMaW1pdCAoY29sbCwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX2ZpbHRlcihlYWNoT2ZMaW1pdChsaW1pdCksIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIGZpbHRlckxpbWl0JDEgPSBhd2FpdGlmeShmaWx0ZXJMaW1pdCwgNCk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGZpbHRlcmBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5maWx0ZXJ9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGZpbHRlclNlcmllc1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmZpbHRlcl17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmZpbHRlcn1cbiAgICAgKiBAYWxpYXMgc2VsZWN0U2VyaWVzXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEEgdHJ1dGggdGVzdCB0byBhcHBseSB0byBlYWNoIGl0ZW0gaW4gYGNvbGxgLlxuICAgICAqIFRoZSBgaXRlcmF0ZWVgIGlzIHBhc3NlZCBhIGBjYWxsYmFjayhlcnIsIHRydXRoVmFsdWUpYCwgd2hpY2ggbXVzdCBiZSBjYWxsZWRcbiAgICAgKiB3aXRoIGEgYm9vbGVhbiBhcmd1bWVudCBvbmNlIGl0IGhhcyBjb21wbGV0ZWQuIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciBhbGwgdGhlXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZC4gSW52b2tlZCB3aXRoIChlcnIsIHJlc3VsdHMpXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgcHJvdmlkZWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmaWx0ZXJTZXJpZXMgKGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX2ZpbHRlcihlYWNoT2ZTZXJpZXMkMSwgY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cbiAgICB2YXIgZmlsdGVyU2VyaWVzJDEgPSBhd2FpdGlmeShmaWx0ZXJTZXJpZXMsIDMpO1xuXG4gICAgLyoqXG4gICAgICogQ2FsbHMgdGhlIGFzeW5jaHJvbm91cyBmdW5jdGlvbiBgZm5gIHdpdGggYSBjYWxsYmFjayBwYXJhbWV0ZXIgdGhhdCBhbGxvd3MgaXRcbiAgICAgKiB0byBjYWxsIGl0c2VsZiBhZ2FpbiwgaW4gc2VyaWVzLCBpbmRlZmluaXRlbHkuXG5cbiAgICAgKiBJZiBhbiBlcnJvciBpcyBwYXNzZWQgdG8gdGhlIGNhbGxiYWNrIHRoZW4gYGVycmJhY2tgIGlzIGNhbGxlZCB3aXRoIHRoZVxuICAgICAqIGVycm9yLCBhbmQgZXhlY3V0aW9uIHN0b3BzLCBvdGhlcndpc2UgaXQgd2lsbCBuZXZlciBiZSBjYWxsZWQuXG4gICAgICpcbiAgICAgKiBAbmFtZSBmb3JldmVyXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gZm4gLSBhbiBhc3luYyBmdW5jdGlvbiB0byBjYWxsIHJlcGVhdGVkbHkuXG4gICAgICogSW52b2tlZCB3aXRoIChuZXh0KS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZXJyYmFja10gLSB3aGVuIGBmbmAgcGFzc2VzIGFuIGVycm9yIHRvIGl0J3MgY2FsbGJhY2ssXG4gICAgICogdGhpcyBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZCwgYW5kIGV4ZWN1dGlvbiBzdG9wcy4gSW52b2tlZCB3aXRoIChlcnIpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UgdGhhdCByZWplY3RzIGlmIGFuIGVycm9yIG9jY3VycyBhbmQgYW4gZXJyYmFja1xuICAgICAqIGlzIG5vdCBwYXNzZWRcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogYXN5bmMuZm9yZXZlcihcbiAgICAgKiAgICAgZnVuY3Rpb24obmV4dCkge1xuICAgICAqICAgICAgICAgLy8gbmV4dCBpcyBzdWl0YWJsZSBmb3IgcGFzc2luZyB0byB0aGluZ3MgdGhhdCBuZWVkIGEgY2FsbGJhY2soZXJyIFssIHdoYXRldmVyXSk7XG4gICAgICogICAgICAgICAvLyBpdCB3aWxsIHJlc3VsdCBpbiB0aGlzIGZ1bmN0aW9uIGJlaW5nIGNhbGxlZCBhZ2Fpbi5cbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgZnVuY3Rpb24oZXJyKSB7XG4gICAgICogICAgICAgICAvLyBpZiBuZXh0IGlzIGNhbGxlZCB3aXRoIGEgdmFsdWUgaW4gaXRzIGZpcnN0IHBhcmFtZXRlciwgaXQgd2lsbCBhcHBlYXJcbiAgICAgKiAgICAgICAgIC8vIGluIGhlcmUgYXMgJ2VycicsIGFuZCBleGVjdXRpb24gd2lsbCBzdG9wLlxuICAgICAqICAgICB9XG4gICAgICogKTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmb3JldmVyKGZuLCBlcnJiYWNrKSB7XG4gICAgICAgIHZhciBkb25lID0gb25seU9uY2UoZXJyYmFjayk7XG4gICAgICAgIHZhciB0YXNrID0gd3JhcEFzeW5jKGVuc3VyZUFzeW5jKGZuKSk7XG5cbiAgICAgICAgZnVuY3Rpb24gbmV4dChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBkb25lKGVycik7XG4gICAgICAgICAgICBpZiAoZXJyID09PSBmYWxzZSkgcmV0dXJuO1xuICAgICAgICAgICAgdGFzayhuZXh0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgIH1cbiAgICB2YXIgZm9yZXZlciQxID0gYXdhaXRpZnkoZm9yZXZlciwgMik7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGdyb3VwQnlgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZ3JvdXBCeX0gYnV0IHJ1bnMgYSBtYXhpbXVtIG9mIGBsaW1pdGAgYXN5bmMgb3BlcmF0aW9ucyBhdCBhIHRpbWUuXG4gICAgICpcbiAgICAgKiBAbmFtZSBncm91cEJ5TGltaXRcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy5ncm91cEJ5XXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZ3JvdXBCeX1cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsaW1pdCAtIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhc3luYyBvcGVyYXRpb25zIGF0IGEgdGltZS5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gICAgICogYGNvbGxgLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCBhIGBrZXlgIHRvIGdyb3VwIHRoZSB2YWx1ZSB1bmRlci5cbiAgICAgKiBJbnZva2VkIHdpdGggKHZhbHVlLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIHdoZW4gYWxsIGBpdGVyYXRlZWBcbiAgICAgKiBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZCwgb3IgYW4gZXJyb3Igb2NjdXJzLiBSZXN1bHQgaXMgYW4gYE9iamVjdGAgd2hvc2VzXG4gICAgICogcHJvcGVydGllcyBhcmUgYXJyYXlzIG9mIHZhbHVlcyB3aGljaCByZXR1cm5lZCB0aGUgY29ycmVzcG9uZGluZyBrZXkuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ3JvdXBCeUxpbWl0KGNvbGwsIGxpbWl0LCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIF9pdGVyYXRlZSA9IHdyYXBBc3luYyhpdGVyYXRlZSk7XG4gICAgICAgIHJldHVybiBtYXBMaW1pdCQxKGNvbGwsIGxpbWl0LCAodmFsLCBpdGVyQ2IpID0+IHtcbiAgICAgICAgICAgIF9pdGVyYXRlZSh2YWwsIChlcnIsIGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBpdGVyQ2IoZXJyKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlckNiKGVyciwge2tleSwgdmFsfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSwgKGVyciwgbWFwUmVzdWx0cykgPT4ge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICAgICAgLy8gZnJvbSBNRE4sIGhhbmRsZSBvYmplY3QgaGF2aW5nIGFuIGBoYXNPd25Qcm9wZXJ0eWAgcHJvcFxuICAgICAgICAgICAgdmFyIHtoYXNPd25Qcm9wZXJ0eX0gPSBPYmplY3QucHJvdG90eXBlO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1hcFJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAobWFwUmVzdWx0c1tpXSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIge2tleX0gPSBtYXBSZXN1bHRzW2ldO1xuICAgICAgICAgICAgICAgICAgICB2YXIge3ZhbH0gPSBtYXBSZXN1bHRzW2ldO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHJlc3VsdCwga2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0ucHVzaCh2YWwpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBbdmFsXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVyciwgcmVzdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGdyb3VwQnlMaW1pdCQxID0gYXdhaXRpZnkoZ3JvdXBCeUxpbWl0LCA0KTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBuZXcgb2JqZWN0LCB3aGVyZSBlYWNoIHZhbHVlIGNvcnJlc3BvbmRzIHRvIGFuIGFycmF5IG9mIGl0ZW1zLCBmcm9tXG4gICAgICogYGNvbGxgLCB0aGF0IHJldHVybmVkIHRoZSBjb3JyZXNwb25kaW5nIGtleS4gVGhhdCBpcywgdGhlIGtleXMgb2YgdGhlIG9iamVjdFxuICAgICAqIGNvcnJlc3BvbmQgdG8gdGhlIHZhbHVlcyBwYXNzZWQgdG8gdGhlIGBpdGVyYXRlZWAgY2FsbGJhY2suXG4gICAgICpcbiAgICAgKiBOb3RlOiBTaW5jZSB0aGlzIGZ1bmN0aW9uIGFwcGxpZXMgdGhlIGBpdGVyYXRlZWAgdG8gZWFjaCBpdGVtIGluIHBhcmFsbGVsLFxuICAgICAqIHRoZXJlIGlzIG5vIGd1YXJhbnRlZSB0aGF0IHRoZSBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyB3aWxsIGNvbXBsZXRlIGluIG9yZGVyLlxuICAgICAqIEhvd2V2ZXIsIHRoZSB2YWx1ZXMgZm9yIGVhY2gga2V5IGluIHRoZSBgcmVzdWx0YCB3aWxsIGJlIGluIHRoZSBzYW1lIG9yZGVyIGFzXG4gICAgICogdGhlIG9yaWdpbmFsIGBjb2xsYC4gRm9yIE9iamVjdHMsIHRoZSB2YWx1ZXMgd2lsbCByb3VnaGx5IGJlIGluIHRoZSBvcmRlciBvZlxuICAgICAqIHRoZSBvcmlnaW5hbCBPYmplY3RzJyBrZXlzIChidXQgdGhpcyBjYW4gdmFyeSBhY3Jvc3MgSmF2YVNjcmlwdCBlbmdpbmVzKS5cbiAgICAgKlxuICAgICAqIEBuYW1lIGdyb3VwQnlcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBbiBhc3luYyBmdW5jdGlvbiB0byBhcHBseSB0byBlYWNoIGl0ZW0gaW5cbiAgICAgKiBgY29sbGAuXG4gICAgICogVGhlIGl0ZXJhdGVlIHNob3VsZCBjb21wbGV0ZSB3aXRoIGEgYGtleWAgdG8gZ3JvdXAgdGhlIHZhbHVlIHVuZGVyLlxuICAgICAqIEludm9rZWQgd2l0aCAodmFsdWUsIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGwgYGl0ZXJhdGVlYFxuICAgICAqIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIFJlc3VsdCBpcyBhbiBgT2JqZWN0YCB3aG9zZXNcbiAgICAgKiBwcm9wZXJ0aWVzIGFyZSBhcnJheXMgb2YgdmFsdWVzIHdoaWNoIHJldHVybmVkIHRoZSBjb3JyZXNwb25kaW5nIGtleS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBpcyBwYXNzZWRcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gZGlyMSBpcyBhIGRpcmVjdG9yeSB0aGF0IGNvbnRhaW5zIGZpbGUxLnR4dCwgZmlsZTIudHh0XG4gICAgICogLy8gZGlyMiBpcyBhIGRpcmVjdG9yeSB0aGF0IGNvbnRhaW5zIGZpbGUzLnR4dCwgZmlsZTQudHh0XG4gICAgICogLy8gZGlyMyBpcyBhIGRpcmVjdG9yeSB0aGF0IGNvbnRhaW5zIGZpbGU1LnR4dFxuICAgICAqIC8vIGRpcjQgZG9lcyBub3QgZXhpc3RcbiAgICAgKlxuICAgICAqIGNvbnN0IGZpbGVzID0gWydkaXIxL2ZpbGUxLnR4dCcsJ2RpcjInLCdkaXI0J11cbiAgICAgKlxuICAgICAqIC8vIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IGRldGVjdHMgZmlsZSB0eXBlIGFzIG5vbmUsIGZpbGUsIG9yIGRpcmVjdG9yeVxuICAgICAqIGZ1bmN0aW9uIGRldGVjdEZpbGUoZmlsZSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgZnMuc3RhdChmaWxlLCBmdW5jdGlvbihlcnIsIHN0YXQpIHtcbiAgICAgKiAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgJ25vbmUnKTtcbiAgICAgKiAgICAgICAgIH1cbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsIHN0YXQuaXNEaXJlY3RvcnkoKSA/ICdkaXJlY3RvcnknIDogJ2ZpbGUnKTtcbiAgICAgKiAgICAgfSk7XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy9Vc2luZyBjYWxsYmFja3NcbiAgICAgKiBhc3luYy5ncm91cEJ5KGZpbGVzLCBkZXRlY3RGaWxlLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAqICAgICBpZihlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH0gZWxzZSB7XG4gICAgICpcdCAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8ge1xuICAgICAqICAgICAgICAgLy8gICAgIGZpbGU6IFsgJ2RpcjEvZmlsZTEudHh0JyBdLFxuICAgICAqICAgICAgICAgLy8gICAgIG5vbmU6IFsgJ2RpcjQnIF0sXG4gICAgICogICAgICAgICAvLyAgICAgZGlyZWN0b3J5OiBbICdkaXIyJ11cbiAgICAgKiAgICAgICAgIC8vIH1cbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdCBpcyBvYmplY3QgY29udGFpbmluZyB0aGUgZmlsZXMgZ3JvdXBlZCBieSB0eXBlXG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMuZ3JvdXBCeShmaWxlcywgZGV0ZWN0RmlsZSlcbiAgICAgKiAudGhlbiggcmVzdWx0ID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiAgICAgLy8ge1xuICAgICAqICAgICAvLyAgICAgZmlsZTogWyAnZGlyMS9maWxlMS50eHQnIF0sXG4gICAgICogICAgIC8vICAgICBub25lOiBbICdkaXI0JyBdLFxuICAgICAqICAgICAvLyAgICAgZGlyZWN0b3J5OiBbICdkaXIyJ11cbiAgICAgKiAgICAgLy8gfVxuICAgICAqICAgICAvLyByZXN1bHQgaXMgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGZpbGVzIGdyb3VwZWQgYnkgdHlwZVxuICAgICAqIH0pLmNhdGNoKCBlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgYXN5bmMvYXdhaXRcbiAgICAgKiBhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXN5bmMuZ3JvdXBCeShmaWxlcywgZGV0ZWN0RmlsZSk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8ge1xuICAgICAqICAgICAgICAgLy8gICAgIGZpbGU6IFsgJ2RpcjEvZmlsZTEudHh0JyBdLFxuICAgICAqICAgICAgICAgLy8gICAgIG5vbmU6IFsgJ2RpcjQnIF0sXG4gICAgICogICAgICAgICAvLyAgICAgZGlyZWN0b3J5OiBbICdkaXIyJ11cbiAgICAgKiAgICAgICAgIC8vIH1cbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdCBpcyBvYmplY3QgY29udGFpbmluZyB0aGUgZmlsZXMgZ3JvdXBlZCBieSB0eXBlXG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdyb3VwQnkgKGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gZ3JvdXBCeUxpbWl0JDEoY29sbCwgSW5maW5pdHksIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYGdyb3VwQnlgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZ3JvdXBCeX0gYnV0IHJ1bnMgb25seSBhIHNpbmdsZSBhc3luYyBvcGVyYXRpb24gYXQgYSB0aW1lLlxuICAgICAqXG4gICAgICogQG5hbWUgZ3JvdXBCeVNlcmllc1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmdyb3VwQnlde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5ncm91cEJ5fVxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIGZ1bmN0aW9uIHRvIGFwcGx5IHRvIGVhY2ggaXRlbSBpblxuICAgICAqIGBjb2xsYC5cbiAgICAgKiBUaGUgaXRlcmF0ZWUgc2hvdWxkIGNvbXBsZXRlIHdpdGggYSBga2V5YCB0byBncm91cCB0aGUgdmFsdWUgdW5kZXIuXG4gICAgICogSW52b2tlZCB3aXRoICh2YWx1ZSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIGFsbCBgaXRlcmF0ZWVgXG4gICAgICogZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQsIG9yIGFuIGVycm9yIG9jY3Vycy4gUmVzdWx0IGlzIGFuIGBPYmplY3RgIHdob3NlXG4gICAgICogcHJvcGVydGllcyBhcmUgYXJyYXlzIG9mIHZhbHVlcyB3aGljaCByZXR1cm5lZCB0aGUgY29ycmVzcG9uZGluZyBrZXkuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ3JvdXBCeVNlcmllcyAoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBncm91cEJ5TGltaXQkMShjb2xsLCAxLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9ncyB0aGUgcmVzdWx0IG9mIGFuIGBhc3luY2AgZnVuY3Rpb24gdG8gdGhlIGBjb25zb2xlYC4gT25seSB3b3JrcyBpblxuICAgICAqIE5vZGUuanMgb3IgaW4gYnJvd3NlcnMgdGhhdCBzdXBwb3J0IGBjb25zb2xlLmxvZ2AgYW5kIGBjb25zb2xlLmVycm9yYCAoc3VjaFxuICAgICAqIGFzIEZGIGFuZCBDaHJvbWUpLiBJZiBtdWx0aXBsZSBhcmd1bWVudHMgYXJlIHJldHVybmVkIGZyb20gdGhlIGFzeW5jXG4gICAgICogZnVuY3Rpb24sIGBjb25zb2xlLmxvZ2AgaXMgY2FsbGVkIG9uIGVhY2ggYXJndW1lbnQgaW4gb3JkZXIuXG4gICAgICpcbiAgICAgKiBAbmFtZSBsb2dcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpVdGlsc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgVXRpbFxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gZnVuY3Rpb24gLSBUaGUgZnVuY3Rpb24geW91IHdhbnQgdG8gZXZlbnR1YWxseSBhcHBseVxuICAgICAqIGFsbCBhcmd1bWVudHMgdG8uXG4gICAgICogQHBhcmFtIHsuLi4qfSBhcmd1bWVudHMuLi4gLSBBbnkgbnVtYmVyIG9mIGFyZ3VtZW50cyB0byBhcHBseSB0byB0aGUgZnVuY3Rpb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGluIGEgbW9kdWxlXG4gICAgICogdmFyIGhlbGxvID0gZnVuY3Rpb24obmFtZSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsICdoZWxsbyAnICsgbmFtZSk7XG4gICAgICogICAgIH0sIDEwMDApO1xuICAgICAqIH07XG4gICAgICpcbiAgICAgKiAvLyBpbiB0aGUgbm9kZSByZXBsXG4gICAgICogbm9kZT4gYXN5bmMubG9nKGhlbGxvLCAnd29ybGQnKTtcbiAgICAgKiAnaGVsbG8gd29ybGQnXG4gICAgICovXG4gICAgdmFyIGxvZyA9IGNvbnNvbGVGdW5jKCdsb2cnKTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgbWFwVmFsdWVzYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLm1hcFZhbHVlc30gYnV0IHJ1bnMgYSBtYXhpbXVtIG9mIGBsaW1pdGAgYXN5bmMgb3BlcmF0aW9ucyBhdCBhXG4gICAgICogdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIG1hcFZhbHVlc0xpbWl0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMubWFwVmFsdWVzXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMubWFwVmFsdWVzfVxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iaiAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxpbWl0IC0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBIGZ1bmN0aW9uIHRvIGFwcGx5IHRvIGVhY2ggdmFsdWUgYW5kIGtleVxuICAgICAqIGluIGBjb2xsYC5cbiAgICAgKiBUaGUgaXRlcmF0ZWUgc2hvdWxkIGNvbXBsZXRlIHdpdGggdGhlIHRyYW5zZm9ybWVkIHZhbHVlIGFzIGl0cyByZXN1bHQuXG4gICAgICogSW52b2tlZCB3aXRoICh2YWx1ZSwga2V5LCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIHdoZW4gYWxsIGBpdGVyYXRlZWBcbiAgICAgKiBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZCwgb3IgYW4gZXJyb3Igb2NjdXJzLiBgcmVzdWx0YCBpcyBhIG5ldyBvYmplY3QgY29uc2lzdGluZ1xuICAgICAqIG9mIGVhY2gga2V5IGZyb20gYG9iamAsIHdpdGggZWFjaCB0cmFuc2Zvcm1lZCB2YWx1ZSBvbiB0aGUgcmlnaHQtaGFuZCBzaWRlLlxuICAgICAqIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHQpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG1hcFZhbHVlc0xpbWl0KG9iaiwgbGltaXQsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2spO1xuICAgICAgICB2YXIgbmV3T2JqID0ge307XG4gICAgICAgIHZhciBfaXRlcmF0ZWUgPSB3cmFwQXN5bmMoaXRlcmF0ZWUpO1xuICAgICAgICByZXR1cm4gZWFjaE9mTGltaXQobGltaXQpKG9iaiwgKHZhbCwga2V5LCBuZXh0KSA9PiB7XG4gICAgICAgICAgICBfaXRlcmF0ZWUodmFsLCBrZXksIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgICAgICAgICAgbmV3T2JqW2tleV0gPSByZXN1bHQ7XG4gICAgICAgICAgICAgICAgbmV4dChlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGVyciA9PiBjYWxsYmFjayhlcnIsIG5ld09iaikpO1xuICAgIH1cblxuICAgIHZhciBtYXBWYWx1ZXNMaW1pdCQxID0gYXdhaXRpZnkobWFwVmFsdWVzTGltaXQsIDQpO1xuXG4gICAgLyoqXG4gICAgICogQSByZWxhdGl2ZSBvZiBbYG1hcGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5tYXB9LCBkZXNpZ25lZCBmb3IgdXNlIHdpdGggb2JqZWN0cy5cbiAgICAgKlxuICAgICAqIFByb2R1Y2VzIGEgbmV3IE9iamVjdCBieSBtYXBwaW5nIGVhY2ggdmFsdWUgb2YgYG9iamAgdGhyb3VnaCB0aGUgYGl0ZXJhdGVlYFxuICAgICAqIGZ1bmN0aW9uLiBUaGUgYGl0ZXJhdGVlYCBpcyBjYWxsZWQgZWFjaCBgdmFsdWVgIGFuZCBga2V5YCBmcm9tIGBvYmpgIGFuZCBhXG4gICAgICogY2FsbGJhY2sgZm9yIHdoZW4gaXQgaGFzIGZpbmlzaGVkIHByb2Nlc3NpbmcuIEVhY2ggb2YgdGhlc2UgY2FsbGJhY2tzIHRha2VzXG4gICAgICogdHdvIGFyZ3VtZW50czogYW4gYGVycm9yYCwgYW5kIHRoZSB0cmFuc2Zvcm1lZCBpdGVtIGZyb20gYG9iamAuIElmIGBpdGVyYXRlZWBcbiAgICAgKiBwYXNzZXMgYW4gZXJyb3IgdG8gaXRzIGNhbGxiYWNrLCB0aGUgbWFpbiBgY2FsbGJhY2tgIChmb3IgdGhlIGBtYXBWYWx1ZXNgXG4gICAgICogZnVuY3Rpb24pIGlzIGltbWVkaWF0ZWx5IGNhbGxlZCB3aXRoIHRoZSBlcnJvci5cbiAgICAgKlxuICAgICAqIE5vdGUsIHRoZSBvcmRlciBvZiB0aGUga2V5cyBpbiB0aGUgcmVzdWx0IGlzIG5vdCBndWFyYW50ZWVkLiAgVGhlIGtleXMgd2lsbFxuICAgICAqIGJlIHJvdWdobHkgaW4gdGhlIG9yZGVyIHRoZXkgY29tcGxldGUsIChidXQgdGhpcyBpcyB2ZXJ5IGVuZ2luZS1zcGVjaWZpYylcbiAgICAgKlxuICAgICAqIEBuYW1lIG1hcFZhbHVlc1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iaiAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEEgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCB2YWx1ZSBhbmQga2V5XG4gICAgICogaW4gYGNvbGxgLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCB0aGUgdHJhbnNmb3JtZWQgdmFsdWUgYXMgaXRzIHJlc3VsdC5cbiAgICAgKiBJbnZva2VkIHdpdGggKHZhbHVlLCBrZXksIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGwgYGl0ZXJhdGVlYFxuICAgICAqIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIGByZXN1bHRgIGlzIGEgbmV3IG9iamVjdCBjb25zaXN0aW5nXG4gICAgICogb2YgZWFjaCBrZXkgZnJvbSBgb2JqYCwgd2l0aCBlYWNoIHRyYW5zZm9ybWVkIHZhbHVlIG9uIHRoZSByaWdodC1oYW5kIHNpZGUuXG4gICAgICogSW52b2tlZCB3aXRoIChlcnIsIHJlc3VsdCkuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGZpbGUxLnR4dCBpcyBhIGZpbGUgdGhhdCBpcyAxMDAwIGJ5dGVzIGluIHNpemVcbiAgICAgKiAvLyBmaWxlMi50eHQgaXMgYSBmaWxlIHRoYXQgaXMgMjAwMCBieXRlcyBpbiBzaXplXG4gICAgICogLy8gZmlsZTMudHh0IGlzIGEgZmlsZSB0aGF0IGlzIDMwMDAgYnl0ZXMgaW4gc2l6ZVxuICAgICAqIC8vIGZpbGU0LnR4dCBkb2VzIG5vdCBleGlzdFxuICAgICAqXG4gICAgICogY29uc3QgZmlsZU1hcCA9IHtcbiAgICAgKiAgICAgZjE6ICdmaWxlMS50eHQnLFxuICAgICAqICAgICBmMjogJ2ZpbGUyLnR4dCcsXG4gICAgICogICAgIGYzOiAnZmlsZTMudHh0J1xuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBjb25zdCB3aXRoTWlzc2luZ0ZpbGVNYXAgPSB7XG4gICAgICogICAgIGYxOiAnZmlsZTEudHh0JyxcbiAgICAgKiAgICAgZjI6ICdmaWxlMi50eHQnLFxuICAgICAqICAgICBmMzogJ2ZpbGU0LnR4dCdcbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogLy8gYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgZmlsZSBzaXplIGluIGJ5dGVzXG4gICAgICogZnVuY3Rpb24gZ2V0RmlsZVNpemVJbkJ5dGVzKGZpbGUsIGtleSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgZnMuc3RhdChmaWxlLCBmdW5jdGlvbihlcnIsIHN0YXQpIHtcbiAgICAgKiAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICAgKiAgICAgICAgIH1cbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKG51bGwsIHN0YXQuc2l6ZSk7XG4gICAgICogICAgIH0pO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGNhbGxiYWNrc1xuICAgICAqIGFzeW5jLm1hcFZhbHVlcyhmaWxlTWFwLCBnZXRGaWxlU2l6ZUluQnl0ZXMsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIGlmIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH0gZWxzZSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8gcmVzdWx0IGlzIG5vdyBhIG1hcCBvZiBmaWxlIHNpemUgaW4gYnl0ZXMgZm9yIGVhY2ggZmlsZSwgZS5nLlxuICAgICAqICAgICAgICAgLy8ge1xuICAgICAqICAgICAgICAgLy8gICAgIGYxOiAxMDAwLFxuICAgICAqICAgICAgICAgLy8gICAgIGYyOiAyMDAwLFxuICAgICAqICAgICAgICAgLy8gICAgIGYzOiAzMDAwXG4gICAgICogICAgICAgICAvLyB9XG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIEVycm9yIGhhbmRsaW5nXG4gICAgICogYXN5bmMubWFwVmFsdWVzKHdpdGhNaXNzaW5nRmlsZU1hcCwgZ2V0RmlsZVNpemVJbkJ5dGVzLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAqICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICAgICAgLy8gWyBFcnJvcjogRU5PRU5UOiBubyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5IF1cbiAgICAgKiAgICAgfSBlbHNlIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMubWFwVmFsdWVzKGZpbGVNYXAsIGdldEZpbGVTaXplSW5CeXRlcylcbiAgICAgKiAudGhlbiggcmVzdWx0ID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiAgICAgLy8gcmVzdWx0IGlzIG5vdyBhIG1hcCBvZiBmaWxlIHNpemUgaW4gYnl0ZXMgZm9yIGVhY2ggZmlsZSwgZS5nLlxuICAgICAqICAgICAvLyB7XG4gICAgICogICAgIC8vICAgICBmMTogMTAwMCxcbiAgICAgKiAgICAgLy8gICAgIGYyOiAyMDAwLFxuICAgICAqICAgICAvLyAgICAgZjM6IDMwMDBcbiAgICAgKiAgICAgLy8gfVxuICAgICAqIH0pLmNhdGNoIChlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gRXJyb3IgSGFuZGxpbmdcbiAgICAgKiBhc3luYy5tYXBWYWx1ZXMod2l0aE1pc3NpbmdGaWxlTWFwLCBnZXRGaWxlU2l6ZUluQnl0ZXMpXG4gICAgICogLnRoZW4oIHJlc3VsdCA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogfSkuY2F0Y2ggKGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIC8vIFsgRXJyb3I6IEVOT0VOVDogbm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeSBdXG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBhc3luYy9hd2FpdFxuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhc3luYy5tYXBWYWx1ZXMoZmlsZU1hcCwgZ2V0RmlsZVNpemVJbkJ5dGVzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgICAgICAvLyByZXN1bHQgaXMgbm93IGEgbWFwIG9mIGZpbGUgc2l6ZSBpbiBieXRlcyBmb3IgZWFjaCBmaWxlLCBlLmcuXG4gICAgICogICAgICAgICAvLyB7XG4gICAgICogICAgICAgICAvLyAgICAgZjE6IDEwMDAsXG4gICAgICogICAgICAgICAvLyAgICAgZjI6IDIwMDAsXG4gICAgICogICAgICAgICAvLyAgICAgZjM6IDMwMDBcbiAgICAgKiAgICAgICAgIC8vIH1cbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gRXJyb3IgSGFuZGxpbmdcbiAgICAgKiBhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXN5bmMubWFwVmFsdWVzKHdpdGhNaXNzaW5nRmlsZU1hcCwgZ2V0RmlsZVNpemVJbkJ5dGVzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgICAgIC8vIFsgRXJyb3I6IEVOT0VOVDogbm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeSBdXG4gICAgICogICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBtYXBWYWx1ZXMob2JqLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIG1hcFZhbHVlc0xpbWl0JDEob2JqLCBJbmZpbml0eSwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgbWFwVmFsdWVzYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLm1hcFZhbHVlc30gYnV0IHJ1bnMgb25seSBhIHNpbmdsZSBhc3luYyBvcGVyYXRpb24gYXQgYSB0aW1lLlxuICAgICAqXG4gICAgICogQG5hbWUgbWFwVmFsdWVzU2VyaWVzXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMubWFwVmFsdWVzXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMubWFwVmFsdWVzfVxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iaiAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEEgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCB2YWx1ZSBhbmQga2V5XG4gICAgICogaW4gYGNvbGxgLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCB0aGUgdHJhbnNmb3JtZWQgdmFsdWUgYXMgaXRzIHJlc3VsdC5cbiAgICAgKiBJbnZva2VkIHdpdGggKHZhbHVlLCBrZXksIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgd2hlbiBhbGwgYGl0ZXJhdGVlYFxuICAgICAqIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIGByZXN1bHRgIGlzIGEgbmV3IG9iamVjdCBjb25zaXN0aW5nXG4gICAgICogb2YgZWFjaCBrZXkgZnJvbSBgb2JqYCwgd2l0aCBlYWNoIHRyYW5zZm9ybWVkIHZhbHVlIG9uIHRoZSByaWdodC1oYW5kIHNpZGUuXG4gICAgICogSW52b2tlZCB3aXRoIChlcnIsIHJlc3VsdCkuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICovXG4gICAgZnVuY3Rpb24gbWFwVmFsdWVzU2VyaWVzKG9iaiwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBtYXBWYWx1ZXNMaW1pdCQxKG9iaiwgMSwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENhY2hlcyB0aGUgcmVzdWx0cyBvZiBhbiBhc3luYyBmdW5jdGlvbi4gV2hlbiBjcmVhdGluZyBhIGhhc2ggdG8gc3RvcmVcbiAgICAgKiBmdW5jdGlvbiByZXN1bHRzIGFnYWluc3QsIHRoZSBjYWxsYmFjayBpcyBvbWl0dGVkIGZyb20gdGhlIGhhc2ggYW5kIGFuXG4gICAgICogb3B0aW9uYWwgaGFzaCBmdW5jdGlvbiBjYW4gYmUgdXNlZC5cbiAgICAgKlxuICAgICAqICoqTm90ZTogaWYgdGhlIGFzeW5jIGZ1bmN0aW9uIGVycnMsIHRoZSByZXN1bHQgd2lsbCBub3QgYmUgY2FjaGVkIGFuZFxuICAgICAqIHN1YnNlcXVlbnQgY2FsbHMgd2lsbCBjYWxsIHRoZSB3cmFwcGVkIGZ1bmN0aW9uLioqXG4gICAgICpcbiAgICAgKiBJZiBubyBoYXNoIGZ1bmN0aW9uIGlzIHNwZWNpZmllZCwgdGhlIGZpcnN0IGFyZ3VtZW50IGlzIHVzZWQgYXMgYSBoYXNoIGtleSxcbiAgICAgKiB3aGljaCBtYXkgd29yayByZWFzb25hYmx5IGlmIGl0IGlzIGEgc3RyaW5nIG9yIGEgZGF0YSB0eXBlIHRoYXQgY29udmVydHMgdG8gYVxuICAgICAqIGRpc3RpbmN0IHN0cmluZy4gTm90ZSB0aGF0IG9iamVjdHMgYW5kIGFycmF5cyB3aWxsIG5vdCBiZWhhdmUgcmVhc29uYWJseS5cbiAgICAgKiBOZWl0aGVyIHdpbGwgY2FzZXMgd2hlcmUgdGhlIG90aGVyIGFyZ3VtZW50cyBhcmUgc2lnbmlmaWNhbnQuIEluIHN1Y2ggY2FzZXMsXG4gICAgICogc3BlY2lmeSB5b3VyIG93biBoYXNoIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogVGhlIGNhY2hlIG9mIHJlc3VsdHMgaXMgZXhwb3NlZCBhcyB0aGUgYG1lbW9gIHByb3BlcnR5IG9mIHRoZSBmdW5jdGlvblxuICAgICAqIHJldHVybmVkIGJ5IGBtZW1vaXplYC5cbiAgICAgKlxuICAgICAqIEBuYW1lIG1lbW9pemVcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpVdGlsc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgVXRpbFxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gZm4gLSBUaGUgYXN5bmMgZnVuY3Rpb24gdG8gcHJveHkgYW5kIGNhY2hlIHJlc3VsdHMgZnJvbS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYXNoZXIgLSBBbiBvcHRpb25hbCBmdW5jdGlvbiBmb3IgZ2VuZXJhdGluZyBhIGN1c3RvbSBoYXNoXG4gICAgICogZm9yIHN0b3JpbmcgcmVzdWx0cy4gSXQgaGFzIGFsbCB0aGUgYXJndW1lbnRzIGFwcGxpZWQgdG8gaXQgYXBhcnQgZnJvbSB0aGVcbiAgICAgKiBjYWxsYmFjaywgYW5kIG11c3QgYmUgc3luY2hyb25vdXMuXG4gICAgICogQHJldHVybnMge0FzeW5jRnVuY3Rpb259IGEgbWVtb2l6ZWQgdmVyc2lvbiBvZiBgZm5gXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBzbG93X2ZuID0gZnVuY3Rpb24obmFtZSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgLy8gZG8gc29tZXRoaW5nXG4gICAgICogICAgIGNhbGxiYWNrKG51bGwsIHJlc3VsdCk7XG4gICAgICogfTtcbiAgICAgKiB2YXIgZm4gPSBhc3luYy5tZW1vaXplKHNsb3dfZm4pO1xuICAgICAqXG4gICAgICogLy8gZm4gY2FuIG5vdyBiZSB1c2VkIGFzIGlmIGl0IHdlcmUgc2xvd19mblxuICAgICAqIGZuKCdzb21lIG5hbWUnLCBmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgLy8gY2FsbGJhY2tcbiAgICAgKiB9KTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBtZW1vaXplKGZuLCBoYXNoZXIgPSB2ID0+IHYpIHtcbiAgICAgICAgdmFyIG1lbW8gPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICB2YXIgcXVldWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgdmFyIF9mbiA9IHdyYXBBc3luYyhmbik7XG4gICAgICAgIHZhciBtZW1vaXplZCA9IGluaXRpYWxQYXJhbXMoKGFyZ3MsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICB2YXIga2V5ID0gaGFzaGVyKC4uLmFyZ3MpO1xuICAgICAgICAgICAgaWYgKGtleSBpbiBtZW1vKSB7XG4gICAgICAgICAgICAgICAgc2V0SW1tZWRpYXRlJDEoKCkgPT4gY2FsbGJhY2sobnVsbCwgLi4ubWVtb1trZXldKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGtleSBpbiBxdWV1ZXMpIHtcbiAgICAgICAgICAgICAgICBxdWV1ZXNba2V5XS5wdXNoKGNhbGxiYWNrKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcXVldWVzW2tleV0gPSBbY2FsbGJhY2tdO1xuICAgICAgICAgICAgICAgIF9mbiguLi5hcmdzLCAoZXJyLCAuLi5yZXN1bHRBcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vICMxNDY1IGRvbid0IG1lbW9pemUgaWYgYW4gZXJyb3Igb2NjdXJyZWRcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lbW9ba2V5XSA9IHJlc3VsdEFyZ3M7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIHEgPSBxdWV1ZXNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHF1ZXVlc1trZXldO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBxW2ldKGVyciwgLi4ucmVzdWx0QXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIG1lbW9pemVkLm1lbW8gPSBtZW1vO1xuICAgICAgICBtZW1vaXplZC51bm1lbW9pemVkID0gZm47XG4gICAgICAgIHJldHVybiBtZW1vaXplZDtcbiAgICB9XG5cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZmlsZSAqL1xuXG4gICAgLyoqXG4gICAgICogQ2FsbHMgYGNhbGxiYWNrYCBvbiBhIGxhdGVyIGxvb3AgYXJvdW5kIHRoZSBldmVudCBsb29wLiBJbiBOb2RlLmpzIHRoaXMganVzdFxuICAgICAqIGNhbGxzIGBwcm9jZXNzLm5leHRUaWNrYC4gIEluIHRoZSBicm93c2VyIGl0IHdpbGwgdXNlIGBzZXRJbW1lZGlhdGVgIGlmXG4gICAgICogYXZhaWxhYmxlLCBvdGhlcndpc2UgYHNldFRpbWVvdXQoY2FsbGJhY2ssIDApYCwgd2hpY2ggbWVhbnMgb3RoZXIgaGlnaGVyXG4gICAgICogcHJpb3JpdHkgZXZlbnRzIG1heSBwcmVjZWRlIHRoZSBleGVjdXRpb24gb2YgYGNhbGxiYWNrYC5cbiAgICAgKlxuICAgICAqIFRoaXMgaXMgdXNlZCBpbnRlcm5hbGx5IGZvciBicm93c2VyLWNvbXBhdGliaWxpdHkgcHVycG9zZXMuXG4gICAgICpcbiAgICAgKiBAbmFtZSBuZXh0VGlja1xuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOlV0aWxzXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLnNldEltbWVkaWF0ZV17QGxpbmsgbW9kdWxlOlV0aWxzLnNldEltbWVkaWF0ZX1cbiAgICAgKiBAY2F0ZWdvcnkgVXRpbFxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIC0gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgb24gYSBsYXRlciBsb29wIGFyb3VuZFxuICAgICAqIHRoZSBldmVudCBsb29wLiBJbnZva2VkIHdpdGggKGFyZ3MuLi4pLlxuICAgICAqIEBwYXJhbSB7Li4uKn0gYXJncy4uLiAtIGFueSBudW1iZXIgb2YgYWRkaXRpb25hbCBhcmd1bWVudHMgdG8gcGFzcyB0byB0aGVcbiAgICAgKiBjYWxsYmFjayBvbiB0aGUgbmV4dCB0aWNrLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgY2FsbF9vcmRlciA9IFtdO1xuICAgICAqIGFzeW5jLm5leHRUaWNrKGZ1bmN0aW9uKCkge1xuICAgICAqICAgICBjYWxsX29yZGVyLnB1c2goJ3R3bycpO1xuICAgICAqICAgICAvLyBjYWxsX29yZGVyIG5vdyBlcXVhbHMgWydvbmUnLCd0d28nXVxuICAgICAqIH0pO1xuICAgICAqIGNhbGxfb3JkZXIucHVzaCgnb25lJyk7XG4gICAgICpcbiAgICAgKiBhc3luYy5zZXRJbW1lZGlhdGUoZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgKiAgICAgLy8gYSwgYiwgYW5kIGMgZXF1YWwgMSwgMiwgYW5kIDNcbiAgICAgKiB9LCAxLCAyLCAzKTtcbiAgICAgKi9cbiAgICB2YXIgX2RlZmVyJDE7XG5cbiAgICBpZiAoaGFzTmV4dFRpY2spIHtcbiAgICAgICAgX2RlZmVyJDEgPSBwcm9jZXNzLm5leHRUaWNrO1xuICAgIH0gZWxzZSBpZiAoaGFzU2V0SW1tZWRpYXRlKSB7XG4gICAgICAgIF9kZWZlciQxID0gc2V0SW1tZWRpYXRlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIF9kZWZlciQxID0gZmFsbGJhY2s7XG4gICAgfVxuXG4gICAgdmFyIG5leHRUaWNrID0gd3JhcChfZGVmZXIkMSk7XG5cbiAgICB2YXIgX3BhcmFsbGVsID0gYXdhaXRpZnkoKGVhY2hmbiwgdGFza3MsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIHZhciByZXN1bHRzID0gaXNBcnJheUxpa2UodGFza3MpID8gW10gOiB7fTtcblxuICAgICAgICBlYWNoZm4odGFza3MsICh0YXNrLCBrZXksIHRhc2tDYikgPT4ge1xuICAgICAgICAgICAgd3JhcEFzeW5jKHRhc2spKChlcnIsIC4uLnJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgICAgICAgICBbcmVzdWx0XSA9IHJlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0c1trZXldID0gcmVzdWx0O1xuICAgICAgICAgICAgICAgIHRhc2tDYihlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGVyciA9PiBjYWxsYmFjayhlcnIsIHJlc3VsdHMpKTtcbiAgICB9LCAzKTtcblxuICAgIC8qKlxuICAgICAqIFJ1biB0aGUgYHRhc2tzYCBjb2xsZWN0aW9uIG9mIGZ1bmN0aW9ucyBpbiBwYXJhbGxlbCwgd2l0aG91dCB3YWl0aW5nIHVudGlsXG4gICAgICogdGhlIHByZXZpb3VzIGZ1bmN0aW9uIGhhcyBjb21wbGV0ZWQuIElmIGFueSBvZiB0aGUgZnVuY3Rpb25zIHBhc3MgYW4gZXJyb3IgdG9cbiAgICAgKiBpdHMgY2FsbGJhY2ssIHRoZSBtYWluIGBjYWxsYmFja2AgaXMgaW1tZWRpYXRlbHkgY2FsbGVkIHdpdGggdGhlIHZhbHVlIG9mIHRoZVxuICAgICAqIGVycm9yLiBPbmNlIHRoZSBgdGFza3NgIGhhdmUgY29tcGxldGVkLCB0aGUgcmVzdWx0cyBhcmUgcGFzc2VkIHRvIHRoZSBmaW5hbFxuICAgICAqIGBjYWxsYmFja2AgYXMgYW4gYXJyYXkuXG4gICAgICpcbiAgICAgKiAqKk5vdGU6KiogYHBhcmFsbGVsYCBpcyBhYm91dCBraWNraW5nLW9mZiBJL08gdGFza3MgaW4gcGFyYWxsZWwsIG5vdCBhYm91dFxuICAgICAqIHBhcmFsbGVsIGV4ZWN1dGlvbiBvZiBjb2RlLiAgSWYgeW91ciB0YXNrcyBkbyBub3QgdXNlIGFueSB0aW1lcnMgb3IgcGVyZm9ybVxuICAgICAqIGFueSBJL08sIHRoZXkgd2lsbCBhY3R1YWxseSBiZSBleGVjdXRlZCBpbiBzZXJpZXMuICBBbnkgc3luY2hyb25vdXMgc2V0dXBcbiAgICAgKiBzZWN0aW9ucyBmb3IgZWFjaCB0YXNrIHdpbGwgaGFwcGVuIG9uZSBhZnRlciB0aGUgb3RoZXIuICBKYXZhU2NyaXB0IHJlbWFpbnNcbiAgICAgKiBzaW5nbGUtdGhyZWFkZWQuXG4gICAgICpcbiAgICAgKiAqKkhpbnQ6KiogVXNlIFtgcmVmbGVjdGBde0BsaW5rIG1vZHVsZTpVdGlscy5yZWZsZWN0fSB0byBjb250aW51ZSB0aGVcbiAgICAgKiBleGVjdXRpb24gb2Ygb3RoZXIgdGFza3Mgd2hlbiBhIHRhc2sgZmFpbHMuXG4gICAgICpcbiAgICAgKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIHVzZSBhbiBvYmplY3QgaW5zdGVhZCBvZiBhbiBhcnJheS4gRWFjaCBwcm9wZXJ0eSB3aWxsXG4gICAgICogYmUgcnVuIGFzIGEgZnVuY3Rpb24gYW5kIHRoZSByZXN1bHRzIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBmaW5hbCBgY2FsbGJhY2tgXG4gICAgICogYXMgYW4gb2JqZWN0IGluc3RlYWQgb2YgYW4gYXJyYXkuIFRoaXMgY2FuIGJlIGEgbW9yZSByZWFkYWJsZSB3YXkgb2YgaGFuZGxpbmdcbiAgICAgKiByZXN1bHRzIGZyb20ge0BsaW5rIGFzeW5jLnBhcmFsbGVsfS5cbiAgICAgKlxuICAgICAqIEBuYW1lIHBhcmFsbGVsXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IHRhc2tzIC0gQSBjb2xsZWN0aW9uIG9mXG4gICAgICogW2FzeW5jIGZ1bmN0aW9uc117QGxpbmsgQXN5bmNGdW5jdGlvbn0gdG8gcnVuLlxuICAgICAqIEVhY2ggYXN5bmMgZnVuY3Rpb24gY2FuIGNvbXBsZXRlIHdpdGggYW55IG51bWJlciBvZiBvcHRpb25hbCBgcmVzdWx0YCB2YWx1ZXMuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEFuIG9wdGlvbmFsIGNhbGxiYWNrIHRvIHJ1biBvbmNlIGFsbCB0aGVcbiAgICAgKiBmdW5jdGlvbnMgaGF2ZSBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LiBUaGlzIGZ1bmN0aW9uIGdldHMgYSByZXN1bHRzIGFycmF5XG4gICAgICogKG9yIG9iamVjdCkgY29udGFpbmluZyBhbGwgdGhlIHJlc3VsdCBhcmd1bWVudHMgcGFzc2VkIHRvIHRoZSB0YXNrIGNhbGxiYWNrcy5cbiAgICAgKiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0cykuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBub3QgcGFzc2VkXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy9Vc2luZyBDYWxsYmFja3NcbiAgICAgKiBhc3luYy5wYXJhbGxlbChbXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICdvbmUnKTtcbiAgICAgKiAgICAgICAgIH0sIDIwMCk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICd0d28nKTtcbiAgICAgKiAgICAgICAgIH0sIDEwMCk7XG4gICAgICogICAgIH1cbiAgICAgKiBdLCBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgIC8vIHJlc3VsdHMgaXMgZXF1YWwgdG8gWydvbmUnLCd0d28nXSBldmVuIHRob3VnaFxuICAgICAqICAgICAvLyB0aGUgc2Vjb25kIGZ1bmN0aW9uIGhhZCBhIHNob3J0ZXIgdGltZW91dC5cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIGFuIGV4YW1wbGUgdXNpbmcgYW4gb2JqZWN0IGluc3RlYWQgb2YgYW4gYXJyYXlcbiAgICAgKiBhc3luYy5wYXJhbGxlbCh7XG4gICAgICogICAgIG9uZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgMSk7XG4gICAgICogICAgICAgICB9LCAyMDApO1xuICAgICAqICAgICB9LFxuICAgICAqICAgICB0d286IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIDIpO1xuICAgICAqICAgICAgICAgfSwgMTAwKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgLy8gcmVzdWx0cyBpcyBlcXVhbCB0bzogeyBvbmU6IDEsIHR3bzogMiB9XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvL1VzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMucGFyYWxsZWwoW1xuICAgICAqICAgICBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAnb25lJyk7XG4gICAgICogICAgICAgICB9LCAyMDApO1xuICAgICAqICAgICB9LFxuICAgICAqICAgICBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAndHdvJyk7XG4gICAgICogICAgICAgICB9LCAxMDApO1xuICAgICAqICAgICB9XG4gICAgICogXSkudGhlbihyZXN1bHRzID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgIC8vIHJlc3VsdHMgaXMgZXF1YWwgdG8gWydvbmUnLCd0d28nXSBldmVuIHRob3VnaFxuICAgICAqICAgICAvLyB0aGUgc2Vjb25kIGZ1bmN0aW9uIGhhZCBhIHNob3J0ZXIgdGltZW91dC5cbiAgICAgKiB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gYW4gZXhhbXBsZSB1c2luZyBhbiBvYmplY3QgaW5zdGVhZCBvZiBhbiBhcnJheVxuICAgICAqIGFzeW5jLnBhcmFsbGVsKHtcbiAgICAgKiAgICAgb25lOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAxKTtcbiAgICAgKiAgICAgICAgIH0sIDIwMCk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIHR3bzogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgMik7XG4gICAgICogICAgICAgICB9LCAxMDApO1xuICAgICAqICAgICB9XG4gICAgICogfSkudGhlbihyZXN1bHRzID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgIC8vIHJlc3VsdHMgaXMgZXF1YWwgdG86IHsgb25lOiAxLCB0d286IDIgfVxuICAgICAqIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvL1VzaW5nIGFzeW5jL2F3YWl0XG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdHMgPSBhd2FpdCBhc3luYy5wYXJhbGxlbChbXG4gICAgICogICAgICAgICAgICAgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICdvbmUnKTtcbiAgICAgKiAgICAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgKiAgICAgICAgICAgICB9LFxuICAgICAqICAgICAgICAgICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAndHdvJyk7XG4gICAgICogICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICogICAgICAgICAgICAgfVxuICAgICAqICAgICAgICAgXSk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdHMgaXMgZXF1YWwgdG8gWydvbmUnLCd0d28nXSBldmVuIHRob3VnaFxuICAgICAqICAgICAgICAgLy8gdGhlIHNlY29uZCBmdW5jdGlvbiBoYWQgYSBzaG9ydGVyIHRpbWVvdXQuXG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIGFuIGV4YW1wbGUgdXNpbmcgYW4gb2JqZWN0IGluc3RlYWQgb2YgYW4gYXJyYXlcbiAgICAgKiBhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0cyA9IGF3YWl0IGFzeW5jLnBhcmFsbGVsKHtcbiAgICAgKiAgICAgICAgICAgICBvbmU6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAxKTtcbiAgICAgKiAgICAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgKiAgICAgICAgICAgICB9LFxuICAgICAqICAgICAgICAgICAgdHdvOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgMik7XG4gICAgICogICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICogICAgICAgICAgICB9XG4gICAgICogICAgICAgICB9KTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgLy8gcmVzdWx0cyBpcyBlcXVhbCB0bzogeyBvbmU6IDEsIHR3bzogMiB9XG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHBhcmFsbGVsKHRhc2tzLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX3BhcmFsbGVsKGVhY2hPZiQxLCB0YXNrcywgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBzYW1lIGFzIFtgcGFyYWxsZWxgXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cucGFyYWxsZWx9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYVxuICAgICAqIHRpbWUuXG4gICAgICpcbiAgICAgKiBAbmFtZSBwYXJhbGxlbExpbWl0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMucGFyYWxsZWxde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5wYXJhbGxlbH1cbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gdGFza3MgLSBBIGNvbGxlY3Rpb24gb2ZcbiAgICAgKiBbYXN5bmMgZnVuY3Rpb25zXXtAbGluayBBc3luY0Z1bmN0aW9ufSB0byBydW4uXG4gICAgICogRWFjaCBhc3luYyBmdW5jdGlvbiBjYW4gY29tcGxldGUgd2l0aCBhbnkgbnVtYmVyIG9mIG9wdGlvbmFsIGByZXN1bHRgIHZhbHVlcy5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbGltaXQgLSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXN5bmMgb3BlcmF0aW9ucyBhdCBhIHRpbWUuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEFuIG9wdGlvbmFsIGNhbGxiYWNrIHRvIHJ1biBvbmNlIGFsbCB0aGVcbiAgICAgKiBmdW5jdGlvbnMgaGF2ZSBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LiBUaGlzIGZ1bmN0aW9uIGdldHMgYSByZXN1bHRzIGFycmF5XG4gICAgICogKG9yIG9iamVjdCkgY29udGFpbmluZyBhbGwgdGhlIHJlc3VsdCBhcmd1bWVudHMgcGFzc2VkIHRvIHRoZSB0YXNrIGNhbGxiYWNrcy5cbiAgICAgKiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0cykuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBub3QgcGFzc2VkXG4gICAgICovXG4gICAgZnVuY3Rpb24gcGFyYWxsZWxMaW1pdCh0YXNrcywgbGltaXQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBfcGFyYWxsZWwoZWFjaE9mTGltaXQobGltaXQpLCB0YXNrcywgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEEgcXVldWUgb2YgdGFza3MgZm9yIHRoZSB3b3JrZXIgZnVuY3Rpb24gdG8gY29tcGxldGUuXG4gICAgICogQHR5cGVkZWYge0l0ZXJhYmxlfSBRdWV1ZU9iamVjdFxuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAcHJvcGVydHkge0Z1bmN0aW9ufSBsZW5ndGggLSBhIGZ1bmN0aW9uIHJldHVybmluZyB0aGUgbnVtYmVyIG9mIGl0ZW1zXG4gICAgICogd2FpdGluZyB0byBiZSBwcm9jZXNzZWQuIEludm9rZSB3aXRoIGBxdWV1ZS5sZW5ndGgoKWAuXG4gICAgICogQHByb3BlcnR5IHtib29sZWFufSBzdGFydGVkIC0gYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgYW55XG4gICAgICogaXRlbXMgaGF2ZSBiZWVuIHB1c2hlZCBhbmQgcHJvY2Vzc2VkIGJ5IHRoZSBxdWV1ZS5cbiAgICAgKiBAcHJvcGVydHkge0Z1bmN0aW9ufSBydW5uaW5nIC0gYSBmdW5jdGlvbiByZXR1cm5pbmcgdGhlIG51bWJlciBvZiBpdGVtc1xuICAgICAqIGN1cnJlbnRseSBiZWluZyBwcm9jZXNzZWQuIEludm9rZSB3aXRoIGBxdWV1ZS5ydW5uaW5nKClgLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IHdvcmtlcnNMaXN0IC0gYSBmdW5jdGlvbiByZXR1cm5pbmcgdGhlIGFycmF5IG9mIGl0ZW1zXG4gICAgICogY3VycmVudGx5IGJlaW5nIHByb2Nlc3NlZC4gSW52b2tlIHdpdGggYHF1ZXVlLndvcmtlcnNMaXN0KClgLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IGlkbGUgLSBhIGZ1bmN0aW9uIHJldHVybmluZyBmYWxzZSBpZiB0aGVyZSBhcmUgaXRlbXNcbiAgICAgKiB3YWl0aW5nIG9yIGJlaW5nIHByb2Nlc3NlZCwgb3IgdHJ1ZSBpZiBub3QuIEludm9rZSB3aXRoIGBxdWV1ZS5pZGxlKClgLlxuICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBjb25jdXJyZW5jeSAtIGFuIGludGVnZXIgZm9yIGRldGVybWluaW5nIGhvdyBtYW55IGB3b3JrZXJgXG4gICAgICogZnVuY3Rpb25zIHNob3VsZCBiZSBydW4gaW4gcGFyYWxsZWwuIFRoaXMgcHJvcGVydHkgY2FuIGJlIGNoYW5nZWQgYWZ0ZXIgYVxuICAgICAqIGBxdWV1ZWAgaXMgY3JlYXRlZCB0byBhbHRlciB0aGUgY29uY3VycmVuY3kgb24tdGhlLWZseS5cbiAgICAgKiBAcHJvcGVydHkge251bWJlcn0gcGF5bG9hZCAtIGFuIGludGVnZXIgdGhhdCBzcGVjaWZpZXMgaG93IG1hbnkgaXRlbXMgYXJlXG4gICAgICogcGFzc2VkIHRvIHRoZSB3b3JrZXIgZnVuY3Rpb24gYXQgYSB0aW1lLiBvbmx5IGFwcGxpZXMgaWYgdGhpcyBpcyBhXG4gICAgICogW2NhcmdvXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cuY2FyZ299IG9iamVjdFxuICAgICAqIEBwcm9wZXJ0eSB7QXN5bmNGdW5jdGlvbn0gcHVzaCAtIGFkZCBhIG5ldyB0YXNrIHRvIHRoZSBgcXVldWVgLiBDYWxscyBgY2FsbGJhY2tgXG4gICAgICogb25jZSB0aGUgYHdvcmtlcmAgaGFzIGZpbmlzaGVkIHByb2Nlc3NpbmcgdGhlIHRhc2suIEluc3RlYWQgb2YgYSBzaW5nbGUgdGFzayxcbiAgICAgKiBhIGB0YXNrc2AgYXJyYXkgY2FuIGJlIHN1Ym1pdHRlZC4gVGhlIHJlc3BlY3RpdmUgY2FsbGJhY2sgaXMgdXNlZCBmb3IgZXZlcnlcbiAgICAgKiB0YXNrIGluIHRoZSBsaXN0LiBJbnZva2Ugd2l0aCBgcXVldWUucHVzaCh0YXNrLCBbY2FsbGJhY2tdKWAsXG4gICAgICogQHByb3BlcnR5IHtBc3luY0Z1bmN0aW9ufSB1bnNoaWZ0IC0gYWRkIGEgbmV3IHRhc2sgdG8gdGhlIGZyb250IG9mIHRoZSBgcXVldWVgLlxuICAgICAqIEludm9rZSB3aXRoIGBxdWV1ZS51bnNoaWZ0KHRhc2ssIFtjYWxsYmFja10pYC5cbiAgICAgKiBAcHJvcGVydHkge0FzeW5jRnVuY3Rpb259IHB1c2hBc3luYyAtIHRoZSBzYW1lIGFzIGBxLnB1c2hgLCBleGNlcHQgdGhpcyByZXR1cm5zXG4gICAgICogYSBwcm9taXNlIHRoYXQgcmVqZWN0cyBpZiBhbiBlcnJvciBvY2N1cnMuXG4gICAgICogQHByb3BlcnR5IHtBc3luY0Z1bmN0aW9ufSB1bnNoaWZ0QXN5bmMgLSB0aGUgc2FtZSBhcyBgcS51bnNoaWZ0YCwgZXhjZXB0IHRoaXMgcmV0dXJuc1xuICAgICAqIGEgcHJvbWlzZSB0aGF0IHJlamVjdHMgaWYgYW4gZXJyb3Igb2NjdXJzLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IHJlbW92ZSAtIHJlbW92ZSBpdGVtcyBmcm9tIHRoZSBxdWV1ZSB0aGF0IG1hdGNoIGEgdGVzdFxuICAgICAqIGZ1bmN0aW9uLiAgVGhlIHRlc3QgZnVuY3Rpb24gd2lsbCBiZSBwYXNzZWQgYW4gb2JqZWN0IHdpdGggYSBgZGF0YWAgcHJvcGVydHksXG4gICAgICogYW5kIGEgYHByaW9yaXR5YCBwcm9wZXJ0eSwgaWYgdGhpcyBpcyBhXG4gICAgICogW3ByaW9yaXR5UXVldWVde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5wcmlvcml0eVF1ZXVlfSBvYmplY3QuXG4gICAgICogSW52b2tlZCB3aXRoIGBxdWV1ZS5yZW1vdmUodGVzdEZuKWAsIHdoZXJlIGB0ZXN0Rm5gIGlzIG9mIHRoZSBmb3JtXG4gICAgICogYGZ1bmN0aW9uICh7ZGF0YSwgcHJpb3JpdHl9KSB7fWAgYW5kIHJldHVybnMgYSBCb29sZWFuLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IHNhdHVyYXRlZCAtIGEgZnVuY3Rpb24gdGhhdCBzZXRzIGEgY2FsbGJhY2sgdGhhdCBpc1xuICAgICAqIGNhbGxlZCB3aGVuIHRoZSBudW1iZXIgb2YgcnVubmluZyB3b3JrZXJzIGhpdHMgdGhlIGBjb25jdXJyZW5jeWAgbGltaXQsIGFuZFxuICAgICAqIGZ1cnRoZXIgdGFza3Mgd2lsbCBiZSBxdWV1ZWQuICBJZiB0aGUgY2FsbGJhY2sgaXMgb21pdHRlZCwgYHEuc2F0dXJhdGVkKClgXG4gICAgICogcmV0dXJucyBhIHByb21pc2UgZm9yIHRoZSBuZXh0IG9jY3VycmVuY2UuXG4gICAgICogQHByb3BlcnR5IHtGdW5jdGlvbn0gdW5zYXR1cmF0ZWQgLSBhIGZ1bmN0aW9uIHRoYXQgc2V0cyBhIGNhbGxiYWNrIHRoYXQgaXNcbiAgICAgKiBjYWxsZWQgd2hlbiB0aGUgbnVtYmVyIG9mIHJ1bm5pbmcgd29ya2VycyBpcyBsZXNzIHRoYW4gdGhlIGBjb25jdXJyZW5jeWAgJlxuICAgICAqIGBidWZmZXJgIGxpbWl0cywgYW5kIGZ1cnRoZXIgdGFza3Mgd2lsbCBub3QgYmUgcXVldWVkLiBJZiB0aGUgY2FsbGJhY2sgaXNcbiAgICAgKiBvbWl0dGVkLCBgcS51bnNhdHVyYXRlZCgpYCByZXR1cm5zIGEgcHJvbWlzZSBmb3IgdGhlIG5leHQgb2NjdXJyZW5jZS5cbiAgICAgKiBAcHJvcGVydHkge251bWJlcn0gYnVmZmVyIC0gQSBtaW5pbXVtIHRocmVzaG9sZCBidWZmZXIgaW4gb3JkZXIgdG8gc2F5IHRoYXRcbiAgICAgKiB0aGUgYHF1ZXVlYCBpcyBgdW5zYXR1cmF0ZWRgLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IGVtcHR5IC0gYSBmdW5jdGlvbiB0aGF0IHNldHMgYSBjYWxsYmFjayB0aGF0IGlzIGNhbGxlZFxuICAgICAqIHdoZW4gdGhlIGxhc3QgaXRlbSBmcm9tIHRoZSBgcXVldWVgIGlzIGdpdmVuIHRvIGEgYHdvcmtlcmAuIElmIHRoZSBjYWxsYmFja1xuICAgICAqIGlzIG9taXR0ZWQsIGBxLmVtcHR5KClgIHJldHVybnMgYSBwcm9taXNlIGZvciB0aGUgbmV4dCBvY2N1cnJlbmNlLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IGRyYWluIC0gYSBmdW5jdGlvbiB0aGF0IHNldHMgYSBjYWxsYmFjayB0aGF0IGlzIGNhbGxlZFxuICAgICAqIHdoZW4gdGhlIGxhc3QgaXRlbSBmcm9tIHRoZSBgcXVldWVgIGhhcyByZXR1cm5lZCBmcm9tIHRoZSBgd29ya2VyYC4gSWYgdGhlXG4gICAgICogY2FsbGJhY2sgaXMgb21pdHRlZCwgYHEuZHJhaW4oKWAgcmV0dXJucyBhIHByb21pc2UgZm9yIHRoZSBuZXh0IG9jY3VycmVuY2UuXG4gICAgICogQHByb3BlcnR5IHtGdW5jdGlvbn0gZXJyb3IgLSBhIGZ1bmN0aW9uIHRoYXQgc2V0cyBhIGNhbGxiYWNrIHRoYXQgaXMgY2FsbGVkXG4gICAgICogd2hlbiBhIHRhc2sgZXJyb3JzLiBIYXMgdGhlIHNpZ25hdHVyZSBgZnVuY3Rpb24oZXJyb3IsIHRhc2spYC4gSWYgdGhlXG4gICAgICogY2FsbGJhY2sgaXMgb21pdHRlZCwgYGVycm9yKClgIHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVqZWN0cyBvbiB0aGUgbmV4dFxuICAgICAqIGVycm9yLlxuICAgICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gcGF1c2VkIC0gYSBib29sZWFuIGZvciBkZXRlcm1pbmluZyB3aGV0aGVyIHRoZSBxdWV1ZSBpc1xuICAgICAqIGluIGEgcGF1c2VkIHN0YXRlLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IHBhdXNlIC0gYSBmdW5jdGlvbiB0aGF0IHBhdXNlcyB0aGUgcHJvY2Vzc2luZyBvZiB0YXNrc1xuICAgICAqIHVudGlsIGByZXN1bWUoKWAgaXMgY2FsbGVkLiBJbnZva2Ugd2l0aCBgcXVldWUucGF1c2UoKWAuXG4gICAgICogQHByb3BlcnR5IHtGdW5jdGlvbn0gcmVzdW1lIC0gYSBmdW5jdGlvbiB0aGF0IHJlc3VtZXMgdGhlIHByb2Nlc3Npbmcgb2ZcbiAgICAgKiBxdWV1ZWQgdGFza3Mgd2hlbiB0aGUgcXVldWUgaXMgcGF1c2VkLiBJbnZva2Ugd2l0aCBgcXVldWUucmVzdW1lKClgLlxuICAgICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IGtpbGwgLSBhIGZ1bmN0aW9uIHRoYXQgcmVtb3ZlcyB0aGUgYGRyYWluYCBjYWxsYmFjayBhbmRcbiAgICAgKiBlbXB0aWVzIHJlbWFpbmluZyB0YXNrcyBmcm9tIHRoZSBxdWV1ZSBmb3JjaW5nIGl0IHRvIGdvIGlkbGUuIE5vIG1vcmUgdGFza3NcbiAgICAgKiBzaG91bGQgYmUgcHVzaGVkIHRvIHRoZSBxdWV1ZSBhZnRlciBjYWxsaW5nIHRoaXMgZnVuY3Rpb24uIEludm9rZSB3aXRoIGBxdWV1ZS5raWxsKClgLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBjb25zdCBxID0gYXN5bmMucXVldWUod29ya2VyLCAyKVxuICAgICAqIHEucHVzaChpdGVtMSlcbiAgICAgKiBxLnB1c2goaXRlbTIpXG4gICAgICogcS5wdXNoKGl0ZW0zKVxuICAgICAqIC8vIHF1ZXVlcyBhcmUgaXRlcmFibGUsIHNwcmVhZCBpbnRvIGFuIGFycmF5IHRvIGluc3BlY3RcbiAgICAgKiBjb25zdCBpdGVtcyA9IFsuLi5xXSAvLyBbaXRlbTEsIGl0ZW0yLCBpdGVtM11cbiAgICAgKiAvLyBvciB1c2UgZm9yIG9mXG4gICAgICogZm9yIChsZXQgaXRlbSBvZiBxKSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGl0ZW0pXG4gICAgICogfVxuICAgICAqXG4gICAgICogcS5kcmFpbigoKSA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdhbGwgZG9uZScpXG4gICAgICogfSlcbiAgICAgKiAvLyBvclxuICAgICAqIGF3YWl0IHEuZHJhaW4oKVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGBxdWV1ZWAgb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBgY29uY3VycmVuY3lgLiBUYXNrcyBhZGRlZCB0byB0aGVcbiAgICAgKiBgcXVldWVgIGFyZSBwcm9jZXNzZWQgaW4gcGFyYWxsZWwgKHVwIHRvIHRoZSBgY29uY3VycmVuY3lgIGxpbWl0KS4gSWYgYWxsXG4gICAgICogYHdvcmtlcmBzIGFyZSBpbiBwcm9ncmVzcywgdGhlIHRhc2sgaXMgcXVldWVkIHVudGlsIG9uZSBiZWNvbWVzIGF2YWlsYWJsZS5cbiAgICAgKiBPbmNlIGEgYHdvcmtlcmAgY29tcGxldGVzIGEgYHRhc2tgLCB0aGF0IGB0YXNrYCdzIGNhbGxiYWNrIGlzIGNhbGxlZC5cbiAgICAgKlxuICAgICAqIEBuYW1lIHF1ZXVlXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gd29ya2VyIC0gQW4gYXN5bmMgZnVuY3Rpb24gZm9yIHByb2Nlc3NpbmcgYSBxdWV1ZWQgdGFzay5cbiAgICAgKiBJZiB5b3Ugd2FudCB0byBoYW5kbGUgZXJyb3JzIGZyb20gYW4gaW5kaXZpZHVhbCB0YXNrLCBwYXNzIGEgY2FsbGJhY2sgdG9cbiAgICAgKiBgcS5wdXNoKClgLiBJbnZva2VkIHdpdGggKHRhc2ssIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW2NvbmN1cnJlbmN5PTFdIC0gQW4gYGludGVnZXJgIGZvciBkZXRlcm1pbmluZyBob3cgbWFueVxuICAgICAqIGB3b3JrZXJgIGZ1bmN0aW9ucyBzaG91bGQgYmUgcnVuIGluIHBhcmFsbGVsLiAgSWYgb21pdHRlZCwgdGhlIGNvbmN1cnJlbmN5XG4gICAgICogZGVmYXVsdHMgdG8gYDFgLiAgSWYgdGhlIGNvbmN1cnJlbmN5IGlzIGAwYCwgYW4gZXJyb3IgaXMgdGhyb3duLlxuICAgICAqIEByZXR1cm5zIHttb2R1bGU6Q29udHJvbEZsb3cuUXVldWVPYmplY3R9IEEgcXVldWUgb2JqZWN0IHRvIG1hbmFnZSB0aGUgdGFza3MuIENhbGxiYWNrcyBjYW4gYmVcbiAgICAgKiBhdHRhY2hlZCBhcyBjZXJ0YWluIHByb3BlcnRpZXMgdG8gbGlzdGVuIGZvciBzcGVjaWZpYyBldmVudHMgZHVyaW5nIHRoZVxuICAgICAqIGxpZmVjeWNsZSBvZiB0aGUgcXVldWUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGNyZWF0ZSBhIHF1ZXVlIG9iamVjdCB3aXRoIGNvbmN1cnJlbmN5IDJcbiAgICAgKiB2YXIgcSA9IGFzeW5jLnF1ZXVlKGZ1bmN0aW9uKHRhc2ssIGNhbGxiYWNrKSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdoZWxsbyAnICsgdGFzay5uYW1lKTtcbiAgICAgKiAgICAgY2FsbGJhY2soKTtcbiAgICAgKiB9LCAyKTtcbiAgICAgKlxuICAgICAqIC8vIGFzc2lnbiBhIGNhbGxiYWNrXG4gICAgICogcS5kcmFpbihmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coJ2FsbCBpdGVtcyBoYXZlIGJlZW4gcHJvY2Vzc2VkJyk7XG4gICAgICogfSk7XG4gICAgICogLy8gb3IgYXdhaXQgdGhlIGVuZFxuICAgICAqIGF3YWl0IHEuZHJhaW4oKVxuICAgICAqXG4gICAgICogLy8gYXNzaWduIGFuIGVycm9yIGNhbGxiYWNrXG4gICAgICogcS5lcnJvcihmdW5jdGlvbihlcnIsIHRhc2spIHtcbiAgICAgKiAgICAgY29uc29sZS5lcnJvcigndGFzayBleHBlcmllbmNlZCBhbiBlcnJvcicpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gYWRkIHNvbWUgaXRlbXMgdG8gdGhlIHF1ZXVlXG4gICAgICogcS5wdXNoKHtuYW1lOiAnZm9vJ30sIGZ1bmN0aW9uKGVycikge1xuICAgICAqICAgICBjb25zb2xlLmxvZygnZmluaXNoZWQgcHJvY2Vzc2luZyBmb28nKTtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyBjYWxsYmFjayBpcyBvcHRpb25hbFxuICAgICAqIHEucHVzaCh7bmFtZTogJ2Jhcid9KTtcbiAgICAgKlxuICAgICAqIC8vIGFkZCBzb21lIGl0ZW1zIHRvIHRoZSBxdWV1ZSAoYmF0Y2gtd2lzZSlcbiAgICAgKiBxLnB1c2goW3tuYW1lOiAnYmF6J30se25hbWU6ICdiYXknfSx7bmFtZTogJ2JheCd9XSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdmaW5pc2hlZCBwcm9jZXNzaW5nIGl0ZW0nKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIGFkZCBzb21lIGl0ZW1zIHRvIHRoZSBmcm9udCBvZiB0aGUgcXVldWVcbiAgICAgKiBxLnVuc2hpZnQoe25hbWU6ICdiYXInfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAqICAgICBjb25zb2xlLmxvZygnZmluaXNoZWQgcHJvY2Vzc2luZyBiYXInKTtcbiAgICAgKiB9KTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBxdWV1ZSQxICh3b3JrZXIsIGNvbmN1cnJlbmN5KSB7XG4gICAgICAgIHZhciBfd29ya2VyID0gd3JhcEFzeW5jKHdvcmtlcik7XG4gICAgICAgIHJldHVybiBxdWV1ZSgoaXRlbXMsIGNiKSA9PiB7XG4gICAgICAgICAgICBfd29ya2VyKGl0ZW1zWzBdLCBjYik7XG4gICAgICAgIH0sIGNvbmN1cnJlbmN5LCAxKTtcbiAgICB9XG5cbiAgICAvLyBCaW5hcnkgbWluLWhlYXAgaW1wbGVtZW50YXRpb24gdXNlZCBmb3IgcHJpb3JpdHkgcXVldWUuXG4gICAgLy8gSW1wbGVtZW50YXRpb24gaXMgc3RhYmxlLCBpLmUuIHB1c2ggdGltZSBpcyBjb25zaWRlcmVkIGZvciBlcXVhbCBwcmlvcml0aWVzXG4gICAgY2xhc3MgSGVhcCB7XG4gICAgICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAgICAgdGhpcy5oZWFwID0gW107XG4gICAgICAgICAgICB0aGlzLnB1c2hDb3VudCA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSO1xuICAgICAgICB9XG5cbiAgICAgICAgZ2V0IGxlbmd0aCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmhlYXAubGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgZW1wdHkgKCkge1xuICAgICAgICAgICAgdGhpcy5oZWFwID0gW107XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIHBlcmNVcChpbmRleCkge1xuICAgICAgICAgICAgbGV0IHA7XG5cbiAgICAgICAgICAgIHdoaWxlIChpbmRleCA+IDAgJiYgc21hbGxlcih0aGlzLmhlYXBbaW5kZXhdLCB0aGlzLmhlYXBbcD1wYXJlbnQoaW5kZXgpXSkpIHtcbiAgICAgICAgICAgICAgICBsZXQgdCA9IHRoaXMuaGVhcFtpbmRleF07XG4gICAgICAgICAgICAgICAgdGhpcy5oZWFwW2luZGV4XSA9IHRoaXMuaGVhcFtwXTtcbiAgICAgICAgICAgICAgICB0aGlzLmhlYXBbcF0gPSB0O1xuXG4gICAgICAgICAgICAgICAgaW5kZXggPSBwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcGVyY0Rvd24oaW5kZXgpIHtcbiAgICAgICAgICAgIGxldCBsO1xuXG4gICAgICAgICAgICB3aGlsZSAoKGw9bGVmdENoaShpbmRleCkpIDwgdGhpcy5oZWFwLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGlmIChsKzEgPCB0aGlzLmhlYXAubGVuZ3RoICYmIHNtYWxsZXIodGhpcy5oZWFwW2wrMV0sIHRoaXMuaGVhcFtsXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgbCA9IGwrMTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoc21hbGxlcih0aGlzLmhlYXBbaW5kZXhdLCB0aGlzLmhlYXBbbF0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGxldCB0ID0gdGhpcy5oZWFwW2luZGV4XTtcbiAgICAgICAgICAgICAgICB0aGlzLmhlYXBbaW5kZXhdID0gdGhpcy5oZWFwW2xdO1xuICAgICAgICAgICAgICAgIHRoaXMuaGVhcFtsXSA9IHQ7XG5cbiAgICAgICAgICAgICAgICBpbmRleCA9IGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwdXNoKG5vZGUpIHtcbiAgICAgICAgICAgIG5vZGUucHVzaENvdW50ID0gKyt0aGlzLnB1c2hDb3VudDtcbiAgICAgICAgICAgIHRoaXMuaGVhcC5wdXNoKG5vZGUpO1xuICAgICAgICAgICAgdGhpcy5wZXJjVXAodGhpcy5oZWFwLmxlbmd0aC0xKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHVuc2hpZnQobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGVhcC5wdXNoKG5vZGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2hpZnQoKSB7XG4gICAgICAgICAgICBsZXQgW3RvcF0gPSB0aGlzLmhlYXA7XG5cbiAgICAgICAgICAgIHRoaXMuaGVhcFswXSA9IHRoaXMuaGVhcFt0aGlzLmhlYXAubGVuZ3RoLTFdO1xuICAgICAgICAgICAgdGhpcy5oZWFwLnBvcCgpO1xuICAgICAgICAgICAgdGhpcy5wZXJjRG93bigwKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRvcDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRvQXJyYXkoKSB7XG4gICAgICAgICAgICByZXR1cm4gWy4uLnRoaXNdO1xuICAgICAgICB9XG5cbiAgICAgICAgKltTeW1ib2wuaXRlcmF0b3JdICgpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5oZWFwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5oZWFwW2ldLmRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZW1vdmUgKHRlc3RGbikge1xuICAgICAgICAgICAgbGV0IGogPSAwO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmhlYXAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRlc3RGbih0aGlzLmhlYXBbaV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVhcFtqXSA9IHRoaXMuaGVhcFtpXTtcbiAgICAgICAgICAgICAgICAgICAgaisrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5oZWFwLnNwbGljZShqKTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IHBhcmVudCh0aGlzLmhlYXAubGVuZ3RoLTEpOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgIHRoaXMucGVyY0Rvd24oaSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGVmdENoaShpKSB7XG4gICAgICAgIHJldHVybiAoaTw8MSkrMTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwYXJlbnQoaSkge1xuICAgICAgICByZXR1cm4gKChpKzEpPj4xKS0xO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNtYWxsZXIoeCwgeSkge1xuICAgICAgICBpZiAoeC5wcmlvcml0eSAhPT0geS5wcmlvcml0eSkge1xuICAgICAgICAgICAgcmV0dXJuIHgucHJpb3JpdHkgPCB5LnByaW9yaXR5O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHgucHVzaENvdW50IDwgeS5wdXNoQ291bnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYXN5bmMucXVldWVde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5xdWV1ZX0gb25seSB0YXNrcyBhcmUgYXNzaWduZWQgYSBwcmlvcml0eSBhbmRcbiAgICAgKiBjb21wbGV0ZWQgaW4gYXNjZW5kaW5nIHByaW9yaXR5IG9yZGVyLlxuICAgICAqXG4gICAgICogQG5hbWUgcHJpb3JpdHlRdWV1ZVxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbnRyb2xGbG93XG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLnF1ZXVlXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cucXVldWV9XG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gd29ya2VyIC0gQW4gYXN5bmMgZnVuY3Rpb24gZm9yIHByb2Nlc3NpbmcgYSBxdWV1ZWQgdGFzay5cbiAgICAgKiBJZiB5b3Ugd2FudCB0byBoYW5kbGUgZXJyb3JzIGZyb20gYW4gaW5kaXZpZHVhbCB0YXNrLCBwYXNzIGEgY2FsbGJhY2sgdG9cbiAgICAgKiBgcS5wdXNoKClgLlxuICAgICAqIEludm9rZWQgd2l0aCAodGFzaywgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjb25jdXJyZW5jeSAtIEFuIGBpbnRlZ2VyYCBmb3IgZGV0ZXJtaW5pbmcgaG93IG1hbnkgYHdvcmtlcmBcbiAgICAgKiBmdW5jdGlvbnMgc2hvdWxkIGJlIHJ1biBpbiBwYXJhbGxlbC4gIElmIG9taXR0ZWQsIHRoZSBjb25jdXJyZW5jeSBkZWZhdWx0cyB0b1xuICAgICAqIGAxYC4gIElmIHRoZSBjb25jdXJyZW5jeSBpcyBgMGAsIGFuIGVycm9yIGlzIHRocm93bi5cbiAgICAgKiBAcmV0dXJucyB7bW9kdWxlOkNvbnRyb2xGbG93LlF1ZXVlT2JqZWN0fSBBIHByaW9yaXR5UXVldWUgb2JqZWN0IHRvIG1hbmFnZSB0aGUgdGFza3MuIFRoZXJlIGFyZSB0d29cbiAgICAgKiBkaWZmZXJlbmNlcyBiZXR3ZWVuIGBxdWV1ZWAgYW5kIGBwcmlvcml0eVF1ZXVlYCBvYmplY3RzOlxuICAgICAqICogYHB1c2godGFzaywgcHJpb3JpdHksIFtjYWxsYmFja10pYCAtIGBwcmlvcml0eWAgc2hvdWxkIGJlIGEgbnVtYmVyLiBJZiBhblxuICAgICAqICAgYXJyYXkgb2YgYHRhc2tzYCBpcyBnaXZlbiwgYWxsIHRhc2tzIHdpbGwgYmUgYXNzaWduZWQgdGhlIHNhbWUgcHJpb3JpdHkuXG4gICAgICogKiBUaGUgYHVuc2hpZnRgIG1ldGhvZCB3YXMgcmVtb3ZlZC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBwcmlvcml0eVF1ZXVlKHdvcmtlciwgY29uY3VycmVuY3kpIHtcbiAgICAgICAgLy8gU3RhcnQgd2l0aCBhIG5vcm1hbCBxdWV1ZVxuICAgICAgICB2YXIgcSA9IHF1ZXVlJDEod29ya2VyLCBjb25jdXJyZW5jeSk7XG4gICAgICAgIHZhciBwcm9jZXNzaW5nU2NoZWR1bGVkID0gZmFsc2U7XG5cbiAgICAgICAgcS5fdGFza3MgPSBuZXcgSGVhcCgpO1xuXG4gICAgICAgIC8vIE92ZXJyaWRlIHB1c2ggdG8gYWNjZXB0IHNlY29uZCBwYXJhbWV0ZXIgcmVwcmVzZW50aW5nIHByaW9yaXR5XG4gICAgICAgIHEucHVzaCA9IGZ1bmN0aW9uKGRhdGEsIHByaW9yaXR5ID0gMCwgY2FsbGJhY2sgPSAoKSA9PiB7fSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndGFzayBjYWxsYmFjayBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHEuc3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gW2RhdGFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID09PSAwICYmIHEuaWRsZSgpKSB7XG4gICAgICAgICAgICAgICAgLy8gY2FsbCBkcmFpbiBpbW1lZGlhdGVseSBpZiB0aGVyZSBhcmUgbm8gdGFza3NcbiAgICAgICAgICAgICAgICByZXR1cm4gc2V0SW1tZWRpYXRlJDEoKCkgPT4gcS5kcmFpbigpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBkYXRhLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhW2ldLFxuICAgICAgICAgICAgICAgICAgICBwcmlvcml0eSxcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgcS5fdGFza3MucHVzaChpdGVtKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFwcm9jZXNzaW5nU2NoZWR1bGVkKSB7XG4gICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1NjaGVkdWxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgc2V0SW1tZWRpYXRlJDEoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzaW5nU2NoZWR1bGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHEucHJvY2VzcygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIFJlbW92ZSB1bnNoaWZ0IGZ1bmN0aW9uXG4gICAgICAgIGRlbGV0ZSBxLnVuc2hpZnQ7XG5cbiAgICAgICAgcmV0dXJuIHE7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUnVucyB0aGUgYHRhc2tzYCBhcnJheSBvZiBmdW5jdGlvbnMgaW4gcGFyYWxsZWwsIHdpdGhvdXQgd2FpdGluZyB1bnRpbCB0aGVcbiAgICAgKiBwcmV2aW91cyBmdW5jdGlvbiBoYXMgY29tcGxldGVkLiBPbmNlIGFueSBvZiB0aGUgYHRhc2tzYCBjb21wbGV0ZSBvciBwYXNzIGFuXG4gICAgICogZXJyb3IgdG8gaXRzIGNhbGxiYWNrLCB0aGUgbWFpbiBgY2FsbGJhY2tgIGlzIGltbWVkaWF0ZWx5IGNhbGxlZC4gSXQnc1xuICAgICAqIGVxdWl2YWxlbnQgdG8gYFByb21pc2UucmFjZSgpYC5cbiAgICAgKlxuICAgICAqIEBuYW1lIHJhY2VcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtBcnJheX0gdGFza3MgLSBBbiBhcnJheSBjb250YWluaW5nIFthc3luYyBmdW5jdGlvbnNde0BsaW5rIEFzeW5jRnVuY3Rpb259XG4gICAgICogdG8gcnVuLiBFYWNoIGZ1bmN0aW9uIGNhbiBjb21wbGV0ZSB3aXRoIGFuIG9wdGlvbmFsIGByZXN1bHRgIHZhbHVlLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIC0gQSBjYWxsYmFjayB0byBydW4gb25jZSBhbnkgb2YgdGhlIGZ1bmN0aW9ucyBoYXZlXG4gICAgICogY29tcGxldGVkLiBUaGlzIGZ1bmN0aW9uIGdldHMgYW4gZXJyb3Igb3IgcmVzdWx0IGZyb20gdGhlIGZpcnN0IGZ1bmN0aW9uIHRoYXRcbiAgICAgKiBjb21wbGV0ZWQuIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHQpLlxuICAgICAqIEByZXR1cm5zIHVuZGVmaW5lZFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBhc3luYy5yYWNlKFtcbiAgICAgKiAgICAgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ29uZScpO1xuICAgICAqICAgICAgICAgfSwgMjAwKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3R3bycpO1xuICAgICAqICAgICAgICAgfSwgMTAwKTtcbiAgICAgKiAgICAgfVxuICAgICAqIF0sXG4gICAgICogLy8gbWFpbiBjYWxsYmFja1xuICAgICAqIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIC8vIHRoZSByZXN1bHQgd2lsbCBiZSBlcXVhbCB0byAndHdvJyBhcyBpdCBmaW5pc2hlcyBlYXJsaWVyXG4gICAgICogfSk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gcmFjZSh0YXNrcywgY2FsbGJhY2spIHtcbiAgICAgICAgY2FsbGJhY2sgPSBvbmNlKGNhbGxiYWNrKTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHRhc2tzKSkgcmV0dXJuIGNhbGxiYWNrKG5ldyBUeXBlRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IHRvIHJhY2UgbXVzdCBiZSBhbiBhcnJheSBvZiBmdW5jdGlvbnMnKSk7XG4gICAgICAgIGlmICghdGFza3MubGVuZ3RoKSByZXR1cm4gY2FsbGJhY2soKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB0YXNrcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIHdyYXBBc3luYyh0YXNrc1tpXSkoY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHJhY2UkMSA9IGF3YWl0aWZ5KHJhY2UsIDIpO1xuXG4gICAgLyoqXG4gICAgICogU2FtZSBhcyBbYHJlZHVjZWBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5yZWR1Y2V9LCBvbmx5IG9wZXJhdGVzIG9uIGBhcnJheWAgaW4gcmV2ZXJzZSBvcmRlci5cbiAgICAgKlxuICAgICAqIEBuYW1lIHJlZHVjZVJpZ2h0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMucmVkdWNlXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMucmVkdWNlfVxuICAgICAqIEBhbGlhcyBmb2xkclxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7Kn0gbWVtbyAtIFRoZSBpbml0aWFsIHN0YXRlIG9mIHRoZSByZWR1Y3Rpb24uXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEEgZnVuY3Rpb24gYXBwbGllZCB0byBlYWNoIGl0ZW0gaW4gdGhlXG4gICAgICogYXJyYXkgdG8gcHJvZHVjZSB0aGUgbmV4dCBzdGVwIGluIHRoZSByZWR1Y3Rpb24uXG4gICAgICogVGhlIGBpdGVyYXRlZWAgc2hvdWxkIGNvbXBsZXRlIHdpdGggdGhlIG5leHQgc3RhdGUgb2YgdGhlIHJlZHVjdGlvbi5cbiAgICAgKiBJZiB0aGUgaXRlcmF0ZWUgY29tcGxldGVzIHdpdGggYW4gZXJyb3IsIHRoZSByZWR1Y3Rpb24gaXMgc3RvcHBlZCBhbmQgdGhlXG4gICAgICogbWFpbiBgY2FsbGJhY2tgIGlzIGltbWVkaWF0ZWx5IGNhbGxlZCB3aXRoIHRoZSBlcnJvci5cbiAgICAgKiBJbnZva2VkIHdpdGggKG1lbW8sIGl0ZW0sIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQSBjYWxsYmFjayB3aGljaCBpcyBjYWxsZWQgYWZ0ZXIgYWxsIHRoZVxuICAgICAqIGBpdGVyYXRlZWAgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQuIFJlc3VsdCBpcyB0aGUgcmVkdWNlZCB2YWx1ZS4gSW52b2tlZCB3aXRoXG4gICAgICogKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBpcyBwYXNzZWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiByZWR1Y2VSaWdodCAoYXJyYXksIG1lbW8sIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgcmV2ZXJzZWQgPSBbLi4uYXJyYXldLnJldmVyc2UoKTtcbiAgICAgICAgcmV0dXJuIHJlZHVjZSQxKHJldmVyc2VkLCBtZW1vLCBpdGVyYXRlZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdyYXBzIHRoZSBhc3luYyBmdW5jdGlvbiBpbiBhbm90aGVyIGZ1bmN0aW9uIHRoYXQgYWx3YXlzIGNvbXBsZXRlcyB3aXRoIGFcbiAgICAgKiByZXN1bHQgb2JqZWN0LCBldmVuIHdoZW4gaXQgZXJyb3JzLlxuICAgICAqXG4gICAgICogVGhlIHJlc3VsdCBvYmplY3QgaGFzIGVpdGhlciB0aGUgcHJvcGVydHkgYGVycm9yYCBvciBgdmFsdWVgLlxuICAgICAqXG4gICAgICogQG5hbWUgcmVmbGVjdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOlV0aWxzXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBjYXRlZ29yeSBVdGlsXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBmbiAtIFRoZSBhc3luYyBmdW5jdGlvbiB5b3Ugd2FudCB0byB3cmFwXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSAtIEEgZnVuY3Rpb24gdGhhdCBhbHdheXMgcGFzc2VzIG51bGwgdG8gaXQncyBjYWxsYmFjayBhc1xuICAgICAqIHRoZSBlcnJvci4gVGhlIHNlY29uZCBhcmd1bWVudCB0byB0aGUgY2FsbGJhY2sgd2lsbCBiZSBhbiBgb2JqZWN0YCB3aXRoXG4gICAgICogZWl0aGVyIGFuIGBlcnJvcmAgb3IgYSBgdmFsdWVgIHByb3BlcnR5LlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBhc3luYy5wYXJhbGxlbChbXG4gICAgICogICAgIGFzeW5jLnJlZmxlY3QoZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIC8vIGRvIHNvbWUgc3R1ZmYgLi4uXG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCAnb25lJyk7XG4gICAgICogICAgIH0pLFxuICAgICAqICAgICBhc3luYy5yZWZsZWN0KGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAvLyBkbyBzb21lIG1vcmUgc3R1ZmYgYnV0IGVycm9yIC4uLlxuICAgICAqICAgICAgICAgY2FsbGJhY2soJ2JhZCBzdHVmZiBoYXBwZW5lZCcpO1xuICAgICAqICAgICB9KSxcbiAgICAgKiAgICAgYXN5bmMucmVmbGVjdChmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgLy8gZG8gc29tZSBtb3JlIHN0dWZmIC4uLlxuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3R3bycpO1xuICAgICAqICAgICB9KVxuICAgICAqIF0sXG4gICAgICogLy8gb3B0aW9uYWwgY2FsbGJhY2tcbiAgICAgKiBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAgICAgKiAgICAgLy8gdmFsdWVzXG4gICAgICogICAgIC8vIHJlc3VsdHNbMF0udmFsdWUgPSAnb25lJ1xuICAgICAqICAgICAvLyByZXN1bHRzWzFdLmVycm9yID0gJ2JhZCBzdHVmZiBoYXBwZW5lZCdcbiAgICAgKiAgICAgLy8gcmVzdWx0c1syXS52YWx1ZSA9ICd0d28nXG4gICAgICogfSk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gcmVmbGVjdChmbikge1xuICAgICAgICB2YXIgX2ZuID0gd3JhcEFzeW5jKGZuKTtcbiAgICAgICAgcmV0dXJuIGluaXRpYWxQYXJhbXMoZnVuY3Rpb24gcmVmbGVjdE9uKGFyZ3MsIHJlZmxlY3RDYWxsYmFjaykge1xuICAgICAgICAgICAgYXJncy5wdXNoKChlcnJvciwgLi4uY2JBcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHJldFZhbCA9IHt9O1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZXRWYWwuZXJyb3IgPSBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNiQXJncy5sZW5ndGggPiAwKXtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gY2JBcmdzO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2JBcmdzLmxlbmd0aCA8PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBbdmFsdWVdID0gY2JBcmdzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldFZhbC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZWZsZWN0Q2FsbGJhY2sobnVsbCwgcmV0VmFsKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gX2ZuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBIGhlbHBlciBmdW5jdGlvbiB0aGF0IHdyYXBzIGFuIGFycmF5IG9yIGFuIG9iamVjdCBvZiBmdW5jdGlvbnMgd2l0aCBgcmVmbGVjdGAuXG4gICAgICpcbiAgICAgKiBAbmFtZSByZWZsZWN0QWxsXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6VXRpbHNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMucmVmbGVjdF17QGxpbmsgbW9kdWxlOlV0aWxzLnJlZmxlY3R9XG4gICAgICogQGNhdGVnb3J5IFV0aWxcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxJdGVyYWJsZX0gdGFza3MgLSBUaGUgY29sbGVjdGlvbiBvZlxuICAgICAqIFthc3luYyBmdW5jdGlvbnNde0BsaW5rIEFzeW5jRnVuY3Rpb259IHRvIHdyYXAgaW4gYGFzeW5jLnJlZmxlY3RgLlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhbiBhcnJheSBvZiBhc3luYyBmdW5jdGlvbnMsIGVhY2ggd3JhcHBlZCBpblxuICAgICAqIGBhc3luYy5yZWZsZWN0YFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBsZXQgdGFza3MgPSBbXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICdvbmUnKTtcbiAgICAgKiAgICAgICAgIH0sIDIwMCk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAvLyBkbyBzb21lIG1vcmUgc3R1ZmYgYnV0IGVycm9yIC4uLlxuICAgICAqICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCdiYWQgc3R1ZmYgaGFwcGVuZWQnKSk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICd0d28nKTtcbiAgICAgKiAgICAgICAgIH0sIDEwMCk7XG4gICAgICogICAgIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogYXN5bmMucGFyYWxsZWwoYXN5bmMucmVmbGVjdEFsbCh0YXNrcyksXG4gICAgICogLy8gb3B0aW9uYWwgY2FsbGJhY2tcbiAgICAgKiBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAgICAgKiAgICAgLy8gdmFsdWVzXG4gICAgICogICAgIC8vIHJlc3VsdHNbMF0udmFsdWUgPSAnb25lJ1xuICAgICAqICAgICAvLyByZXN1bHRzWzFdLmVycm9yID0gRXJyb3IoJ2JhZCBzdHVmZiBoYXBwZW5lZCcpXG4gICAgICogICAgIC8vIHJlc3VsdHNbMl0udmFsdWUgPSAndHdvJ1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gYW4gZXhhbXBsZSB1c2luZyBhbiBvYmplY3QgaW5zdGVhZCBvZiBhbiBhcnJheVxuICAgICAqIGxldCB0YXNrcyA9IHtcbiAgICAgKiAgICAgb25lOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAnb25lJyk7XG4gICAgICogICAgICAgICB9LCAyMDApO1xuICAgICAqICAgICB9LFxuICAgICAqICAgICB0d286IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBjYWxsYmFjaygndHdvJyk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIHRocmVlOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAndGhyZWUnKTtcbiAgICAgKiAgICAgICAgIH0sIDEwMCk7XG4gICAgICogICAgIH1cbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogYXN5bmMucGFyYWxsZWwoYXN5bmMucmVmbGVjdEFsbCh0YXNrcyksXG4gICAgICogLy8gb3B0aW9uYWwgY2FsbGJhY2tcbiAgICAgKiBmdW5jdGlvbihlcnIsIHJlc3VsdHMpIHtcbiAgICAgKiAgICAgLy8gdmFsdWVzXG4gICAgICogICAgIC8vIHJlc3VsdHMub25lLnZhbHVlID0gJ29uZSdcbiAgICAgKiAgICAgLy8gcmVzdWx0cy50d28uZXJyb3IgPSAndHdvJ1xuICAgICAqICAgICAvLyByZXN1bHRzLnRocmVlLnZhbHVlID0gJ3RocmVlJ1xuICAgICAqIH0pO1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlZmxlY3RBbGwodGFza3MpIHtcbiAgICAgICAgdmFyIHJlc3VsdHM7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRhc2tzKSkge1xuICAgICAgICAgICAgcmVzdWx0cyA9IHRhc2tzLm1hcChyZWZsZWN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdHMgPSB7fTtcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKHRhc2tzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzdWx0c1trZXldID0gcmVmbGVjdC5jYWxsKHRoaXMsIHRhc2tzW2tleV0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVqZWN0KGVhY2hmbiwgYXJyLCBfaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIGNvbnN0IGl0ZXJhdGVlID0gd3JhcEFzeW5jKF9pdGVyYXRlZSk7XG4gICAgICAgIHJldHVybiBfZmlsdGVyKGVhY2hmbiwgYXJyLCAodmFsdWUsIGNiKSA9PiB7XG4gICAgICAgICAgICBpdGVyYXRlZSh2YWx1ZSwgKGVyciwgdikgPT4ge1xuICAgICAgICAgICAgICAgIGNiKGVyciwgIXYpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgb3Bwb3NpdGUgb2YgW2BmaWx0ZXJgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuZmlsdGVyfS4gUmVtb3ZlcyB2YWx1ZXMgdGhhdCBwYXNzIGFuIGBhc3luY2AgdHJ1dGggdGVzdC5cbiAgICAgKlxuICAgICAqIEBuYW1lIHJlamVjdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLmZpbHRlcl17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLmZpbHRlcn1cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgdHJ1dGggdGVzdCB0byBhcHBseSB0byBlYWNoIGl0ZW0gaW5cbiAgICAgKiBgY29sbGAuXG4gICAgICogVGhlIHNob3VsZCBjb21wbGV0ZSB3aXRoIGEgYm9vbGVhbiB2YWx1ZSBhcyBpdHMgYHJlc3VsdGAuXG4gICAgICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFmdGVyIGFsbCB0aGVcbiAgICAgKiBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0cykuXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcGFzc2VkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIGRpcjEgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlMS50eHQsIGZpbGUyLnR4dFxuICAgICAqIC8vIGRpcjIgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlMy50eHQsIGZpbGU0LnR4dFxuICAgICAqIC8vIGRpcjMgaXMgYSBkaXJlY3RvcnkgdGhhdCBjb250YWlucyBmaWxlNS50eHRcbiAgICAgKlxuICAgICAqIGNvbnN0IGZpbGVMaXN0ID0gWydkaXIxL2ZpbGUxLnR4dCcsJ2RpcjIvZmlsZTMudHh0JywnZGlyMy9maWxlNi50eHQnXTtcbiAgICAgKlxuICAgICAqIC8vIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IGNoZWNrcyBpZiBhIGZpbGUgZXhpc3RzXG4gICAgICogZnVuY3Rpb24gZmlsZUV4aXN0cyhmaWxlLCBjYWxsYmFjaykge1xuICAgICAqICAgIGZzLmFjY2VzcyhmaWxlLCBmcy5jb25zdGFudHMuRl9PSywgKGVycikgPT4ge1xuICAgICAqICAgICAgICBjYWxsYmFjayhudWxsLCAhZXJyKTtcbiAgICAgKiAgICB9KTtcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBjYWxsYmFja3NcbiAgICAgKiBhc3luYy5yZWplY3QoZmlsZUxpc3QsIGZpbGVFeGlzdHMsIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgIC8vIFsgJ2RpcjMvZmlsZTYudHh0JyBdXG4gICAgICogICAgLy8gcmVzdWx0cyBub3cgZXF1YWxzIGFuIGFycmF5IG9mIHRoZSBub24tZXhpc3RpbmcgZmlsZXNcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMucmVqZWN0KGZpbGVMaXN0LCBmaWxlRXhpc3RzKVxuICAgICAqIC50aGVuKCByZXN1bHRzID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgIC8vIFsgJ2RpcjMvZmlsZTYudHh0JyBdXG4gICAgICogICAgIC8vIHJlc3VsdHMgbm93IGVxdWFscyBhbiBhcnJheSBvZiB0aGUgbm9uLWV4aXN0aW5nIGZpbGVzXG4gICAgICogfSkuY2F0Y2goIGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBhc3luYy9hd2FpdFxuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHRzID0gYXdhaXQgYXN5bmMucmVqZWN0KGZpbGVMaXN0LCBmaWxlRXhpc3RzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgLy8gWyAnZGlyMy9maWxlNi50eHQnIF1cbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdHMgbm93IGVxdWFscyBhbiBhcnJheSBvZiB0aGUgbm9uLWV4aXN0aW5nIGZpbGVzXG4gICAgICogICAgIH1cbiAgICAgKiAgICAgY2F0Y2ggKGVycikge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlamVjdCQxIChjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHJlamVjdChlYWNoT2YkMSwgY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cbiAgICB2YXIgcmVqZWN0JDIgPSBhd2FpdGlmeShyZWplY3QkMSwgMyk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2FtZSBhcyBbYHJlamVjdGBde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5yZWplY3R9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYVxuICAgICAqIHRpbWUuXG4gICAgICpcbiAgICAgKiBAbmFtZSByZWplY3RMaW1pdFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgbW9kdWxlOkNvbGxlY3Rpb25zXG4gICAgICogQG1ldGhvZFxuICAgICAqIEBzZWUgW2FzeW5jLnJlamVjdF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLnJlamVjdH1cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsaW1pdCAtIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhc3luYyBvcGVyYXRpb25zIGF0IGEgdGltZS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gICAgICogYGNvbGxgLlxuICAgICAqIFRoZSBzaG91bGQgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gdmFsdWUgYXMgaXRzIGByZXN1bHRgLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciBhbGwgdGhlXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZC4gSW52b2tlZCB3aXRoIChlcnIsIHJlc3VsdHMpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlamVjdExpbWl0IChjb2xsLCBsaW1pdCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiByZWplY3QoZWFjaE9mTGltaXQobGltaXQpLCBjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciByZWplY3RMaW1pdCQxID0gYXdhaXRpZnkocmVqZWN0TGltaXQsIDQpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNhbWUgYXMgW2ByZWplY3RgXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMucmVqZWN0fSBidXQgcnVucyBvbmx5IGEgc2luZ2xlIGFzeW5jIG9wZXJhdGlvbiBhdCBhIHRpbWUuXG4gICAgICpcbiAgICAgKiBAbmFtZSByZWplY3RTZXJpZXNcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy5yZWplY3Rde0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5yZWplY3R9XG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gICAgICogYGNvbGxgLlxuICAgICAqIFRoZSBzaG91bGQgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gdmFsdWUgYXMgaXRzIGByZXN1bHRgLlxuICAgICAqIEludm9rZWQgd2l0aCAoaXRlbSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciBhbGwgdGhlXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZC4gSW52b2tlZCB3aXRoIChlcnIsIHJlc3VsdHMpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlamVjdFNlcmllcyAoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiByZWplY3QoZWFjaE9mU2VyaWVzJDEsIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIHJlamVjdFNlcmllcyQxID0gYXdhaXRpZnkocmVqZWN0U2VyaWVzLCAzKTtcblxuICAgIGZ1bmN0aW9uIGNvbnN0YW50JDEodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEF0dGVtcHRzIHRvIGdldCBhIHN1Y2Nlc3NmdWwgcmVzcG9uc2UgZnJvbSBgdGFza2Agbm8gbW9yZSB0aGFuIGB0aW1lc2AgdGltZXNcbiAgICAgKiBiZWZvcmUgcmV0dXJuaW5nIGFuIGVycm9yLiBJZiB0aGUgdGFzayBpcyBzdWNjZXNzZnVsLCB0aGUgYGNhbGxiYWNrYCB3aWxsIGJlXG4gICAgICogcGFzc2VkIHRoZSByZXN1bHQgb2YgdGhlIHN1Y2Nlc3NmdWwgdGFzay4gSWYgYWxsIGF0dGVtcHRzIGZhaWwsIHRoZSBjYWxsYmFja1xuICAgICAqIHdpbGwgYmUgcGFzc2VkIHRoZSBlcnJvciBhbmQgcmVzdWx0IChpZiBhbnkpIG9mIHRoZSBmaW5hbCBhdHRlbXB0LlxuICAgICAqXG4gICAgICogQG5hbWUgcmV0cnlcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHNlZSBbYXN5bmMucmV0cnlhYmxlXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cucmV0cnlhYmxlfVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fG51bWJlcn0gW29wdHMgPSB7dGltZXM6IDUsIGludGVydmFsOiAwfXwgNV0gLSBDYW4gYmUgZWl0aGVyIGFuXG4gICAgICogb2JqZWN0IHdpdGggYHRpbWVzYCBhbmQgYGludGVydmFsYCBvciBhIG51bWJlci5cbiAgICAgKiAqIGB0aW1lc2AgLSBUaGUgbnVtYmVyIG9mIGF0dGVtcHRzIHRvIG1ha2UgYmVmb3JlIGdpdmluZyB1cC4gIFRoZSBkZWZhdWx0XG4gICAgICogICBpcyBgNWAuXG4gICAgICogKiBgaW50ZXJ2YWxgIC0gVGhlIHRpbWUgdG8gd2FpdCBiZXR3ZWVuIHJldHJpZXMsIGluIG1pbGxpc2Vjb25kcy4gIFRoZVxuICAgICAqICAgZGVmYXVsdCBpcyBgMGAuIFRoZSBpbnRlcnZhbCBtYXkgYWxzbyBiZSBzcGVjaWZpZWQgYXMgYSBmdW5jdGlvbiBvZiB0aGVcbiAgICAgKiAgIHJldHJ5IGNvdW50IChzZWUgZXhhbXBsZSkuXG4gICAgICogKiBgZXJyb3JGaWx0ZXJgIC0gQW4gb3B0aW9uYWwgc3luY2hyb25vdXMgZnVuY3Rpb24gdGhhdCBpcyBpbnZva2VkIG9uXG4gICAgICogICBlcnJvbmVvdXMgcmVzdWx0LiBJZiBpdCByZXR1cm5zIGB0cnVlYCB0aGUgcmV0cnkgYXR0ZW1wdHMgd2lsbCBjb250aW51ZTtcbiAgICAgKiAgIGlmIHRoZSBmdW5jdGlvbiByZXR1cm5zIGBmYWxzZWAgdGhlIHJldHJ5IGZsb3cgaXMgYWJvcnRlZCB3aXRoIHRoZSBjdXJyZW50XG4gICAgICogICBhdHRlbXB0J3MgZXJyb3IgYW5kIHJlc3VsdCBiZWluZyByZXR1cm5lZCB0byB0aGUgZmluYWwgY2FsbGJhY2suXG4gICAgICogICBJbnZva2VkIHdpdGggKGVycikuXG4gICAgICogKiBJZiBgb3B0c2AgaXMgYSBudW1iZXIsIHRoZSBudW1iZXIgc3BlY2lmaWVzIHRoZSBudW1iZXIgb2YgdGltZXMgdG8gcmV0cnksXG4gICAgICogICB3aXRoIHRoZSBkZWZhdWx0IGludGVydmFsIG9mIGAwYC5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IHRhc2sgLSBBbiBhc3luYyBmdW5jdGlvbiB0byByZXRyeS5cbiAgICAgKiBJbnZva2VkIHdpdGggKGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQW4gb3B0aW9uYWwgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIHdoZW4gdGhlXG4gICAgICogdGFzayBoYXMgc3VjY2VlZGVkLCBvciBhZnRlciB0aGUgZmluYWwgZmFpbGVkIGF0dGVtcHQuIEl0IHJlY2VpdmVzIHRoZSBgZXJyYFxuICAgICAqIGFuZCBgcmVzdWx0YCBhcmd1bWVudHMgb2YgdGhlIGxhc3QgYXR0ZW1wdCBhdCBjb21wbGV0aW5nIHRoZSBgdGFza2AuIEludm9rZWRcbiAgICAgKiB3aXRoIChlcnIsIHJlc3VsdHMpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UgaWYgbm8gY2FsbGJhY2sgcHJvdmlkZWRcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBUaGUgYHJldHJ5YCBmdW5jdGlvbiBjYW4gYmUgdXNlZCBhcyBhIHN0YW5kLWFsb25lIGNvbnRyb2wgZmxvdyBieSBwYXNzaW5nXG4gICAgICogLy8gYSBjYWxsYmFjaywgYXMgc2hvd24gYmVsb3c6XG4gICAgICpcbiAgICAgKiAvLyB0cnkgY2FsbGluZyBhcGlNZXRob2QgMyB0aW1lc1xuICAgICAqIGFzeW5jLnJldHJ5KDMsIGFwaU1ldGhvZCwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgKiAgICAgLy8gZG8gc29tZXRoaW5nIHdpdGggdGhlIHJlc3VsdFxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gdHJ5IGNhbGxpbmcgYXBpTWV0aG9kIDMgdGltZXMsIHdhaXRpbmcgMjAwIG1zIGJldHdlZW4gZWFjaCByZXRyeVxuICAgICAqIGFzeW5jLnJldHJ5KHt0aW1lczogMywgaW50ZXJ2YWw6IDIwMH0sIGFwaU1ldGhvZCwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgKiAgICAgLy8gZG8gc29tZXRoaW5nIHdpdGggdGhlIHJlc3VsdFxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gdHJ5IGNhbGxpbmcgYXBpTWV0aG9kIDEwIHRpbWVzIHdpdGggZXhwb25lbnRpYWwgYmFja29mZlxuICAgICAqIC8vIChpLmUuIGludGVydmFscyBvZiAxMDAsIDIwMCwgNDAwLCA4MDAsIDE2MDAsIC4uLiBtaWxsaXNlY29uZHMpXG4gICAgICogYXN5bmMucmV0cnkoe1xuICAgICAqICAgdGltZXM6IDEwLFxuICAgICAqICAgaW50ZXJ2YWw6IGZ1bmN0aW9uKHJldHJ5Q291bnQpIHtcbiAgICAgKiAgICAgcmV0dXJuIDUwICogTWF0aC5wb3coMiwgcmV0cnlDb3VudCk7XG4gICAgICogICB9XG4gICAgICogfSwgYXBpTWV0aG9kLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAqICAgICAvLyBkbyBzb21ldGhpbmcgd2l0aCB0aGUgcmVzdWx0XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyB0cnkgY2FsbGluZyBhcGlNZXRob2QgdGhlIGRlZmF1bHQgNSB0aW1lcyBubyBkZWxheSBiZXR3ZWVuIGVhY2ggcmV0cnlcbiAgICAgKiBhc3luYy5yZXRyeShhcGlNZXRob2QsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIC8vIGRvIHNvbWV0aGluZyB3aXRoIHRoZSByZXN1bHRcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIHRyeSBjYWxsaW5nIGFwaU1ldGhvZCBvbmx5IHdoZW4gZXJyb3IgY29uZGl0aW9uIHNhdGlzZmllcywgYWxsIG90aGVyXG4gICAgICogLy8gZXJyb3JzIHdpbGwgYWJvcnQgdGhlIHJldHJ5IGNvbnRyb2wgZmxvdyBhbmQgcmV0dXJuIHRvIGZpbmFsIGNhbGxiYWNrXG4gICAgICogYXN5bmMucmV0cnkoe1xuICAgICAqICAgZXJyb3JGaWx0ZXI6IGZ1bmN0aW9uKGVycikge1xuICAgICAqICAgICByZXR1cm4gZXJyLm1lc3NhZ2UgPT09ICdUZW1wb3JhcnkgZXJyb3InOyAvLyBvbmx5IHJldHJ5IG9uIGEgc3BlY2lmaWMgZXJyb3JcbiAgICAgKiAgIH1cbiAgICAgKiB9LCBhcGlNZXRob2QsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIC8vIGRvIHNvbWV0aGluZyB3aXRoIHRoZSByZXN1bHRcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIHRvIHJldHJ5IGluZGl2aWR1YWwgbWV0aG9kcyB0aGF0IGFyZSBub3QgYXMgcmVsaWFibGUgd2l0aGluIG90aGVyXG4gICAgICogLy8gY29udHJvbCBmbG93IGZ1bmN0aW9ucywgdXNlIHRoZSBgcmV0cnlhYmxlYCB3cmFwcGVyOlxuICAgICAqIGFzeW5jLmF1dG8oe1xuICAgICAqICAgICB1c2VyczogYXBpLmdldFVzZXJzLmJpbmQoYXBpKSxcbiAgICAgKiAgICAgcGF5bWVudHM6IGFzeW5jLnJldHJ5YWJsZSgzLCBhcGkuZ2V0UGF5bWVudHMuYmluZChhcGkpKVxuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICAvLyBkbyBzb21ldGhpbmcgd2l0aCB0aGUgcmVzdWx0c1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICovXG4gICAgY29uc3QgREVGQVVMVF9USU1FUyA9IDU7XG4gICAgY29uc3QgREVGQVVMVF9JTlRFUlZBTCA9IDA7XG5cbiAgICBmdW5jdGlvbiByZXRyeShvcHRzLCB0YXNrLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgIHRpbWVzOiBERUZBVUxUX1RJTUVTLFxuICAgICAgICAgICAgaW50ZXJ2YWxGdW5jOiBjb25zdGFudCQxKERFRkFVTFRfSU5URVJWQUwpXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzICYmIHR5cGVvZiBvcHRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWxsYmFjayA9IHRhc2sgfHwgcHJvbWlzZUNhbGxiYWNrKCk7XG4gICAgICAgICAgICB0YXNrID0gb3B0cztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlVGltZXMob3B0aW9ucywgb3B0cyk7XG4gICAgICAgICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IHByb21pc2VDYWxsYmFjaygpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiB0YXNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGFyZ3VtZW50cyBmb3IgYXN5bmMucmV0cnlcIik7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgX3Rhc2sgPSB3cmFwQXN5bmModGFzayk7XG5cbiAgICAgICAgdmFyIGF0dGVtcHQgPSAxO1xuICAgICAgICBmdW5jdGlvbiByZXRyeUF0dGVtcHQoKSB7XG4gICAgICAgICAgICBfdGFzaygoZXJyLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVyciA9PT0gZmFsc2UpIHJldHVyblxuICAgICAgICAgICAgICAgIGlmIChlcnIgJiYgYXR0ZW1wdCsrIDwgb3B0aW9ucy50aW1lcyAmJlxuICAgICAgICAgICAgICAgICAgICAodHlwZW9mIG9wdGlvbnMuZXJyb3JGaWx0ZXIgIT0gJ2Z1bmN0aW9uJyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5lcnJvckZpbHRlcihlcnIpKSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHJldHJ5QXR0ZW1wdCwgb3B0aW9ucy5pbnRlcnZhbEZ1bmMoYXR0ZW1wdCAtIDEpKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIsIC4uLmFyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0cnlBdHRlbXB0KCk7XG4gICAgICAgIHJldHVybiBjYWxsYmFja1tQUk9NSVNFX1NZTUJPTF1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwYXJzZVRpbWVzKGFjYywgdCkge1xuICAgICAgICBpZiAodHlwZW9mIHQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBhY2MudGltZXMgPSArdC50aW1lcyB8fCBERUZBVUxUX1RJTUVTO1xuXG4gICAgICAgICAgICBhY2MuaW50ZXJ2YWxGdW5jID0gdHlwZW9mIHQuaW50ZXJ2YWwgPT09ICdmdW5jdGlvbicgP1xuICAgICAgICAgICAgICAgIHQuaW50ZXJ2YWwgOlxuICAgICAgICAgICAgICAgIGNvbnN0YW50JDEoK3QuaW50ZXJ2YWwgfHwgREVGQVVMVF9JTlRFUlZBTCk7XG5cbiAgICAgICAgICAgIGFjYy5lcnJvckZpbHRlciA9IHQuZXJyb3JGaWx0ZXI7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHQgPT09ICdudW1iZXInIHx8IHR5cGVvZiB0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgYWNjLnRpbWVzID0gK3QgfHwgREVGQVVMVF9USU1FUztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJndW1lbnRzIGZvciBhc3luYy5yZXRyeVwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEEgY2xvc2UgcmVsYXRpdmUgb2YgW2ByZXRyeWBde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5yZXRyeX0uICBUaGlzIG1ldGhvZFxuICAgICAqIHdyYXBzIGEgdGFzayBhbmQgbWFrZXMgaXQgcmV0cnlhYmxlLCByYXRoZXIgdGhhbiBpbW1lZGlhdGVseSBjYWxsaW5nIGl0XG4gICAgICogd2l0aCByZXRyaWVzLlxuICAgICAqXG4gICAgICogQG5hbWUgcmV0cnlhYmxlXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMucmV0cnlde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy5yZXRyeX1cbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtPYmplY3R8bnVtYmVyfSBbb3B0cyA9IHt0aW1lczogNSwgaW50ZXJ2YWw6IDB9fCA1XSAtIG9wdGlvbmFsXG4gICAgICogb3B0aW9ucywgZXhhY3RseSB0aGUgc2FtZSBhcyBmcm9tIGByZXRyeWAsIGV4Y2VwdCBmb3IgYSBgb3B0cy5hcml0eWAgdGhhdFxuICAgICAqIGlzIHRoZSBhcml0eSBvZiB0aGUgYHRhc2tgIGZ1bmN0aW9uLCBkZWZhdWx0aW5nIHRvIGB0YXNrLmxlbmd0aGBcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IHRhc2sgLSB0aGUgYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRvIHdyYXAuXG4gICAgICogVGhpcyBmdW5jdGlvbiB3aWxsIGJlIHBhc3NlZCBhbnkgYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgcmV0dXJuZWQgd3JhcHBlci5cbiAgICAgKiBJbnZva2VkIHdpdGggKC4uLmFyZ3MsIGNhbGxiYWNrKS5cbiAgICAgKiBAcmV0dXJucyB7QXN5bmNGdW5jdGlvbn0gVGhlIHdyYXBwZWQgZnVuY3Rpb24sIHdoaWNoIHdoZW4gaW52b2tlZCwgd2lsbFxuICAgICAqIHJldHJ5IG9uIGFuIGVycm9yLCBiYXNlZCBvbiB0aGUgcGFyYW1ldGVycyBzcGVjaWZpZWQgaW4gYG9wdHNgLlxuICAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCBhY2NlcHQgdGhlIHNhbWUgcGFyYW1ldGVycyBhcyBgdGFza2AuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIGFzeW5jLmF1dG8oe1xuICAgICAqICAgICBkZXAxOiBhc3luYy5yZXRyeWFibGUoMywgZ2V0RnJvbUZsYWt5U2VydmljZSksXG4gICAgICogICAgIHByb2Nlc3M6IFtcImRlcDFcIiwgYXN5bmMucmV0cnlhYmxlKDMsIGZ1bmN0aW9uIChyZXN1bHRzLCBjYikge1xuICAgICAqICAgICAgICAgbWF5YmVQcm9jZXNzRGF0YShyZXN1bHRzLmRlcDEsIGNiKTtcbiAgICAgKiAgICAgfSldXG4gICAgICogfSwgY2FsbGJhY2spO1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJldHJ5YWJsZSAob3B0cywgdGFzaykge1xuICAgICAgICBpZiAoIXRhc2spIHtcbiAgICAgICAgICAgIHRhc2sgPSBvcHRzO1xuICAgICAgICAgICAgb3B0cyA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGFyaXR5ID0gKG9wdHMgJiYgb3B0cy5hcml0eSkgfHwgdGFzay5sZW5ndGg7XG4gICAgICAgIGlmIChpc0FzeW5jKHRhc2spKSB7XG4gICAgICAgICAgICBhcml0eSArPSAxO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfdGFzayA9IHdyYXBBc3luYyh0YXNrKTtcbiAgICAgICAgcmV0dXJuIGluaXRpYWxQYXJhbXMoKGFyZ3MsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICBpZiAoYXJncy5sZW5ndGggPCBhcml0eSAtIDEgfHwgY2FsbGJhY2sgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGFyZ3MucHVzaChjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgPSBwcm9taXNlQ2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHRhc2tGbihjYikge1xuICAgICAgICAgICAgICAgIF90YXNrKC4uLmFyZ3MsIGNiKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG9wdHMpIHJldHJ5KG9wdHMsIHRhc2tGbiwgY2FsbGJhY2spO1xuICAgICAgICAgICAgZWxzZSByZXRyeSh0YXNrRm4sIGNhbGxiYWNrKTtcblxuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrW1BST01JU0VfU1lNQk9MXVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSdW4gdGhlIGZ1bmN0aW9ucyBpbiB0aGUgYHRhc2tzYCBjb2xsZWN0aW9uIGluIHNlcmllcywgZWFjaCBvbmUgcnVubmluZyBvbmNlXG4gICAgICogdGhlIHByZXZpb3VzIGZ1bmN0aW9uIGhhcyBjb21wbGV0ZWQuIElmIGFueSBmdW5jdGlvbnMgaW4gdGhlIHNlcmllcyBwYXNzIGFuXG4gICAgICogZXJyb3IgdG8gaXRzIGNhbGxiYWNrLCBubyBtb3JlIGZ1bmN0aW9ucyBhcmUgcnVuLCBhbmQgYGNhbGxiYWNrYCBpc1xuICAgICAqIGltbWVkaWF0ZWx5IGNhbGxlZCB3aXRoIHRoZSB2YWx1ZSBvZiB0aGUgZXJyb3IuIE90aGVyd2lzZSwgYGNhbGxiYWNrYFxuICAgICAqIHJlY2VpdmVzIGFuIGFycmF5IG9mIHJlc3VsdHMgd2hlbiBgdGFza3NgIGhhdmUgY29tcGxldGVkLlxuICAgICAqXG4gICAgICogSXQgaXMgYWxzbyBwb3NzaWJsZSB0byB1c2UgYW4gb2JqZWN0IGluc3RlYWQgb2YgYW4gYXJyYXkuIEVhY2ggcHJvcGVydHkgd2lsbFxuICAgICAqIGJlIHJ1biBhcyBhIGZ1bmN0aW9uLCBhbmQgdGhlIHJlc3VsdHMgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIGZpbmFsIGBjYWxsYmFja2BcbiAgICAgKiBhcyBhbiBvYmplY3QgaW5zdGVhZCBvZiBhbiBhcnJheS4gVGhpcyBjYW4gYmUgYSBtb3JlIHJlYWRhYmxlIHdheSBvZiBoYW5kbGluZ1xuICAgICAqICByZXN1bHRzIGZyb20ge0BsaW5rIGFzeW5jLnNlcmllc30uXG4gICAgICpcbiAgICAgKiAqKk5vdGUqKiB0aGF0IHdoaWxlIG1hbnkgaW1wbGVtZW50YXRpb25zIHByZXNlcnZlIHRoZSBvcmRlciBvZiBvYmplY3RcbiAgICAgKiBwcm9wZXJ0aWVzLCB0aGUgW0VDTUFTY3JpcHQgTGFuZ3VhZ2UgU3BlY2lmaWNhdGlvbl0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzUuMS8jc2VjLTguNilcbiAgICAgKiBleHBsaWNpdGx5IHN0YXRlcyB0aGF0XG4gICAgICpcbiAgICAgKiA+IFRoZSBtZWNoYW5pY3MgYW5kIG9yZGVyIG9mIGVudW1lcmF0aW5nIHRoZSBwcm9wZXJ0aWVzIGlzIG5vdCBzcGVjaWZpZWQuXG4gICAgICpcbiAgICAgKiBTbyBpZiB5b3UgcmVseSBvbiB0aGUgb3JkZXIgaW4gd2hpY2ggeW91ciBzZXJpZXMgb2YgZnVuY3Rpb25zIGFyZSBleGVjdXRlZCxcbiAgICAgKiBhbmQgd2FudCB0aGlzIHRvIHdvcmsgb24gYWxsIHBsYXRmb3JtcywgY29uc2lkZXIgdXNpbmcgYW4gYXJyYXkuXG4gICAgICpcbiAgICAgKiBAbmFtZSBzZXJpZXNcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gdGFza3MgLSBBIGNvbGxlY3Rpb24gY29udGFpbmluZ1xuICAgICAqIFthc3luYyBmdW5jdGlvbnNde0BsaW5rIEFzeW5jRnVuY3Rpb259IHRvIHJ1biBpbiBzZXJpZXMuXG4gICAgICogRWFjaCBmdW5jdGlvbiBjYW4gY29tcGxldGUgd2l0aCBhbnkgbnVtYmVyIG9mIG9wdGlvbmFsIGByZXN1bHRgIHZhbHVlcy5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQW4gb3B0aW9uYWwgY2FsbGJhY2sgdG8gcnVuIG9uY2UgYWxsIHRoZVxuICAgICAqIGZ1bmN0aW9ucyBoYXZlIGNvbXBsZXRlZC4gVGhpcyBmdW5jdGlvbiBnZXRzIGEgcmVzdWx0cyBhcnJheSAob3Igb2JqZWN0KVxuICAgICAqIGNvbnRhaW5pbmcgYWxsIHRoZSByZXN1bHQgYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgYHRhc2tgIGNhbGxiYWNrcy4gSW52b2tlZFxuICAgICAqIHdpdGggKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvL1VzaW5nIENhbGxiYWNrc1xuICAgICAqIGFzeW5jLnNlcmllcyhbXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIC8vIGRvIHNvbWUgYXN5bmMgdGFza1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICdvbmUnKTtcbiAgICAgKiAgICAgICAgIH0sIDIwMCk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIC8vIHRoZW4gZG8gYW5vdGhlciBhc3luYyB0YXNrXG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3R3bycpO1xuICAgICAqICAgICAgICAgfSwgMTAwKTtcbiAgICAgKiAgICAgfVxuICAgICAqIF0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgLy8gcmVzdWx0cyBpcyBlcXVhbCB0byBbJ29uZScsJ3R3byddXG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBhbiBleGFtcGxlIHVzaW5nIG9iamVjdHMgaW5zdGVhZCBvZiBhcnJheXNcbiAgICAgKiBhc3luYy5zZXJpZXMoe1xuICAgICAqICAgICBvbmU6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIC8vIGRvIHNvbWUgYXN5bmMgdGFza1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIDEpO1xuICAgICAqICAgICAgICAgfSwgMjAwKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgdHdvOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICAvLyB0aGVuIGRvIGFub3RoZXIgYXN5bmMgdGFza1xuICAgICAqICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIDIpO1xuICAgICAqICAgICAgICAgfSwgMTAwKTtcbiAgICAgKiAgICAgfVxuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgLy8gcmVzdWx0cyBpcyBlcXVhbCB0bzogeyBvbmU6IDEsIHR3bzogMiB9XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvL1VzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMuc2VyaWVzKFtcbiAgICAgKiAgICAgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ29uZScpO1xuICAgICAqICAgICAgICAgfSwgMjAwKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3R3bycpO1xuICAgICAqICAgICAgICAgfSwgMTAwKTtcbiAgICAgKiAgICAgfVxuICAgICAqIF0pLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAvLyByZXN1bHRzIGlzIGVxdWFsIHRvIFsnb25lJywndHdvJ11cbiAgICAgKiB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gYW4gZXhhbXBsZSB1c2luZyBhbiBvYmplY3QgaW5zdGVhZCBvZiBhbiBhcnJheVxuICAgICAqIGFzeW5jLnNlcmllcyh7XG4gICAgICogICAgIG9uZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgLy8gZG8gc29tZSBhc3luYyB0YXNrXG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgMSk7XG4gICAgICogICAgICAgICB9LCAyMDApO1xuICAgICAqICAgICB9LFxuICAgICAqICAgICB0d286IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgICAgIC8vIHRoZW4gZG8gYW5vdGhlciBhc3luYyB0YXNrXG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgMik7XG4gICAgICogICAgICAgICB9LCAxMDApO1xuICAgICAqICAgICB9XG4gICAgICogfSkudGhlbihyZXN1bHRzID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgIC8vIHJlc3VsdHMgaXMgZXF1YWwgdG86IHsgb25lOiAxLCB0d286IDIgfVxuICAgICAqIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvL1VzaW5nIGFzeW5jL2F3YWl0XG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdHMgPSBhd2FpdCBhc3luYy5zZXJpZXMoW1xuICAgICAqICAgICAgICAgICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgICAgICAgICAvLyBkbyBzb21lIGFzeW5jIHRhc2tcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsICdvbmUnKTtcbiAgICAgKiAgICAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgKiAgICAgICAgICAgICB9LFxuICAgICAqICAgICAgICAgICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgICAgICAgICAvLyB0aGVuIGRvIGFub3RoZXIgYXN5bmMgdGFza1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ3R3bycpO1xuICAgICAqICAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAqICAgICAgICAgICAgIH1cbiAgICAgKiAgICAgICAgIF0pO1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgICAgICAvLyByZXN1bHRzIGlzIGVxdWFsIHRvIFsnb25lJywndHdvJ11cbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gYW4gZXhhbXBsZSB1c2luZyBhbiBvYmplY3QgaW5zdGVhZCBvZiBhbiBhcnJheVxuICAgICAqIGFzeW5jICgpID0+IHtcbiAgICAgKiAgICAgdHJ5IHtcbiAgICAgKiAgICAgICAgIGxldCByZXN1bHRzID0gYXdhaXQgYXN5bmMucGFyYWxsZWwoe1xuICAgICAqICAgICAgICAgICAgIG9uZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgIC8vIGRvIHNvbWUgYXN5bmMgdGFza1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgMSk7XG4gICAgICogICAgICAgICAgICAgICAgIH0sIDIwMCk7XG4gICAgICogICAgICAgICAgICAgfSxcbiAgICAgKiAgICAgICAgICAgIHR3bzogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgIC8vIHRoZW4gZG8gYW5vdGhlciBhc3luYyB0YXNrXG4gICAgICogICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAyKTtcbiAgICAgKiAgICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgKiAgICAgICAgICAgIH1cbiAgICAgKiAgICAgICAgIH0pO1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogICAgICAgICAvLyByZXN1bHRzIGlzIGVxdWFsIHRvOiB7IG9uZTogMSwgdHdvOiAyIH1cbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gc2VyaWVzKHRhc2tzLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gX3BhcmFsbGVsKGVhY2hPZlNlcmllcyQxLCB0YXNrcywgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYHRydWVgIGlmIGF0IGxlYXN0IG9uZSBlbGVtZW50IGluIHRoZSBgY29sbGAgc2F0aXNmaWVzIGFuIGFzeW5jIHRlc3QuXG4gICAgICogSWYgYW55IGl0ZXJhdGVlIGNhbGwgcmV0dXJucyBgdHJ1ZWAsIHRoZSBtYWluIGBjYWxsYmFja2AgaXMgaW1tZWRpYXRlbHlcbiAgICAgKiBjYWxsZWQuXG4gICAgICpcbiAgICAgKiBAbmFtZSBzb21lXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGFsaWFzIGFueVxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gICAgICogQHBhcmFtIHtBcnJheXxJdGVyYWJsZXxBc3luY0l0ZXJhYmxlfE9iamVjdH0gY29sbCAtIEEgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtXG4gICAgICogaW4gdGhlIGNvbGxlY3Rpb25zIGluIHBhcmFsbGVsLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gYHJlc3VsdGAgdmFsdWUuXG4gICAgICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFzIHNvb24gYXMgYW55XG4gICAgICogaXRlcmF0ZWUgcmV0dXJucyBgdHJ1ZWAsIG9yIGFmdGVyIGFsbCB0aGUgaXRlcmF0ZWUgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQuXG4gICAgICogUmVzdWx0IHdpbGwgYmUgZWl0aGVyIGB0cnVlYCBvciBgZmFsc2VgIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIG9mIHRoZSBhc3luY1xuICAgICAqIHRlc3RzLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwcm92aWRlZFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBkaXIxIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTEudHh0LCBmaWxlMi50eHRcbiAgICAgKiAvLyBkaXIyIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTMudHh0LCBmaWxlNC50eHRcbiAgICAgKiAvLyBkaXIzIGlzIGEgZGlyZWN0b3J5IHRoYXQgY29udGFpbnMgZmlsZTUudHh0XG4gICAgICogLy8gZGlyNCBkb2VzIG5vdCBleGlzdFxuICAgICAqXG4gICAgICogLy8gYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRoYXQgY2hlY2tzIGlmIGEgZmlsZSBleGlzdHNcbiAgICAgKiBmdW5jdGlvbiBmaWxlRXhpc3RzKGZpbGUsIGNhbGxiYWNrKSB7XG4gICAgICogICAgZnMuYWNjZXNzKGZpbGUsIGZzLmNvbnN0YW50cy5GX09LLCAoZXJyKSA9PiB7XG4gICAgICogICAgICAgIGNhbGxiYWNrKG51bGwsICFlcnIpO1xuICAgICAqICAgIH0pO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGNhbGxiYWNrc1xuICAgICAqIGFzeW5jLnNvbWUoWydkaXIxL21pc3NpbmcudHh0JywnZGlyMi9taXNzaW5nLnR4dCcsJ2RpcjMvZmlsZTUudHh0J10sIGZpbGVFeGlzdHMsXG4gICAgICogICAgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgKiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiAgICAgICAgLy8gdHJ1ZVxuICAgICAqICAgICAgICAvLyByZXN1bHQgaXMgdHJ1ZSBzaW5jZSBzb21lIGZpbGUgaW4gdGhlIGxpc3QgZXhpc3RzXG4gICAgICogICAgfVxuICAgICAqKTtcbiAgICAgKlxuICAgICAqIGFzeW5jLnNvbWUoWydkaXIxL21pc3NpbmcudHh0JywnZGlyMi9taXNzaW5nLnR4dCcsJ2RpcjQvbWlzc2luZy50eHQnXSwgZmlsZUV4aXN0cyxcbiAgICAgKiAgICBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAqICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAvLyBmYWxzZVxuICAgICAqICAgICAgICAvLyByZXN1bHQgaXMgZmFsc2Ugc2luY2Ugbm9uZSBvZiB0aGUgZmlsZXMgZXhpc3RzXG4gICAgICogICAgfVxuICAgICAqKTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMuc29tZShbJ2RpcjEvbWlzc2luZy50eHQnLCdkaXIyL21pc3NpbmcudHh0JywnZGlyMy9maWxlNS50eHQnXSwgZmlsZUV4aXN0cylcbiAgICAgKiAudGhlbiggcmVzdWx0ID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiAgICAgLy8gdHJ1ZVxuICAgICAqICAgICAvLyByZXN1bHQgaXMgdHJ1ZSBzaW5jZSBzb21lIGZpbGUgaW4gdGhlIGxpc3QgZXhpc3RzXG4gICAgICogfSkuY2F0Y2goIGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiBhc3luYy5zb21lKFsnZGlyMS9taXNzaW5nLnR4dCcsJ2RpcjIvbWlzc2luZy50eHQnLCdkaXI0L21pc3NpbmcudHh0J10sIGZpbGVFeGlzdHMpXG4gICAgICogLnRoZW4oIHJlc3VsdCA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgIC8vIGZhbHNlXG4gICAgICogICAgIC8vIHJlc3VsdCBpcyBmYWxzZSBzaW5jZSBub25lIG9mIHRoZSBmaWxlcyBleGlzdHNcbiAgICAgKiB9KS5jYXRjaCggZXJyID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIGFzeW5jL2F3YWl0XG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGFzeW5jLnNvbWUoWydkaXIxL21pc3NpbmcudHh0JywnZGlyMi9taXNzaW5nLnR4dCcsJ2RpcjMvZmlsZTUudHh0J10sIGZpbGVFeGlzdHMpO1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiAgICAgICAgIC8vIHRydWVcbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdCBpcyB0cnVlIHNpbmNlIHNvbWUgZmlsZSBpbiB0aGUgbGlzdCBleGlzdHNcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGFzeW5jLnNvbWUoWydkaXIxL21pc3NpbmcudHh0JywnZGlyMi9taXNzaW5nLnR4dCcsJ2RpcjQvbWlzc2luZy50eHQnXSwgZmlsZUV4aXN0cyk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8gZmFsc2VcbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdCBpcyBmYWxzZSBzaW5jZSBub25lIG9mIHRoZSBmaWxlcyBleGlzdHNcbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gc29tZShjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIF9jcmVhdGVUZXN0ZXIoQm9vbGVhbiwgcmVzID0+IHJlcykoZWFjaE9mJDEsIGNvbGwsIGl0ZXJhdGVlLCBjYWxsYmFjaylcbiAgICB9XG4gICAgdmFyIHNvbWUkMSA9IGF3YWl0aWZ5KHNvbWUsIDMpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNhbWUgYXMgW2Bzb21lYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLnNvbWV9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYSB0aW1lLlxuICAgICAqXG4gICAgICogQG5hbWUgc29tZUxpbWl0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMuc29tZV17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLnNvbWV9XG4gICAgICogQGFsaWFzIGFueUxpbWl0XG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbGltaXQgLSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXN5bmMgb3BlcmF0aW9ucyBhdCBhIHRpbWUuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIHRydXRoIHRlc3QgdG8gYXBwbHkgdG8gZWFjaCBpdGVtXG4gICAgICogaW4gdGhlIGNvbGxlY3Rpb25zIGluIHBhcmFsbGVsLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gYHJlc3VsdGAgdmFsdWUuXG4gICAgICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFzIHNvb24gYXMgYW55XG4gICAgICogaXRlcmF0ZWUgcmV0dXJucyBgdHJ1ZWAsIG9yIGFmdGVyIGFsbCB0aGUgaXRlcmF0ZWUgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQuXG4gICAgICogUmVzdWx0IHdpbGwgYmUgZWl0aGVyIGB0cnVlYCBvciBgZmFsc2VgIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIG9mIHRoZSBhc3luY1xuICAgICAqIHRlc3RzLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwcm92aWRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNvbWVMaW1pdChjb2xsLCBsaW1pdCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBfY3JlYXRlVGVzdGVyKEJvb2xlYW4sIHJlcyA9PiByZXMpKGVhY2hPZkxpbWl0KGxpbWl0KSwgY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cbiAgICB2YXIgc29tZUxpbWl0JDEgPSBhd2FpdGlmeShzb21lTGltaXQsIDQpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNhbWUgYXMgW2Bzb21lYF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLnNvbWV9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIHNvbWVTZXJpZXNcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy5zb21lXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMuc29tZX1cbiAgICAgKiBAYWxpYXMgYW55U2VyaWVzXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgdHJ1dGggdGVzdCB0byBhcHBseSB0byBlYWNoIGl0ZW1cbiAgICAgKiBpbiB0aGUgY29sbGVjdGlvbnMgaW4gc2VyaWVzLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCBhIGJvb2xlYW4gYHJlc3VsdGAgdmFsdWUuXG4gICAgICogSW52b2tlZCB3aXRoIChpdGVtLCBjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFzIHNvb24gYXMgYW55XG4gICAgICogaXRlcmF0ZWUgcmV0dXJucyBgdHJ1ZWAsIG9yIGFmdGVyIGFsbCB0aGUgaXRlcmF0ZWUgZnVuY3Rpb25zIGhhdmUgZmluaXNoZWQuXG4gICAgICogUmVzdWx0IHdpbGwgYmUgZWl0aGVyIGB0cnVlYCBvciBgZmFsc2VgIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIG9mIHRoZSBhc3luY1xuICAgICAqIHRlc3RzLiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwcm92aWRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNvbWVTZXJpZXMoY29sbCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBfY3JlYXRlVGVzdGVyKEJvb2xlYW4sIHJlcyA9PiByZXMpKGVhY2hPZlNlcmllcyQxLCBjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuICAgIHZhciBzb21lU2VyaWVzJDEgPSBhd2FpdGlmeShzb21lU2VyaWVzLCAzKTtcblxuICAgIC8qKlxuICAgICAqIFNvcnRzIGEgbGlzdCBieSB0aGUgcmVzdWx0cyBvZiBydW5uaW5nIGVhY2ggYGNvbGxgIHZhbHVlIHRocm91Z2ggYW4gYXN5bmNcbiAgICAgKiBgaXRlcmF0ZWVgLlxuICAgICAqXG4gICAgICogQG5hbWUgc29ydEJ5XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29sbGVjdGlvbnNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0ge0FycmF5fEl0ZXJhYmxlfEFzeW5jSXRlcmFibGV8T2JqZWN0fSBjb2xsIC0gQSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQW4gYXN5bmMgZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCBpdGVtIGluXG4gICAgICogYGNvbGxgLlxuICAgICAqIFRoZSBpdGVyYXRlZSBzaG91bGQgY29tcGxldGUgd2l0aCBhIHZhbHVlIHRvIHVzZSBhcyB0aGUgc29ydCBjcml0ZXJpYSBhc1xuICAgICAqIGl0cyBgcmVzdWx0YC5cbiAgICAgKiBJbnZva2VkIHdpdGggKGl0ZW0sIGNhbGxiYWNrKS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFmdGVyIGFsbCB0aGVcbiAgICAgKiBgaXRlcmF0ZWVgIGZ1bmN0aW9ucyBoYXZlIGZpbmlzaGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIFJlc3VsdHMgaXMgdGhlIGl0ZW1zXG4gICAgICogZnJvbSB0aGUgb3JpZ2luYWwgYGNvbGxgIHNvcnRlZCBieSB0aGUgdmFsdWVzIHJldHVybmVkIGJ5IHRoZSBgaXRlcmF0ZWVgXG4gICAgICogY2FsbHMuIEludm9rZWQgd2l0aCAoZXJyLCByZXN1bHRzKS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwYXNzZWRcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gYmlnZmlsZS50eHQgaXMgYSBmaWxlIHRoYXQgaXMgMjUxMTAwIGJ5dGVzIGluIHNpemVcbiAgICAgKiAvLyBtZWRpdW1maWxlLnR4dCBpcyBhIGZpbGUgdGhhdCBpcyAxMTAwMCBieXRlcyBpbiBzaXplXG4gICAgICogLy8gc21hbGxmaWxlLnR4dCBpcyBhIGZpbGUgdGhhdCBpcyAxMjEgYnl0ZXMgaW4gc2l6ZVxuICAgICAqXG4gICAgICogLy8gYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgZmlsZSBzaXplIGluIGJ5dGVzXG4gICAgICogZnVuY3Rpb24gZ2V0RmlsZVNpemVJbkJ5dGVzKGZpbGUsIGNhbGxiYWNrKSB7XG4gICAgICogICAgIGZzLnN0YXQoZmlsZSwgZnVuY3Rpb24oZXJyLCBzdGF0KSB7XG4gICAgICogICAgICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICogICAgICAgICB9XG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCBzdGF0LnNpemUpO1xuICAgICAqICAgICB9KTtcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBjYWxsYmFja3NcbiAgICAgKiBhc3luYy5zb3J0QnkoWydtZWRpdW1maWxlLnR4dCcsJ3NtYWxsZmlsZS50eHQnLCdiaWdmaWxlLnR4dCddLCBnZXRGaWxlU2l6ZUluQnl0ZXMsXG4gICAgICogICAgIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICAgICAgaWYgKGVycikge1xuICAgICAqICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgICAgICB9IGVsc2Uge1xuICAgICAqICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgICAgIC8vIHJlc3VsdHMgaXMgbm93IHRoZSBvcmlnaW5hbCBhcnJheSBvZiBmaWxlcyBzb3J0ZWQgYnlcbiAgICAgKiAgICAgICAgICAgICAvLyBmaWxlIHNpemUgKGFzY2VuZGluZyBieSBkZWZhdWx0KSwgZS5nLlxuICAgICAqICAgICAgICAgICAgIC8vIFsgJ3NtYWxsZmlsZS50eHQnLCAnbWVkaXVtZmlsZS50eHQnLCAnYmlnZmlsZS50eHQnXVxuICAgICAqICAgICAgICAgfVxuICAgICAqICAgICB9XG4gICAgICogKTtcbiAgICAgKlxuICAgICAqIC8vIEJ5IG1vZGlmeWluZyB0aGUgY2FsbGJhY2sgcGFyYW1ldGVyIHRoZVxuICAgICAqIC8vIHNvcnRpbmcgb3JkZXIgY2FuIGJlIGluZmx1ZW5jZWQ6XG4gICAgICpcbiAgICAgKiAvLyBhc2NlbmRpbmcgb3JkZXJcbiAgICAgKiBhc3luYy5zb3J0QnkoWydtZWRpdW1maWxlLnR4dCcsJ3NtYWxsZmlsZS50eHQnLCdiaWdmaWxlLnR4dCddLCBmdW5jdGlvbihmaWxlLCBjYWxsYmFjaykge1xuICAgICAqICAgICBnZXRGaWxlU2l6ZUluQnl0ZXMoZmlsZSwgZnVuY3Rpb24oZ2V0RmlsZVNpemVFcnIsIGZpbGVTaXplKSB7XG4gICAgICogICAgICAgICBpZiAoZ2V0RmlsZVNpemVFcnIpIHJldHVybiBjYWxsYmFjayhnZXRGaWxlU2l6ZUVycik7XG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCBmaWxlU2l6ZSk7XG4gICAgICogICAgIH0pO1xuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICAgICAgaWYgKGVycikge1xuICAgICAqICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgICAgICB9IGVsc2Uge1xuICAgICAqICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgICAgIC8vIHJlc3VsdHMgaXMgbm93IHRoZSBvcmlnaW5hbCBhcnJheSBvZiBmaWxlcyBzb3J0ZWQgYnlcbiAgICAgKiAgICAgICAgICAgICAvLyBmaWxlIHNpemUgKGFzY2VuZGluZyBieSBkZWZhdWx0KSwgZS5nLlxuICAgICAqICAgICAgICAgICAgIC8vIFsgJ3NtYWxsZmlsZS50eHQnLCAnbWVkaXVtZmlsZS50eHQnLCAnYmlnZmlsZS50eHQnXVxuICAgICAqICAgICAgICAgfVxuICAgICAqICAgICB9XG4gICAgICogKTtcbiAgICAgKlxuICAgICAqIC8vIGRlc2NlbmRpbmcgb3JkZXJcbiAgICAgKiBhc3luYy5zb3J0QnkoWydiaWdmaWxlLnR4dCcsJ21lZGl1bWZpbGUudHh0Jywnc21hbGxmaWxlLnR4dCddLCBmdW5jdGlvbihmaWxlLCBjYWxsYmFjaykge1xuICAgICAqICAgICBnZXRGaWxlU2l6ZUluQnl0ZXMoZmlsZSwgZnVuY3Rpb24oZ2V0RmlsZVNpemVFcnIsIGZpbGVTaXplKSB7XG4gICAgICogICAgICAgICBpZiAoZ2V0RmlsZVNpemVFcnIpIHtcbiAgICAgKiAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZ2V0RmlsZVNpemVFcnIpO1xuICAgICAqICAgICAgICAgfVxuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgZmlsZVNpemUgKiAtMSk7XG4gICAgICogICAgIH0pO1xuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgcmVzdWx0cykge1xuICAgICAqICAgICAgICAgaWYgKGVycikge1xuICAgICAqICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgICAgICB9IGVsc2Uge1xuICAgICAqICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAgICAgICAgIC8vIHJlc3VsdHMgaXMgbm93IHRoZSBvcmlnaW5hbCBhcnJheSBvZiBmaWxlcyBzb3J0ZWQgYnlcbiAgICAgKiAgICAgICAgICAgICAvLyBmaWxlIHNpemUgKGFzY2VuZGluZyBieSBkZWZhdWx0KSwgZS5nLlxuICAgICAqICAgICAgICAgICAgIC8vIFsgJ2JpZ2ZpbGUudHh0JywgJ21lZGl1bWZpbGUudHh0JywgJ3NtYWxsZmlsZS50eHQnXVxuICAgICAqICAgICAgICAgfVxuICAgICAqICAgICB9XG4gICAgICogKTtcbiAgICAgKlxuICAgICAqIC8vIEVycm9yIGhhbmRsaW5nXG4gICAgICogYXN5bmMuc29ydEJ5KFsnbWVkaXVtZmlsZS50eHQnLCdzbWFsbGZpbGUudHh0JywnbWlzc2luZ2ZpbGUudHh0J10sIGdldEZpbGVTaXplSW5CeXRlcyxcbiAgICAgKiAgICAgZnVuY3Rpb24oZXJyLCByZXN1bHRzKSB7XG4gICAgICogICAgICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgKiAgICAgICAgICAgICAvLyBbIEVycm9yOiBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkgXVxuICAgICAqICAgICAgICAgfSBlbHNlIHtcbiAgICAgKiAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgICAgIH1cbiAgICAgKiAgICAgfVxuICAgICAqICk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBQcm9taXNlc1xuICAgICAqIGFzeW5jLnNvcnRCeShbJ21lZGl1bWZpbGUudHh0Jywnc21hbGxmaWxlLnR4dCcsJ2JpZ2ZpbGUudHh0J10sIGdldEZpbGVTaXplSW5CeXRlcylcbiAgICAgKiAudGhlbiggcmVzdWx0cyA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICAvLyByZXN1bHRzIGlzIG5vdyB0aGUgb3JpZ2luYWwgYXJyYXkgb2YgZmlsZXMgc29ydGVkIGJ5XG4gICAgICogICAgIC8vIGZpbGUgc2l6ZSAoYXNjZW5kaW5nIGJ5IGRlZmF1bHQpLCBlLmcuXG4gICAgICogICAgIC8vIFsgJ3NtYWxsZmlsZS50eHQnLCAnbWVkaXVtZmlsZS50eHQnLCAnYmlnZmlsZS50eHQnXVxuICAgICAqIH0pLmNhdGNoKCBlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gRXJyb3IgaGFuZGxpbmdcbiAgICAgKiBhc3luYy5zb3J0QnkoWydtZWRpdW1maWxlLnR4dCcsJ3NtYWxsZmlsZS50eHQnLCdtaXNzaW5nZmlsZS50eHQnXSwgZ2V0RmlsZVNpemVJbkJ5dGVzKVxuICAgICAqIC50aGVuKCByZXN1bHRzID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gICAgICogfSkuY2F0Y2goIGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIC8vIFsgRXJyb3I6IEVOT0VOVDogbm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeSBdXG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBhc3luYy9hd2FpdFxuICAgICAqIChhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0cyA9IGF3YWl0IGFzeW5jLnNvcnRCeShbJ2JpZ2ZpbGUudHh0JywnbWVkaXVtZmlsZS50eHQnLCdzbWFsbGZpbGUudHh0J10sIGdldEZpbGVTaXplSW5CeXRlcyk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcbiAgICAgKiAgICAgICAgIC8vIHJlc3VsdHMgaXMgbm93IHRoZSBvcmlnaW5hbCBhcnJheSBvZiBmaWxlcyBzb3J0ZWQgYnlcbiAgICAgKiAgICAgICAgIC8vIGZpbGUgc2l6ZSAoYXNjZW5kaW5nIGJ5IGRlZmF1bHQpLCBlLmcuXG4gICAgICogICAgICAgICAvLyBbICdzbWFsbGZpbGUudHh0JywgJ21lZGl1bWZpbGUudHh0JywgJ2JpZ2ZpbGUudHh0J11cbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfSkoKTtcbiAgICAgKlxuICAgICAqIC8vIEVycm9yIGhhbmRsaW5nXG4gICAgICogYXN5bmMgKCkgPT4ge1xuICAgICAqICAgICB0cnkge1xuICAgICAqICAgICAgICAgbGV0IHJlc3VsdHMgPSBhd2FpdCBhc3luYy5zb3J0QnkoWydtaXNzaW5nZmlsZS50eHQnLCdtZWRpdW1maWxlLnR4dCcsJ3NtYWxsZmlsZS50eHQnXSwgZ2V0RmlsZVNpemVJbkJ5dGVzKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAqICAgICB9XG4gICAgICogICAgIGNhdGNoIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgICAgICAvLyBbIEVycm9yOiBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnkgXVxuICAgICAqICAgICB9XG4gICAgICogfVxuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gc29ydEJ5IChjb2xsLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIF9pdGVyYXRlZSA9IHdyYXBBc3luYyhpdGVyYXRlZSk7XG4gICAgICAgIHJldHVybiBtYXAkMShjb2xsLCAoeCwgaXRlckNiKSA9PiB7XG4gICAgICAgICAgICBfaXRlcmF0ZWUoeCwgKGVyciwgY3JpdGVyaWEpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gaXRlckNiKGVycik7XG4gICAgICAgICAgICAgICAgaXRlckNiKGVyciwge3ZhbHVlOiB4LCBjcml0ZXJpYX0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIChlcnIsIHJlc3VsdHMpID0+IHtcbiAgICAgICAgICAgIGlmIChlcnIpIHJldHVybiBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdWx0cy5zb3J0KGNvbXBhcmF0b3IpLm1hcCh2ID0+IHYudmFsdWUpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gY29tcGFyYXRvcihsZWZ0LCByaWdodCkge1xuICAgICAgICAgICAgdmFyIGEgPSBsZWZ0LmNyaXRlcmlhLCBiID0gcmlnaHQuY3JpdGVyaWE7XG4gICAgICAgICAgICByZXR1cm4gYSA8IGIgPyAtMSA6IGEgPiBiID8gMSA6IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFyIHNvcnRCeSQxID0gYXdhaXRpZnkoc29ydEJ5LCAzKTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgYSB0aW1lIGxpbWl0IG9uIGFuIGFzeW5jaHJvbm91cyBmdW5jdGlvbi4gSWYgdGhlIGZ1bmN0aW9uIGRvZXMgbm90IGNhbGxcbiAgICAgKiBpdHMgY2FsbGJhY2sgd2l0aGluIHRoZSBzcGVjaWZpZWQgbWlsbGlzZWNvbmRzLCBpdCB3aWxsIGJlIGNhbGxlZCB3aXRoIGFcbiAgICAgKiB0aW1lb3V0IGVycm9yLiBUaGUgY29kZSBwcm9wZXJ0eSBmb3IgdGhlIGVycm9yIG9iamVjdCB3aWxsIGJlIGAnRVRJTUVET1VUJ2AuXG4gICAgICpcbiAgICAgKiBAbmFtZSB0aW1lb3V0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6VXRpbHNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IFV0aWxcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGFzeW5jRm4gLSBUaGUgYXN5bmMgZnVuY3Rpb24gdG8gbGltaXQgaW4gdGltZS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbWlsbGlzZWNvbmRzIC0gVGhlIHNwZWNpZmllZCB0aW1lIGxpbWl0LlxuICAgICAqIEBwYXJhbSB7Kn0gW2luZm9dIC0gQW55IHZhcmlhYmxlIHlvdSB3YW50IGF0dGFjaGVkIChgc3RyaW5nYCwgYG9iamVjdGAsIGV0YylcbiAgICAgKiB0byB0aW1lb3V0IEVycm9yIGZvciBtb3JlIGluZm9ybWF0aW9uLi5cbiAgICAgKiBAcmV0dXJucyB7QXN5bmNGdW5jdGlvbn0gUmV0dXJucyBhIHdyYXBwZWQgZnVuY3Rpb24gdGhhdCBjYW4gYmUgdXNlZCB3aXRoIGFueVxuICAgICAqIG9mIHRoZSBjb250cm9sIGZsb3cgZnVuY3Rpb25zLlxuICAgICAqIEludm9rZSB0aGlzIGZ1bmN0aW9uIHdpdGggdGhlIHNhbWUgcGFyYW1ldGVycyBhcyB5b3Ugd291bGQgYGFzeW5jRnVuY2AuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIGZ1bmN0aW9uIG15RnVuY3Rpb24oZm9vLCBjYWxsYmFjaykge1xuICAgICAqICAgICBkb0FzeW5jVGFzayhmb28sIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAqICAgICAgICAgLy8gaGFuZGxlIGVycm9yc1xuICAgICAqICAgICAgICAgaWYgKGVycikgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICpcbiAgICAgKiAgICAgICAgIC8vIGRvIHNvbWUgc3R1ZmYgLi4uXG4gICAgICpcbiAgICAgKiAgICAgICAgIC8vIHJldHVybiBwcm9jZXNzZWQgZGF0YVxuICAgICAqICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuICAgICAqICAgICB9KTtcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiB2YXIgd3JhcHBlZCA9IGFzeW5jLnRpbWVvdXQobXlGdW5jdGlvbiwgMTAwMCk7XG4gICAgICpcbiAgICAgKiAvLyBjYWxsIGB3cmFwcGVkYCBhcyB5b3Ugd291bGQgYG15RnVuY3Rpb25gXG4gICAgICogd3JhcHBlZCh7IGJhcjogJ2JhcicgfSwgZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgICogICAgIC8vIGlmIGBteUZ1bmN0aW9uYCB0YWtlcyA8IDEwMDAgbXMgdG8gZXhlY3V0ZSwgYGVycmBcbiAgICAgKiAgICAgLy8gYW5kIGBkYXRhYCB3aWxsIGhhdmUgdGhlaXIgZXhwZWN0ZWQgdmFsdWVzXG4gICAgICpcbiAgICAgKiAgICAgLy8gZWxzZSBgZXJyYCB3aWxsIGJlIGFuIEVycm9yIHdpdGggdGhlIGNvZGUgJ0VUSU1FRE9VVCdcbiAgICAgKiB9KTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0aW1lb3V0KGFzeW5jRm4sIG1pbGxpc2Vjb25kcywgaW5mbykge1xuICAgICAgICB2YXIgZm4gPSB3cmFwQXN5bmMoYXN5bmNGbik7XG5cbiAgICAgICAgcmV0dXJuIGluaXRpYWxQYXJhbXMoKGFyZ3MsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICB2YXIgdGltZWRPdXQgPSBmYWxzZTtcbiAgICAgICAgICAgIHZhciB0aW1lcjtcblxuICAgICAgICAgICAgZnVuY3Rpb24gdGltZW91dENhbGxiYWNrKCkge1xuICAgICAgICAgICAgICAgIHZhciBuYW1lID0gYXN5bmNGbi5uYW1lIHx8ICdhbm9ueW1vdXMnO1xuICAgICAgICAgICAgICAgIHZhciBlcnJvciAgPSBuZXcgRXJyb3IoJ0NhbGxiYWNrIGZ1bmN0aW9uIFwiJyArIG5hbWUgKyAnXCIgdGltZWQgb3V0LicpO1xuICAgICAgICAgICAgICAgIGVycm9yLmNvZGUgPSAnRVRJTUVET1VUJztcbiAgICAgICAgICAgICAgICBpZiAoaW5mbykge1xuICAgICAgICAgICAgICAgICAgICBlcnJvci5pbmZvID0gaW5mbztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGltZWRPdXQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycm9yKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXJncy5wdXNoKCguLi5jYkFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRpbWVkT3V0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKC4uLmNiQXJncyk7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIHNldHVwIHRpbWVyIGFuZCBjYWxsIG9yaWdpbmFsIGZ1bmN0aW9uXG4gICAgICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQodGltZW91dENhbGxiYWNrLCBtaWxsaXNlY29uZHMpO1xuICAgICAgICAgICAgZm4oLi4uYXJncyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJhbmdlKHNpemUpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IEFycmF5KHNpemUpO1xuICAgICAgICB3aGlsZSAoc2l6ZS0tKSB7XG4gICAgICAgICAgICByZXN1bHRbc2l6ZV0gPSBzaXplO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHNhbWUgYXMgW3RpbWVzXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cudGltZXN9IGJ1dCBydW5zIGEgbWF4aW11bSBvZiBgbGltaXRgIGFzeW5jIG9wZXJhdGlvbnMgYXQgYVxuICAgICAqIHRpbWUuXG4gICAgICpcbiAgICAgKiBAbmFtZSB0aW1lc0xpbWl0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMudGltZXNde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy50aW1lc31cbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGNvdW50IC0gVGhlIG51bWJlciBvZiB0aW1lcyB0byBydW4gdGhlIGZ1bmN0aW9uLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsaW1pdCAtIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhc3luYyBvcGVyYXRpb25zIGF0IGEgdGltZS5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gVGhlIGFzeW5jIGZ1bmN0aW9uIHRvIGNhbGwgYG5gIHRpbWVzLlxuICAgICAqIEludm9rZWQgd2l0aCB0aGUgaXRlcmF0aW9uIGluZGV4IGFuZCBhIGNhbGxiYWNrOiAobiwgbmV4dCkuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgLSBzZWUgW2FzeW5jLm1hcF17QGxpbmsgbW9kdWxlOkNvbGxlY3Rpb25zLm1hcH0uXG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgbm8gY2FsbGJhY2sgaXMgcHJvdmlkZWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0aW1lc0xpbWl0KGNvdW50LCBsaW1pdCwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBfaXRlcmF0ZWUgPSB3cmFwQXN5bmMoaXRlcmF0ZWUpO1xuICAgICAgICByZXR1cm4gbWFwTGltaXQkMShyYW5nZShjb3VudCksIGxpbWl0LCBfaXRlcmF0ZWUsIGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDYWxscyB0aGUgYGl0ZXJhdGVlYCBmdW5jdGlvbiBgbmAgdGltZXMsIGFuZCBhY2N1bXVsYXRlcyByZXN1bHRzIGluIHRoZSBzYW1lXG4gICAgICogbWFubmVyIHlvdSB3b3VsZCB1c2Ugd2l0aCBbbWFwXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMubWFwfS5cbiAgICAgKlxuICAgICAqIEBuYW1lIHRpbWVzXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMubWFwXXtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMubWFwfVxuICAgICAqIEBjYXRlZ29yeSBDb250cm9sIEZsb3dcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbiAtIFRoZSBudW1iZXIgb2YgdGltZXMgdG8gcnVuIHRoZSBmdW5jdGlvbi5cbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gVGhlIGFzeW5jIGZ1bmN0aW9uIHRvIGNhbGwgYG5gIHRpbWVzLlxuICAgICAqIEludm9rZWQgd2l0aCB0aGUgaXRlcmF0aW9uIGluZGV4IGFuZCBhIGNhbGxiYWNrOiAobiwgbmV4dCkuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgLSBzZWUge0BsaW5rIG1vZHVsZTpDb2xsZWN0aW9ucy5tYXB9LlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHByb3ZpZGVkXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIFByZXRlbmQgdGhpcyBpcyBzb21lIGNvbXBsaWNhdGVkIGFzeW5jIGZhY3RvcnlcbiAgICAgKiB2YXIgY3JlYXRlVXNlciA9IGZ1bmN0aW9uKGlkLCBjYWxsYmFjaykge1xuICAgICAqICAgICBjYWxsYmFjayhudWxsLCB7XG4gICAgICogICAgICAgICBpZDogJ3VzZXInICsgaWRcbiAgICAgKiAgICAgfSk7XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIC8vIGdlbmVyYXRlIDUgdXNlcnNcbiAgICAgKiBhc3luYy50aW1lcyg1LCBmdW5jdGlvbihuLCBuZXh0KSB7XG4gICAgICogICAgIGNyZWF0ZVVzZXIobiwgZnVuY3Rpb24oZXJyLCB1c2VyKSB7XG4gICAgICogICAgICAgICBuZXh0KGVyciwgdXNlcik7XG4gICAgICogICAgIH0pO1xuICAgICAqIH0sIGZ1bmN0aW9uKGVyciwgdXNlcnMpIHtcbiAgICAgKiAgICAgLy8gd2Ugc2hvdWxkIG5vdyBoYXZlIDUgdXNlcnNcbiAgICAgKiB9KTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0aW1lcyAobiwgaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aW1lc0xpbWl0KG4sIEluZmluaXR5LCBpdGVyYXRlZSwgY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHNhbWUgYXMgW3RpbWVzXXtAbGluayBtb2R1bGU6Q29udHJvbEZsb3cudGltZXN9IGJ1dCBydW5zIG9ubHkgYSBzaW5nbGUgYXN5bmMgb3BlcmF0aW9uIGF0IGEgdGltZS5cbiAgICAgKlxuICAgICAqIEBuYW1lIHRpbWVzU2VyaWVzXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMudGltZXNde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy50aW1lc31cbiAgICAgKiBAY2F0ZWdvcnkgQ29udHJvbCBGbG93XG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG4gLSBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIHJ1biB0aGUgZnVuY3Rpb24uXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIFRoZSBhc3luYyBmdW5jdGlvbiB0byBjYWxsIGBuYCB0aW1lcy5cbiAgICAgKiBJbnZva2VkIHdpdGggdGhlIGl0ZXJhdGlvbiBpbmRleCBhbmQgYSBjYWxsYmFjazogKG4sIG5leHQpLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIC0gc2VlIHtAbGluayBtb2R1bGU6Q29sbGVjdGlvbnMubWFwfS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBpcyBwcm92aWRlZFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHRpbWVzU2VyaWVzIChuLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRpbWVzTGltaXQobiwgMSwgaXRlcmF0ZWUsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEEgcmVsYXRpdmUgb2YgYHJlZHVjZWAuICBUYWtlcyBhbiBPYmplY3Qgb3IgQXJyYXksIGFuZCBpdGVyYXRlcyBvdmVyIGVhY2hcbiAgICAgKiBlbGVtZW50IGluIHBhcmFsbGVsLCBlYWNoIHN0ZXAgcG90ZW50aWFsbHkgbXV0YXRpbmcgYW4gYGFjY3VtdWxhdG9yYCB2YWx1ZS5cbiAgICAgKiBUaGUgdHlwZSBvZiB0aGUgYWNjdW11bGF0b3IgZGVmYXVsdHMgdG8gdGhlIHR5cGUgb2YgY29sbGVjdGlvbiBwYXNzZWQgaW4uXG4gICAgICpcbiAgICAgKiBAbmFtZSB0cmFuc2Zvcm1cbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb2xsZWN0aW9uc1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IGNvbGwgLSBBIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7Kn0gW2FjY3VtdWxhdG9yXSAtIFRoZSBpbml0aWFsIHN0YXRlIG9mIHRoZSB0cmFuc2Zvcm0uICBJZiBvbWl0dGVkLFxuICAgICAqIGl0IHdpbGwgZGVmYXVsdCB0byBhbiBlbXB0eSBPYmplY3Qgb3IgQXJyYXksIGRlcGVuZGluZyBvbiB0aGUgdHlwZSBvZiBgY29sbGBcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGl0ZXJhdGVlIC0gQSBmdW5jdGlvbiBhcHBsaWVkIHRvIGVhY2ggaXRlbSBpbiB0aGVcbiAgICAgKiBjb2xsZWN0aW9uIHRoYXQgcG90ZW50aWFsbHkgbW9kaWZpZXMgdGhlIGFjY3VtdWxhdG9yLlxuICAgICAqIEludm9rZWQgd2l0aCAoYWNjdW11bGF0b3IsIGl0ZW0sIGtleSwgY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciBhbGwgdGhlXG4gICAgICogYGl0ZXJhdGVlYCBmdW5jdGlvbnMgaGF2ZSBmaW5pc2hlZC4gUmVzdWx0IGlzIHRoZSB0cmFuc2Zvcm1lZCBhY2N1bXVsYXRvci5cbiAgICAgKiBJbnZva2VkIHdpdGggKGVyciwgcmVzdWx0KS5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBwcm92aWRlZFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBmaWxlMS50eHQgaXMgYSBmaWxlIHRoYXQgaXMgMTAwMCBieXRlcyBpbiBzaXplXG4gICAgICogLy8gZmlsZTIudHh0IGlzIGEgZmlsZSB0aGF0IGlzIDIwMDAgYnl0ZXMgaW4gc2l6ZVxuICAgICAqIC8vIGZpbGUzLnR4dCBpcyBhIGZpbGUgdGhhdCBpcyAzMDAwIGJ5dGVzIGluIHNpemVcbiAgICAgKlxuICAgICAqIC8vIGhlbHBlciBmdW5jdGlvbiB0aGF0IHJldHVybnMgaHVtYW4tcmVhZGFibGUgc2l6ZSBmb3JtYXQgZnJvbSBieXRlc1xuICAgICAqIGZ1bmN0aW9uIGZvcm1hdEJ5dGVzKGJ5dGVzLCBkZWNpbWFscyA9IDIpIHtcbiAgICAgKiAgIC8vIGltcGxlbWVudGF0aW9uIG5vdCBpbmNsdWRlZCBmb3IgYnJldml0eVxuICAgICAqICAgcmV0dXJuIGh1bWFuUmVhZGJsZUZpbGVzaXplO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIGNvbnN0IGZpbGVMaXN0ID0gWydmaWxlMS50eHQnLCdmaWxlMi50eHQnLCdmaWxlMy50eHQnXTtcbiAgICAgKlxuICAgICAqIC8vIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIGZpbGUgc2l6ZSwgdHJhbnNmb3JtZWQgdG8gaHVtYW4tcmVhZGFibGUgZm9ybWF0XG4gICAgICogLy8gZS5nLiAxMDI0IGJ5dGVzID0gMUtCLCAxMjM0IGJ5dGVzID0gMS4yMSBLQiwgMTA0ODU3NiBieXRlcyA9IDFNQiwgZXRjLlxuICAgICAqIGZ1bmN0aW9uIHRyYW5zZm9ybUZpbGVTaXplKGFjYywgdmFsdWUsIGtleSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgZnMuc3RhdCh2YWx1ZSwgZnVuY3Rpb24oZXJyLCBzdGF0KSB7XG4gICAgICogICAgICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICogICAgICAgICB9XG4gICAgICogICAgICAgICBhY2Nba2V5XSA9IGZvcm1hdEJ5dGVzKHN0YXQuc2l6ZSk7XG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgKiAgICAgfSk7XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gVXNpbmcgY2FsbGJhY2tzXG4gICAgICogYXN5bmMudHJhbnNmb3JtKGZpbGVMaXN0LCB0cmFuc2Zvcm1GaWxlU2l6ZSwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgKiAgICAgaWYoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9IGVsc2Uge1xuICAgICAqICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiAgICAgICAgIC8vIFsgJzEwMDAgQnl0ZXMnLCAnMS45NSBLQicsICcyLjkzIEtCJyBdXG4gICAgICogICAgIH1cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIC8vIFVzaW5nIFByb21pc2VzXG4gICAgICogYXN5bmMudHJhbnNmb3JtKGZpbGVMaXN0LCB0cmFuc2Zvcm1GaWxlU2l6ZSlcbiAgICAgKiAudGhlbihyZXN1bHQgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAvLyBbICcxMDAwIEJ5dGVzJywgJzEuOTUgS0InLCAnMi45MyBLQicgXVxuICAgICAqIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiAvLyBVc2luZyBhc3luYy9hd2FpdFxuICAgICAqIChhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXN5bmMudHJhbnNmb3JtKGZpbGVMaXN0LCB0cmFuc2Zvcm1GaWxlU2l6ZSk7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8gWyAnMTAwMCBCeXRlcycsICcxLjk1IEtCJywgJzIuOTMgS0InIF1cbiAgICAgKiAgICAgfVxuICAgICAqICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqICAgICB9XG4gICAgICogfSkoKTtcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBmaWxlMS50eHQgaXMgYSBmaWxlIHRoYXQgaXMgMTAwMCBieXRlcyBpbiBzaXplXG4gICAgICogLy8gZmlsZTIudHh0IGlzIGEgZmlsZSB0aGF0IGlzIDIwMDAgYnl0ZXMgaW4gc2l6ZVxuICAgICAqIC8vIGZpbGUzLnR4dCBpcyBhIGZpbGUgdGhhdCBpcyAzMDAwIGJ5dGVzIGluIHNpemVcbiAgICAgKlxuICAgICAqIC8vIGhlbHBlciBmdW5jdGlvbiB0aGF0IHJldHVybnMgaHVtYW4tcmVhZGFibGUgc2l6ZSBmb3JtYXQgZnJvbSBieXRlc1xuICAgICAqIGZ1bmN0aW9uIGZvcm1hdEJ5dGVzKGJ5dGVzLCBkZWNpbWFscyA9IDIpIHtcbiAgICAgKiAgIC8vIGltcGxlbWVudGF0aW9uIG5vdCBpbmNsdWRlZCBmb3IgYnJldml0eVxuICAgICAqICAgcmV0dXJuIGh1bWFuUmVhZGJsZUZpbGVzaXplO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIGNvbnN0IGZpbGVNYXAgPSB7IGYxOiAnZmlsZTEudHh0JywgZjI6ICdmaWxlMi50eHQnLCBmMzogJ2ZpbGUzLnR4dCcgfTtcbiAgICAgKlxuICAgICAqIC8vIGFzeW5jaHJvbm91cyBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIGZpbGUgc2l6ZSwgdHJhbnNmb3JtZWQgdG8gaHVtYW4tcmVhZGFibGUgZm9ybWF0XG4gICAgICogLy8gZS5nLiAxMDI0IGJ5dGVzID0gMUtCLCAxMjM0IGJ5dGVzID0gMS4yMSBLQiwgMTA0ODU3NiBieXRlcyA9IDFNQiwgZXRjLlxuICAgICAqIGZ1bmN0aW9uIHRyYW5zZm9ybUZpbGVTaXplKGFjYywgdmFsdWUsIGtleSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgZnMuc3RhdCh2YWx1ZSwgZnVuY3Rpb24oZXJyLCBzdGF0KSB7XG4gICAgICogICAgICAgICBpZiAoZXJyKSB7XG4gICAgICogICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICogICAgICAgICB9XG4gICAgICogICAgICAgICBhY2Nba2V5XSA9IGZvcm1hdEJ5dGVzKHN0YXQuc2l6ZSk7XG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgKiAgICAgfSk7XG4gICAgICogfVxuICAgICAqXG4gICAgICogLy8gVXNpbmcgY2FsbGJhY2tzXG4gICAgICogYXN5bmMudHJhbnNmb3JtKGZpbGVNYXAsIHRyYW5zZm9ybUZpbGVTaXplLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAqICAgICBpZihlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH0gZWxzZSB7XG4gICAgICogICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAqICAgICAgICAgLy8geyBmMTogJzEwMDAgQnl0ZXMnLCBmMjogJzEuOTUgS0InLCBmMzogJzIuOTMgS0InIH1cbiAgICAgKiAgICAgfVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgUHJvbWlzZXNcbiAgICAgKiBhc3luYy50cmFuc2Zvcm0oZmlsZU1hcCwgdHJhbnNmb3JtRmlsZVNpemUpXG4gICAgICogLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgKiAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgKiAgICAgLy8geyBmMTogJzEwMDAgQnl0ZXMnLCBmMjogJzEuOTUgS0InLCBmMzogJzIuOTMgS0InIH1cbiAgICAgKiB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAqICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gVXNpbmcgYXN5bmMvYXdhaXRcbiAgICAgKiBhc3luYyAoKSA9PiB7XG4gICAgICogICAgIHRyeSB7XG4gICAgICogICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXN5bmMudHJhbnNmb3JtKGZpbGVNYXAsIHRyYW5zZm9ybUZpbGVTaXplKTtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICogICAgICAgICAvLyB7IGYxOiAnMTAwMCBCeXRlcycsIGYyOiAnMS45NSBLQicsIGYzOiAnMi45MyBLQicgfVxuICAgICAqICAgICB9XG4gICAgICogICAgIGNhdGNoIChlcnIpIHtcbiAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICogICAgIH1cbiAgICAgKiB9XG4gICAgICpcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB0cmFuc2Zvcm0gKGNvbGwsIGFjY3VtdWxhdG9yLCBpdGVyYXRlZSwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPD0gMyAmJiB0eXBlb2YgYWNjdW11bGF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrID0gaXRlcmF0ZWU7XG4gICAgICAgICAgICBpdGVyYXRlZSA9IGFjY3VtdWxhdG9yO1xuICAgICAgICAgICAgYWNjdW11bGF0b3IgPSBBcnJheS5pc0FycmF5KGNvbGwpID8gW10gOiB7fTtcbiAgICAgICAgfVxuICAgICAgICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2sgfHwgcHJvbWlzZUNhbGxiYWNrKCkpO1xuICAgICAgICB2YXIgX2l0ZXJhdGVlID0gd3JhcEFzeW5jKGl0ZXJhdGVlKTtcblxuICAgICAgICBlYWNoT2YkMShjb2xsLCAodiwgaywgY2IpID0+IHtcbiAgICAgICAgICAgIF9pdGVyYXRlZShhY2N1bXVsYXRvciwgdiwgaywgY2IpO1xuICAgICAgICB9LCBlcnIgPT4gY2FsbGJhY2soZXJyLCBhY2N1bXVsYXRvcikpO1xuICAgICAgICByZXR1cm4gY2FsbGJhY2tbUFJPTUlTRV9TWU1CT0xdXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSXQgcnVucyBlYWNoIHRhc2sgaW4gc2VyaWVzIGJ1dCBzdG9wcyB3aGVuZXZlciBhbnkgb2YgdGhlIGZ1bmN0aW9ucyB3ZXJlXG4gICAgICogc3VjY2Vzc2Z1bC4gSWYgb25lIG9mIHRoZSB0YXNrcyB3ZXJlIHN1Y2Nlc3NmdWwsIHRoZSBgY2FsbGJhY2tgIHdpbGwgYmVcbiAgICAgKiBwYXNzZWQgdGhlIHJlc3VsdCBvZiB0aGUgc3VjY2Vzc2Z1bCB0YXNrLiBJZiBhbGwgdGFza3MgZmFpbCwgdGhlIGNhbGxiYWNrXG4gICAgICogd2lsbCBiZSBwYXNzZWQgdGhlIGVycm9yIGFuZCByZXN1bHQgKGlmIGFueSkgb2YgdGhlIGZpbmFsIGF0dGVtcHQuXG4gICAgICpcbiAgICAgKiBAbmFtZSB0cnlFYWNoXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXJyYXl8SXRlcmFibGV8QXN5bmNJdGVyYWJsZXxPYmplY3R9IHRhc2tzIC0gQSBjb2xsZWN0aW9uIGNvbnRhaW5pbmcgZnVuY3Rpb25zIHRvXG4gICAgICogcnVuLCBlYWNoIGZ1bmN0aW9uIGlzIHBhc3NlZCBhIGBjYWxsYmFjayhlcnIsIHJlc3VsdClgIGl0IG11c3QgY2FsbCBvblxuICAgICAqIGNvbXBsZXRpb24gd2l0aCBhbiBlcnJvciBgZXJyYCAod2hpY2ggY2FuIGJlIGBudWxsYCkgYW5kIGFuIG9wdGlvbmFsIGByZXN1bHRgXG4gICAgICogdmFsdWUuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEFuIG9wdGlvbmFsIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCB3aGVuIG9uZVxuICAgICAqIG9mIHRoZSB0YXNrcyBoYXMgc3VjY2VlZGVkLCBvciBhbGwgaGF2ZSBmYWlsZWQuIEl0IHJlY2VpdmVzIHRoZSBgZXJyYCBhbmRcbiAgICAgKiBgcmVzdWx0YCBhcmd1bWVudHMgb2YgdGhlIGxhc3QgYXR0ZW1wdCBhdCBjb21wbGV0aW5nIHRoZSBgdGFza2AuIEludm9rZWQgd2l0aFxuICAgICAqIChlcnIsIHJlc3VsdHMpLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UsIGlmIG5vIGNhbGxiYWNrIGlzIHBhc3NlZFxuICAgICAqIEBleGFtcGxlXG4gICAgICogYXN5bmMudHJ5RWFjaChbXG4gICAgICogICAgIGZ1bmN0aW9uIGdldERhdGFGcm9tRmlyc3RXZWJzaXRlKGNhbGxiYWNrKSB7XG4gICAgICogICAgICAgICAvLyBUcnkgZ2V0dGluZyB0aGUgZGF0YSBmcm9tIHRoZSBmaXJzdCB3ZWJzaXRlXG4gICAgICogICAgICAgICBjYWxsYmFjayhlcnIsIGRhdGEpO1xuICAgICAqICAgICB9LFxuICAgICAqICAgICBmdW5jdGlvbiBnZXREYXRhRnJvbVNlY29uZFdlYnNpdGUoY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIC8vIEZpcnN0IHdlYnNpdGUgZmFpbGVkLFxuICAgICAqICAgICAgICAgLy8gVHJ5IGdldHRpbmcgdGhlIGRhdGEgZnJvbSB0aGUgYmFja3VwIHdlYnNpdGVcbiAgICAgKiAgICAgICAgIGNhbGxiYWNrKGVyciwgZGF0YSk7XG4gICAgICogICAgIH1cbiAgICAgKiBdLFxuICAgICAqIC8vIG9wdGlvbmFsIGNhbGxiYWNrXG4gICAgICogZnVuY3Rpb24oZXJyLCByZXN1bHRzKSB7XG4gICAgICogICAgIE5vdyBkbyBzb21ldGhpbmcgd2l0aCB0aGUgZGF0YS5cbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHRyeUVhY2godGFza3MsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBlcnJvciA9IG51bGw7XG4gICAgICAgIHZhciByZXN1bHQ7XG4gICAgICAgIHJldHVybiBlYWNoU2VyaWVzJDEodGFza3MsICh0YXNrLCB0YXNrQ2IpID0+IHtcbiAgICAgICAgICAgIHdyYXBBc3luYyh0YXNrKSgoZXJyLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVyciA9PT0gZmFsc2UpIHJldHVybiB0YXNrQ2IoZXJyKTtcblxuICAgICAgICAgICAgICAgIGlmIChhcmdzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgW3Jlc3VsdF0gPSBhcmdzO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IGFyZ3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVycm9yID0gZXJyO1xuICAgICAgICAgICAgICAgIHRhc2tDYihlcnIgPyBudWxsIDoge30pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sICgpID0+IGNhbGxiYWNrKGVycm9yLCByZXN1bHQpKTtcbiAgICB9XG5cbiAgICB2YXIgdHJ5RWFjaCQxID0gYXdhaXRpZnkodHJ5RWFjaCk7XG5cbiAgICAvKipcbiAgICAgKiBVbmRvZXMgYSBbbWVtb2l6ZV17QGxpbmsgbW9kdWxlOlV0aWxzLm1lbW9pemV9ZCBmdW5jdGlvbiwgcmV2ZXJ0aW5nIGl0IHRvIHRoZSBvcmlnaW5hbCxcbiAgICAgKiB1bm1lbW9pemVkIGZvcm0uIEhhbmR5IGZvciB0ZXN0aW5nLlxuICAgICAqXG4gICAgICogQG5hbWUgdW5tZW1vaXplXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6VXRpbHNcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQHNlZSBbYXN5bmMubWVtb2l6ZV17QGxpbmsgbW9kdWxlOlV0aWxzLm1lbW9pemV9XG4gICAgICogQGNhdGVnb3J5IFV0aWxcbiAgICAgKiBAcGFyYW0ge0FzeW5jRnVuY3Rpb259IGZuIC0gdGhlIG1lbW9pemVkIGZ1bmN0aW9uXG4gICAgICogQHJldHVybnMge0FzeW5jRnVuY3Rpb259IGEgZnVuY3Rpb24gdGhhdCBjYWxscyB0aGUgb3JpZ2luYWwgdW5tZW1vaXplZCBmdW5jdGlvblxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHVubWVtb2l6ZShmbikge1xuICAgICAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoZm4udW5tZW1vaXplZCB8fCBmbikoLi4uYXJncyk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVwZWF0ZWRseSBjYWxsIGBpdGVyYXRlZWAsIHdoaWxlIGB0ZXN0YCByZXR1cm5zIGB0cnVlYC4gQ2FsbHMgYGNhbGxiYWNrYCB3aGVuXG4gICAgICogc3RvcHBlZCwgb3IgYW4gZXJyb3Igb2NjdXJzLlxuICAgICAqXG4gICAgICogQG5hbWUgd2hpbHN0XG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gdGVzdCAtIGFzeW5jaHJvbm91cyB0cnV0aCB0ZXN0IHRvIHBlcmZvcm0gYmVmb3JlIGVhY2hcbiAgICAgKiBleGVjdXRpb24gb2YgYGl0ZXJhdGVlYC4gSW52b2tlZCB3aXRoICgpLlxuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gaXRlcmF0ZWUgLSBBbiBhc3luYyBmdW5jdGlvbiB3aGljaCBpcyBjYWxsZWQgZWFjaCB0aW1lXG4gICAgICogYHRlc3RgIHBhc3Nlcy4gSW52b2tlZCB3aXRoIChjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEEgY2FsbGJhY2sgd2hpY2ggaXMgY2FsbGVkIGFmdGVyIHRoZSB0ZXN0XG4gICAgICogZnVuY3Rpb24gaGFzIGZhaWxlZCBhbmQgcmVwZWF0ZWQgZXhlY3V0aW9uIG9mIGBpdGVyYXRlZWAgaGFzIHN0b3BwZWQuIGBjYWxsYmFja2BcbiAgICAgKiB3aWxsIGJlIHBhc3NlZCBhbiBlcnJvciBhbmQgYW55IGFyZ3VtZW50cyBwYXNzZWQgdG8gdGhlIGZpbmFsIGBpdGVyYXRlZWAnc1xuICAgICAqIGNhbGxiYWNrLiBJbnZva2VkIHdpdGggKGVyciwgW3Jlc3VsdHNdKTtcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gYSBwcm9taXNlLCBpZiBubyBjYWxsYmFjayBpcyBwYXNzZWRcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGNvdW50ID0gMDtcbiAgICAgKiBhc3luYy53aGlsc3QoXG4gICAgICogICAgIGZ1bmN0aW9uIHRlc3QoY2IpIHsgY2IobnVsbCwgY291bnQgPCA1KTsgfSxcbiAgICAgKiAgICAgZnVuY3Rpb24gaXRlcihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgY291bnQrKztcbiAgICAgKiAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICogICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgY291bnQpO1xuICAgICAqICAgICAgICAgfSwgMTAwMCk7XG4gICAgICogICAgIH0sXG4gICAgICogICAgIGZ1bmN0aW9uIChlcnIsIG4pIHtcbiAgICAgKiAgICAgICAgIC8vIDUgc2Vjb25kcyBoYXZlIHBhc3NlZCwgbiA9IDVcbiAgICAgKiAgICAgfVxuICAgICAqICk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gd2hpbHN0KHRlc3QsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayA9IG9ubHlPbmNlKGNhbGxiYWNrKTtcbiAgICAgICAgdmFyIF9mbiA9IHdyYXBBc3luYyhpdGVyYXRlZSk7XG4gICAgICAgIHZhciBfdGVzdCA9IHdyYXBBc3luYyh0ZXN0KTtcbiAgICAgICAgdmFyIHJlc3VsdHMgPSBbXTtcblxuICAgICAgICBmdW5jdGlvbiBuZXh0KGVyciwgLi4ucmVzdCkge1xuICAgICAgICAgICAgaWYgKGVycikgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICByZXN1bHRzID0gcmVzdDtcbiAgICAgICAgICAgIGlmIChlcnIgPT09IGZhbHNlKSByZXR1cm47XG4gICAgICAgICAgICBfdGVzdChjaGVjayk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBjaGVjayhlcnIsIHRydXRoKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgIGlmIChlcnIgPT09IGZhbHNlKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoIXRydXRoKSByZXR1cm4gY2FsbGJhY2sobnVsbCwgLi4ucmVzdWx0cyk7XG4gICAgICAgICAgICBfZm4obmV4dCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gX3Rlc3QoY2hlY2spO1xuICAgIH1cbiAgICB2YXIgd2hpbHN0JDEgPSBhd2FpdGlmeSh3aGlsc3QsIDMpO1xuXG4gICAgLyoqXG4gICAgICogUmVwZWF0ZWRseSBjYWxsIGBpdGVyYXRlZWAgdW50aWwgYHRlc3RgIHJldHVybnMgYHRydWVgLiBDYWxscyBgY2FsbGJhY2tgIHdoZW5cbiAgICAgKiBzdG9wcGVkLCBvciBhbiBlcnJvciBvY2N1cnMuIGBjYWxsYmFja2Agd2lsbCBiZSBwYXNzZWQgYW4gZXJyb3IgYW5kIGFueVxuICAgICAqIGFyZ3VtZW50cyBwYXNzZWQgdG8gdGhlIGZpbmFsIGBpdGVyYXRlZWAncyBjYWxsYmFjay5cbiAgICAgKlxuICAgICAqIFRoZSBpbnZlcnNlIG9mIFt3aGlsc3Rde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy53aGlsc3R9LlxuICAgICAqXG4gICAgICogQG5hbWUgdW50aWxcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIG1vZHVsZTpDb250cm9sRmxvd1xuICAgICAqIEBtZXRob2RcbiAgICAgKiBAc2VlIFthc3luYy53aGlsc3Rde0BsaW5rIG1vZHVsZTpDb250cm9sRmxvdy53aGlsc3R9XG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXN5bmNGdW5jdGlvbn0gdGVzdCAtIGFzeW5jaHJvbm91cyB0cnV0aCB0ZXN0IHRvIHBlcmZvcm0gYmVmb3JlIGVhY2hcbiAgICAgKiBleGVjdXRpb24gb2YgYGl0ZXJhdGVlYC4gSW52b2tlZCB3aXRoIChjYWxsYmFjaykuXG4gICAgICogQHBhcmFtIHtBc3luY0Z1bmN0aW9ufSBpdGVyYXRlZSAtIEFuIGFzeW5jIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBlYWNoIHRpbWVcbiAgICAgKiBgdGVzdGAgZmFpbHMuIEludm9rZWQgd2l0aCAoY2FsbGJhY2spLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gLSBBIGNhbGxiYWNrIHdoaWNoIGlzIGNhbGxlZCBhZnRlciB0aGUgdGVzdFxuICAgICAqIGZ1bmN0aW9uIGhhcyBwYXNzZWQgYW5kIHJlcGVhdGVkIGV4ZWN1dGlvbiBvZiBgaXRlcmF0ZWVgIGhhcyBzdG9wcGVkLiBgY2FsbGJhY2tgXG4gICAgICogd2lsbCBiZSBwYXNzZWQgYW4gZXJyb3IgYW5kIGFueSBhcmd1bWVudHMgcGFzc2VkIHRvIHRoZSBmaW5hbCBgaXRlcmF0ZWVgJ3NcbiAgICAgKiBjYWxsYmFjay4gSW52b2tlZCB3aXRoIChlcnIsIFtyZXN1bHRzXSk7XG4gICAgICogQHJldHVybnMge1Byb21pc2V9IGEgcHJvbWlzZSwgaWYgYSBjYWxsYmFjayBpcyBub3QgcGFzc2VkXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHJlc3VsdHMgPSBbXVxuICAgICAqIGxldCBmaW5pc2hlZCA9IGZhbHNlXG4gICAgICogYXN5bmMudW50aWwoZnVuY3Rpb24gdGVzdChjYikge1xuICAgICAqICAgICBjYihudWxsLCBmaW5pc2hlZClcbiAgICAgKiB9LCBmdW5jdGlvbiBpdGVyKG5leHQpIHtcbiAgICAgKiAgICAgZmV0Y2hQYWdlKHVybCwgKGVyciwgYm9keSkgPT4ge1xuICAgICAqICAgICAgICAgaWYgKGVycikgcmV0dXJuIG5leHQoZXJyKVxuICAgICAqICAgICAgICAgcmVzdWx0cyA9IHJlc3VsdHMuY29uY2F0KGJvZHkub2JqZWN0cylcbiAgICAgKiAgICAgICAgIGZpbmlzaGVkID0gISFib2R5Lm5leHRcbiAgICAgKiAgICAgICAgIG5leHQoZXJyKVxuICAgICAqICAgICB9KVxuICAgICAqIH0sIGZ1bmN0aW9uIGRvbmUgKGVycikge1xuICAgICAqICAgICAvLyBhbGwgcGFnZXMgaGF2ZSBiZWVuIGZldGNoZWRcbiAgICAgKiB9KVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHVudGlsKHRlc3QsIGl0ZXJhdGVlLCBjYWxsYmFjaykge1xuICAgICAgICBjb25zdCBfdGVzdCA9IHdyYXBBc3luYyh0ZXN0KTtcbiAgICAgICAgcmV0dXJuIHdoaWxzdCQxKChjYikgPT4gX3Rlc3QoKGVyciwgdHJ1dGgpID0+IGNiIChlcnIsICF0cnV0aCkpLCBpdGVyYXRlZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJ1bnMgdGhlIGB0YXNrc2AgYXJyYXkgb2YgZnVuY3Rpb25zIGluIHNlcmllcywgZWFjaCBwYXNzaW5nIHRoZWlyIHJlc3VsdHMgdG9cbiAgICAgKiB0aGUgbmV4dCBpbiB0aGUgYXJyYXkuIEhvd2V2ZXIsIGlmIGFueSBvZiB0aGUgYHRhc2tzYCBwYXNzIGFuIGVycm9yIHRvIHRoZWlyXG4gICAgICogb3duIGNhbGxiYWNrLCB0aGUgbmV4dCBmdW5jdGlvbiBpcyBub3QgZXhlY3V0ZWQsIGFuZCB0aGUgbWFpbiBgY2FsbGJhY2tgIGlzXG4gICAgICogaW1tZWRpYXRlbHkgY2FsbGVkIHdpdGggdGhlIGVycm9yLlxuICAgICAqXG4gICAgICogQG5hbWUgd2F0ZXJmYWxsXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAgICAgKiBAbWV0aG9kXG4gICAgICogQGNhdGVnb3J5IENvbnRyb2wgRmxvd1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IHRhc2tzIC0gQW4gYXJyYXkgb2YgW2FzeW5jIGZ1bmN0aW9uc117QGxpbmsgQXN5bmNGdW5jdGlvbn1cbiAgICAgKiB0byBydW4uXG4gICAgICogRWFjaCBmdW5jdGlvbiBzaG91bGQgY29tcGxldGUgd2l0aCBhbnkgbnVtYmVyIG9mIGByZXN1bHRgIHZhbHVlcy5cbiAgICAgKiBUaGUgYHJlc3VsdGAgdmFsdWVzIHdpbGwgYmUgcGFzc2VkIGFzIGFyZ3VtZW50cywgaW4gb3JkZXIsIHRvIHRoZSBuZXh0IHRhc2suXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSAtIEFuIG9wdGlvbmFsIGNhbGxiYWNrIHRvIHJ1biBvbmNlIGFsbCB0aGVcbiAgICAgKiBmdW5jdGlvbnMgaGF2ZSBjb21wbGV0ZWQuIFRoaXMgd2lsbCBiZSBwYXNzZWQgdGhlIHJlc3VsdHMgb2YgdGhlIGxhc3QgdGFzaydzXG4gICAgICogY2FsbGJhY2suIEludm9rZWQgd2l0aCAoZXJyLCBbcmVzdWx0c10pLlxuICAgICAqIEByZXR1cm5zIHVuZGVmaW5lZFxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBhc3luYy53YXRlcmZhbGwoW1xuICAgICAqICAgICBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ29uZScsICd0d28nKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgZnVuY3Rpb24oYXJnMSwgYXJnMiwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIC8vIGFyZzEgbm93IGVxdWFscyAnb25lJyBhbmQgYXJnMiBub3cgZXF1YWxzICd0d28nXG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCAndGhyZWUnKTtcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgICAgZnVuY3Rpb24oYXJnMSwgY2FsbGJhY2spIHtcbiAgICAgKiAgICAgICAgIC8vIGFyZzEgbm93IGVxdWFscyAndGhyZWUnXG4gICAgICogICAgICAgICBjYWxsYmFjayhudWxsLCAnZG9uZScpO1xuICAgICAqICAgICB9XG4gICAgICogXSwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIC8vIHJlc3VsdCBub3cgZXF1YWxzICdkb25lJ1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gT3IsIHdpdGggbmFtZWQgZnVuY3Rpb25zOlxuICAgICAqIGFzeW5jLndhdGVyZmFsbChbXG4gICAgICogICAgIG15Rmlyc3RGdW5jdGlvbixcbiAgICAgKiAgICAgbXlTZWNvbmRGdW5jdGlvbixcbiAgICAgKiAgICAgbXlMYXN0RnVuY3Rpb24sXG4gICAgICogXSwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICogICAgIC8vIHJlc3VsdCBub3cgZXF1YWxzICdkb25lJ1xuICAgICAqIH0pO1xuICAgICAqIGZ1bmN0aW9uIG15Rmlyc3RGdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAqICAgICBjYWxsYmFjayhudWxsLCAnb25lJywgJ3R3bycpO1xuICAgICAqIH1cbiAgICAgKiBmdW5jdGlvbiBteVNlY29uZEZ1bmN0aW9uKGFyZzEsIGFyZzIsIGNhbGxiYWNrKSB7XG4gICAgICogICAgIC8vIGFyZzEgbm93IGVxdWFscyAnb25lJyBhbmQgYXJnMiBub3cgZXF1YWxzICd0d28nXG4gICAgICogICAgIGNhbGxiYWNrKG51bGwsICd0aHJlZScpO1xuICAgICAqIH1cbiAgICAgKiBmdW5jdGlvbiBteUxhc3RGdW5jdGlvbihhcmcxLCBjYWxsYmFjaykge1xuICAgICAqICAgICAvLyBhcmcxIG5vdyBlcXVhbHMgJ3RocmVlJ1xuICAgICAqICAgICBjYWxsYmFjayhudWxsLCAnZG9uZScpO1xuICAgICAqIH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB3YXRlcmZhbGwgKHRhc2tzLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2spO1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGFza3MpKSByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKCdGaXJzdCBhcmd1bWVudCB0byB3YXRlcmZhbGwgbXVzdCBiZSBhbiBhcnJheSBvZiBmdW5jdGlvbnMnKSk7XG4gICAgICAgIGlmICghdGFza3MubGVuZ3RoKSByZXR1cm4gY2FsbGJhY2soKTtcbiAgICAgICAgdmFyIHRhc2tJbmRleCA9IDA7XG5cbiAgICAgICAgZnVuY3Rpb24gbmV4dFRhc2soYXJncykge1xuICAgICAgICAgICAgdmFyIHRhc2sgPSB3cmFwQXN5bmModGFza3NbdGFza0luZGV4KytdKTtcbiAgICAgICAgICAgIHRhc2soLi4uYXJncywgb25seU9uY2UobmV4dCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gbmV4dChlcnIsIC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGlmIChlcnIgPT09IGZhbHNlKSByZXR1cm5cbiAgICAgICAgICAgIGlmIChlcnIgfHwgdGFza0luZGV4ID09PSB0YXNrcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyLCAuLi5hcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHRUYXNrKGFyZ3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgbmV4dFRhc2soW10pO1xuICAgIH1cblxuICAgIHZhciB3YXRlcmZhbGwkMSA9IGF3YWl0aWZ5KHdhdGVyZmFsbCk7XG5cbiAgICAvKipcbiAgICAgKiBBbiBcImFzeW5jIGZ1bmN0aW9uXCIgaW4gdGhlIGNvbnRleHQgb2YgQXN5bmMgaXMgYW4gYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHdpdGhcbiAgICAgKiBhIHZhcmlhYmxlIG51bWJlciBvZiBwYXJhbWV0ZXJzLCB3aXRoIHRoZSBmaW5hbCBwYXJhbWV0ZXIgYmVpbmcgYSBjYWxsYmFjay5cbiAgICAgKiAoYGZ1bmN0aW9uIChhcmcxLCBhcmcyLCAuLi4sIGNhbGxiYWNrKSB7fWApXG4gICAgICogVGhlIGZpbmFsIGNhbGxiYWNrIGlzIG9mIHRoZSBmb3JtIGBjYWxsYmFjayhlcnIsIHJlc3VsdHMuLi4pYCwgd2hpY2ggbXVzdCBiZVxuICAgICAqIGNhbGxlZCBvbmNlIHRoZSBmdW5jdGlvbiBpcyBjb21wbGV0ZWQuICBUaGUgY2FsbGJhY2sgc2hvdWxkIGJlIGNhbGxlZCB3aXRoIGFcbiAgICAgKiBFcnJvciBhcyBpdHMgZmlyc3QgYXJndW1lbnQgdG8gc2lnbmFsIHRoYXQgYW4gZXJyb3Igb2NjdXJyZWQuXG4gICAgICogT3RoZXJ3aXNlLCBpZiBubyBlcnJvciBvY2N1cnJlZCwgaXQgc2hvdWxkIGJlIGNhbGxlZCB3aXRoIGBudWxsYCBhcyB0aGUgZmlyc3RcbiAgICAgKiBhcmd1bWVudCwgYW5kIGFueSBhZGRpdGlvbmFsIGByZXN1bHRgIGFyZ3VtZW50cyB0aGF0IG1heSBhcHBseSwgdG8gc2lnbmFsXG4gICAgICogc3VjY2Vzc2Z1bCBjb21wbGV0aW9uLlxuICAgICAqIFRoZSBjYWxsYmFjayBtdXN0IGJlIGNhbGxlZCBleGFjdGx5IG9uY2UsIGlkZWFsbHkgb24gYSBsYXRlciB0aWNrIG9mIHRoZVxuICAgICAqIEphdmFTY3JpcHQgZXZlbnQgbG9vcC5cbiAgICAgKlxuICAgICAqIFRoaXMgdHlwZSBvZiBmdW5jdGlvbiBpcyBhbHNvIHJlZmVycmVkIHRvIGFzIGEgXCJOb2RlLXN0eWxlIGFzeW5jIGZ1bmN0aW9uXCIsXG4gICAgICogb3IgYSBcImNvbnRpbnVhdGlvbiBwYXNzaW5nLXN0eWxlIGZ1bmN0aW9uXCIgKENQUykuIE1vc3Qgb2YgdGhlIG1ldGhvZHMgb2YgdGhpc1xuICAgICAqIGxpYnJhcnkgYXJlIHRoZW1zZWx2ZXMgQ1BTL05vZGUtc3R5bGUgYXN5bmMgZnVuY3Rpb25zLCBvciBmdW5jdGlvbnMgdGhhdFxuICAgICAqIHJldHVybiBDUFMvTm9kZS1zdHlsZSBhc3luYyBmdW5jdGlvbnMuXG4gICAgICpcbiAgICAgKiBXaGVyZXZlciB3ZSBhY2NlcHQgYSBOb2RlLXN0eWxlIGFzeW5jIGZ1bmN0aW9uLCB3ZSBhbHNvIGRpcmVjdGx5IGFjY2VwdCBhblxuICAgICAqIFtFUzIwMTcgYGFzeW5jYCBmdW5jdGlvbl17QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvU3RhdGVtZW50cy9hc3luY19mdW5jdGlvbn0uXG4gICAgICogSW4gdGhpcyBjYXNlLCB0aGUgYGFzeW5jYCBmdW5jdGlvbiB3aWxsIG5vdCBiZSBwYXNzZWQgYSBmaW5hbCBjYWxsYmFja1xuICAgICAqIGFyZ3VtZW50LCBhbmQgYW55IHRocm93biBlcnJvciB3aWxsIGJlIHVzZWQgYXMgdGhlIGBlcnJgIGFyZ3VtZW50IG9mIHRoZVxuICAgICAqIGltcGxpY2l0IGNhbGxiYWNrLCBhbmQgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGJlIHVzZWQgYXMgdGhlIGByZXN1bHRgIHZhbHVlLlxuICAgICAqIChpLmUuIGEgYHJlamVjdGVkYCBvZiB0aGUgcmV0dXJuZWQgUHJvbWlzZSBiZWNvbWVzIHRoZSBgZXJyYCBjYWxsYmFja1xuICAgICAqIGFyZ3VtZW50LCBhbmQgYSBgcmVzb2x2ZWRgIHZhbHVlIGJlY29tZXMgdGhlIGByZXN1bHRgLilcbiAgICAgKlxuICAgICAqIE5vdGUsIGR1ZSB0byBKYXZhU2NyaXB0IGxpbWl0YXRpb25zLCB3ZSBjYW4gb25seSBkZXRlY3QgbmF0aXZlIGBhc3luY2BcbiAgICAgKiBmdW5jdGlvbnMgYW5kIG5vdCB0cmFuc3BpbGllZCBpbXBsZW1lbnRhdGlvbnMuXG4gICAgICogWW91ciBlbnZpcm9ubWVudCBtdXN0IGhhdmUgYGFzeW5jYC9gYXdhaXRgIHN1cHBvcnQgZm9yIHRoaXMgdG8gd29yay5cbiAgICAgKiAoZS5nLiBOb2RlID4gdjcuNiwgb3IgYSByZWNlbnQgdmVyc2lvbiBvZiBhIG1vZGVybiBicm93c2VyKS5cbiAgICAgKiBJZiB5b3UgYXJlIHVzaW5nIGBhc3luY2AgZnVuY3Rpb25zIHRocm91Z2ggYSB0cmFuc3BpbGVyIChlLmcuIEJhYmVsKSwgeW91XG4gICAgICogbXVzdCBzdGlsbCB3cmFwIHRoZSBmdW5jdGlvbiB3aXRoIFthc3luY2lmeV17QGxpbmsgbW9kdWxlOlV0aWxzLmFzeW5jaWZ5fSxcbiAgICAgKiBiZWNhdXNlIHRoZSBgYXN5bmMgZnVuY3Rpb25gIHdpbGwgYmUgY29tcGlsZWQgdG8gYW4gb3JkaW5hcnkgZnVuY3Rpb24gdGhhdFxuICAgICAqIHJldHVybnMgYSBwcm9taXNlLlxuICAgICAqXG4gICAgICogQHR5cGVkZWYge0Z1bmN0aW9ufSBBc3luY0Z1bmN0aW9uXG4gICAgICogQHN0YXRpY1xuICAgICAqL1xuXG4gICAgdmFyIGluZGV4ID0ge1xuICAgICAgICBhcHBseSxcbiAgICAgICAgYXBwbHlFYWNoOiBhcHBseUVhY2gkMSxcbiAgICAgICAgYXBwbHlFYWNoU2VyaWVzLFxuICAgICAgICBhc3luY2lmeSxcbiAgICAgICAgYXV0byxcbiAgICAgICAgYXV0b0luamVjdCxcbiAgICAgICAgY2FyZ28sXG4gICAgICAgIGNhcmdvUXVldWU6IGNhcmdvJDEsXG4gICAgICAgIGNvbXBvc2UsXG4gICAgICAgIGNvbmNhdDogY29uY2F0JDEsXG4gICAgICAgIGNvbmNhdExpbWl0OiBjb25jYXRMaW1pdCQxLFxuICAgICAgICBjb25jYXRTZXJpZXM6IGNvbmNhdFNlcmllcyQxLFxuICAgICAgICBjb25zdGFudCxcbiAgICAgICAgZGV0ZWN0OiBkZXRlY3QkMSxcbiAgICAgICAgZGV0ZWN0TGltaXQ6IGRldGVjdExpbWl0JDEsXG4gICAgICAgIGRldGVjdFNlcmllczogZGV0ZWN0U2VyaWVzJDEsXG4gICAgICAgIGRpcixcbiAgICAgICAgZG9VbnRpbCxcbiAgICAgICAgZG9XaGlsc3Q6IGRvV2hpbHN0JDEsXG4gICAgICAgIGVhY2gsXG4gICAgICAgIGVhY2hMaW1pdDogZWFjaExpbWl0JDIsXG4gICAgICAgIGVhY2hPZjogZWFjaE9mJDEsXG4gICAgICAgIGVhY2hPZkxpbWl0OiBlYWNoT2ZMaW1pdCQyLFxuICAgICAgICBlYWNoT2ZTZXJpZXM6IGVhY2hPZlNlcmllcyQxLFxuICAgICAgICBlYWNoU2VyaWVzOiBlYWNoU2VyaWVzJDEsXG4gICAgICAgIGVuc3VyZUFzeW5jLFxuICAgICAgICBldmVyeTogZXZlcnkkMSxcbiAgICAgICAgZXZlcnlMaW1pdDogZXZlcnlMaW1pdCQxLFxuICAgICAgICBldmVyeVNlcmllczogZXZlcnlTZXJpZXMkMSxcbiAgICAgICAgZmlsdGVyOiBmaWx0ZXIkMSxcbiAgICAgICAgZmlsdGVyTGltaXQ6IGZpbHRlckxpbWl0JDEsXG4gICAgICAgIGZpbHRlclNlcmllczogZmlsdGVyU2VyaWVzJDEsXG4gICAgICAgIGZvcmV2ZXI6IGZvcmV2ZXIkMSxcbiAgICAgICAgZ3JvdXBCeSxcbiAgICAgICAgZ3JvdXBCeUxpbWl0OiBncm91cEJ5TGltaXQkMSxcbiAgICAgICAgZ3JvdXBCeVNlcmllcyxcbiAgICAgICAgbG9nLFxuICAgICAgICBtYXA6IG1hcCQxLFxuICAgICAgICBtYXBMaW1pdDogbWFwTGltaXQkMSxcbiAgICAgICAgbWFwU2VyaWVzOiBtYXBTZXJpZXMkMSxcbiAgICAgICAgbWFwVmFsdWVzLFxuICAgICAgICBtYXBWYWx1ZXNMaW1pdDogbWFwVmFsdWVzTGltaXQkMSxcbiAgICAgICAgbWFwVmFsdWVzU2VyaWVzLFxuICAgICAgICBtZW1vaXplLFxuICAgICAgICBuZXh0VGljayxcbiAgICAgICAgcGFyYWxsZWwsXG4gICAgICAgIHBhcmFsbGVsTGltaXQsXG4gICAgICAgIHByaW9yaXR5UXVldWUsXG4gICAgICAgIHF1ZXVlOiBxdWV1ZSQxLFxuICAgICAgICByYWNlOiByYWNlJDEsXG4gICAgICAgIHJlZHVjZTogcmVkdWNlJDEsXG4gICAgICAgIHJlZHVjZVJpZ2h0LFxuICAgICAgICByZWZsZWN0LFxuICAgICAgICByZWZsZWN0QWxsLFxuICAgICAgICByZWplY3Q6IHJlamVjdCQyLFxuICAgICAgICByZWplY3RMaW1pdDogcmVqZWN0TGltaXQkMSxcbiAgICAgICAgcmVqZWN0U2VyaWVzOiByZWplY3RTZXJpZXMkMSxcbiAgICAgICAgcmV0cnksXG4gICAgICAgIHJldHJ5YWJsZSxcbiAgICAgICAgc2VxLFxuICAgICAgICBzZXJpZXMsXG4gICAgICAgIHNldEltbWVkaWF0ZTogc2V0SW1tZWRpYXRlJDEsXG4gICAgICAgIHNvbWU6IHNvbWUkMSxcbiAgICAgICAgc29tZUxpbWl0OiBzb21lTGltaXQkMSxcbiAgICAgICAgc29tZVNlcmllczogc29tZVNlcmllcyQxLFxuICAgICAgICBzb3J0Qnk6IHNvcnRCeSQxLFxuICAgICAgICB0aW1lb3V0LFxuICAgICAgICB0aW1lcyxcbiAgICAgICAgdGltZXNMaW1pdCxcbiAgICAgICAgdGltZXNTZXJpZXMsXG4gICAgICAgIHRyYW5zZm9ybSxcbiAgICAgICAgdHJ5RWFjaDogdHJ5RWFjaCQxLFxuICAgICAgICB1bm1lbW9pemUsXG4gICAgICAgIHVudGlsLFxuICAgICAgICB3YXRlcmZhbGw6IHdhdGVyZmFsbCQxLFxuICAgICAgICB3aGlsc3Q6IHdoaWxzdCQxLFxuXG4gICAgICAgIC8vIGFsaWFzZXNcbiAgICAgICAgYWxsOiBldmVyeSQxLFxuICAgICAgICBhbGxMaW1pdDogZXZlcnlMaW1pdCQxLFxuICAgICAgICBhbGxTZXJpZXM6IGV2ZXJ5U2VyaWVzJDEsXG4gICAgICAgIGFueTogc29tZSQxLFxuICAgICAgICBhbnlMaW1pdDogc29tZUxpbWl0JDEsXG4gICAgICAgIGFueVNlcmllczogc29tZVNlcmllcyQxLFxuICAgICAgICBmaW5kOiBkZXRlY3QkMSxcbiAgICAgICAgZmluZExpbWl0OiBkZXRlY3RMaW1pdCQxLFxuICAgICAgICBmaW5kU2VyaWVzOiBkZXRlY3RTZXJpZXMkMSxcbiAgICAgICAgZmxhdE1hcDogY29uY2F0JDEsXG4gICAgICAgIGZsYXRNYXBMaW1pdDogY29uY2F0TGltaXQkMSxcbiAgICAgICAgZmxhdE1hcFNlcmllczogY29uY2F0U2VyaWVzJDEsXG4gICAgICAgIGZvckVhY2g6IGVhY2gsXG4gICAgICAgIGZvckVhY2hTZXJpZXM6IGVhY2hTZXJpZXMkMSxcbiAgICAgICAgZm9yRWFjaExpbWl0OiBlYWNoTGltaXQkMixcbiAgICAgICAgZm9yRWFjaE9mOiBlYWNoT2YkMSxcbiAgICAgICAgZm9yRWFjaE9mU2VyaWVzOiBlYWNoT2ZTZXJpZXMkMSxcbiAgICAgICAgZm9yRWFjaE9mTGltaXQ6IGVhY2hPZkxpbWl0JDIsXG4gICAgICAgIGluamVjdDogcmVkdWNlJDEsXG4gICAgICAgIGZvbGRsOiByZWR1Y2UkMSxcbiAgICAgICAgZm9sZHI6IHJlZHVjZVJpZ2h0LFxuICAgICAgICBzZWxlY3Q6IGZpbHRlciQxLFxuICAgICAgICBzZWxlY3RMaW1pdDogZmlsdGVyTGltaXQkMSxcbiAgICAgICAgc2VsZWN0U2VyaWVzOiBmaWx0ZXJTZXJpZXMkMSxcbiAgICAgICAgd3JhcFN5bmM6IGFzeW5jaWZ5LFxuICAgICAgICBkdXJpbmc6IHdoaWxzdCQxLFxuICAgICAgICBkb0R1cmluZzogZG9XaGlsc3QkMVxuICAgIH07XG5cbiAgICBleHBvcnRzLmRlZmF1bHQgPSBpbmRleDtcbiAgICBleHBvcnRzLmFwcGx5ID0gYXBwbHk7XG4gICAgZXhwb3J0cy5hcHBseUVhY2ggPSBhcHBseUVhY2gkMTtcbiAgICBleHBvcnRzLmFwcGx5RWFjaFNlcmllcyA9IGFwcGx5RWFjaFNlcmllcztcbiAgICBleHBvcnRzLmFzeW5jaWZ5ID0gYXN5bmNpZnk7XG4gICAgZXhwb3J0cy5hdXRvID0gYXV0bztcbiAgICBleHBvcnRzLmF1dG9JbmplY3QgPSBhdXRvSW5qZWN0O1xuICAgIGV4cG9ydHMuY2FyZ28gPSBjYXJnbztcbiAgICBleHBvcnRzLmNhcmdvUXVldWUgPSBjYXJnbyQxO1xuICAgIGV4cG9ydHMuY29tcG9zZSA9IGNvbXBvc2U7XG4gICAgZXhwb3J0cy5jb25jYXQgPSBjb25jYXQkMTtcbiAgICBleHBvcnRzLmNvbmNhdExpbWl0ID0gY29uY2F0TGltaXQkMTtcbiAgICBleHBvcnRzLmNvbmNhdFNlcmllcyA9IGNvbmNhdFNlcmllcyQxO1xuICAgIGV4cG9ydHMuY29uc3RhbnQgPSBjb25zdGFudDtcbiAgICBleHBvcnRzLmRldGVjdCA9IGRldGVjdCQxO1xuICAgIGV4cG9ydHMuZGV0ZWN0TGltaXQgPSBkZXRlY3RMaW1pdCQxO1xuICAgIGV4cG9ydHMuZGV0ZWN0U2VyaWVzID0gZGV0ZWN0U2VyaWVzJDE7XG4gICAgZXhwb3J0cy5kaXIgPSBkaXI7XG4gICAgZXhwb3J0cy5kb1VudGlsID0gZG9VbnRpbDtcbiAgICBleHBvcnRzLmRvV2hpbHN0ID0gZG9XaGlsc3QkMTtcbiAgICBleHBvcnRzLmVhY2ggPSBlYWNoO1xuICAgIGV4cG9ydHMuZWFjaExpbWl0ID0gZWFjaExpbWl0JDI7XG4gICAgZXhwb3J0cy5lYWNoT2YgPSBlYWNoT2YkMTtcbiAgICBleHBvcnRzLmVhY2hPZkxpbWl0ID0gZWFjaE9mTGltaXQkMjtcbiAgICBleHBvcnRzLmVhY2hPZlNlcmllcyA9IGVhY2hPZlNlcmllcyQxO1xuICAgIGV4cG9ydHMuZWFjaFNlcmllcyA9IGVhY2hTZXJpZXMkMTtcbiAgICBleHBvcnRzLmVuc3VyZUFzeW5jID0gZW5zdXJlQXN5bmM7XG4gICAgZXhwb3J0cy5ldmVyeSA9IGV2ZXJ5JDE7XG4gICAgZXhwb3J0cy5ldmVyeUxpbWl0ID0gZXZlcnlMaW1pdCQxO1xuICAgIGV4cG9ydHMuZXZlcnlTZXJpZXMgPSBldmVyeVNlcmllcyQxO1xuICAgIGV4cG9ydHMuZmlsdGVyID0gZmlsdGVyJDE7XG4gICAgZXhwb3J0cy5maWx0ZXJMaW1pdCA9IGZpbHRlckxpbWl0JDE7XG4gICAgZXhwb3J0cy5maWx0ZXJTZXJpZXMgPSBmaWx0ZXJTZXJpZXMkMTtcbiAgICBleHBvcnRzLmZvcmV2ZXIgPSBmb3JldmVyJDE7XG4gICAgZXhwb3J0cy5ncm91cEJ5ID0gZ3JvdXBCeTtcbiAgICBleHBvcnRzLmdyb3VwQnlMaW1pdCA9IGdyb3VwQnlMaW1pdCQxO1xuICAgIGV4cG9ydHMuZ3JvdXBCeVNlcmllcyA9IGdyb3VwQnlTZXJpZXM7XG4gICAgZXhwb3J0cy5sb2cgPSBsb2c7XG4gICAgZXhwb3J0cy5tYXAgPSBtYXAkMTtcbiAgICBleHBvcnRzLm1hcExpbWl0ID0gbWFwTGltaXQkMTtcbiAgICBleHBvcnRzLm1hcFNlcmllcyA9IG1hcFNlcmllcyQxO1xuICAgIGV4cG9ydHMubWFwVmFsdWVzID0gbWFwVmFsdWVzO1xuICAgIGV4cG9ydHMubWFwVmFsdWVzTGltaXQgPSBtYXBWYWx1ZXNMaW1pdCQxO1xuICAgIGV4cG9ydHMubWFwVmFsdWVzU2VyaWVzID0gbWFwVmFsdWVzU2VyaWVzO1xuICAgIGV4cG9ydHMubWVtb2l6ZSA9IG1lbW9pemU7XG4gICAgZXhwb3J0cy5uZXh0VGljayA9IG5leHRUaWNrO1xuICAgIGV4cG9ydHMucGFyYWxsZWwgPSBwYXJhbGxlbDtcbiAgICBleHBvcnRzLnBhcmFsbGVsTGltaXQgPSBwYXJhbGxlbExpbWl0O1xuICAgIGV4cG9ydHMucHJpb3JpdHlRdWV1ZSA9IHByaW9yaXR5UXVldWU7XG4gICAgZXhwb3J0cy5xdWV1ZSA9IHF1ZXVlJDE7XG4gICAgZXhwb3J0cy5yYWNlID0gcmFjZSQxO1xuICAgIGV4cG9ydHMucmVkdWNlID0gcmVkdWNlJDE7XG4gICAgZXhwb3J0cy5yZWR1Y2VSaWdodCA9IHJlZHVjZVJpZ2h0O1xuICAgIGV4cG9ydHMucmVmbGVjdCA9IHJlZmxlY3Q7XG4gICAgZXhwb3J0cy5yZWZsZWN0QWxsID0gcmVmbGVjdEFsbDtcbiAgICBleHBvcnRzLnJlamVjdCA9IHJlamVjdCQyO1xuICAgIGV4cG9ydHMucmVqZWN0TGltaXQgPSByZWplY3RMaW1pdCQxO1xuICAgIGV4cG9ydHMucmVqZWN0U2VyaWVzID0gcmVqZWN0U2VyaWVzJDE7XG4gICAgZXhwb3J0cy5yZXRyeSA9IHJldHJ5O1xuICAgIGV4cG9ydHMucmV0cnlhYmxlID0gcmV0cnlhYmxlO1xuICAgIGV4cG9ydHMuc2VxID0gc2VxO1xuICAgIGV4cG9ydHMuc2VyaWVzID0gc2VyaWVzO1xuICAgIGV4cG9ydHMuc2V0SW1tZWRpYXRlID0gc2V0SW1tZWRpYXRlJDE7XG4gICAgZXhwb3J0cy5zb21lID0gc29tZSQxO1xuICAgIGV4cG9ydHMuc29tZUxpbWl0ID0gc29tZUxpbWl0JDE7XG4gICAgZXhwb3J0cy5zb21lU2VyaWVzID0gc29tZVNlcmllcyQxO1xuICAgIGV4cG9ydHMuc29ydEJ5ID0gc29ydEJ5JDE7XG4gICAgZXhwb3J0cy50aW1lb3V0ID0gdGltZW91dDtcbiAgICBleHBvcnRzLnRpbWVzID0gdGltZXM7XG4gICAgZXhwb3J0cy50aW1lc0xpbWl0ID0gdGltZXNMaW1pdDtcbiAgICBleHBvcnRzLnRpbWVzU2VyaWVzID0gdGltZXNTZXJpZXM7XG4gICAgZXhwb3J0cy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG4gICAgZXhwb3J0cy50cnlFYWNoID0gdHJ5RWFjaCQxO1xuICAgIGV4cG9ydHMudW5tZW1vaXplID0gdW5tZW1vaXplO1xuICAgIGV4cG9ydHMudW50aWwgPSB1bnRpbDtcbiAgICBleHBvcnRzLndhdGVyZmFsbCA9IHdhdGVyZmFsbCQxO1xuICAgIGV4cG9ydHMud2hpbHN0ID0gd2hpbHN0JDE7XG4gICAgZXhwb3J0cy5hbGwgPSBldmVyeSQxO1xuICAgIGV4cG9ydHMuYWxsTGltaXQgPSBldmVyeUxpbWl0JDE7XG4gICAgZXhwb3J0cy5hbGxTZXJpZXMgPSBldmVyeVNlcmllcyQxO1xuICAgIGV4cG9ydHMuYW55ID0gc29tZSQxO1xuICAgIGV4cG9ydHMuYW55TGltaXQgPSBzb21lTGltaXQkMTtcbiAgICBleHBvcnRzLmFueVNlcmllcyA9IHNvbWVTZXJpZXMkMTtcbiAgICBleHBvcnRzLmZpbmQgPSBkZXRlY3QkMTtcbiAgICBleHBvcnRzLmZpbmRMaW1pdCA9IGRldGVjdExpbWl0JDE7XG4gICAgZXhwb3J0cy5maW5kU2VyaWVzID0gZGV0ZWN0U2VyaWVzJDE7XG4gICAgZXhwb3J0cy5mbGF0TWFwID0gY29uY2F0JDE7XG4gICAgZXhwb3J0cy5mbGF0TWFwTGltaXQgPSBjb25jYXRMaW1pdCQxO1xuICAgIGV4cG9ydHMuZmxhdE1hcFNlcmllcyA9IGNvbmNhdFNlcmllcyQxO1xuICAgIGV4cG9ydHMuZm9yRWFjaCA9IGVhY2g7XG4gICAgZXhwb3J0cy5mb3JFYWNoU2VyaWVzID0gZWFjaFNlcmllcyQxO1xuICAgIGV4cG9ydHMuZm9yRWFjaExpbWl0ID0gZWFjaExpbWl0JDI7XG4gICAgZXhwb3J0cy5mb3JFYWNoT2YgPSBlYWNoT2YkMTtcbiAgICBleHBvcnRzLmZvckVhY2hPZlNlcmllcyA9IGVhY2hPZlNlcmllcyQxO1xuICAgIGV4cG9ydHMuZm9yRWFjaE9mTGltaXQgPSBlYWNoT2ZMaW1pdCQyO1xuICAgIGV4cG9ydHMuaW5qZWN0ID0gcmVkdWNlJDE7XG4gICAgZXhwb3J0cy5mb2xkbCA9IHJlZHVjZSQxO1xuICAgIGV4cG9ydHMuZm9sZHIgPSByZWR1Y2VSaWdodDtcbiAgICBleHBvcnRzLnNlbGVjdCA9IGZpbHRlciQxO1xuICAgIGV4cG9ydHMuc2VsZWN0TGltaXQgPSBmaWx0ZXJMaW1pdCQxO1xuICAgIGV4cG9ydHMuc2VsZWN0U2VyaWVzID0gZmlsdGVyU2VyaWVzJDE7XG4gICAgZXhwb3J0cy53cmFwU3luYyA9IGFzeW5jaWZ5O1xuICAgIGV4cG9ydHMuZHVyaW5nID0gd2hpbHN0JDE7XG4gICAgZXhwb3J0cy5kb0R1cmluZyA9IGRvV2hpbHN0JDE7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG59KSkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/async/dist/async.js\n");

/***/ }),

/***/ "../../node_modules/async/internal/awaitify.js":
/*!**************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/internal/awaitify.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = awaitify;\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify(asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined');\n    function awaitable(...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args);\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err);\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        });\n    }\n\n    return awaitable;\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL2F3YWl0aWZ5LmpzP2U3NjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvYXdhaXRpZnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGF3YWl0aWZ5O1xuLy8gY29uZGl0aW9uYWxseSBwcm9taXNpZnkgYSBmdW5jdGlvbi5cbi8vIG9ubHkgcmV0dXJuIGEgcHJvbWlzZSBpZiBhIGNhbGxiYWNrIGlzIG9taXR0ZWRcbmZ1bmN0aW9uIGF3YWl0aWZ5KGFzeW5jRm4sIGFyaXR5ID0gYXN5bmNGbi5sZW5ndGgpIHtcbiAgICBpZiAoIWFyaXR5KSB0aHJvdyBuZXcgRXJyb3IoJ2FyaXR5IGlzIHVuZGVmaW5lZCcpO1xuICAgIGZ1bmN0aW9uIGF3YWl0YWJsZSguLi5hcmdzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYXJnc1thcml0eSAtIDFdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gYXN5bmNGbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBhcmdzW2FyaXR5IC0gMV0gPSAoZXJyLCAuLi5jYkFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShjYkFyZ3MubGVuZ3RoID4gMSA/IGNiQXJncyA6IGNiQXJnc1swXSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgYXN5bmNGbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGF3YWl0YWJsZTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async/internal/awaitify.js\n");

/***/ }),

/***/ "../../node_modules/async/internal/initialParams.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/internal/initialParams.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (fn) {\n    return function (...args /*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n};\n\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL2luaXRpYWxQYXJhbXMuanM/YTg2NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL2luaXRpYWxQYXJhbXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoZm4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MgLyosIGNhbGxiYWNrKi8pIHtcbiAgICAgICAgdmFyIGNhbGxiYWNrID0gYXJncy5wb3AoKTtcbiAgICAgICAgcmV0dXJuIGZuLmNhbGwodGhpcywgYXJncywgY2FsbGJhY2spO1xuICAgIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async/internal/initialParams.js\n");

/***/ }),

/***/ "../../node_modules/async/internal/once.js":
/*!**********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/internal/once.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = once;\nfunction once(fn) {\n    function wrapper(...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper;\n}\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL29uY2UuanM/NzhlNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvb25jZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBvbmNlO1xuZnVuY3Rpb24gb25jZShmbikge1xuICAgIGZ1bmN0aW9uIHdyYXBwZXIoLi4uYXJncykge1xuICAgICAgICBpZiAoZm4gPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgdmFyIGNhbGxGbiA9IGZuO1xuICAgICAgICBmbiA9IG51bGw7XG4gICAgICAgIGNhbGxGbi5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9XG4gICAgT2JqZWN0LmFzc2lnbih3cmFwcGVyLCBmbik7XG4gICAgcmV0dXJuIHdyYXBwZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async/internal/once.js\n");

/***/ }),

/***/ "../../node_modules/async/internal/onlyOnce.js":
/*!**************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/internal/onlyOnce.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = onlyOnce;\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL29ubHlPbmNlLmpzP2NkZjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvb25seU9uY2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gb25seU9uY2U7XG5mdW5jdGlvbiBvbmx5T25jZShmbikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICBpZiAoZm4gPT09IG51bGwpIHRocm93IG5ldyBFcnJvcihcIkNhbGxiYWNrIHdhcyBhbHJlYWR5IGNhbGxlZC5cIik7XG4gICAgICAgIHZhciBjYWxsRm4gPSBmbjtcbiAgICAgICAgZm4gPSBudWxsO1xuICAgICAgICBjYWxsRm4uYXBwbHkodGhpcywgYXJncyk7XG4gICAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/async/internal/onlyOnce.js\n");

/***/ }),

/***/ "../../node_modules/async/internal/promiseCallback.js":
/*!*********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/internal/promiseCallback.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback() {\n    let resolve, reject;\n    function callback(err, ...args) {\n        if (err) return reject(err);\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res, reject = rej;\n    });\n\n    return callback;\n}\n\nexports.promiseCallback = promiseCallback;\nexports.PROMISE_SYMBOL = PROMISE_SYMBOL;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL3Byb21pc2VDYWxsYmFjay5qcz9mYmMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvcHJvbWlzZUNhbGxiYWNrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5jb25zdCBQUk9NSVNFX1NZTUJPTCA9IFN5bWJvbCgncHJvbWlzZUNhbGxiYWNrJyk7XG5cbmZ1bmN0aW9uIHByb21pc2VDYWxsYmFjaygpIHtcbiAgICBsZXQgcmVzb2x2ZSwgcmVqZWN0O1xuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKGVyciwgLi4uYXJncykge1xuICAgICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICAgIHJlc29sdmUoYXJncy5sZW5ndGggPiAxID8gYXJncyA6IGFyZ3NbMF0pO1xuICAgIH1cblxuICAgIGNhbGxiYWNrW1BST01JU0VfU1lNQk9MXSA9IG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICByZXNvbHZlID0gcmVzLCByZWplY3QgPSByZWo7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gY2FsbGJhY2s7XG59XG5cbmV4cG9ydHMucHJvbWlzZUNhbGxiYWNrID0gcHJvbWlzZUNhbGxiYWNrO1xuZXhwb3J0cy5QUk9NSVNFX1NZTUJPTCA9IFBST01JU0VfU1lNQk9MOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async/internal/promiseCallback.js\n");

/***/ }),

/***/ "../../node_modules/async/internal/setImmediate.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/internal/setImmediate.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fallback = fallback;\nexports.wrap = wrap;\n/* istanbul ignore file */\n\nvar hasQueueMicrotask = exports.hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\nvar hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasQueueMicrotask) {\n    _defer = queueMicrotask;\n} else if (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nexports.default = wrap(_defer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL3NldEltbWVkaWF0ZS5qcz9mYzcxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYXN5bmMvaW50ZXJuYWwvc2V0SW1tZWRpYXRlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZhbGxiYWNrID0gZmFsbGJhY2s7XG5leHBvcnRzLndyYXAgPSB3cmFwO1xuLyogaXN0YW5idWwgaWdub3JlIGZpbGUgKi9cblxudmFyIGhhc1F1ZXVlTWljcm90YXNrID0gZXhwb3J0cy5oYXNRdWV1ZU1pY3JvdGFzayA9IHR5cGVvZiBxdWV1ZU1pY3JvdGFzayA9PT0gJ2Z1bmN0aW9uJyAmJiBxdWV1ZU1pY3JvdGFzaztcbnZhciBoYXNTZXRJbW1lZGlhdGUgPSBleHBvcnRzLmhhc1NldEltbWVkaWF0ZSA9IHR5cGVvZiBzZXRJbW1lZGlhdGUgPT09ICdmdW5jdGlvbicgJiYgc2V0SW1tZWRpYXRlO1xudmFyIGhhc05leHRUaWNrID0gZXhwb3J0cy5oYXNOZXh0VGljayA9IHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgcHJvY2Vzcy5uZXh0VGljayA9PT0gJ2Z1bmN0aW9uJztcblxuZnVuY3Rpb24gZmFsbGJhY2soZm4pIHtcbiAgICBzZXRUaW1lb3V0KGZuLCAwKTtcbn1cblxuZnVuY3Rpb24gd3JhcChkZWZlcikge1xuICAgIHJldHVybiAoZm4sIC4uLmFyZ3MpID0+IGRlZmVyKCgpID0+IGZuKC4uLmFyZ3MpKTtcbn1cblxudmFyIF9kZWZlcjtcblxuaWYgKGhhc1F1ZXVlTWljcm90YXNrKSB7XG4gICAgX2RlZmVyID0gcXVldWVNaWNyb3Rhc2s7XG59IGVsc2UgaWYgKGhhc1NldEltbWVkaWF0ZSkge1xuICAgIF9kZWZlciA9IHNldEltbWVkaWF0ZTtcbn0gZWxzZSBpZiAoaGFzTmV4dFRpY2spIHtcbiAgICBfZGVmZXIgPSBwcm9jZXNzLm5leHRUaWNrO1xufSBlbHNlIHtcbiAgICBfZGVmZXIgPSBmYWxsYmFjaztcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gd3JhcChfZGVmZXIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async/internal/setImmediate.js\n");

/***/ }),

/***/ "../../node_modules/async/internal/wrapAsync.js":
/*!***************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/internal/wrapAsync.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isAsyncIterable = exports.isAsyncGenerator = exports.isAsync = undefined;\n\nvar _asyncify = __webpack_require__(/*! ../asyncify.js */ \"../../node_modules/async/asyncify.js\");\n\nvar _asyncify2 = _interopRequireDefault(_asyncify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function');\n    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;\n}\n\nexports.default = wrapAsync;\nexports.isAsync = isAsync;\nexports.isAsyncGenerator = isAsyncGenerator;\nexports.isAsyncIterable = isAsyncIterable;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL3dyYXBBc3luYy5qcz83MTdkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsNERBQWdCOztBQUV4Qzs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2FzeW5jL2ludGVybmFsL3dyYXBBc3luYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5pc0FzeW5jSXRlcmFibGUgPSBleHBvcnRzLmlzQXN5bmNHZW5lcmF0b3IgPSBleHBvcnRzLmlzQXN5bmMgPSB1bmRlZmluZWQ7XG5cbnZhciBfYXN5bmNpZnkgPSByZXF1aXJlKCcuLi9hc3luY2lmeS5qcycpO1xuXG52YXIgX2FzeW5jaWZ5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2FzeW5jaWZ5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gaXNBc3luYyhmbikge1xuICAgIHJldHVybiBmbltTeW1ib2wudG9TdHJpbmdUYWddID09PSAnQXN5bmNGdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGlzQXN5bmNHZW5lcmF0b3IoZm4pIHtcbiAgICByZXR1cm4gZm5bU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ0FzeW5jR2VuZXJhdG9yJztcbn1cblxuZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gd3JhcEFzeW5jKGFzeW5jRm4pIHtcbiAgICBpZiAodHlwZW9mIGFzeW5jRm4gIT09ICdmdW5jdGlvbicpIHRocm93IG5ldyBFcnJvcignZXhwZWN0ZWQgYSBmdW5jdGlvbicpO1xuICAgIHJldHVybiBpc0FzeW5jKGFzeW5jRm4pID8gKDAsIF9hc3luY2lmeTIuZGVmYXVsdCkoYXN5bmNGbikgOiBhc3luY0ZuO1xufVxuXG5leHBvcnRzLmRlZmF1bHQgPSB3cmFwQXN5bmM7XG5leHBvcnRzLmlzQXN5bmMgPSBpc0FzeW5jO1xuZXhwb3J0cy5pc0FzeW5jR2VuZXJhdG9yID0gaXNBc3luY0dlbmVyYXRvcjtcbmV4cG9ydHMuaXNBc3luY0l0ZXJhYmxlID0gaXNBc3luY0l0ZXJhYmxlOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async/internal/wrapAsync.js\n");

/***/ }),

/***/ "../../node_modules/async/retry.js":
/*!**************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/retry.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = retry;\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync.js */ \"../../node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _promiseCallback = __webpack_require__(/*! ./internal/promiseCallback.js */ \"../../node_modules/async/internal/promiseCallback.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction constant(value) {\n    return function () {\n        return value;\n    };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || (0, _promiseCallback.promiseCallback)();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || (0, _promiseCallback.promiseCallback)();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = (0, _wrapAsync2.default)(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return;\n            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[_promiseCallback.PROMISE_SYMBOL];\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/async/retry.js\n");

/***/ }),

/***/ "../../node_modules/async/waterfall.js":
/*!******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/async/waterfall.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _once = __webpack_require__(/*! ./internal/once.js */ \"../../node_modules/async/internal/once.js\");\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _onlyOnce = __webpack_require__(/*! ./internal/onlyOnce.js */ \"../../node_modules/async/internal/onlyOnce.js\");\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = __webpack_require__(/*! ./internal/wrapAsync.js */ \"../../node_modules/async/internal/wrapAsync.js\");\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = __webpack_require__(/*! ./internal/awaitify.js */ \"../../node_modules/async/internal/awaitify.js\");\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall(tasks, callback) {\n    callback = (0, _once2.default)(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);\n        task(...args, (0, _onlyOnce2.default)(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return;\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nexports.default = (0, _awaitify2.default)(waterfall);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2FzeW5jL3dhdGVyZmFsbC5qcz8wZTgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDOztBQUVELFlBQVksbUJBQU8sQ0FBQyxxRUFBb0I7O0FBRXhDOztBQUVBLGdCQUFnQixtQkFBTyxDQUFDLDZFQUF3Qjs7QUFFaEQ7O0FBRUEsaUJBQWlCLG1CQUFPLENBQUMsK0VBQXlCOztBQUVsRDs7QUFFQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBd0I7O0FBRWhEOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNLHVDQUF1QztBQUN4RDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2FzeW5jL3dhdGVyZmFsbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX29uY2UgPSByZXF1aXJlKCcuL2ludGVybmFsL29uY2UuanMnKTtcblxudmFyIF9vbmNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX29uY2UpO1xuXG52YXIgX29ubHlPbmNlID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9vbmx5T25jZS5qcycpO1xuXG52YXIgX29ubHlPbmNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX29ubHlPbmNlKTtcblxudmFyIF93cmFwQXN5bmMgPSByZXF1aXJlKCcuL2ludGVybmFsL3dyYXBBc3luYy5qcycpO1xuXG52YXIgX3dyYXBBc3luYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93cmFwQXN5bmMpO1xuXG52YXIgX2F3YWl0aWZ5ID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9hd2FpdGlmeS5qcycpO1xuXG52YXIgX2F3YWl0aWZ5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2F3YWl0aWZ5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBSdW5zIHRoZSBgdGFza3NgIGFycmF5IG9mIGZ1bmN0aW9ucyBpbiBzZXJpZXMsIGVhY2ggcGFzc2luZyB0aGVpciByZXN1bHRzIHRvXG4gKiB0aGUgbmV4dCBpbiB0aGUgYXJyYXkuIEhvd2V2ZXIsIGlmIGFueSBvZiB0aGUgYHRhc2tzYCBwYXNzIGFuIGVycm9yIHRvIHRoZWlyXG4gKiBvd24gY2FsbGJhY2ssIHRoZSBuZXh0IGZ1bmN0aW9uIGlzIG5vdCBleGVjdXRlZCwgYW5kIHRoZSBtYWluIGBjYWxsYmFja2AgaXNcbiAqIGltbWVkaWF0ZWx5IGNhbGxlZCB3aXRoIHRoZSBlcnJvci5cbiAqXG4gKiBAbmFtZSB3YXRlcmZhbGxcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBtb2R1bGU6Q29udHJvbEZsb3dcbiAqIEBtZXRob2RcbiAqIEBjYXRlZ29yeSBDb250cm9sIEZsb3dcbiAqIEBwYXJhbSB7QXJyYXl9IHRhc2tzIC0gQW4gYXJyYXkgb2YgW2FzeW5jIGZ1bmN0aW9uc117QGxpbmsgQXN5bmNGdW5jdGlvbn1cbiAqIHRvIHJ1bi5cbiAqIEVhY2ggZnVuY3Rpb24gc2hvdWxkIGNvbXBsZXRlIHdpdGggYW55IG51bWJlciBvZiBgcmVzdWx0YCB2YWx1ZXMuXG4gKiBUaGUgYHJlc3VsdGAgdmFsdWVzIHdpbGwgYmUgcGFzc2VkIGFzIGFyZ3VtZW50cywgaW4gb3JkZXIsIHRvIHRoZSBuZXh0IHRhc2suXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIC0gQW4gb3B0aW9uYWwgY2FsbGJhY2sgdG8gcnVuIG9uY2UgYWxsIHRoZVxuICogZnVuY3Rpb25zIGhhdmUgY29tcGxldGVkLiBUaGlzIHdpbGwgYmUgcGFzc2VkIHRoZSByZXN1bHRzIG9mIHRoZSBsYXN0IHRhc2snc1xuICogY2FsbGJhY2suIEludm9rZWQgd2l0aCAoZXJyLCBbcmVzdWx0c10pLlxuICogQHJldHVybnMgdW5kZWZpbmVkXG4gKiBAZXhhbXBsZVxuICpcbiAqIGFzeW5jLndhdGVyZmFsbChbXG4gKiAgICAgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ29uZScsICd0d28nKTtcbiAqICAgICB9LFxuICogICAgIGZ1bmN0aW9uKGFyZzEsIGFyZzIsIGNhbGxiYWNrKSB7XG4gKiAgICAgICAgIC8vIGFyZzEgbm93IGVxdWFscyAnb25lJyBhbmQgYXJnMiBub3cgZXF1YWxzICd0d28nXG4gKiAgICAgICAgIGNhbGxiYWNrKG51bGwsICd0aHJlZScpO1xuICogICAgIH0sXG4gKiAgICAgZnVuY3Rpb24oYXJnMSwgY2FsbGJhY2spIHtcbiAqICAgICAgICAgLy8gYXJnMSBub3cgZXF1YWxzICd0aHJlZSdcbiAqICAgICAgICAgY2FsbGJhY2sobnVsbCwgJ2RvbmUnKTtcbiAqICAgICB9XG4gKiBdLCBmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAqICAgICAvLyByZXN1bHQgbm93IGVxdWFscyAnZG9uZSdcbiAqIH0pO1xuICpcbiAqIC8vIE9yLCB3aXRoIG5hbWVkIGZ1bmN0aW9uczpcbiAqIGFzeW5jLndhdGVyZmFsbChbXG4gKiAgICAgbXlGaXJzdEZ1bmN0aW9uLFxuICogICAgIG15U2Vjb25kRnVuY3Rpb24sXG4gKiAgICAgbXlMYXN0RnVuY3Rpb24sXG4gKiBdLCBmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAqICAgICAvLyByZXN1bHQgbm93IGVxdWFscyAnZG9uZSdcbiAqIH0pO1xuICogZnVuY3Rpb24gbXlGaXJzdEZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gKiAgICAgY2FsbGJhY2sobnVsbCwgJ29uZScsICd0d28nKTtcbiAqIH1cbiAqIGZ1bmN0aW9uIG15U2Vjb25kRnVuY3Rpb24oYXJnMSwgYXJnMiwgY2FsbGJhY2spIHtcbiAqICAgICAvLyBhcmcxIG5vdyBlcXVhbHMgJ29uZScgYW5kIGFyZzIgbm93IGVxdWFscyAndHdvJ1xuICogICAgIGNhbGxiYWNrKG51bGwsICd0aHJlZScpO1xuICogfVxuICogZnVuY3Rpb24gbXlMYXN0RnVuY3Rpb24oYXJnMSwgY2FsbGJhY2spIHtcbiAqICAgICAvLyBhcmcxIG5vdyBlcXVhbHMgJ3RocmVlJ1xuICogICAgIGNhbGxiYWNrKG51bGwsICdkb25lJyk7XG4gKiB9XG4gKi9cbmZ1bmN0aW9uIHdhdGVyZmFsbCh0YXNrcywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9ICgwLCBfb25jZTIuZGVmYXVsdCkoY2FsbGJhY2spO1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh0YXNrcykpIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IHRvIHdhdGVyZmFsbCBtdXN0IGJlIGFuIGFycmF5IG9mIGZ1bmN0aW9ucycpKTtcbiAgICBpZiAoIXRhc2tzLmxlbmd0aCkgcmV0dXJuIGNhbGxiYWNrKCk7XG4gICAgdmFyIHRhc2tJbmRleCA9IDA7XG5cbiAgICBmdW5jdGlvbiBuZXh0VGFzayhhcmdzKSB7XG4gICAgICAgIHZhciB0YXNrID0gKDAsIF93cmFwQXN5bmMyLmRlZmF1bHQpKHRhc2tzW3Rhc2tJbmRleCsrXSk7XG4gICAgICAgIHRhc2soLi4uYXJncywgKDAsIF9vbmx5T25jZTIuZGVmYXVsdCkobmV4dCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG5leHQoZXJyLCAuLi5hcmdzKSB7XG4gICAgICAgIGlmIChlcnIgPT09IGZhbHNlKSByZXR1cm47XG4gICAgICAgIGlmIChlcnIgfHwgdGFza0luZGV4ID09PSB0YXNrcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhlcnIsIC4uLmFyZ3MpO1xuICAgICAgICB9XG4gICAgICAgIG5leHRUYXNrKGFyZ3MpO1xuICAgIH1cblxuICAgIG5leHRUYXNrKFtdKTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gKDAsIF9hd2FpdGlmeTIuZGVmYXVsdCkod2F0ZXJmYWxsKTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/async/waterfall.js\n");

/***/ }),

/***/ "../../node_modules/base64-js/index.js":
/*!******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/base64-js/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcz8yNTgyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsU0FBUztBQUMzQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMENBQTBDLFVBQVU7QUFDcEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgdmFyIGlcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/base64-js/index.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/auth/access-token.js":
/*!****************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/auth/access-token.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessToken = void 0;\n/**\n * A token that provides access to Bitski on behalf of a user.\n */\nclass AccessToken {\n    constructor(token, expiresIn) {\n        this.expiresAt = undefined;\n        this.token = token;\n        if (expiresIn) {\n            this.expiresAt = Math.floor(Date.now() / 1000) + expiresIn;\n        }\n    }\n    get expired() {\n        if (this.expiresAt) {\n            const now = Math.floor(Date.now() / 1000);\n            const expiresIn = this.expiresAt - now;\n            return expiresIn <= 0;\n        }\n        return false;\n    }\n}\nexports.AccessToken = AccessToken;\n//# sourceMappingURL=access-token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvYXV0aC9hY2Nlc3MtdG9rZW4uanM/OTYzOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvYXV0aC9hY2Nlc3MtdG9rZW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWNjZXNzVG9rZW4gPSB2b2lkIDA7XG4vKipcbiAqIEEgdG9rZW4gdGhhdCBwcm92aWRlcyBhY2Nlc3MgdG8gQml0c2tpIG9uIGJlaGFsZiBvZiBhIHVzZXIuXG4gKi9cbmNsYXNzIEFjY2Vzc1Rva2VuIHtcbiAgICBjb25zdHJ1Y3Rvcih0b2tlbiwgZXhwaXJlc0luKSB7XG4gICAgICAgIHRoaXMuZXhwaXJlc0F0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnRva2VuID0gdG9rZW47XG4gICAgICAgIGlmIChleHBpcmVzSW4pIHtcbiAgICAgICAgICAgIHRoaXMuZXhwaXJlc0F0ID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCkgKyBleHBpcmVzSW47XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGV4cGlyZWQoKSB7XG4gICAgICAgIGlmICh0aGlzLmV4cGlyZXNBdCkge1xuICAgICAgICAgICAgY29uc3Qgbm93ID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG4gICAgICAgICAgICBjb25zdCBleHBpcmVzSW4gPSB0aGlzLmV4cGlyZXNBdCAtIG5vdztcbiAgICAgICAgICAgIHJldHVybiBleHBpcmVzSW4gPD0gMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0cy5BY2Nlc3NUb2tlbiA9IEFjY2Vzc1Rva2VuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjZXNzLXRva2VuLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/auth/access-token.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/bitski-engine.js":
/*!************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/bitski-engine.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitskiEngine = void 0;\nconst provider_engine_1 = __importStar(__webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\"));\nconst provider_error_1 = __webpack_require__(/*! ./errors/provider-error */ \"../../node_modules/bitski-provider/lib/errors/provider-error.js\");\nconst nonce_tracker_1 = __webpack_require__(/*! ./subproviders/nonce-tracker */ \"../../node_modules/bitski-provider/lib/subproviders/nonce-tracker.js\");\nconst transaction_validator_1 = __webpack_require__(/*! ./subproviders/transaction-validator */ \"../../node_modules/bitski-provider/lib/subproviders/transaction-validator.js\");\nconst typed_data_1 = __webpack_require__(/*! ./subproviders/typed-data */ \"../../node_modules/bitski-provider/lib/subproviders/typed-data.js\");\nclass BitskiEngine extends provider_engine_1.default {\n    constructor(options) {\n        super(options);\n        options = options || {};\n        // Handles static responses\n        this.addProvider(new provider_engine_1.DefaultFixtureSubprovider());\n        // Monitors requests to eth_getTransactionCount and eth_sendTransaction to track\n        // pending transactions\n        this.addProvider(new nonce_tracker_1.NonceTrackerSubprovider());\n        // Sanitizes transaction params, removing anything invalid\n        this.addProvider(new provider_engine_1.SanitizerSubprovider());\n        const enableValidator = !(options && options.disableValidation === true);\n        if (enableValidator) {\n            // Ensures that transactions are well formed (nonce, gas, gasPrice, from) before they are sent to Bitski\n            this.addProvider(new transaction_validator_1.TransactionValidatorSubprovider(options.minGasPrice));\n            this.addProvider(new typed_data_1.TypedDataSanitizerSubprovider());\n        }\n        const enableCache = !(options && options.disableCaching === true);\n        if (enableCache) {\n            // Block Cache - caches certain requests by their block number\n            this.addProvider(new provider_engine_1.BlockCacheSubprovider());\n        }\n        // Handles subscriptions and filters\n        const filterAndSubsSubprovider = new provider_engine_1.SubscriptionsSubprovider();\n        // Watch for updates from subscriptions\n        filterAndSubsSubprovider.on('data', (_, notification) => {\n            this.onMessage(notification);\n        });\n        this.addProvider(filterAndSubsSubprovider);\n        if (enableCache) {\n            // Debounces duplicate requests that occur at the same time\n            this.addProvider(new provider_engine_1.InflightCacheSubprovider());\n        }\n    }\n    supportsSubscriptions() {\n        return this._pollForBlocks;\n    }\n    subscribe(subscribeMethod = 'eth_subscribe', subscriptionMethod, parameters) {\n        if (!this._pollForBlocks) {\n            return Promise.reject(provider_error_1.ProviderError.SubscriptionsUnavailable());\n        }\n        parameters.unshift(subscriptionMethod);\n        return this.send(subscribeMethod, parameters);\n    }\n    unsubscribe(subscriptionId, unsubscribeMethod = 'eth_unsubscribe') {\n        if (!this._pollForBlocks) {\n            return Promise.reject(provider_error_1.ProviderError.SubscriptionsUnavailable());\n        }\n        return this.send(unsubscribeMethod, [subscriptionId]).then((response) => {\n            if (response) {\n                this.removeAllListeners(subscriptionId);\n            }\n            return response;\n        });\n    }\n    onMessage(notification) {\n        // Re-emit (previous behavior ~ web3 1.0.0-beta.37)\n        this.emit('data', null, notification);\n        if (notification && notification.params && notification.params.subscription) {\n            // Current web3 behavior - emit subscription id\n            this.emit(notification.params.subscription, notification.params);\n        }\n    }\n}\nexports.BitskiEngine = BitskiEngine;\n//# sourceMappingURL=bitski-engine.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvYml0c2tpLWVuZ2luZS5qcz9jZjY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSx5Q0FBeUMsNkJBQTZCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsdUNBQXVDLG1CQUFPLENBQUMsa0dBQXlCO0FBQ3hFLHlCQUF5QixtQkFBTyxDQUFDLGdHQUF5QjtBQUMxRCx3QkFBd0IsbUJBQU8sQ0FBQywwR0FBOEI7QUFDOUQsZ0NBQWdDLG1CQUFPLENBQUMsMEhBQXNDO0FBQzlFLHFCQUFxQixtQkFBTyxDQUFDLG9HQUEyQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2ktcHJvdmlkZXIvbGliL2JpdHNraS1lbmdpbmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CaXRza2lFbmdpbmUgPSB2b2lkIDA7XG5jb25zdCBwcm92aWRlcl9lbmdpbmVfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiQGJpdHNraS9wcm92aWRlci1lbmdpbmVcIikpO1xuY29uc3QgcHJvdmlkZXJfZXJyb3JfMSA9IHJlcXVpcmUoXCIuL2Vycm9ycy9wcm92aWRlci1lcnJvclwiKTtcbmNvbnN0IG5vbmNlX3RyYWNrZXJfMSA9IHJlcXVpcmUoXCIuL3N1YnByb3ZpZGVycy9ub25jZS10cmFja2VyXCIpO1xuY29uc3QgdHJhbnNhY3Rpb25fdmFsaWRhdG9yXzEgPSByZXF1aXJlKFwiLi9zdWJwcm92aWRlcnMvdHJhbnNhY3Rpb24tdmFsaWRhdG9yXCIpO1xuY29uc3QgdHlwZWRfZGF0YV8xID0gcmVxdWlyZShcIi4vc3VicHJvdmlkZXJzL3R5cGVkLWRhdGFcIik7XG5jbGFzcyBCaXRza2lFbmdpbmUgZXh0ZW5kcyBwcm92aWRlcl9lbmdpbmVfMS5kZWZhdWx0IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgICAgLy8gSGFuZGxlcyBzdGF0aWMgcmVzcG9uc2VzXG4gICAgICAgIHRoaXMuYWRkUHJvdmlkZXIobmV3IHByb3ZpZGVyX2VuZ2luZV8xLkRlZmF1bHRGaXh0dXJlU3VicHJvdmlkZXIoKSk7XG4gICAgICAgIC8vIE1vbml0b3JzIHJlcXVlc3RzIHRvIGV0aF9nZXRUcmFuc2FjdGlvbkNvdW50IGFuZCBldGhfc2VuZFRyYW5zYWN0aW9uIHRvIHRyYWNrXG4gICAgICAgIC8vIHBlbmRpbmcgdHJhbnNhY3Rpb25zXG4gICAgICAgIHRoaXMuYWRkUHJvdmlkZXIobmV3IG5vbmNlX3RyYWNrZXJfMS5Ob25jZVRyYWNrZXJTdWJwcm92aWRlcigpKTtcbiAgICAgICAgLy8gU2FuaXRpemVzIHRyYW5zYWN0aW9uIHBhcmFtcywgcmVtb3ZpbmcgYW55dGhpbmcgaW52YWxpZFxuICAgICAgICB0aGlzLmFkZFByb3ZpZGVyKG5ldyBwcm92aWRlcl9lbmdpbmVfMS5TYW5pdGl6ZXJTdWJwcm92aWRlcigpKTtcbiAgICAgICAgY29uc3QgZW5hYmxlVmFsaWRhdG9yID0gIShvcHRpb25zICYmIG9wdGlvbnMuZGlzYWJsZVZhbGlkYXRpb24gPT09IHRydWUpO1xuICAgICAgICBpZiAoZW5hYmxlVmFsaWRhdG9yKSB7XG4gICAgICAgICAgICAvLyBFbnN1cmVzIHRoYXQgdHJhbnNhY3Rpb25zIGFyZSB3ZWxsIGZvcm1lZCAobm9uY2UsIGdhcywgZ2FzUHJpY2UsIGZyb20pIGJlZm9yZSB0aGV5IGFyZSBzZW50IHRvIEJpdHNraVxuICAgICAgICAgICAgdGhpcy5hZGRQcm92aWRlcihuZXcgdHJhbnNhY3Rpb25fdmFsaWRhdG9yXzEuVHJhbnNhY3Rpb25WYWxpZGF0b3JTdWJwcm92aWRlcihvcHRpb25zLm1pbkdhc1ByaWNlKSk7XG4gICAgICAgICAgICB0aGlzLmFkZFByb3ZpZGVyKG5ldyB0eXBlZF9kYXRhXzEuVHlwZWREYXRhU2FuaXRpemVyU3VicHJvdmlkZXIoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW5hYmxlQ2FjaGUgPSAhKG9wdGlvbnMgJiYgb3B0aW9ucy5kaXNhYmxlQ2FjaGluZyA9PT0gdHJ1ZSk7XG4gICAgICAgIGlmIChlbmFibGVDYWNoZSkge1xuICAgICAgICAgICAgLy8gQmxvY2sgQ2FjaGUgLSBjYWNoZXMgY2VydGFpbiByZXF1ZXN0cyBieSB0aGVpciBibG9jayBudW1iZXJcbiAgICAgICAgICAgIHRoaXMuYWRkUHJvdmlkZXIobmV3IHByb3ZpZGVyX2VuZ2luZV8xLkJsb2NrQ2FjaGVTdWJwcm92aWRlcigpKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBIYW5kbGVzIHN1YnNjcmlwdGlvbnMgYW5kIGZpbHRlcnNcbiAgICAgICAgY29uc3QgZmlsdGVyQW5kU3Vic1N1YnByb3ZpZGVyID0gbmV3IHByb3ZpZGVyX2VuZ2luZV8xLlN1YnNjcmlwdGlvbnNTdWJwcm92aWRlcigpO1xuICAgICAgICAvLyBXYXRjaCBmb3IgdXBkYXRlcyBmcm9tIHN1YnNjcmlwdGlvbnNcbiAgICAgICAgZmlsdGVyQW5kU3Vic1N1YnByb3ZpZGVyLm9uKCdkYXRhJywgKF8sIG5vdGlmaWNhdGlvbikgPT4ge1xuICAgICAgICAgICAgdGhpcy5vbk1lc3NhZ2Uobm90aWZpY2F0aW9uKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYWRkUHJvdmlkZXIoZmlsdGVyQW5kU3Vic1N1YnByb3ZpZGVyKTtcbiAgICAgICAgaWYgKGVuYWJsZUNhY2hlKSB7XG4gICAgICAgICAgICAvLyBEZWJvdW5jZXMgZHVwbGljYXRlIHJlcXVlc3RzIHRoYXQgb2NjdXIgYXQgdGhlIHNhbWUgdGltZVxuICAgICAgICAgICAgdGhpcy5hZGRQcm92aWRlcihuZXcgcHJvdmlkZXJfZW5naW5lXzEuSW5mbGlnaHRDYWNoZVN1YnByb3ZpZGVyKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN1cHBvcnRzU3Vic2NyaXB0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BvbGxGb3JCbG9ja3M7XG4gICAgfVxuICAgIHN1YnNjcmliZShzdWJzY3JpYmVNZXRob2QgPSAnZXRoX3N1YnNjcmliZScsIHN1YnNjcmlwdGlvbk1ldGhvZCwgcGFyYW1ldGVycykge1xuICAgICAgICBpZiAoIXRoaXMuX3BvbGxGb3JCbG9ja3MpIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChwcm92aWRlcl9lcnJvcl8xLlByb3ZpZGVyRXJyb3IuU3Vic2NyaXB0aW9uc1VuYXZhaWxhYmxlKCkpO1xuICAgICAgICB9XG4gICAgICAgIHBhcmFtZXRlcnMudW5zaGlmdChzdWJzY3JpcHRpb25NZXRob2QpO1xuICAgICAgICByZXR1cm4gdGhpcy5zZW5kKHN1YnNjcmliZU1ldGhvZCwgcGFyYW1ldGVycyk7XG4gICAgfVxuICAgIHVuc3Vic2NyaWJlKHN1YnNjcmlwdGlvbklkLCB1bnN1YnNjcmliZU1ldGhvZCA9ICdldGhfdW5zdWJzY3JpYmUnKSB7XG4gICAgICAgIGlmICghdGhpcy5fcG9sbEZvckJsb2Nrcykge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHByb3ZpZGVyX2Vycm9yXzEuUHJvdmlkZXJFcnJvci5TdWJzY3JpcHRpb25zVW5hdmFpbGFibGUoKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2VuZCh1bnN1YnNjcmliZU1ldGhvZCwgW3N1YnNjcmlwdGlvbklkXSkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKHN1YnNjcmlwdGlvbklkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG9uTWVzc2FnZShub3RpZmljYXRpb24pIHtcbiAgICAgICAgLy8gUmUtZW1pdCAocHJldmlvdXMgYmVoYXZpb3IgfiB3ZWIzIDEuMC4wLWJldGEuMzcpXG4gICAgICAgIHRoaXMuZW1pdCgnZGF0YScsIG51bGwsIG5vdGlmaWNhdGlvbik7XG4gICAgICAgIGlmIChub3RpZmljYXRpb24gJiYgbm90aWZpY2F0aW9uLnBhcmFtcyAmJiBub3RpZmljYXRpb24ucGFyYW1zLnN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgLy8gQ3VycmVudCB3ZWIzIGJlaGF2aW9yIC0gZW1pdCBzdWJzY3JpcHRpb24gaWRcbiAgICAgICAgICAgIHRoaXMuZW1pdChub3RpZmljYXRpb24ucGFyYW1zLnN1YnNjcmlwdGlvbiwgbm90aWZpY2F0aW9uLnBhcmFtcyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkJpdHNraUVuZ2luZSA9IEJpdHNraUVuZ2luZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJpdHNraS1lbmdpbmUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/bitski-engine.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/constants.js":
/*!********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/constants.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UNAUTHORIZED_ERRORS = exports.RETRIABLE_ERRORS = exports.AUTHENTICATED_METHODS = void 0;\n// JSON-RPC methods that require Authorization header\nexports.AUTHENTICATED_METHODS = [\n    'eth_requestAccounts',\n    'eth_accounts',\n    'eth_sendTransaction',\n    'eth_signTransaction',\n    'eth_signTypedData',\n    'eth_signTypedData_v3',\n    'eth_signTypedData_v4',\n    'personal_sign',\n    'eth_sign',\n];\n// Error messages that are usually transient and should be retried\nexports.RETRIABLE_ERRORS = [\n    // ignore server overload errors\n    'Gateway timeout',\n    'ETIMEDOUT',\n    'ENOTFOUND',\n    // ignore server sent html error pages\n    // or truncated json responses\n    'SyntaxError',\n    'ECONNRESET',\n    'EHOSTUNREACH',\n    'Timeout out while waiting for response', // Actix timeout\n];\n// Errors that indicate the access token is not valid\nexports.UNAUTHORIZED_ERRORS = [\n    'Missing auth',\n    'Invalid client id',\n    'Not Authorized',\n];\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvY29uc3RhbnRzLmpzPzFlOTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvY29uc3RhbnRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVOQVVUSE9SSVpFRF9FUlJPUlMgPSBleHBvcnRzLlJFVFJJQUJMRV9FUlJPUlMgPSBleHBvcnRzLkFVVEhFTlRJQ0FURURfTUVUSE9EUyA9IHZvaWQgMDtcbi8vIEpTT04tUlBDIG1ldGhvZHMgdGhhdCByZXF1aXJlIEF1dGhvcml6YXRpb24gaGVhZGVyXG5leHBvcnRzLkFVVEhFTlRJQ0FURURfTUVUSE9EUyA9IFtcbiAgICAnZXRoX3JlcXVlc3RBY2NvdW50cycsXG4gICAgJ2V0aF9hY2NvdW50cycsXG4gICAgJ2V0aF9zZW5kVHJhbnNhY3Rpb24nLFxuICAgICdldGhfc2lnblRyYW5zYWN0aW9uJyxcbiAgICAnZXRoX3NpZ25UeXBlZERhdGEnLFxuICAgICdldGhfc2lnblR5cGVkRGF0YV92MycsXG4gICAgJ2V0aF9zaWduVHlwZWREYXRhX3Y0JyxcbiAgICAncGVyc29uYWxfc2lnbicsXG4gICAgJ2V0aF9zaWduJyxcbl07XG4vLyBFcnJvciBtZXNzYWdlcyB0aGF0IGFyZSB1c3VhbGx5IHRyYW5zaWVudCBhbmQgc2hvdWxkIGJlIHJldHJpZWRcbmV4cG9ydHMuUkVUUklBQkxFX0VSUk9SUyA9IFtcbiAgICAvLyBpZ25vcmUgc2VydmVyIG92ZXJsb2FkIGVycm9yc1xuICAgICdHYXRld2F5IHRpbWVvdXQnLFxuICAgICdFVElNRURPVVQnLFxuICAgICdFTk9URk9VTkQnLFxuICAgIC8vIGlnbm9yZSBzZXJ2ZXIgc2VudCBodG1sIGVycm9yIHBhZ2VzXG4gICAgLy8gb3IgdHJ1bmNhdGVkIGpzb24gcmVzcG9uc2VzXG4gICAgJ1N5bnRheEVycm9yJyxcbiAgICAnRUNPTk5SRVNFVCcsXG4gICAgJ0VIT1NUVU5SRUFDSCcsXG4gICAgJ1RpbWVvdXQgb3V0IHdoaWxlIHdhaXRpbmcgZm9yIHJlc3BvbnNlJywgLy8gQWN0aXggdGltZW91dFxuXTtcbi8vIEVycm9ycyB0aGF0IGluZGljYXRlIHRoZSBhY2Nlc3MgdG9rZW4gaXMgbm90IHZhbGlkXG5leHBvcnRzLlVOQVVUSE9SSVpFRF9FUlJPUlMgPSBbXG4gICAgJ01pc3NpbmcgYXV0aCcsXG4gICAgJ0ludmFsaWQgY2xpZW50IGlkJyxcbiAgICAnTm90IEF1dGhvcml6ZWQnLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/constants.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/errors/provider-error.js":
/*!********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/errors/provider-error.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderError = exports.ProviderErrorCode = void 0;\nvar ProviderErrorCode;\n(function (ProviderErrorCode) {\n    // Thrown when accessing subscription features when they are disabled.\n    ProviderErrorCode[ProviderErrorCode[\"SubscriptionsUnavailable\"] = 4000] = \"SubscriptionsUnavailable\";\n    // Thrown when request is missing required params or data\n    ProviderErrorCode[ProviderErrorCode[\"InvalidRequest\"] = 4001] = \"InvalidRequest\";\n})(ProviderErrorCode = exports.ProviderErrorCode || (exports.ProviderErrorCode = {}));\nclass ProviderError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'ProviderError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ProviderError);\n        }\n        this.code = code;\n    }\n    static SubscriptionsUnavailable() {\n        return new ProviderError('Subscriptions are disabled. Enable block polling to use this feature.', ProviderErrorCode.SubscriptionsUnavailable);\n    }\n    static InvalidRequest(reason) {\n        return new ProviderError(`Invalid request: ${reason}`, ProviderErrorCode.InvalidRequest);\n    }\n}\nexports.ProviderError = ProviderError;\n//# sourceMappingURL=provider-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvZXJyb3JzL3Byb3ZpZGVyLWVycm9yLmpzP2MzNTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0ZBQWtGO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsT0FBTztBQUM1RDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpLXByb3ZpZGVyL2xpYi9lcnJvcnMvcHJvdmlkZXItZXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvdmlkZXJFcnJvciA9IGV4cG9ydHMuUHJvdmlkZXJFcnJvckNvZGUgPSB2b2lkIDA7XG52YXIgUHJvdmlkZXJFcnJvckNvZGU7XG4oZnVuY3Rpb24gKFByb3ZpZGVyRXJyb3JDb2RlKSB7XG4gICAgLy8gVGhyb3duIHdoZW4gYWNjZXNzaW5nIHN1YnNjcmlwdGlvbiBmZWF0dXJlcyB3aGVuIHRoZXkgYXJlIGRpc2FibGVkLlxuICAgIFByb3ZpZGVyRXJyb3JDb2RlW1Byb3ZpZGVyRXJyb3JDb2RlW1wiU3Vic2NyaXB0aW9uc1VuYXZhaWxhYmxlXCJdID0gNDAwMF0gPSBcIlN1YnNjcmlwdGlvbnNVbmF2YWlsYWJsZVwiO1xuICAgIC8vIFRocm93biB3aGVuIHJlcXVlc3QgaXMgbWlzc2luZyByZXF1aXJlZCBwYXJhbXMgb3IgZGF0YVxuICAgIFByb3ZpZGVyRXJyb3JDb2RlW1Byb3ZpZGVyRXJyb3JDb2RlW1wiSW52YWxpZFJlcXVlc3RcIl0gPSA0MDAxXSA9IFwiSW52YWxpZFJlcXVlc3RcIjtcbn0pKFByb3ZpZGVyRXJyb3JDb2RlID0gZXhwb3J0cy5Qcm92aWRlckVycm9yQ29kZSB8fCAoZXhwb3J0cy5Qcm92aWRlckVycm9yQ29kZSA9IHt9KSk7XG5jbGFzcyBQcm92aWRlckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGNvZGUpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdQcm92aWRlckVycm9yJztcbiAgICAgICAgLy8gTWFpbnRhaW5zIHByb3BlciBzdGFjayB0cmFjZSBmb3Igd2hlcmUgb3VyIGVycm9yIHdhcyB0aHJvd24gKG9ubHkgYXZhaWxhYmxlIG9uIFY4KVxuICAgICAgICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICAgICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIFByb3ZpZGVyRXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgfVxuICAgIHN0YXRpYyBTdWJzY3JpcHRpb25zVW5hdmFpbGFibGUoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvdmlkZXJFcnJvcignU3Vic2NyaXB0aW9ucyBhcmUgZGlzYWJsZWQuIEVuYWJsZSBibG9jayBwb2xsaW5nIHRvIHVzZSB0aGlzIGZlYXR1cmUuJywgUHJvdmlkZXJFcnJvckNvZGUuU3Vic2NyaXB0aW9uc1VuYXZhaWxhYmxlKTtcbiAgICB9XG4gICAgc3RhdGljIEludmFsaWRSZXF1ZXN0KHJlYXNvbikge1xuICAgICAgICByZXR1cm4gbmV3IFByb3ZpZGVyRXJyb3IoYEludmFsaWQgcmVxdWVzdDogJHtyZWFzb259YCwgUHJvdmlkZXJFcnJvckNvZGUuSW52YWxpZFJlcXVlc3QpO1xuICAgIH1cbn1cbmV4cG9ydHMuUHJvdmlkZXJFcnJvciA9IFByb3ZpZGVyRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm92aWRlci1lcnJvci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/errors/provider-error.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/errors/server-error.js":
/*!******************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/errors/server-error.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerError = void 0;\n/**\n * Represents an error that is received from the server\n * You can access the response code via the code property, and the URI from the requestURI property.\n * The retried property will indicate whether or not the request failed after multiple tries.\n */\nclass ServerError extends Error {\n    constructor(message, code, requestURI, retried = false) {\n        super(message);\n        this.name = 'ServerError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ServerError);\n        }\n        this.code = code;\n        this.requestURI = requestURI;\n        this.retried = retried;\n    }\n}\nexports.ServerError = ServerError;\n//# sourceMappingURL=server-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvZXJyb3JzL3NlcnZlci1lcnJvci5qcz8xYmY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2ktcHJvdmlkZXIvbGliL2Vycm9ycy9zZXJ2ZXItZXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VydmVyRXJyb3IgPSB2b2lkIDA7XG4vKipcbiAqIFJlcHJlc2VudHMgYW4gZXJyb3IgdGhhdCBpcyByZWNlaXZlZCBmcm9tIHRoZSBzZXJ2ZXJcbiAqIFlvdSBjYW4gYWNjZXNzIHRoZSByZXNwb25zZSBjb2RlIHZpYSB0aGUgY29kZSBwcm9wZXJ0eSwgYW5kIHRoZSBVUkkgZnJvbSB0aGUgcmVxdWVzdFVSSSBwcm9wZXJ0eS5cbiAqIFRoZSByZXRyaWVkIHByb3BlcnR5IHdpbGwgaW5kaWNhdGUgd2hldGhlciBvciBub3QgdGhlIHJlcXVlc3QgZmFpbGVkIGFmdGVyIG11bHRpcGxlIHRyaWVzLlxuICovXG5jbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb2RlLCByZXF1ZXN0VVJJLCByZXRyaWVkID0gZmFsc2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdTZXJ2ZXJFcnJvcic7XG4gICAgICAgIC8vIE1haW50YWlucyBwcm9wZXIgc3RhY2sgdHJhY2UgZm9yIHdoZXJlIG91ciBlcnJvciB3YXMgdGhyb3duIChvbmx5IGF2YWlsYWJsZSBvbiBWOClcbiAgICAgICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBTZXJ2ZXJFcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5yZXF1ZXN0VVJJID0gcmVxdWVzdFVSSTtcbiAgICAgICAgdGhpcy5yZXRyaWVkID0gcmV0cmllZDtcbiAgICB9XG59XG5leHBvcnRzLlNlcnZlckVycm9yID0gU2VydmVyRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2ZXItZXJyb3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/errors/server-error.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/index.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/index.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderErrorCode = exports.ProviderError = exports.ServerError = exports.Mumbai = exports.Polygon = exports.Rinkeby = exports.Mainnet = exports.AuthenticatedFetchSubprovider = exports.AccessToken = exports.BitskiEngine = void 0;\nvar bitski_engine_1 = __webpack_require__(/*! ./bitski-engine */ \"../../node_modules/bitski-provider/lib/bitski-engine.js\");\nObject.defineProperty(exports, \"BitskiEngine\", { enumerable: true, get: function () { return bitski_engine_1.BitskiEngine; } });\nvar access_token_1 = __webpack_require__(/*! ./auth/access-token */ \"../../node_modules/bitski-provider/lib/auth/access-token.js\");\nObject.defineProperty(exports, \"AccessToken\", { enumerable: true, get: function () { return access_token_1.AccessToken; } });\nvar authenticated_fetch_1 = __webpack_require__(/*! ./subproviders/authenticated-fetch */ \"../../node_modules/bitski-provider/lib/subproviders/authenticated-fetch.js\");\nObject.defineProperty(exports, \"AuthenticatedFetchSubprovider\", { enumerable: true, get: function () { return authenticated_fetch_1.AuthenticatedFetchSubprovider; } });\nvar network_1 = __webpack_require__(/*! ./network */ \"../../node_modules/bitski-provider/lib/network.js\");\nObject.defineProperty(exports, \"Mainnet\", { enumerable: true, get: function () { return network_1.Mainnet; } });\nObject.defineProperty(exports, \"Rinkeby\", { enumerable: true, get: function () { return network_1.Rinkeby; } });\nObject.defineProperty(exports, \"Polygon\", { enumerable: true, get: function () { return network_1.Polygon; } });\nObject.defineProperty(exports, \"Mumbai\", { enumerable: true, get: function () { return network_1.Mumbai; } });\nvar server_error_1 = __webpack_require__(/*! ./errors/server-error */ \"../../node_modules/bitski-provider/lib/errors/server-error.js\");\nObject.defineProperty(exports, \"ServerError\", { enumerable: true, get: function () { return server_error_1.ServerError; } });\nvar provider_error_1 = __webpack_require__(/*! ./errors/provider-error */ \"../../node_modules/bitski-provider/lib/errors/provider-error.js\");\nObject.defineProperty(exports, \"ProviderError\", { enumerable: true, get: function () { return provider_error_1.ProviderError; } });\nObject.defineProperty(exports, \"ProviderErrorCode\", { enumerable: true, get: function () { return provider_error_1.ProviderErrorCode; } });\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvaW5kZXguanM/MmU4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsZ0ZBQWlCO0FBQy9DLGdEQUFnRCxxQ0FBcUMscUNBQXFDLEVBQUUsRUFBRTtBQUM5SCxxQkFBcUIsbUJBQU8sQ0FBQyx3RkFBcUI7QUFDbEQsK0NBQStDLHFDQUFxQyxtQ0FBbUMsRUFBRSxFQUFFO0FBQzNILDRCQUE0QixtQkFBTyxDQUFDLHNIQUFvQztBQUN4RSxpRUFBaUUscUNBQXFDLDREQUE0RCxFQUFFLEVBQUU7QUFDdEssZ0JBQWdCLG1CQUFPLENBQUMsb0VBQVc7QUFDbkMsMkNBQTJDLHFDQUFxQywwQkFBMEIsRUFBRSxFQUFFO0FBQzlHLDJDQUEyQyxxQ0FBcUMsMEJBQTBCLEVBQUUsRUFBRTtBQUM5RywyQ0FBMkMscUNBQXFDLDBCQUEwQixFQUFFLEVBQUU7QUFDOUcsMENBQTBDLHFDQUFxQyx5QkFBeUIsRUFBRSxFQUFFO0FBQzVHLHFCQUFxQixtQkFBTyxDQUFDLDRGQUF1QjtBQUNwRCwrQ0FBK0MscUNBQXFDLG1DQUFtQyxFQUFFLEVBQUU7QUFDM0gsdUJBQXVCLG1CQUFPLENBQUMsZ0dBQXlCO0FBQ3hELGlEQUFpRCxxQ0FBcUMsdUNBQXVDLEVBQUUsRUFBRTtBQUNqSSxxREFBcUQscUNBQXFDLDJDQUEyQyxFQUFFLEVBQUU7QUFDekkiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvdmlkZXJFcnJvckNvZGUgPSBleHBvcnRzLlByb3ZpZGVyRXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5NdW1iYWkgPSBleHBvcnRzLlBvbHlnb24gPSBleHBvcnRzLlJpbmtlYnkgPSBleHBvcnRzLk1haW5uZXQgPSBleHBvcnRzLkF1dGhlbnRpY2F0ZWRGZXRjaFN1YnByb3ZpZGVyID0gZXhwb3J0cy5BY2Nlc3NUb2tlbiA9IGV4cG9ydHMuQml0c2tpRW5naW5lID0gdm9pZCAwO1xudmFyIGJpdHNraV9lbmdpbmVfMSA9IHJlcXVpcmUoXCIuL2JpdHNraS1lbmdpbmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCaXRza2lFbmdpbmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJpdHNraV9lbmdpbmVfMS5CaXRza2lFbmdpbmU7IH0gfSk7XG52YXIgYWNjZXNzX3Rva2VuXzEgPSByZXF1aXJlKFwiLi9hdXRoL2FjY2Vzcy10b2tlblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFjY2Vzc1Rva2VuXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2Nlc3NfdG9rZW5fMS5BY2Nlc3NUb2tlbjsgfSB9KTtcbnZhciBhdXRoZW50aWNhdGVkX2ZldGNoXzEgPSByZXF1aXJlKFwiLi9zdWJwcm92aWRlcnMvYXV0aGVudGljYXRlZC1mZXRjaFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGhlbnRpY2F0ZWRGZXRjaFN1YnByb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhdXRoZW50aWNhdGVkX2ZldGNoXzEuQXV0aGVudGljYXRlZEZldGNoU3VicHJvdmlkZXI7IH0gfSk7XG52YXIgbmV0d29ya18xID0gcmVxdWlyZShcIi4vbmV0d29ya1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1haW5uZXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldHdvcmtfMS5NYWlubmV0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmlua2VieVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV0d29ya18xLlJpbmtlYnk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQb2x5Z29uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXR3b3JrXzEuUG9seWdvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bWJhaVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV0d29ya18xLk11bWJhaTsgfSB9KTtcbnZhciBzZXJ2ZXJfZXJyb3JfMSA9IHJlcXVpcmUoXCIuL2Vycm9ycy9zZXJ2ZXItZXJyb3JcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTZXJ2ZXJFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VydmVyX2Vycm9yXzEuU2VydmVyRXJyb3I7IH0gfSk7XG52YXIgcHJvdmlkZXJfZXJyb3JfMSA9IHJlcXVpcmUoXCIuL2Vycm9ycy9wcm92aWRlci1lcnJvclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByb3ZpZGVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3ZpZGVyX2Vycm9yXzEuUHJvdmlkZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByb3ZpZGVyRXJyb3JDb2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm92aWRlcl9lcnJvcl8xLlByb3ZpZGVyRXJyb3JDb2RlOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/index.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/network.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/network.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mumbai = exports.Polygon = exports.Rinkeby = exports.Mainnet = void 0;\nexports.Mainnet = {\n    chainId: 1,\n    rpcUrl: 'https://api.bitski.com/v1/web3/mainnet',\n};\nexports.Rinkeby = {\n    chainId: 4,\n    rpcUrl: 'https://api.bitski.com/v1/web3/rinkeby',\n};\nexports.Polygon = {\n    chainId: 137,\n    rpcUrl: 'https://api.bitski.com/v1/web3/polygon',\n};\nexports.Mumbai = {\n    chainId: 80001,\n    rpcUrl: 'https://api.bitski.com/v1/web3/mumbai',\n};\n//# sourceMappingURL=network.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvbmV0d29yay5qcz9lZDc0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2ktcHJvdmlkZXIvbGliL25ldHdvcmsuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVtYmFpID0gZXhwb3J0cy5Qb2x5Z29uID0gZXhwb3J0cy5SaW5rZWJ5ID0gZXhwb3J0cy5NYWlubmV0ID0gdm9pZCAwO1xuZXhwb3J0cy5NYWlubmV0ID0ge1xuICAgIGNoYWluSWQ6IDEsXG4gICAgcnBjVXJsOiAnaHR0cHM6Ly9hcGkuYml0c2tpLmNvbS92MS93ZWIzL21haW5uZXQnLFxufTtcbmV4cG9ydHMuUmlua2VieSA9IHtcbiAgICBjaGFpbklkOiA0LFxuICAgIHJwY1VybDogJ2h0dHBzOi8vYXBpLmJpdHNraS5jb20vdjEvd2ViMy9yaW5rZWJ5Jyxcbn07XG5leHBvcnRzLlBvbHlnb24gPSB7XG4gICAgY2hhaW5JZDogMTM3LFxuICAgIHJwY1VybDogJ2h0dHBzOi8vYXBpLmJpdHNraS5jb20vdjEvd2ViMy9wb2x5Z29uJyxcbn07XG5leHBvcnRzLk11bWJhaSA9IHtcbiAgICBjaGFpbklkOiA4MDAwMSxcbiAgICBycGNVcmw6ICdodHRwczovL2FwaS5iaXRza2kuY29tL3YxL3dlYjMvbXVtYmFpJyxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXR3b3JrLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/network.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/subproviders/authenticated-fetch.js":
/*!*******************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/subproviders/authenticated-fetch.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticatedFetchSubprovider = void 0;\nconst provider_engine_1 = __webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\");\nconst retry_1 = __importDefault(__webpack_require__(/*! async/retry */ \"../../node_modules/async/retry.js\"));\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski-provider/lib/constants.js\");\nconst server_error_1 = __webpack_require__(/*! ../errors/server-error */ \"../../node_modules/bitski-provider/lib/errors/server-error.js\");\n/*\n * Subprovider that fetches over HTTP and manages authentication headers\n */\nclass AuthenticatedFetchSubprovider extends provider_engine_1.FetchSubprovider {\n    constructor(rpcUrl, debug, accessTokenProvider, defaultHeaders = {}) {\n        super({ rpcUrl });\n        this.authenticatedMethods = constants_1.AUTHENTICATED_METHODS;\n        this.accessTokenProvider = accessTokenProvider;\n        this.defaultHeaders = defaultHeaders;\n    }\n    handleRequest(payload, next, end) {\n        if (this.requiresAuthentication(payload)) {\n            return this.handleAuthenticatedRequest(payload, next, end);\n        }\n        else {\n            return this.handleUnauthenticatedRequest(payload, next, end);\n        }\n    }\n    handleAuthenticatedRequest(payload, next, end) {\n        this.accessTokenProvider\n            .getAccessToken()\n            .then((accessToken) => {\n            const parameters = this.generateParameters(payload, accessToken);\n            return this.sendRequest(parameters, next, end);\n        })\n            .catch((error) => {\n            end(error);\n        });\n    }\n    handleUnauthenticatedRequest(payload, next, end) {\n        const parameters = this.generateParameters(payload);\n        return this.sendRequest(parameters, next, end);\n    }\n    requiresAuthentication(payload) {\n        return this.authenticatedMethods.some((method) => method === payload.method);\n    }\n    generateParameters(payload, accessToken) {\n        // overwrite id to not conflict with other concurrent users\n        const newPayload = this.createPayload(payload);\n        // remove extra parameter from request\n        delete newPayload.origin;\n        let headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        };\n        headers = Object.assign({}, headers, this.defaultHeaders);\n        const originDomain = payload.origin;\n        if (this.originHttpHeaderKey && originDomain) {\n            headers[this.originHttpHeaderKey] = originDomain;\n        }\n        if (accessToken) {\n            headers.Authorization = `Bearer ${accessToken}`;\n        }\n        const requestParameters = {\n            body: JSON.stringify(newPayload),\n            headers,\n            method: 'POST',\n        };\n        return requestParameters;\n    }\n    sendRequest(parameters, next, end) {\n        (0, retry_1.default)({\n            errorFilter: this.isErrorRetriable,\n            interval: 1000,\n            times: 5,\n        }, (cb) => this._submitRequest(parameters, cb), (err, result) => {\n            // ends on retriable error\n            if (err && this.isErrorRetriable(err)) {\n                const retriesExhaustedErr = new server_error_1.ServerError(err.message, 200, this.rpcUrl, true);\n                return end(retriesExhaustedErr);\n            }\n            if (err && this.isUnauthorizedError(err)) {\n                return this.accessTokenProvider.invalidateToken().then(() => {\n                    return end(err);\n                });\n            }\n            // otherwise continue normally\n            return end(err, result);\n        });\n    }\n    isErrorRetriable(err) {\n        const errMsg = err.toString();\n        return constants_1.RETRIABLE_ERRORS.some((phrase) => errMsg.includes(phrase));\n    }\n    isUnauthorizedError(err) {\n        return constants_1.UNAUTHORIZED_ERRORS.some((phrase) => err.message.includes(phrase));\n    }\n}\nexports.AuthenticatedFetchSubprovider = AuthenticatedFetchSubprovider;\n//# sourceMappingURL=authenticated-fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvc3VicHJvdmlkZXJzL2F1dGhlbnRpY2F0ZWQtZmV0Y2guanM/Y2E1MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyxrR0FBeUI7QUFDM0QsZ0NBQWdDLG1CQUFPLENBQUMsc0RBQWE7QUFDckQsb0JBQW9CLG1CQUFPLENBQUMseUVBQWM7QUFDMUMsdUJBQXVCLG1CQUFPLENBQUMsNkZBQXdCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFO0FBQ3ZFLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsWUFBWTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2ktcHJvdmlkZXIvbGliL3N1YnByb3ZpZGVycy9hdXRoZW50aWNhdGVkLWZldGNoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1dGhlbnRpY2F0ZWRGZXRjaFN1YnByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgcHJvdmlkZXJfZW5naW5lXzEgPSByZXF1aXJlKFwiQGJpdHNraS9wcm92aWRlci1lbmdpbmVcIik7XG5jb25zdCByZXRyeV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJhc3luYy9yZXRyeVwiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG5jb25zdCBzZXJ2ZXJfZXJyb3JfMSA9IHJlcXVpcmUoXCIuLi9lcnJvcnMvc2VydmVyLWVycm9yXCIpO1xuLypcbiAqIFN1YnByb3ZpZGVyIHRoYXQgZmV0Y2hlcyBvdmVyIEhUVFAgYW5kIG1hbmFnZXMgYXV0aGVudGljYXRpb24gaGVhZGVyc1xuICovXG5jbGFzcyBBdXRoZW50aWNhdGVkRmV0Y2hTdWJwcm92aWRlciBleHRlbmRzIHByb3ZpZGVyX2VuZ2luZV8xLkZldGNoU3VicHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKHJwY1VybCwgZGVidWcsIGFjY2Vzc1Rva2VuUHJvdmlkZXIsIGRlZmF1bHRIZWFkZXJzID0ge30pIHtcbiAgICAgICAgc3VwZXIoeyBycGNVcmwgfSk7XG4gICAgICAgIHRoaXMuYXV0aGVudGljYXRlZE1ldGhvZHMgPSBjb25zdGFudHNfMS5BVVRIRU5USUNBVEVEX01FVEhPRFM7XG4gICAgICAgIHRoaXMuYWNjZXNzVG9rZW5Qcm92aWRlciA9IGFjY2Vzc1Rva2VuUHJvdmlkZXI7XG4gICAgICAgIHRoaXMuZGVmYXVsdEhlYWRlcnMgPSBkZWZhdWx0SGVhZGVycztcbiAgICB9XG4gICAgaGFuZGxlUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpIHtcbiAgICAgICAgaWYgKHRoaXMucmVxdWlyZXNBdXRoZW50aWNhdGlvbihwYXlsb2FkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlQXV0aGVudGljYXRlZFJlcXVlc3QocGF5bG9hZCwgbmV4dCwgZW5kKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmhhbmRsZVVuYXV0aGVudGljYXRlZFJlcXVlc3QocGF5bG9hZCwgbmV4dCwgZW5kKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoYW5kbGVBdXRoZW50aWNhdGVkUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpIHtcbiAgICAgICAgdGhpcy5hY2Nlc3NUb2tlblByb3ZpZGVyXG4gICAgICAgICAgICAuZ2V0QWNjZXNzVG9rZW4oKVxuICAgICAgICAgICAgLnRoZW4oKGFjY2Vzc1Rva2VuKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYXJhbWV0ZXJzID0gdGhpcy5nZW5lcmF0ZVBhcmFtZXRlcnMocGF5bG9hZCwgYWNjZXNzVG9rZW4pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VuZFJlcXVlc3QocGFyYW1ldGVycywgbmV4dCwgZW5kKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGVuZChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBoYW5kbGVVbmF1dGhlbnRpY2F0ZWRSZXF1ZXN0KHBheWxvYWQsIG5leHQsIGVuZCkge1xuICAgICAgICBjb25zdCBwYXJhbWV0ZXJzID0gdGhpcy5nZW5lcmF0ZVBhcmFtZXRlcnMocGF5bG9hZCk7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbmRSZXF1ZXN0KHBhcmFtZXRlcnMsIG5leHQsIGVuZCk7XG4gICAgfVxuICAgIHJlcXVpcmVzQXV0aGVudGljYXRpb24ocGF5bG9hZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdXRoZW50aWNhdGVkTWV0aG9kcy5zb21lKChtZXRob2QpID0+IG1ldGhvZCA9PT0gcGF5bG9hZC5tZXRob2QpO1xuICAgIH1cbiAgICBnZW5lcmF0ZVBhcmFtZXRlcnMocGF5bG9hZCwgYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgLy8gb3ZlcndyaXRlIGlkIHRvIG5vdCBjb25mbGljdCB3aXRoIG90aGVyIGNvbmN1cnJlbnQgdXNlcnNcbiAgICAgICAgY29uc3QgbmV3UGF5bG9hZCA9IHRoaXMuY3JlYXRlUGF5bG9hZChwYXlsb2FkKTtcbiAgICAgICAgLy8gcmVtb3ZlIGV4dHJhIHBhcmFtZXRlciBmcm9tIHJlcXVlc3RcbiAgICAgICAgZGVsZXRlIG5ld1BheWxvYWQub3JpZ2luO1xuICAgICAgICBsZXQgaGVhZGVycyA9IHtcbiAgICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfTtcbiAgICAgICAgaGVhZGVycyA9IE9iamVjdC5hc3NpZ24oe30sIGhlYWRlcnMsIHRoaXMuZGVmYXVsdEhlYWRlcnMpO1xuICAgICAgICBjb25zdCBvcmlnaW5Eb21haW4gPSBwYXlsb2FkLm9yaWdpbjtcbiAgICAgICAgaWYgKHRoaXMub3JpZ2luSHR0cEhlYWRlcktleSAmJiBvcmlnaW5Eb21haW4pIHtcbiAgICAgICAgICAgIGhlYWRlcnNbdGhpcy5vcmlnaW5IdHRwSGVhZGVyS2V5XSA9IG9yaWdpbkRvbWFpbjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgICAgIGhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IGBCZWFyZXIgJHthY2Nlc3NUb2tlbn1gO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlcXVlc3RQYXJhbWV0ZXJzID0ge1xuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkobmV3UGF5bG9hZCksXG4gICAgICAgICAgICBoZWFkZXJzLFxuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiByZXF1ZXN0UGFyYW1ldGVycztcbiAgICB9XG4gICAgc2VuZFJlcXVlc3QocGFyYW1ldGVycywgbmV4dCwgZW5kKSB7XG4gICAgICAgICgwLCByZXRyeV8xLmRlZmF1bHQpKHtcbiAgICAgICAgICAgIGVycm9yRmlsdGVyOiB0aGlzLmlzRXJyb3JSZXRyaWFibGUsXG4gICAgICAgICAgICBpbnRlcnZhbDogMTAwMCxcbiAgICAgICAgICAgIHRpbWVzOiA1LFxuICAgICAgICB9LCAoY2IpID0+IHRoaXMuX3N1Ym1pdFJlcXVlc3QocGFyYW1ldGVycywgY2IpLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgIC8vIGVuZHMgb24gcmV0cmlhYmxlIGVycm9yXG4gICAgICAgICAgICBpZiAoZXJyICYmIHRoaXMuaXNFcnJvclJldHJpYWJsZShlcnIpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmV0cmllc0V4aGF1c3RlZEVyciA9IG5ldyBzZXJ2ZXJfZXJyb3JfMS5TZXJ2ZXJFcnJvcihlcnIubWVzc2FnZSwgMjAwLCB0aGlzLnJwY1VybCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVuZChyZXRyaWVzRXhoYXVzdGVkRXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlcnIgJiYgdGhpcy5pc1VuYXV0aG9yaXplZEVycm9yKGVycikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5hY2Nlc3NUb2tlblByb3ZpZGVyLmludmFsaWRhdGVUb2tlbigpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZW5kKGVycik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBvdGhlcndpc2UgY29udGludWUgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBlbmQoZXJyLCByZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgaXNFcnJvclJldHJpYWJsZShlcnIpIHtcbiAgICAgICAgY29uc3QgZXJyTXNnID0gZXJyLnRvU3RyaW5nKCk7XG4gICAgICAgIHJldHVybiBjb25zdGFudHNfMS5SRVRSSUFCTEVfRVJST1JTLnNvbWUoKHBocmFzZSkgPT4gZXJyTXNnLmluY2x1ZGVzKHBocmFzZSkpO1xuICAgIH1cbiAgICBpc1VuYXV0aG9yaXplZEVycm9yKGVycikge1xuICAgICAgICByZXR1cm4gY29uc3RhbnRzXzEuVU5BVVRIT1JJWkVEX0VSUk9SUy5zb21lKChwaHJhc2UpID0+IGVyci5tZXNzYWdlLmluY2x1ZGVzKHBocmFzZSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXV0aGVudGljYXRlZEZldGNoU3VicHJvdmlkZXIgPSBBdXRoZW50aWNhdGVkRmV0Y2hTdWJwcm92aWRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhlbnRpY2F0ZWQtZmV0Y2guanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/subproviders/authenticated-fetch.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/subproviders/nonce-tracker.js":
/*!*************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/subproviders/nonce-tracker.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NonceTrackerSubprovider = void 0;\nconst provider_engine_1 = __webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\");\n/**\n * A subprovider that tracks and automatically increments the nonce on the client.\n * Heavily based on the provider-engine NonceTrackerSubprovider, but modified for\n * Bitski's transaction flow.\n */\nclass NonceTrackerSubprovider extends provider_engine_1.Subprovider {\n    constructor() {\n        super();\n        this.nonceCache = new Map();\n    }\n    handleRequest(payload, next, end) {\n        switch (payload.method) {\n            case 'eth_getTransactionCount':\n                this.handleTransactionCountRequest(payload, next, end);\n                return;\n            case 'eth_sendTransaction':\n                this.handleSendTransactionRequest(payload, next);\n                return;\n            default:\n                next();\n                return;\n        }\n    }\n    // Return cached result if present\n    handleTransactionCountRequest(payload, next, end) {\n        const blockTag = payload.params.length > 1 ? payload.params[1] : null;\n        // Only handle pending tag\n        if (blockTag !== 'pending') {\n            next();\n            return;\n        }\n        const address = payload.params[0].toLowerCase();\n        const cachedResult = this.nonceCache.get(address);\n        // Return cached result it we have it\n        if (cachedResult) {\n            end(null, cachedResult);\n            return;\n        }\n        // Fallthrough and populate cache\n        next((err, result, cb) => {\n            if (!err) {\n                this.nonceCache.set(address, result);\n            }\n            cb();\n        });\n    }\n    toHex(num) {\n        const base16 = num.toString(16);\n        let hex = base16;\n        if (base16.length % 2 !== 0) {\n            hex = '0' + base16;\n        }\n        return '0x' + hex;\n    }\n    fromHex(str) {\n        return parseInt(str, 16);\n    }\n    nextNonce(nonce) {\n        const submittedNonce = this.fromHex(nonce);\n        const nextNonce = submittedNonce + 1;\n        return this.toHex(nextNonce);\n    }\n    // Increment next nonce for address\n    handleSendTransactionRequest(payload, next) {\n        // Submit the request, then monitor the result\n        next((err, result, cb) => {\n            const transaction = payload.params.length > 0 ? payload.params[0] : {};\n            const submittedNonce = transaction.nonce;\n            const address = transaction.from;\n            if (!err) {\n                if (submittedNonce && address) {\n                    // Increment nonce\n                    const nextNonce = this.nextNonce(submittedNonce);\n                    this.nonceCache.set(address, nextNonce);\n                }\n            }\n            else {\n                // Remove cached value if we encounter an error\n                this.nonceCache.delete(address);\n            }\n            cb();\n        });\n    }\n}\nexports.NonceTrackerSubprovider = NonceTrackerSubprovider;\n//# sourceMappingURL=nonce-tracker.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvc3VicHJvdmlkZXJzL25vbmNlLXRyYWNrZXIuanM/NTVhMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsMEJBQTBCLG1CQUFPLENBQUMsa0dBQXlCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2ktcHJvdmlkZXIvbGliL3N1YnByb3ZpZGVycy9ub25jZS10cmFja2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vbmNlVHJhY2tlclN1YnByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgcHJvdmlkZXJfZW5naW5lXzEgPSByZXF1aXJlKFwiQGJpdHNraS9wcm92aWRlci1lbmdpbmVcIik7XG4vKipcbiAqIEEgc3VicHJvdmlkZXIgdGhhdCB0cmFja3MgYW5kIGF1dG9tYXRpY2FsbHkgaW5jcmVtZW50cyB0aGUgbm9uY2Ugb24gdGhlIGNsaWVudC5cbiAqIEhlYXZpbHkgYmFzZWQgb24gdGhlIHByb3ZpZGVyLWVuZ2luZSBOb25jZVRyYWNrZXJTdWJwcm92aWRlciwgYnV0IG1vZGlmaWVkIGZvclxuICogQml0c2tpJ3MgdHJhbnNhY3Rpb24gZmxvdy5cbiAqL1xuY2xhc3MgTm9uY2VUcmFja2VyU3VicHJvdmlkZXIgZXh0ZW5kcyBwcm92aWRlcl9lbmdpbmVfMS5TdWJwcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubm9uY2VDYWNoZSA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgaGFuZGxlUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpIHtcbiAgICAgICAgc3dpdGNoIChwYXlsb2FkLm1ldGhvZCkge1xuICAgICAgICAgICAgY2FzZSAnZXRoX2dldFRyYW5zYWN0aW9uQ291bnQnOlxuICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlVHJhbnNhY3Rpb25Db3VudFJlcXVlc3QocGF5bG9hZCwgbmV4dCwgZW5kKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjYXNlICdldGhfc2VuZFRyYW5zYWN0aW9uJzpcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZVNlbmRUcmFuc2FjdGlvblJlcXVlc3QocGF5bG9hZCwgbmV4dCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFJldHVybiBjYWNoZWQgcmVzdWx0IGlmIHByZXNlbnRcbiAgICBoYW5kbGVUcmFuc2FjdGlvbkNvdW50UmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpIHtcbiAgICAgICAgY29uc3QgYmxvY2tUYWcgPSBwYXlsb2FkLnBhcmFtcy5sZW5ndGggPiAxID8gcGF5bG9hZC5wYXJhbXNbMV0gOiBudWxsO1xuICAgICAgICAvLyBPbmx5IGhhbmRsZSBwZW5kaW5nIHRhZ1xuICAgICAgICBpZiAoYmxvY2tUYWcgIT09ICdwZW5kaW5nJykge1xuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFkZHJlc3MgPSBwYXlsb2FkLnBhcmFtc1swXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBjb25zdCBjYWNoZWRSZXN1bHQgPSB0aGlzLm5vbmNlQ2FjaGUuZ2V0KGFkZHJlc3MpO1xuICAgICAgICAvLyBSZXR1cm4gY2FjaGVkIHJlc3VsdCBpdCB3ZSBoYXZlIGl0XG4gICAgICAgIGlmIChjYWNoZWRSZXN1bHQpIHtcbiAgICAgICAgICAgIGVuZChudWxsLCBjYWNoZWRSZXN1bHQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIEZhbGx0aHJvdWdoIGFuZCBwb3B1bGF0ZSBjYWNoZVxuICAgICAgICBuZXh0KChlcnIsIHJlc3VsdCwgY2IpID0+IHtcbiAgICAgICAgICAgIGlmICghZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ub25jZUNhY2hlLnNldChhZGRyZXNzLCByZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRvSGV4KG51bSkge1xuICAgICAgICBjb25zdCBiYXNlMTYgPSBudW0udG9TdHJpbmcoMTYpO1xuICAgICAgICBsZXQgaGV4ID0gYmFzZTE2O1xuICAgICAgICBpZiAoYmFzZTE2Lmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICAgICAgICAgIGhleCA9ICcwJyArIGJhc2UxNjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJzB4JyArIGhleDtcbiAgICB9XG4gICAgZnJvbUhleChzdHIpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHN0ciwgMTYpO1xuICAgIH1cbiAgICBuZXh0Tm9uY2Uobm9uY2UpIHtcbiAgICAgICAgY29uc3Qgc3VibWl0dGVkTm9uY2UgPSB0aGlzLmZyb21IZXgobm9uY2UpO1xuICAgICAgICBjb25zdCBuZXh0Tm9uY2UgPSBzdWJtaXR0ZWROb25jZSArIDE7XG4gICAgICAgIHJldHVybiB0aGlzLnRvSGV4KG5leHROb25jZSk7XG4gICAgfVxuICAgIC8vIEluY3JlbWVudCBuZXh0IG5vbmNlIGZvciBhZGRyZXNzXG4gICAgaGFuZGxlU2VuZFRyYW5zYWN0aW9uUmVxdWVzdChwYXlsb2FkLCBuZXh0KSB7XG4gICAgICAgIC8vIFN1Ym1pdCB0aGUgcmVxdWVzdCwgdGhlbiBtb25pdG9yIHRoZSByZXN1bHRcbiAgICAgICAgbmV4dCgoZXJyLCByZXN1bHQsIGNiKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IHBheWxvYWQucGFyYW1zLmxlbmd0aCA+IDAgPyBwYXlsb2FkLnBhcmFtc1swXSA6IHt9O1xuICAgICAgICAgICAgY29uc3Qgc3VibWl0dGVkTm9uY2UgPSB0cmFuc2FjdGlvbi5ub25jZTtcbiAgICAgICAgICAgIGNvbnN0IGFkZHJlc3MgPSB0cmFuc2FjdGlvbi5mcm9tO1xuICAgICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoc3VibWl0dGVkTm9uY2UgJiYgYWRkcmVzcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBJbmNyZW1lbnQgbm9uY2VcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV4dE5vbmNlID0gdGhpcy5uZXh0Tm9uY2Uoc3VibWl0dGVkTm9uY2UpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vbmNlQ2FjaGUuc2V0KGFkZHJlc3MsIG5leHROb25jZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gUmVtb3ZlIGNhY2hlZCB2YWx1ZSBpZiB3ZSBlbmNvdW50ZXIgYW4gZXJyb3JcbiAgICAgICAgICAgICAgICB0aGlzLm5vbmNlQ2FjaGUuZGVsZXRlKGFkZHJlc3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Ob25jZVRyYWNrZXJTdWJwcm92aWRlciA9IE5vbmNlVHJhY2tlclN1YnByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9uY2UtdHJhY2tlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/subproviders/nonce-tracker.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/subproviders/transaction-validator.js":
/*!*********************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/subproviders/transaction-validator.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionValidatorSubprovider = void 0;\nconst provider_engine_1 = __webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\");\n/**\n * A subprovider that automatically populates missing transaction details.\n * This is needed because it has become common to submit transactions with\n * only some of the parameters and rely on the provider or node to fill in the rest.\n */\nclass TransactionValidatorSubprovider extends provider_engine_1.Subprovider {\n    constructor(minGasPrice = 0) {\n        super();\n        this.minGasPrice = minGasPrice;\n    }\n    handleRequest(payload, next, _) {\n        // Only handle transactions\n        if (payload.method === 'eth_sendTransaction' || payload.method === 'eth_signTransaction') {\n            this.populateTransactionFields(payload)\n                .then(() => {\n                // Payload was modified. Continue.\n                next();\n            })\n                .catch(() => {\n                // Fall through if we cannot populate fields\n                next();\n            });\n        }\n        else {\n            next();\n        }\n    }\n    // Examine transaction and populate missing params\n    async populateTransactionFields(payload) {\n        const params = payload.params || [];\n        let transaction = {};\n        if (params.length > 0) {\n            transaction = params[0];\n        }\n        const promises = [];\n        // Populate missing from with default account\n        if (transaction.from === undefined) {\n            const accounts = await this.getAccounts();\n            transaction.from = accounts[0];\n        }\n        // Populate missing gasPrice\n        if (transaction.gasPrice === undefined) {\n            promises.push(this.estimateGasPrice());\n        }\n        else {\n            promises.push(transaction.gasPrice);\n        }\n        // Populate missing nonce\n        if (transaction.nonce === undefined) {\n            promises.push(this.getNonce(transaction.from));\n        }\n        else {\n            promises.push(transaction.nonce);\n        }\n        // Populate missing gas\n        if (transaction.gas === undefined) {\n            promises.push(this.estimateGas(transaction));\n        }\n        else {\n            promises.push(transaction.gas);\n        }\n        // Execute promises\n        const values = await Promise.all(promises);\n        // Update parameters with loaded values. Must be very careful with the indexes here.\n        transaction.gasPrice = values[0];\n        transaction.nonce = values[1];\n        transaction.gas = values[2];\n        // Set the params on the payload\n        payload.params[0] = transaction;\n        return payload;\n    }\n    async getNonce(address) {\n        const request = {\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'eth_getTransactionCount',\n            params: [address, 'latest'],\n        };\n        return this.performRequest(request);\n    }\n    async getAccounts() {\n        const request = {\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'eth_accounts',\n            params: [],\n        };\n        return this.performRequest(request);\n    }\n    async estimateGas(transaction) {\n        const request = {\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'eth_estimateGas',\n            params: [transaction],\n        };\n        return this.performRequest(request);\n    }\n    async estimateGasPrice() {\n        const request = {\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'eth_gasPrice',\n            params: [],\n        };\n        return this.performRequest(request).then((gasPrice) => {\n            if (gasPrice === '0x0') {\n                return `0x${this.minGasPrice.toString(16)}`;\n            }\n            return gasPrice;\n        });\n    }\n    // Wraps emitPayload in a promise\n    performRequest(payload) {\n        return new Promise((fulfill, reject) => {\n            this.emitPayload(payload, (err, result) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    fulfill(result.result);\n                }\n            });\n        });\n    }\n}\nexports.TransactionValidatorSubprovider = TransactionValidatorSubprovider;\n//# sourceMappingURL=transaction-validator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvc3VicHJvdmlkZXJzL3RyYW5zYWN0aW9uLXZhbGlkYXRvci5qcz8zNjg1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyxrR0FBeUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsOEJBQThCO0FBQzFEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvc3VicHJvdmlkZXJzL3RyYW5zYWN0aW9uLXZhbGlkYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFuc2FjdGlvblZhbGlkYXRvclN1YnByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgcHJvdmlkZXJfZW5naW5lXzEgPSByZXF1aXJlKFwiQGJpdHNraS9wcm92aWRlci1lbmdpbmVcIik7XG4vKipcbiAqIEEgc3VicHJvdmlkZXIgdGhhdCBhdXRvbWF0aWNhbGx5IHBvcHVsYXRlcyBtaXNzaW5nIHRyYW5zYWN0aW9uIGRldGFpbHMuXG4gKiBUaGlzIGlzIG5lZWRlZCBiZWNhdXNlIGl0IGhhcyBiZWNvbWUgY29tbW9uIHRvIHN1Ym1pdCB0cmFuc2FjdGlvbnMgd2l0aFxuICogb25seSBzb21lIG9mIHRoZSBwYXJhbWV0ZXJzIGFuZCByZWx5IG9uIHRoZSBwcm92aWRlciBvciBub2RlIHRvIGZpbGwgaW4gdGhlIHJlc3QuXG4gKi9cbmNsYXNzIFRyYW5zYWN0aW9uVmFsaWRhdG9yU3VicHJvdmlkZXIgZXh0ZW5kcyBwcm92aWRlcl9lbmdpbmVfMS5TdWJwcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IobWluR2FzUHJpY2UgPSAwKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubWluR2FzUHJpY2UgPSBtaW5HYXNQcmljZTtcbiAgICB9XG4gICAgaGFuZGxlUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBfKSB7XG4gICAgICAgIC8vIE9ubHkgaGFuZGxlIHRyYW5zYWN0aW9uc1xuICAgICAgICBpZiAocGF5bG9hZC5tZXRob2QgPT09ICdldGhfc2VuZFRyYW5zYWN0aW9uJyB8fCBwYXlsb2FkLm1ldGhvZCA9PT0gJ2V0aF9zaWduVHJhbnNhY3Rpb24nKSB7XG4gICAgICAgICAgICB0aGlzLnBvcHVsYXRlVHJhbnNhY3Rpb25GaWVsZHMocGF5bG9hZClcbiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gUGF5bG9hZCB3YXMgbW9kaWZpZWQuIENvbnRpbnVlLlxuICAgICAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKCgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBGYWxsIHRocm91Z2ggaWYgd2UgY2Fubm90IHBvcHVsYXRlIGZpZWxkc1xuICAgICAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIEV4YW1pbmUgdHJhbnNhY3Rpb24gYW5kIHBvcHVsYXRlIG1pc3NpbmcgcGFyYW1zXG4gICAgYXN5bmMgcG9wdWxhdGVUcmFuc2FjdGlvbkZpZWxkcyhwYXlsb2FkKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHBheWxvYWQucGFyYW1zIHx8IFtdO1xuICAgICAgICBsZXQgdHJhbnNhY3Rpb24gPSB7fTtcbiAgICAgICAgaWYgKHBhcmFtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0cmFuc2FjdGlvbiA9IHBhcmFtc1swXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9taXNlcyA9IFtdO1xuICAgICAgICAvLyBQb3B1bGF0ZSBtaXNzaW5nIGZyb20gd2l0aCBkZWZhdWx0IGFjY291bnRcbiAgICAgICAgaWYgKHRyYW5zYWN0aW9uLmZyb20gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCB0aGlzLmdldEFjY291bnRzKCk7XG4gICAgICAgICAgICB0cmFuc2FjdGlvbi5mcm9tID0gYWNjb3VudHNbMF07XG4gICAgICAgIH1cbiAgICAgICAgLy8gUG9wdWxhdGUgbWlzc2luZyBnYXNQcmljZVxuICAgICAgICBpZiAodHJhbnNhY3Rpb24uZ2FzUHJpY2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLmVzdGltYXRlR2FzUHJpY2UoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRyYW5zYWN0aW9uLmdhc1ByaWNlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBQb3B1bGF0ZSBtaXNzaW5nIG5vbmNlXG4gICAgICAgIGlmICh0cmFuc2FjdGlvbi5ub25jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuZ2V0Tm9uY2UodHJhbnNhY3Rpb24uZnJvbSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0cmFuc2FjdGlvbi5ub25jZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUG9wdWxhdGUgbWlzc2luZyBnYXNcbiAgICAgICAgaWYgKHRyYW5zYWN0aW9uLmdhcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuZXN0aW1hdGVHYXModHJhbnNhY3Rpb24pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godHJhbnNhY3Rpb24uZ2FzKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBFeGVjdXRlIHByb21pc2VzXG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICAgICAgLy8gVXBkYXRlIHBhcmFtZXRlcnMgd2l0aCBsb2FkZWQgdmFsdWVzLiBNdXN0IGJlIHZlcnkgY2FyZWZ1bCB3aXRoIHRoZSBpbmRleGVzIGhlcmUuXG4gICAgICAgIHRyYW5zYWN0aW9uLmdhc1ByaWNlID0gdmFsdWVzWzBdO1xuICAgICAgICB0cmFuc2FjdGlvbi5ub25jZSA9IHZhbHVlc1sxXTtcbiAgICAgICAgdHJhbnNhY3Rpb24uZ2FzID0gdmFsdWVzWzJdO1xuICAgICAgICAvLyBTZXQgdGhlIHBhcmFtcyBvbiB0aGUgcGF5bG9hZFxuICAgICAgICBwYXlsb2FkLnBhcmFtc1swXSA9IHRyYW5zYWN0aW9uO1xuICAgICAgICByZXR1cm4gcGF5bG9hZDtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Tm9uY2UoYWRkcmVzcykge1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0ge1xuICAgICAgICAgICAgaWQ6IDAsXG4gICAgICAgICAgICBqc29ucnBjOiAnMi4wJyxcbiAgICAgICAgICAgIG1ldGhvZDogJ2V0aF9nZXRUcmFuc2FjdGlvbkNvdW50JyxcbiAgICAgICAgICAgIHBhcmFtczogW2FkZHJlc3MsICdsYXRlc3QnXSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHRoaXMucGVyZm9ybVJlcXVlc3QocmVxdWVzdCk7XG4gICAgfVxuICAgIGFzeW5jIGdldEFjY291bnRzKCkge1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0ge1xuICAgICAgICAgICAgaWQ6IDAsXG4gICAgICAgICAgICBqc29ucnBjOiAnMi4wJyxcbiAgICAgICAgICAgIG1ldGhvZDogJ2V0aF9hY2NvdW50cycsXG4gICAgICAgICAgICBwYXJhbXM6IFtdLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGhpcy5wZXJmb3JtUmVxdWVzdChyZXF1ZXN0KTtcbiAgICB9XG4gICAgYXN5bmMgZXN0aW1hdGVHYXModHJhbnNhY3Rpb24pIHtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IHtcbiAgICAgICAgICAgIGlkOiAwLFxuICAgICAgICAgICAganNvbnJwYzogJzIuMCcsXG4gICAgICAgICAgICBtZXRob2Q6ICdldGhfZXN0aW1hdGVHYXMnLFxuICAgICAgICAgICAgcGFyYW1zOiBbdHJhbnNhY3Rpb25dLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGhpcy5wZXJmb3JtUmVxdWVzdChyZXF1ZXN0KTtcbiAgICB9XG4gICAgYXN5bmMgZXN0aW1hdGVHYXNQcmljZSgpIHtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IHtcbiAgICAgICAgICAgIGlkOiAwLFxuICAgICAgICAgICAganNvbnJwYzogJzIuMCcsXG4gICAgICAgICAgICBtZXRob2Q6ICdldGhfZ2FzUHJpY2UnLFxuICAgICAgICAgICAgcGFyYW1zOiBbXSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHRoaXMucGVyZm9ybVJlcXVlc3QocmVxdWVzdCkudGhlbigoZ2FzUHJpY2UpID0+IHtcbiAgICAgICAgICAgIGlmIChnYXNQcmljZSA9PT0gJzB4MCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYDB4JHt0aGlzLm1pbkdhc1ByaWNlLnRvU3RyaW5nKDE2KX1gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGdhc1ByaWNlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gV3JhcHMgZW1pdFBheWxvYWQgaW4gYSBwcm9taXNlXG4gICAgcGVyZm9ybVJlcXVlc3QocGF5bG9hZCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKGZ1bGZpbGwsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5lbWl0UGF5bG9hZChwYXlsb2FkLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZnVsZmlsbChyZXN1bHQucmVzdWx0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5UcmFuc2FjdGlvblZhbGlkYXRvclN1YnByb3ZpZGVyID0gVHJhbnNhY3Rpb25WYWxpZGF0b3JTdWJwcm92aWRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zYWN0aW9uLXZhbGlkYXRvci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/subproviders/transaction-validator.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/subproviders/typed-data.js":
/*!**********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/subproviders/typed-data.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTypeMapping = exports.sanitizeType = exports.sanitizeMessage = exports.sanitizeDomain = exports.TypedDataSanitizerSubprovider = void 0;\nconst provider_engine_1 = __webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\");\nconst provider_error_1 = __webpack_require__(/*! ../errors/provider-error */ \"../../node_modules/bitski-provider/lib/errors/provider-error.js\");\nconst parse_utils_1 = __webpack_require__(/*! ../utils/parse-utils */ \"../../node_modules/bitski-provider/lib/utils/parse-utils.js\");\nclass TypedDataSanitizerSubprovider extends provider_engine_1.Subprovider {\n    handleRequest(payload, next, end) {\n        if (payload.method === 'eth_signTypedData' ||\n            payload.method === 'eth_signTypedData_v3' ||\n            payload.method === 'eth_signTypedData_v4') {\n            try {\n                this.sanitizePayload(payload);\n            }\n            catch (err) {\n                return end(err, undefined);\n            }\n        }\n        next();\n    }\n    sanitizePayload(payload) {\n        const typedData = this.extractTypedData(payload);\n        // create map of types\n        const typeMapping = createTypeMapping(typedData);\n        // sanitize domain\n        sanitizeDomain(typedData, typeMapping);\n        // sanitize message\n        sanitizeMessage(typedData, typeMapping);\n        // Re-assign typed data to params in case it has been parsed\n        // from a string.\n        payload.params[1] = typedData;\n    }\n    // Given a JSON-RPC request, extract the typed data from the params\n    extractTypedData(payload) {\n        if (!payload.params || payload.params.length < 2) {\n            throw provider_error_1.ProviderError.InvalidRequest('Missing params for typed data');\n        }\n        // Some implementations pass typed data as a string\n        if (typeof payload.params[1] === 'string') {\n            return JSON.parse(payload.params[1]);\n        }\n        return payload.params[1];\n    }\n}\nexports.TypedDataSanitizerSubprovider = TypedDataSanitizerSubprovider;\n/**\n * Sanitizes the `domain` values from the TypedData\n *\n * @param typedData TypedData payload\n * @param typeMapping a TypeMapping pre-generated from the TypedData\n */\nfunction sanitizeDomain(typedData, typeMapping) {\n    if (typeof typedData.domain === 'undefined') {\n        throw provider_error_1.ProviderError.InvalidRequest('Missing domain for typed data');\n    }\n    if (typeof typedData.types.EIP712Domain === 'undefined') {\n        throw provider_error_1.ProviderError.InvalidRequest('Missing type definition for domain');\n    }\n    sanitizeType('EIP712Domain', typedData.domain, typeMapping);\n}\nexports.sanitizeDomain = sanitizeDomain;\n/**\n * Sanitizes the `message` values from the TypedData\n *\n * @param typedData TypedData payload\n * @param typeMapping a TypeMapping pre-generated from the TypedData\n */\nfunction sanitizeMessage(typedData, typeMapping) {\n    if (typeof typedData.message === 'undefined') {\n        throw provider_error_1.ProviderError.InvalidRequest('Missing message in typed data');\n    }\n    if (typeof typedData.primaryType !== 'string') {\n        throw provider_error_1.ProviderError.InvalidRequest('Missing primary type in typed data');\n    }\n    sanitizeType(typedData.primaryType, typedData.message, typeMapping);\n}\nexports.sanitizeMessage = sanitizeMessage;\n/**\n * Recursively examines each value and determines type from the type mapping to\n * format and sanitize the value if needed.\n *\n * Currently this will only convert number values into a consistent hex format,\n * but in the future additional transformations may be necessary.\n *\n * @param typeName Name of the type we are starting from\n * @param values The root object containing the keys and values\n * @param typeMapping The type mapping that represents this data\n */\nfunction sanitizeType(typeName, values, typeMapping) {\n    // For each key in the 'values' object...\n    Object.keys(values).forEach((key) => {\n        // Find the type name associated from the mapping\n        const type = typeMapping[typeName][key];\n        if (type === undefined) {\n            // Do nothing if we don't have a type for this key\n        }\n        else if (isArray(type)) {\n            // find the base type (left side of the brackets)\n            const baseType = type.split('[')[0];\n            if (typeof values[key].length === 'undefined') {\n                throw new TypeError(`Could not parse ${values[key]} for type ${type}. Expected array.`);\n            }\n            // If base type is a struct, iterate through each instance of struct\n            if (typeMapping[baseType]) {\n                // values[key] is expected to be an array, where each element\n                // is an object that represents the struct named baseType.\n                values[key].forEach((itemValues) => {\n                    sanitizeType(baseType, itemValues, typeMapping);\n                });\n            }\n            else if (baseType.startsWith('uint') || baseType.startsWith('int')) {\n                // If we have an array of primitive types that are numbers, we need to encode the numbers as hex\n                const numberValues = values[key].map((numberValue) => {\n                    return (0, parse_utils_1.encodeNumber)(numberValue, baseType, true);\n                });\n                values[key] = numberValues;\n            }\n            else {\n                // Do nothing with regular array values\n                // int8[], etc should already be strings\n            }\n        }\n        else if (typeMapping[type]) {\n            // If type name is a custom struct, it should live in the type mapping\n            // We need to recursively check the custom types until we get to primitive values\n            sanitizeType(type, values[key], typeMapping);\n        }\n        else if (type.startsWith('uint') || type.startsWith('int')) {\n            // Finally, if we have a primitive type that is a number, we need to encode the numbers as hex\n            values[key] = (0, parse_utils_1.encodeNumber)(values[key], type, true);\n        }\n    });\n}\nexports.sanitizeType = sanitizeType;\n/**\n * Returns true if type name indicates that an array\n * @param typeName solidity type name\n */\nfunction isArray(typeName) {\n    if (typeName.includes('[') && typeName.includes(']')) {\n        return true;\n    }\n    return false;\n}\n/**\n * Maps the type definitions from the typed data for easy look-up.\n * Top level keys represent the structs defined, while top-level values\n * are an object keyed by property with string values of the type name.\n *\n * For example:\n * {\n *    EIP712Domain: {\n *      name: 'string',\n *      version: 'string',\n *      chainId: 'uint256'\n *    }\n * }\n * @param typedData The TypedData to map\n * @returns {TypeMapping} the mapped data schema\n */\nfunction createTypeMapping(typedData) {\n    if (typeof typedData.types === 'undefined') {\n        throw provider_error_1.ProviderError.InvalidRequest('Missing type definitions for typed data');\n    }\n    // Go through each of the top level keys. These represent the custom types.\n    return Object.keys(typedData.types).reduce((acc, current) => {\n        // Reduce into a new single object\n        // Set a key for each type, reduce array of property names and types to an object\n        acc[current] = typedData.types[current].reduce((acc2, typeDef) => {\n            // For each type, set the key as the property name, and the value as the type name\n            acc2[typeDef.name] = typeDef.type;\n            return acc2;\n        }, {});\n        return acc;\n    }, {});\n}\nexports.createTypeMapping = createTypeMapping;\n//# sourceMappingURL=typed-data.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/subproviders/typed-data.js\n");

/***/ }),

/***/ "../../node_modules/bitski-provider/lib/utils/parse-utils.js":
/*!****************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski-provider/lib/utils/parse-utils.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeNumber = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"../../node_modules/bn.js/lib/bn.js\"));\n/**\n * parseNumber\n * Converts a value that represents a number into a hex value.\n * @param arg {string | number | BN} A number value to convert to hex.\n * Can be a regular number, base-10 string, base-16 string, or BN instance.\n * @returns {BN} BN instance representing the number\n *\n * (Adapted from ethereumjs-abi)\n */\nfunction parseNumber(arg) {\n    const type = typeof arg;\n    if (type === 'string') {\n        if (arg.substr(0, 2) === '0x') {\n            return new bn_js_1.default(arg.substr(2), 16);\n        }\n        else {\n            return new bn_js_1.default(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new bn_js_1.default(arg);\n    }\n    else if (arg.toArray) {\n        // assume this is a BN for the moment, replace with BN.isBN soon\n        return arg;\n    }\n    else {\n        throw new Error('Argument is not a number');\n    }\n}\nfunction parseBitWidth(type, offset) {\n    // default to 256 bit if not specified\n    let size = 256;\n    // If type string is longer than offset, parse bits from the type string\n    if (type.length > offset) {\n        size = parseInt(type.substr(offset), 10);\n    }\n    // bit width must be a multiple of 8, and in the range 8-256.\n    if (size % 8 || size < 8 || size > 256) {\n        throw new Error(`Invalid bit width ${type}`);\n    }\n    return size;\n}\n/**\n * encodeNumber\n * Takes a decimal string, hex string, regular number, or BN instance and returns a hex string in the specified format.\n * Typically these conversions are done in web3, but until web3 adds direct support, this is necessary for normalizing\n * numbers eth_signTypedData payloads.\n * @param num The value to convert\n * @param type The solidity ABI type to format the data as (eg. uint256, int8, etc). Only supports int and uint variants.\n * @param compact boolean (default false). Whether to use compact encoding for uints, or pad with zeroes.\n * @returns {string} A hex string formatted as the specified type.\n */\nfunction encodeNumber(num, type, compact = false) {\n    if (type.startsWith('uint')) {\n        const size = parseBitWidth(type, 4); // start after 'uint'\n        const length = size / 4; // length in characters for the string. hex is 1 character for 4 bits.\n        const parsed = parseNumber(num);\n        // uint can never be negative\n        if (parsed.isNeg()) {\n            throw new Error('Supplied uint is negative');\n        }\n        // Convert to hex, and prepend 0x\n        if (compact) {\n            return '0x' + parsed.toString(16);\n        }\n        return '0x' + parsed.toString(16, length);\n    }\n    else if (type.startsWith('int')) {\n        // bit width must be a multiple of 8, and in the range 8-256.\n        const size = parseBitWidth(type, 3);\n        const length = size / 4; // length in characters for the string. hex is 1 character for 4 bits.\n        const parsed = parseNumber(num);\n        // Convert to twos complement at the bit size from the type, then convert value to hex\n        return '0x' + parsed.toTwos(size).toString(16, length);\n    }\n    else {\n        throw new Error('Invalid type passed');\n    }\n}\nexports.encodeNumber = encodeNumber;\n//# sourceMappingURL=parse-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS1wcm92aWRlci9saWIvdXRpbHMvcGFyc2UtdXRpbHMuanM/OGVhOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxnQ0FBZ0MsbUJBQU8sQ0FBQyxpREFBTztBQUMvQztBQUNBO0FBQ0E7QUFDQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsS0FBSztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QyxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpLXByb3ZpZGVyL2xpYi91dGlscy9wYXJzZS11dGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5lbmNvZGVOdW1iZXIgPSB2b2lkIDA7XG5jb25zdCBibl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJibi5qc1wiKSk7XG4vKipcbiAqIHBhcnNlTnVtYmVyXG4gKiBDb252ZXJ0cyBhIHZhbHVlIHRoYXQgcmVwcmVzZW50cyBhIG51bWJlciBpbnRvIGEgaGV4IHZhbHVlLlxuICogQHBhcmFtIGFyZyB7c3RyaW5nIHwgbnVtYmVyIHwgQk59IEEgbnVtYmVyIHZhbHVlIHRvIGNvbnZlcnQgdG8gaGV4LlxuICogQ2FuIGJlIGEgcmVndWxhciBudW1iZXIsIGJhc2UtMTAgc3RyaW5nLCBiYXNlLTE2IHN0cmluZywgb3IgQk4gaW5zdGFuY2UuXG4gKiBAcmV0dXJucyB7Qk59IEJOIGluc3RhbmNlIHJlcHJlc2VudGluZyB0aGUgbnVtYmVyXG4gKlxuICogKEFkYXB0ZWQgZnJvbSBldGhlcmV1bWpzLWFiaSlcbiAqL1xuZnVuY3Rpb24gcGFyc2VOdW1iZXIoYXJnKSB7XG4gICAgY29uc3QgdHlwZSA9IHR5cGVvZiBhcmc7XG4gICAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmIChhcmcuc3Vic3RyKDAsIDIpID09PSAnMHgnKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IGJuX2pzXzEuZGVmYXVsdChhcmcuc3Vic3RyKDIpLCAxNik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IGJuX2pzXzEuZGVmYXVsdChhcmcsIDEwKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJykge1xuICAgICAgICByZXR1cm4gbmV3IGJuX2pzXzEuZGVmYXVsdChhcmcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChhcmcudG9BcnJheSkge1xuICAgICAgICAvLyBhc3N1bWUgdGhpcyBpcyBhIEJOIGZvciB0aGUgbW9tZW50LCByZXBsYWNlIHdpdGggQk4uaXNCTiBzb29uXG4gICAgICAgIHJldHVybiBhcmc7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FyZ3VtZW50IGlzIG5vdCBhIG51bWJlcicpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHBhcnNlQml0V2lkdGgodHlwZSwgb2Zmc2V0KSB7XG4gICAgLy8gZGVmYXVsdCB0byAyNTYgYml0IGlmIG5vdCBzcGVjaWZpZWRcbiAgICBsZXQgc2l6ZSA9IDI1NjtcbiAgICAvLyBJZiB0eXBlIHN0cmluZyBpcyBsb25nZXIgdGhhbiBvZmZzZXQsIHBhcnNlIGJpdHMgZnJvbSB0aGUgdHlwZSBzdHJpbmdcbiAgICBpZiAodHlwZS5sZW5ndGggPiBvZmZzZXQpIHtcbiAgICAgICAgc2l6ZSA9IHBhcnNlSW50KHR5cGUuc3Vic3RyKG9mZnNldCksIDEwKTtcbiAgICB9XG4gICAgLy8gYml0IHdpZHRoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA4LCBhbmQgaW4gdGhlIHJhbmdlIDgtMjU2LlxuICAgIGlmIChzaXplICUgOCB8fCBzaXplIDwgOCB8fCBzaXplID4gMjU2KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBiaXQgd2lkdGggJHt0eXBlfWApO1xuICAgIH1cbiAgICByZXR1cm4gc2l6ZTtcbn1cbi8qKlxuICogZW5jb2RlTnVtYmVyXG4gKiBUYWtlcyBhIGRlY2ltYWwgc3RyaW5nLCBoZXggc3RyaW5nLCByZWd1bGFyIG51bWJlciwgb3IgQk4gaW5zdGFuY2UgYW5kIHJldHVybnMgYSBoZXggc3RyaW5nIGluIHRoZSBzcGVjaWZpZWQgZm9ybWF0LlxuICogVHlwaWNhbGx5IHRoZXNlIGNvbnZlcnNpb25zIGFyZSBkb25lIGluIHdlYjMsIGJ1dCB1bnRpbCB3ZWIzIGFkZHMgZGlyZWN0IHN1cHBvcnQsIHRoaXMgaXMgbmVjZXNzYXJ5IGZvciBub3JtYWxpemluZ1xuICogbnVtYmVycyBldGhfc2lnblR5cGVkRGF0YSBwYXlsb2Fkcy5cbiAqIEBwYXJhbSBudW0gVGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqIEBwYXJhbSB0eXBlIFRoZSBzb2xpZGl0eSBBQkkgdHlwZSB0byBmb3JtYXQgdGhlIGRhdGEgYXMgKGVnLiB1aW50MjU2LCBpbnQ4LCBldGMpLiBPbmx5IHN1cHBvcnRzIGludCBhbmQgdWludCB2YXJpYW50cy5cbiAqIEBwYXJhbSBjb21wYWN0IGJvb2xlYW4gKGRlZmF1bHQgZmFsc2UpLiBXaGV0aGVyIHRvIHVzZSBjb21wYWN0IGVuY29kaW5nIGZvciB1aW50cywgb3IgcGFkIHdpdGggemVyb2VzLlxuICogQHJldHVybnMge3N0cmluZ30gQSBoZXggc3RyaW5nIGZvcm1hdHRlZCBhcyB0aGUgc3BlY2lmaWVkIHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGVuY29kZU51bWJlcihudW0sIHR5cGUsIGNvbXBhY3QgPSBmYWxzZSkge1xuICAgIGlmICh0eXBlLnN0YXJ0c1dpdGgoJ3VpbnQnKSkge1xuICAgICAgICBjb25zdCBzaXplID0gcGFyc2VCaXRXaWR0aCh0eXBlLCA0KTsgLy8gc3RhcnQgYWZ0ZXIgJ3VpbnQnXG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IHNpemUgLyA0OyAvLyBsZW5ndGggaW4gY2hhcmFjdGVycyBmb3IgdGhlIHN0cmluZy4gaGV4IGlzIDEgY2hhcmFjdGVyIGZvciA0IGJpdHMuXG4gICAgICAgIGNvbnN0IHBhcnNlZCA9IHBhcnNlTnVtYmVyKG51bSk7XG4gICAgICAgIC8vIHVpbnQgY2FuIG5ldmVyIGJlIG5lZ2F0aXZlXG4gICAgICAgIGlmIChwYXJzZWQuaXNOZWcoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdXBwbGllZCB1aW50IGlzIG5lZ2F0aXZlJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ29udmVydCB0byBoZXgsIGFuZCBwcmVwZW5kIDB4XG4gICAgICAgIGlmIChjb21wYWN0KSB7XG4gICAgICAgICAgICByZXR1cm4gJzB4JyArIHBhcnNlZC50b1N0cmluZygxNik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICcweCcgKyBwYXJzZWQudG9TdHJpbmcoMTYsIGxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUuc3RhcnRzV2l0aCgnaW50JykpIHtcbiAgICAgICAgLy8gYml0IHdpZHRoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA4LCBhbmQgaW4gdGhlIHJhbmdlIDgtMjU2LlxuICAgICAgICBjb25zdCBzaXplID0gcGFyc2VCaXRXaWR0aCh0eXBlLCAzKTtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gc2l6ZSAvIDQ7IC8vIGxlbmd0aCBpbiBjaGFyYWN0ZXJzIGZvciB0aGUgc3RyaW5nLiBoZXggaXMgMSBjaGFyYWN0ZXIgZm9yIDQgYml0cy5cbiAgICAgICAgY29uc3QgcGFyc2VkID0gcGFyc2VOdW1iZXIobnVtKTtcbiAgICAgICAgLy8gQ29udmVydCB0byB0d29zIGNvbXBsZW1lbnQgYXQgdGhlIGJpdCBzaXplIGZyb20gdGhlIHR5cGUsIHRoZW4gY29udmVydCB2YWx1ZSB0byBoZXhcbiAgICAgICAgcmV0dXJuICcweCcgKyBwYXJzZWQudG9Ud29zKHNpemUpLnRvU3RyaW5nKDE2LCBsZW5ndGgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHR5cGUgcGFzc2VkJyk7XG4gICAgfVxufVxuZXhwb3J0cy5lbmNvZGVOdW1iZXIgPSBlbmNvZGVOdW1iZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS11dGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski-provider/lib/utils/parse-utils.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/auth/access-token.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/auth/access-token.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessToken = void 0;\n/**\n * Represents a Bitski access token\n */\nclass AccessToken {\n    /**\n     *\n     * @param token the access token\n     * @param expiresAt the token expiration date (in seconds) (optional)\n     * @param scope the scopes this token represents (optional)\n     */\n    constructor(token, expiresAt, scope) {\n        this.token = token;\n        this.scope = scope;\n        this.expiresAt = expiresAt;\n    }\n    /**\n     * Creates a token from a TokenResponse object\n     * @param tokenResponse The token response object to build a token from\n     */\n    static fromTokenResponse(tokenResponse) {\n        let expiresAt;\n        if (tokenResponse.expiresIn) {\n            expiresAt = Math.floor(Date.now() / 1000) + tokenResponse.expiresIn;\n        }\n        return new AccessToken(tokenResponse.accessToken, expiresAt, tokenResponse.scope);\n    }\n    /**\n     * Creates a token from a storage string\n     * @param s JSON string representing the token\n     */\n    static fromString(s) {\n        let parsed;\n        try {\n            parsed = JSON.parse(s);\n        }\n        catch (error) {\n            return;\n        }\n        if (!parsed.token) {\n            return;\n        }\n        return new AccessToken(parsed.token, parsed.expiresAt, parsed.scope);\n    }\n    /**\n     * Calculates if the token is still active\n     */\n    get expired() {\n        if (this.expiresAt) {\n            const now = Math.floor(Date.now() / 1000);\n            const expiresIn = this.expiresAt - now;\n            return expiresIn <= 0;\n        }\n        return false;\n    }\n    /**\n     * Returns a JSON string suitable for writing in local storage\n     */\n    toStorageString() {\n        return JSON.stringify({\n            expiresAt: this.expiresAt,\n            scope: this.scope,\n            token: this.token,\n        });\n    }\n}\nexports.AccessToken = AccessToken;\n//# sourceMappingURL=access-token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvYXV0aC9hY2Nlc3MtdG9rZW4uanM/ZmYxNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpL2xpYi9hdXRoL2FjY2Vzcy10b2tlbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY2Nlc3NUb2tlbiA9IHZvaWQgMDtcbi8qKlxuICogUmVwcmVzZW50cyBhIEJpdHNraSBhY2Nlc3MgdG9rZW5cbiAqL1xuY2xhc3MgQWNjZXNzVG9rZW4ge1xuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHRva2VuIHRoZSBhY2Nlc3MgdG9rZW5cbiAgICAgKiBAcGFyYW0gZXhwaXJlc0F0IHRoZSB0b2tlbiBleHBpcmF0aW9uIGRhdGUgKGluIHNlY29uZHMpIChvcHRpb25hbClcbiAgICAgKiBAcGFyYW0gc2NvcGUgdGhlIHNjb3BlcyB0aGlzIHRva2VuIHJlcHJlc2VudHMgKG9wdGlvbmFsKVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHRva2VuLCBleHBpcmVzQXQsIHNjb3BlKSB7XG4gICAgICAgIHRoaXMudG9rZW4gPSB0b2tlbjtcbiAgICAgICAgdGhpcy5zY29wZSA9IHNjb3BlO1xuICAgICAgICB0aGlzLmV4cGlyZXNBdCA9IGV4cGlyZXNBdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHRva2VuIGZyb20gYSBUb2tlblJlc3BvbnNlIG9iamVjdFxuICAgICAqIEBwYXJhbSB0b2tlblJlc3BvbnNlIFRoZSB0b2tlbiByZXNwb25zZSBvYmplY3QgdG8gYnVpbGQgYSB0b2tlbiBmcm9tXG4gICAgICovXG4gICAgc3RhdGljIGZyb21Ub2tlblJlc3BvbnNlKHRva2VuUmVzcG9uc2UpIHtcbiAgICAgICAgbGV0IGV4cGlyZXNBdDtcbiAgICAgICAgaWYgKHRva2VuUmVzcG9uc2UuZXhwaXJlc0luKSB7XG4gICAgICAgICAgICBleHBpcmVzQXQgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSArIHRva2VuUmVzcG9uc2UuZXhwaXJlc0luO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzVG9rZW4odG9rZW5SZXNwb25zZS5hY2Nlc3NUb2tlbiwgZXhwaXJlc0F0LCB0b2tlblJlc3BvbnNlLnNjb3BlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHRva2VuIGZyb20gYSBzdG9yYWdlIHN0cmluZ1xuICAgICAqIEBwYXJhbSBzIEpTT04gc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgdG9rZW5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVN0cmluZyhzKSB7XG4gICAgICAgIGxldCBwYXJzZWQ7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBwYXJzZWQgPSBKU09OLnBhcnNlKHMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcGFyc2VkLnRva2VuKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NUb2tlbihwYXJzZWQudG9rZW4sIHBhcnNlZC5leHBpcmVzQXQsIHBhcnNlZC5zY29wZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZXMgaWYgdGhlIHRva2VuIGlzIHN0aWxsIGFjdGl2ZVxuICAgICAqL1xuICAgIGdldCBleHBpcmVkKCkge1xuICAgICAgICBpZiAodGhpcy5leHBpcmVzQXQpIHtcbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xuICAgICAgICAgICAgY29uc3QgZXhwaXJlc0luID0gdGhpcy5leHBpcmVzQXQgLSBub3c7XG4gICAgICAgICAgICByZXR1cm4gZXhwaXJlc0luIDw9IDA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgSlNPTiBzdHJpbmcgc3VpdGFibGUgZm9yIHdyaXRpbmcgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHRvU3RvcmFnZVN0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIGV4cGlyZXNBdDogdGhpcy5leHBpcmVzQXQsXG4gICAgICAgICAgICBzY29wZTogdGhpcy5zY29wZSxcbiAgICAgICAgICAgIHRva2VuOiB0aGlzLnRva2VuLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkFjY2Vzc1Rva2VuID0gQWNjZXNzVG9rZW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY2Nlc3MtdG9rZW4uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/auth/access-token.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/auth/oauth-manager.js":
/*!********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/auth/oauth-manager.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuthManager = exports.LOGIN_HINT_SIGNUP = void 0;\nconst appauth_1 = __webpack_require__(/*! @openid/appauth */ \"../../node_modules/@openid/appauth/built/index.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst authentication_error_1 = __webpack_require__(/*! ../errors/authentication-error */ \"../../node_modules/bitski/lib/errors/authentication-error.js\");\nconst no_hash_query_string_utils_1 = __webpack_require__(/*! ../utils/no-hash-query-string-utils */ \"../../node_modules/bitski/lib/utils/no-hash-query-string-utils.js\");\nconst request_utils_1 = __webpack_require__(/*! ../utils/request-utils */ \"../../node_modules/bitski/lib/utils/request-utils.js\");\nconst popup_handler_1 = __webpack_require__(/*! ./popup-handler */ \"../../node_modules/bitski/lib/auth/popup-handler.js\");\n// Use this constant in login_hint to indicate that the sign up UI should be displayed\nexports.LOGIN_HINT_SIGNUP = 'signup';\n/**\n * Responsible for submitting requests to our OAuth server.\n */\nclass OAuthManager {\n    /**\n     * Create a new OAuth Manager\n     * @param options Settings object\n     * @param options.clientId string: The client id to use for various requests\n     * @param options.redirectUri string: The redirect URI to use for responding to auth requests\n     * @param options.configuration AuthorizationServiceConfiguration (optional): The configuration for the OAuth server\n     * @param options.additionalScopes string[] (optional): Additional scopes to request outside of openid.\n     * Default is offline. Pass an empty array to only request openid.\n     */\n    constructor(options) {\n        this.clientId = options.clientId;\n        this.redirectUri = options.redirectUri;\n        this.configuration =\n            options.configuration || new appauth_1.AuthorizationServiceConfiguration(constants_1.DEFAULT_OAUTH_CONFIGURATION);\n        const additionalScopes = options.additionalScopes || constants_1.DEFAULT_OPTIONAL_SCOPES;\n        this.scopes = constants_1.DEFAULT_SCOPES.concat(additionalScopes);\n        this.tokenHandler = new appauth_1.BaseTokenRequestHandler(new appauth_1.FetchRequestor());\n        this.notifier = new appauth_1.AuthorizationNotifier();\n        this.notifier.setAuthorizationListener(this.didCompleteAuthorizationFlow.bind(this));\n    }\n    /**\n     * Trigger a popup sign in flow (the default)\n     */\n    signInPopup(opts) {\n        opts = opts || {};\n        const promise = new Promise((fulfill, reject) => {\n            this.pendingResolver = { fulfill, reject };\n        });\n        this.authHandler = new popup_handler_1.PopupRequestHandler();\n        this.authHandler.setAuthorizationNotifier(this.notifier);\n        const request = this.createAuthRequest(opts);\n        this.authHandler.performAuthorizationRequest(this.configuration, request);\n        return promise.then((response) => {\n            return this.requestAccessToken(response.code);\n        });\n    }\n    /**\n     * Trigger a redirect sign in flow. Promise should never fulfill, as you will be redirected.\n     */\n    signInRedirect(opts) {\n        opts = opts || {};\n        const promise = new Promise((fulfill, reject) => {\n            this.pendingResolver = { fulfill, reject };\n        });\n        this.authHandler = new appauth_1.RedirectRequestHandler(undefined, new no_hash_query_string_utils_1.NoHashQueryStringUtils());\n        this.authHandler.setAuthorizationNotifier(this.notifier);\n        const request = this.createAuthRequest(opts);\n        this.authHandler.performAuthorizationRequest(this.configuration, request);\n        // Since this method redirects the whole window, the promise will\n        // likely never complete unless we encounter an error.\n        return promise;\n    }\n    /**\n     * Attempt to finalize auth request from a redirect flow. Called from your redirect url once you've been\n     * redirected back.\n     */\n    redirectCallback() {\n        const promise = new Promise((fulfill, reject) => {\n            this.pendingResolver = { fulfill, reject };\n        });\n        this.authHandler = new appauth_1.RedirectRequestHandler(undefined, new no_hash_query_string_utils_1.NoHashQueryStringUtils());\n        this.authHandler.setAuthorizationNotifier(this.notifier);\n        this.authHandler.completeAuthorizationRequestIfPossible();\n        return promise.then((response) => {\n            return this.requestAccessToken(response.code);\n        });\n    }\n    /**\n     * Exchange an authorization code for an access token\n     * @param code The authorization code to exchange\n     */\n    requestAccessToken(code) {\n        const request = this.createTokenRequest(code);\n        return this.tokenHandler.performTokenRequest(this.configuration, request);\n    }\n    /**\n     * Request a new access token from a previous refresh token\n     * @param refreshToken The refresh token to use for authorization\n     */\n    refreshAccessToken(refreshToken) {\n        const request = this.createRefreshTokenRequest(refreshToken);\n        return this.tokenHandler.performTokenRequest(this.configuration, request);\n    }\n    /**\n     * Submit a sign out request on the oauth endpoint\n     * @param accessToken The access token to sign out with\n     */\n    requestSignOut(accessToken) {\n        return fetch(`${constants_1.BITSKI_USER_API_HOST}/logout`, {\n            headers: {\n                Accept: 'application/json',\n                Authorization: `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        }).then((response) => {\n            return (0, request_utils_1.parseResponse)(response);\n        });\n    }\n    /**\n     * Request a user's profile from the oauth server\n     * @param accessToken The access token for the user\n     */\n    requestUserInfo(accessToken) {\n        const userInfoEndpoint = this.configuration.userInfoEndpoint;\n        if (!userInfoEndpoint) {\n            return Promise.reject(authentication_error_1.AuthenticationError.InvalidConfiguration('Could not find user info endpoint'));\n        }\n        return fetch(userInfoEndpoint, {\n            headers: {\n                Accept: 'application/json',\n                Authorization: `Bearer ${accessToken}`,\n            },\n        }).then((response) => {\n            return (0, request_utils_1.parseResponse)(response);\n        });\n    }\n    /**\n     * Internal callback from our Auth Request handler. Passes the response through to a cached promise if it exists.\n     * @param request The original auth request\n     * @param response The auth response if it was successful\n     * @param errorResponse The error response if it failed\n     */\n    didCompleteAuthorizationFlow(request, response, errorResponse) {\n        if (this.pendingResolver) {\n            if (response) {\n                this.pendingResolver.fulfill(response);\n                this.pendingResolver = undefined;\n            }\n            else if (errorResponse) {\n                if (errorResponse instanceof popup_handler_1.PopupClosedError) {\n                    this.pendingResolver.reject(authentication_error_1.AuthenticationError.UserCancelled());\n                }\n                else if (errorResponse instanceof popup_handler_1.PopupBlockedError) {\n                    // Parse domain of the authority, to log better context for error.\n                    const urlMatch = /^(http?s:\\/\\/[\\w.]*)\\/[\\w/]*$/;\n                    // Check for matches against the authority\n                    const matches = this.configuration.authorizationEndpoint.match(urlMatch);\n                    const baseUrl = matches && matches.length > 1 ? matches[1] : '';\n                    this.pendingResolver.reject(authentication_error_1.AuthenticationError.PopupBlocked(baseUrl));\n                }\n                else {\n                    this.pendingResolver.reject(authentication_error_1.AuthenticationError.ServerError(errorResponse.error, errorResponse.errorDescription));\n                }\n                this.pendingResolver = undefined;\n            }\n        }\n    }\n    /**\n     * Factory method to create an auth request\n     */\n    createAuthRequest(opts) {\n        // Create base request\n        const request = new appauth_1.AuthorizationRequest({\n            client_id: this.clientId,\n            redirect_uri: this.redirectUri,\n            response_type: appauth_1.AuthorizationRequest.RESPONSE_TYPE_CODE,\n            scope: this.scopes.join(' '),\n        }, undefined, false);\n        // Pass options through\n        if (opts.login_hint) {\n            // Only assign extras if login_hint is included in the options\n            request.extras = { login_hint: opts.login_hint };\n        }\n        return request;\n    }\n    /**\n     * Factory method to create a token request with a refresh token\n     * @param refreshToken Refresh token to use\n     */\n    createRefreshTokenRequest(refreshToken) {\n        return new appauth_1.TokenRequest({\n            client_id: this.clientId,\n            grant_type: appauth_1.GRANT_TYPE_REFRESH_TOKEN,\n            redirect_uri: this.redirectUri,\n            refresh_token: refreshToken,\n        });\n    }\n    /**\n     * Factory method to create a token request with an auth code\n     * @param code The auth code to use\n     */\n    createTokenRequest(code) {\n        return new appauth_1.TokenRequest({\n            client_id: this.clientId,\n            code,\n            grant_type: appauth_1.GRANT_TYPE_AUTHORIZATION_CODE,\n            redirect_uri: this.redirectUri,\n        });\n    }\n}\nexports.OAuthManager = OAuthManager;\n//# sourceMappingURL=oauth-manager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/auth/oauth-manager.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/auth/openid-auth-provider.js":
/*!***************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/auth/openid-auth-provider.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpenidAuthProvider = void 0;\nconst bitski_1 = __webpack_require__(/*! ../bitski */ \"../../node_modules/bitski/lib/bitski.js\");\nconst authentication_error_1 = __webpack_require__(/*! ../errors/authentication-error */ \"../../node_modules/bitski/lib/errors/authentication-error.js\");\nconst oauth_manager_1 = __webpack_require__(/*! ./oauth-manager */ \"../../node_modules/bitski/lib/auth/oauth-manager.js\");\nconst token_store_1 = __webpack_require__(/*! ./token-store */ \"../../node_modules/bitski/lib/auth/token-store.js\");\nconst user_1 = __webpack_require__(/*! ./user */ \"../../node_modules/bitski/lib/auth/user.js\");\nconst user_store_1 = __webpack_require__(/*! ./user-store */ \"../../node_modules/bitski/lib/auth/user-store.js\");\nclass OpenidAuthProvider {\n    constructor(clientId, redirectUri, additionalScopes, opts) {\n        opts = opts || {};\n        const settings = {\n            additionalScopes,\n            clientId,\n            redirectUri,\n        };\n        Object.assign(settings, opts);\n        this.oauthManager = new oauth_manager_1.OAuthManager(settings);\n        this.tokenStore = new token_store_1.TokenStore(clientId, opts.store);\n        this.userStore = new user_store_1.UserStore(clientId, opts.store);\n    }\n    get authStatus() {\n        if (this.tokenStore.currentToken) {\n            return bitski_1.AuthenticationStatus.Connected;\n        }\n        else if (this.tokenStore.refreshToken) {\n            return bitski_1.AuthenticationStatus.Expired;\n        }\n        else {\n            return bitski_1.AuthenticationStatus.NotConnected;\n        }\n    }\n    getAccessToken() {\n        if (this.tokenStore.currentToken) {\n            return Promise.resolve(this.tokenStore.currentToken);\n        }\n        if (this.tokenStore.refreshToken) {\n            return this.refreshAccessToken();\n        }\n        return Promise.reject(authentication_error_1.AuthenticationError.NotSignedIn());\n    }\n    getIdToken() {\n        if (this.tokenStore.currentIdToken) {\n            return Promise.resolve(this.tokenStore.currentIdToken);\n        }\n        if (this.tokenStore.refreshToken) {\n            return this.refreshIdToken();\n        }\n        return Promise.reject(authentication_error_1.AuthenticationError.NotSignedIn());\n    }\n    getRefreshToken() {\n        if (this.tokenStore.refreshToken) {\n            return Promise.resolve(this.tokenStore.refreshToken);\n        }\n        // Error: the user did not approve this app for offline access\n        if (this.tokenStore.currentToken) {\n            return Promise.reject(authentication_error_1.AuthenticationError.NoRefreshToken());\n        }\n        // Error: the user is not signed in.\n        return Promise.reject(authentication_error_1.AuthenticationError.NotSignedIn());\n    }\n    invalidateToken() {\n        if (this.tokenStore.currentToken) {\n            this.tokenStore.invalidateCurrentToken();\n        }\n        if (this.signOutCallback) {\n            this.signOutCallback();\n        }\n        return Promise.resolve();\n    }\n    refreshAccessToken() {\n        if (this.tokenStore.refreshToken) {\n            return this.oauthManager\n                .refreshAccessToken(this.tokenStore.refreshToken)\n                .then((tokenResponse) => {\n                this.tokenStore.persistTokenResponse(tokenResponse);\n                return tokenResponse.accessToken;\n            })\n                .catch((error) => {\n                // If we can't renew, we likely have bad data\n                this.tokenStore.clear();\n                this.userStore.clear();\n                throw error;\n            });\n        }\n        return Promise.reject(authentication_error_1.AuthenticationError.NoRefreshToken());\n    }\n    refreshIdToken() {\n        if (this.tokenStore.refreshToken) {\n            return this.oauthManager\n                .refreshAccessToken(this.tokenStore.refreshToken)\n                .then((tokenResponse) => {\n                this.tokenStore.persistTokenResponse(tokenResponse);\n                return tokenResponse.idToken;\n            })\n                .catch((error) => {\n                // If we can't renew, we likely have bad data\n                this.tokenStore.clear();\n                this.userStore.clear();\n                throw error;\n            });\n        }\n        return Promise.reject(authentication_error_1.AuthenticationError.NoRefreshToken());\n    }\n    signIn(method, opts) {\n        let promise;\n        switch (method) {\n            case bitski_1.OAuthSignInMethod.Redirect:\n                promise = this.oauthManager.signInRedirect(opts);\n                break;\n            case bitski_1.OAuthSignInMethod.Silent:\n                return Promise.reject(authentication_error_1.AuthenticationError.UnsupportedAuthenticationMethod());\n            default:\n                promise = this.oauthManager.signInPopup(opts);\n                break;\n        }\n        return promise.then((tokenResponse) => {\n            this.tokenStore.persistTokenResponse(tokenResponse);\n            return this.loadUser();\n        });\n    }\n    connect() {\n        return this.refreshAccessToken().then(() => {\n            return this.loadUser();\n        });\n    }\n    getUser() {\n        return this.getOrFetchUser();\n    }\n    signInOrConnect(signInMethod = bitski_1.OAuthSignInMethod.Popup, opts) {\n        switch (this.authStatus) {\n            case bitski_1.AuthenticationStatus.Connected:\n                return this.loadUser();\n            case bitski_1.AuthenticationStatus.Expired:\n                return this.connect();\n            case bitski_1.AuthenticationStatus.NotConnected:\n                return this.signIn(signInMethod, opts);\n        }\n    }\n    redirectCallback() {\n        return this.oauthManager.redirectCallback().then((tokenResponse) => {\n            this.tokenStore.persistTokenResponse(tokenResponse);\n            return this.loadUser();\n        });\n    }\n    signOut() {\n        this.tokenStore.clear();\n        this.userStore.clear();\n        // Call the sign out callback if one has been provided\n        if (this.signOutCallback) {\n            this.signOutCallback();\n        }\n        // We don't currently have the ability to invalidate access tokens, so for now simply resolve.\n        // Down the road this may perform a network request to invalidate.\n        return Promise.resolve();\n    }\n    getOrFetchUser() {\n        const currentUser = this.userStore.currentUser;\n        if (currentUser) {\n            return Promise.resolve(currentUser);\n        }\n        return this.loadUser();\n    }\n    loadUser() {\n        return this.getAccessToken()\n            .then((accessToken) => {\n            return this.oauthManager.requestUserInfo(accessToken);\n        })\n            .then((json) => {\n            return user_1.User.fromJson(json);\n        })\n            .then((user) => {\n            this.userStore.set(user);\n            return user;\n        });\n    }\n}\nexports.OpenidAuthProvider = OpenidAuthProvider;\n//# sourceMappingURL=openid-auth-provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/auth/openid-auth-provider.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/auth/popup-handler.js":
/*!********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/auth/popup-handler.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// tslint:disable max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PopupRequestHandler = exports.PopupBlockedError = exports.PopupClosedError = void 0;\nconst appauth_1 = __webpack_require__(/*! @openid/appauth */ \"../../node_modules/@openid/appauth/built/index.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst callback_1 = __webpack_require__(/*! ../utils/callback */ \"../../node_modules/bitski/lib/utils/callback.js\");\nconst popup_validator_1 = __webpack_require__(/*! ../utils/popup-validator */ \"../../node_modules/bitski/lib/utils/popup-validator.js\");\n// Intermediate errors, since AuthorizationRequestHandler must return an AuthorizationError instance.\n// These should not be user visible.\nclass PopupClosedError extends appauth_1.AuthorizationError {\n    constructor() {\n        super({ error: 'The popup was dismissed.' });\n    }\n}\nexports.PopupClosedError = PopupClosedError;\nclass PopupBlockedError extends appauth_1.AuthorizationError {\n    constructor() {\n        super({ error: 'The popup was blocked.' });\n    }\n}\nexports.PopupBlockedError = PopupBlockedError;\n// Create a popup feature string from an object with keys and values\nfunction createPopupFeatureString(features) {\n    // Convert to array of strings\n    const featuresArray = Object.keys(features).reduce((arr, key) => {\n        const value = features[key];\n        // convert to feature string format: top=100\n        arr.push(`${key}=${value}`);\n        return arr;\n    }, Array());\n    // Join strings with ',' and finish with ';'\n    return featuresArray.join(',') + ';';\n}\n// Returns a set of attributes for a centered popup based on\n// the default values from constants.ts\nfunction createCenteredPopupFeatures() {\n    const windowFeatures = constants_1.DEFAULT_POPUP_FEATURES;\n    const w = windowFeatures.width;\n    const h = windowFeatures.height;\n    // Fixes dual-screen position\n    const dualScreenLeft = window.screenLeft || window.screenX;\n    const dualScreenTop = window.screenTop || window.screenY;\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth || screen.width;\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight || screen.height;\n    const left = windowWidth / 2 - w / 2;\n    const top = windowHeight / 2 - h / 2;\n    windowFeatures.left = left + dualScreenLeft;\n    windowFeatures.top = top + dualScreenTop;\n    return windowFeatures;\n}\nclass PopupRequestHandler extends appauth_1.AuthorizationRequestHandler {\n    constructor(utils = new appauth_1.BasicQueryStringUtils(), crypto = new appauth_1.DefaultCrypto()) {\n        super(utils, crypto);\n        this.popupWindow = null;\n        this.isCancelled = false;\n        this.isBlocked = false;\n        // Watch for the popup being blocked\n        this.validator = new popup_validator_1.PopupValidator(() => {\n            // Return a specific error if blocked, so that we can handle it appropriately.\n            this.isBlocked = true;\n            this.completeAuthorizationRequestIfPossible();\n        });\n    }\n    performAuthorizationRequest(configuration, request) {\n        const url = this.buildRequestUrl(configuration, request);\n        this.pendingRequest = request;\n        this.id = request.state;\n        // Set a unique handler on the main window\n        window[`popupCallback_${request.state}`] = this.callback.bind(this);\n        // Start monitoring to see if the popup has been closed\n        this.closedTimer = window.setInterval(this.checkPopup.bind(this), constants_1.CHECK_FOR_POPUP_CLOSE_INTERVAL);\n        // Create features for popup\n        const windowFeatures = createCenteredPopupFeatures();\n        // Create popup window\n        this.popupWindow = window.open(url, '_blank', createPopupFeatureString(windowFeatures));\n        // Check if the popup we just created was blocked.\n        this.validator.check(this.popupWindow);\n        // Focus the popup to bring it to the front\n        if (this.popupWindow) {\n            this.popupWindow.focus();\n        }\n    }\n    callback(url) {\n        this.responseUrl = url;\n        this.completeAuthorizationRequestIfPossible();\n    }\n    // Custom implementation to remove excess log spam\n    completeAuthorizationRequestIfPossible() {\n        return this.completeAuthorizationRequest().then((result) => {\n            if (result && this.notifier) {\n                this.notifier.onAuthorizationComplete(result.request, result.response, result.error);\n            }\n        });\n    }\n    completeAuthorizationRequest() {\n        const request = this.pendingRequest;\n        // Assert there is a pending request\n        if (!request) {\n            return Promise.resolve(null);\n        }\n        // Assert the request wasn't cancelled\n        if (this.isCancelled === true) {\n            return this.respondWithCancelled(request);\n        }\n        if (this.isBlocked === true) {\n            return this.respondWithBlocked(request);\n        }\n        // Assert there is no error\n        if (this.error) {\n            return this.respondWithError(request, this.error.message);\n        }\n        // Assert there is a response url to parse\n        if (!this.responseUrl) {\n            return Promise.resolve(null);\n        }\n        // Parse the url into data\n        const data = (0, callback_1.parseUrlParams)(this.responseUrl);\n        // Extra the state\n        const state = data.state;\n        // Validate state is same as request\n        if (request.state !== state) {\n            return Promise.resolve(null);\n        }\n        // Check for an error response\n        const error = data.error;\n        if (error) {\n            // get additional optional info.\n            const errorUri = data.error_uri;\n            const errorDescription = data.error_description;\n            return this.respondWithError(request, error, errorDescription, errorUri);\n        }\n        // Respond with a code\n        const code = data.code;\n        return this.respondWithCode(request, code);\n    }\n    respondWithBlocked(request) {\n        const error = new PopupBlockedError();\n        const response = { request, error, response: null };\n        this.cleanup();\n        return Promise.resolve(response);\n    }\n    respondWithCancelled(request) {\n        const error = new PopupClosedError();\n        const response = { request, error, response: null };\n        this.cleanup();\n        return Promise.resolve(response);\n    }\n    respondWithError(request, errorMessage, errorDescription, errorUri) {\n        const error = new appauth_1.AuthorizationError({\n            error: errorMessage,\n            error_description: errorDescription,\n            error_uri: errorUri,\n            state: request.state,\n        });\n        const response = { request, error, response: null };\n        this.cleanup();\n        return Promise.resolve(response);\n    }\n    respondWithCode(request, code) {\n        let authorizationResponse = null;\n        if (code) {\n            authorizationResponse = new appauth_1.AuthorizationResponse({ code, state: request.state });\n        }\n        const response = { request, response: authorizationResponse, error: null };\n        this.cleanup();\n        return Promise.resolve(response);\n    }\n    cleanup() {\n        window.clearInterval(this.closedTimer);\n        delete window[`popupCallback_${this.id}`];\n        if (this.popupWindow) {\n            this.popupWindow.close();\n        }\n        this.popupWindow = null;\n        this.pendingRequest = undefined;\n        this.error = undefined;\n        this.id = undefined;\n        this.responseUrl = undefined;\n    }\n    checkPopup() {\n        if (this.popupWindow && this.popupWindow.closed) {\n            // Stop checking\n            window.clearInterval(this.closedTimer);\n            this.isCancelled = true;\n            this.completeAuthorizationRequestIfPossible();\n        }\n    }\n}\nexports.PopupRequestHandler = PopupRequestHandler;\n//# sourceMappingURL=popup-handler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvYXV0aC9wb3B1cC1oYW5kbGVyLmpzPzg2M2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsMEVBQWlCO0FBQzNDLG9CQUFvQixtQkFBTyxDQUFDLGdFQUFjO0FBQzFDLG1CQUFtQixtQkFBTyxDQUFDLDBFQUFtQjtBQUM5QywwQkFBMEIsbUJBQU8sQ0FBQyx3RkFBMEI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrQ0FBa0M7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLElBQUksR0FBRyxNQUFNO0FBQ2pDO0FBQ0EsS0FBSztBQUNMLCtDQUErQztBQUMvQyx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsY0FBYztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSw2QkFBNkI7QUFDdEc7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxRQUFRO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvYXV0aC9wb3B1cC1oYW5kbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyB0c2xpbnQ6ZGlzYWJsZSBtYXgtY2xhc3Nlcy1wZXItZmlsZVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb3B1cFJlcXVlc3RIYW5kbGVyID0gZXhwb3J0cy5Qb3B1cEJsb2NrZWRFcnJvciA9IGV4cG9ydHMuUG9wdXBDbG9zZWRFcnJvciA9IHZvaWQgMDtcbmNvbnN0IGFwcGF1dGhfMSA9IHJlcXVpcmUoXCJAb3BlbmlkL2FwcGF1dGhcIik7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG5jb25zdCBjYWxsYmFja18xID0gcmVxdWlyZShcIi4uL3V0aWxzL2NhbGxiYWNrXCIpO1xuY29uc3QgcG9wdXBfdmFsaWRhdG9yXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvcG9wdXAtdmFsaWRhdG9yXCIpO1xuLy8gSW50ZXJtZWRpYXRlIGVycm9ycywgc2luY2UgQXV0aG9yaXphdGlvblJlcXVlc3RIYW5kbGVyIG11c3QgcmV0dXJuIGFuIEF1dGhvcml6YXRpb25FcnJvciBpbnN0YW5jZS5cbi8vIFRoZXNlIHNob3VsZCBub3QgYmUgdXNlciB2aXNpYmxlLlxuY2xhc3MgUG9wdXBDbG9zZWRFcnJvciBleHRlbmRzIGFwcGF1dGhfMS5BdXRob3JpemF0aW9uRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcih7IGVycm9yOiAnVGhlIHBvcHVwIHdhcyBkaXNtaXNzZWQuJyB9KTtcbiAgICB9XG59XG5leHBvcnRzLlBvcHVwQ2xvc2VkRXJyb3IgPSBQb3B1cENsb3NlZEVycm9yO1xuY2xhc3MgUG9wdXBCbG9ja2VkRXJyb3IgZXh0ZW5kcyBhcHBhdXRoXzEuQXV0aG9yaXphdGlvbkVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoeyBlcnJvcjogJ1RoZSBwb3B1cCB3YXMgYmxvY2tlZC4nIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9wdXBCbG9ja2VkRXJyb3IgPSBQb3B1cEJsb2NrZWRFcnJvcjtcbi8vIENyZWF0ZSBhIHBvcHVwIGZlYXR1cmUgc3RyaW5nIGZyb20gYW4gb2JqZWN0IHdpdGgga2V5cyBhbmQgdmFsdWVzXG5mdW5jdGlvbiBjcmVhdGVQb3B1cEZlYXR1cmVTdHJpbmcoZmVhdHVyZXMpIHtcbiAgICAvLyBDb252ZXJ0IHRvIGFycmF5IG9mIHN0cmluZ3NcbiAgICBjb25zdCBmZWF0dXJlc0FycmF5ID0gT2JqZWN0LmtleXMoZmVhdHVyZXMpLnJlZHVjZSgoYXJyLCBrZXkpID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBmZWF0dXJlc1trZXldO1xuICAgICAgICAvLyBjb252ZXJ0IHRvIGZlYXR1cmUgc3RyaW5nIGZvcm1hdDogdG9wPTEwMFxuICAgICAgICBhcnIucHVzaChgJHtrZXl9PSR7dmFsdWV9YCk7XG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfSwgQXJyYXkoKSk7XG4gICAgLy8gSm9pbiBzdHJpbmdzIHdpdGggJywnIGFuZCBmaW5pc2ggd2l0aCAnOydcbiAgICByZXR1cm4gZmVhdHVyZXNBcnJheS5qb2luKCcsJykgKyAnOyc7XG59XG4vLyBSZXR1cm5zIGEgc2V0IG9mIGF0dHJpYnV0ZXMgZm9yIGEgY2VudGVyZWQgcG9wdXAgYmFzZWQgb25cbi8vIHRoZSBkZWZhdWx0IHZhbHVlcyBmcm9tIGNvbnN0YW50cy50c1xuZnVuY3Rpb24gY3JlYXRlQ2VudGVyZWRQb3B1cEZlYXR1cmVzKCkge1xuICAgIGNvbnN0IHdpbmRvd0ZlYXR1cmVzID0gY29uc3RhbnRzXzEuREVGQVVMVF9QT1BVUF9GRUFUVVJFUztcbiAgICBjb25zdCB3ID0gd2luZG93RmVhdHVyZXMud2lkdGg7XG4gICAgY29uc3QgaCA9IHdpbmRvd0ZlYXR1cmVzLmhlaWdodDtcbiAgICAvLyBGaXhlcyBkdWFsLXNjcmVlbiBwb3NpdGlvblxuICAgIGNvbnN0IGR1YWxTY3JlZW5MZWZ0ID0gd2luZG93LnNjcmVlbkxlZnQgfHwgd2luZG93LnNjcmVlblg7XG4gICAgY29uc3QgZHVhbFNjcmVlblRvcCA9IHdpbmRvdy5zY3JlZW5Ub3AgfHwgd2luZG93LnNjcmVlblk7XG4gICAgY29uc3Qgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggfHwgc2NyZWVuLndpZHRoO1xuICAgIGNvbnN0IHdpbmRvd0hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IHx8IHNjcmVlbi5oZWlnaHQ7XG4gICAgY29uc3QgbGVmdCA9IHdpbmRvd1dpZHRoIC8gMiAtIHcgLyAyO1xuICAgIGNvbnN0IHRvcCA9IHdpbmRvd0hlaWdodCAvIDIgLSBoIC8gMjtcbiAgICB3aW5kb3dGZWF0dXJlcy5sZWZ0ID0gbGVmdCArIGR1YWxTY3JlZW5MZWZ0O1xuICAgIHdpbmRvd0ZlYXR1cmVzLnRvcCA9IHRvcCArIGR1YWxTY3JlZW5Ub3A7XG4gICAgcmV0dXJuIHdpbmRvd0ZlYXR1cmVzO1xufVxuY2xhc3MgUG9wdXBSZXF1ZXN0SGFuZGxlciBleHRlbmRzIGFwcGF1dGhfMS5BdXRob3JpemF0aW9uUmVxdWVzdEhhbmRsZXIge1xuICAgIGNvbnN0cnVjdG9yKHV0aWxzID0gbmV3IGFwcGF1dGhfMS5CYXNpY1F1ZXJ5U3RyaW5nVXRpbHMoKSwgY3J5cHRvID0gbmV3IGFwcGF1dGhfMS5EZWZhdWx0Q3J5cHRvKCkpIHtcbiAgICAgICAgc3VwZXIodXRpbHMsIGNyeXB0byk7XG4gICAgICAgIHRoaXMucG9wdXBXaW5kb3cgPSBudWxsO1xuICAgICAgICB0aGlzLmlzQ2FuY2VsbGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIC8vIFdhdGNoIGZvciB0aGUgcG9wdXAgYmVpbmcgYmxvY2tlZFxuICAgICAgICB0aGlzLnZhbGlkYXRvciA9IG5ldyBwb3B1cF92YWxpZGF0b3JfMS5Qb3B1cFZhbGlkYXRvcigoKSA9PiB7XG4gICAgICAgICAgICAvLyBSZXR1cm4gYSBzcGVjaWZpYyBlcnJvciBpZiBibG9ja2VkLCBzbyB0aGF0IHdlIGNhbiBoYW5kbGUgaXQgYXBwcm9wcmlhdGVseS5cbiAgICAgICAgICAgIHRoaXMuaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuY29tcGxldGVBdXRob3JpemF0aW9uUmVxdWVzdElmUG9zc2libGUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHBlcmZvcm1BdXRob3JpemF0aW9uUmVxdWVzdChjb25maWd1cmF0aW9uLCByZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IHVybCA9IHRoaXMuYnVpbGRSZXF1ZXN0VXJsKGNvbmZpZ3VyYXRpb24sIHJlcXVlc3QpO1xuICAgICAgICB0aGlzLnBlbmRpbmdSZXF1ZXN0ID0gcmVxdWVzdDtcbiAgICAgICAgdGhpcy5pZCA9IHJlcXVlc3Quc3RhdGU7XG4gICAgICAgIC8vIFNldCBhIHVuaXF1ZSBoYW5kbGVyIG9uIHRoZSBtYWluIHdpbmRvd1xuICAgICAgICB3aW5kb3dbYHBvcHVwQ2FsbGJhY2tfJHtyZXF1ZXN0LnN0YXRlfWBdID0gdGhpcy5jYWxsYmFjay5iaW5kKHRoaXMpO1xuICAgICAgICAvLyBTdGFydCBtb25pdG9yaW5nIHRvIHNlZSBpZiB0aGUgcG9wdXAgaGFzIGJlZW4gY2xvc2VkXG4gICAgICAgIHRoaXMuY2xvc2VkVGltZXIgPSB3aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5jaGVja1BvcHVwLmJpbmQodGhpcyksIGNvbnN0YW50c18xLkNIRUNLX0ZPUl9QT1BVUF9DTE9TRV9JTlRFUlZBTCk7XG4gICAgICAgIC8vIENyZWF0ZSBmZWF0dXJlcyBmb3IgcG9wdXBcbiAgICAgICAgY29uc3Qgd2luZG93RmVhdHVyZXMgPSBjcmVhdGVDZW50ZXJlZFBvcHVwRmVhdHVyZXMoKTtcbiAgICAgICAgLy8gQ3JlYXRlIHBvcHVwIHdpbmRvd1xuICAgICAgICB0aGlzLnBvcHVwV2luZG93ID0gd2luZG93Lm9wZW4odXJsLCAnX2JsYW5rJywgY3JlYXRlUG9wdXBGZWF0dXJlU3RyaW5nKHdpbmRvd0ZlYXR1cmVzKSk7XG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBwb3B1cCB3ZSBqdXN0IGNyZWF0ZWQgd2FzIGJsb2NrZWQuXG4gICAgICAgIHRoaXMudmFsaWRhdG9yLmNoZWNrKHRoaXMucG9wdXBXaW5kb3cpO1xuICAgICAgICAvLyBGb2N1cyB0aGUgcG9wdXAgdG8gYnJpbmcgaXQgdG8gdGhlIGZyb250XG4gICAgICAgIGlmICh0aGlzLnBvcHVwV2luZG93KSB7XG4gICAgICAgICAgICB0aGlzLnBvcHVwV2luZG93LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2FsbGJhY2sodXJsKSB7XG4gICAgICAgIHRoaXMucmVzcG9uc2VVcmwgPSB1cmw7XG4gICAgICAgIHRoaXMuY29tcGxldGVBdXRob3JpemF0aW9uUmVxdWVzdElmUG9zc2libGUoKTtcbiAgICB9XG4gICAgLy8gQ3VzdG9tIGltcGxlbWVudGF0aW9uIHRvIHJlbW92ZSBleGNlc3MgbG9nIHNwYW1cbiAgICBjb21wbGV0ZUF1dGhvcml6YXRpb25SZXF1ZXN0SWZQb3NzaWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGxldGVBdXRob3JpemF0aW9uUmVxdWVzdCgpLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3VsdCAmJiB0aGlzLm5vdGlmaWVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ub3RpZmllci5vbkF1dGhvcml6YXRpb25Db21wbGV0ZShyZXN1bHQucmVxdWVzdCwgcmVzdWx0LnJlc3BvbnNlLCByZXN1bHQuZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29tcGxldGVBdXRob3JpemF0aW9uUmVxdWVzdCgpIHtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IHRoaXMucGVuZGluZ1JlcXVlc3Q7XG4gICAgICAgIC8vIEFzc2VydCB0aGVyZSBpcyBhIHBlbmRpbmcgcmVxdWVzdFxuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobnVsbCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQXNzZXJ0IHRoZSByZXF1ZXN0IHdhc24ndCBjYW5jZWxsZWRcbiAgICAgICAgaWYgKHRoaXMuaXNDYW5jZWxsZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlc3BvbmRXaXRoQ2FuY2VsbGVkKHJlcXVlc3QpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmlzQmxvY2tlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVzcG9uZFdpdGhCbG9ja2VkKHJlcXVlc3QpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFzc2VydCB0aGVyZSBpcyBubyBlcnJvclxuICAgICAgICBpZiAodGhpcy5lcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVzcG9uZFdpdGhFcnJvcihyZXF1ZXN0LCB0aGlzLmVycm9yLm1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFzc2VydCB0aGVyZSBpcyBhIHJlc3BvbnNlIHVybCB0byBwYXJzZVxuICAgICAgICBpZiAoIXRoaXMucmVzcG9uc2VVcmwpIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobnVsbCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGFyc2UgdGhlIHVybCBpbnRvIGRhdGFcbiAgICAgICAgY29uc3QgZGF0YSA9ICgwLCBjYWxsYmFja18xLnBhcnNlVXJsUGFyYW1zKSh0aGlzLnJlc3BvbnNlVXJsKTtcbiAgICAgICAgLy8gRXh0cmEgdGhlIHN0YXRlXG4gICAgICAgIGNvbnN0IHN0YXRlID0gZGF0YS5zdGF0ZTtcbiAgICAgICAgLy8gVmFsaWRhdGUgc3RhdGUgaXMgc2FtZSBhcyByZXF1ZXN0XG4gICAgICAgIGlmIChyZXF1ZXN0LnN0YXRlICE9PSBzdGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDaGVjayBmb3IgYW4gZXJyb3IgcmVzcG9uc2VcbiAgICAgICAgY29uc3QgZXJyb3IgPSBkYXRhLmVycm9yO1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIGdldCBhZGRpdGlvbmFsIG9wdGlvbmFsIGluZm8uXG4gICAgICAgICAgICBjb25zdCBlcnJvclVyaSA9IGRhdGEuZXJyb3JfdXJpO1xuICAgICAgICAgICAgY29uc3QgZXJyb3JEZXNjcmlwdGlvbiA9IGRhdGEuZXJyb3JfZGVzY3JpcHRpb247XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25kV2l0aEVycm9yKHJlcXVlc3QsIGVycm9yLCBlcnJvckRlc2NyaXB0aW9uLCBlcnJvclVyaSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVzcG9uZCB3aXRoIGEgY29kZVxuICAgICAgICBjb25zdCBjb2RlID0gZGF0YS5jb2RlO1xuICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25kV2l0aENvZGUocmVxdWVzdCwgY29kZSk7XG4gICAgfVxuICAgIHJlc3BvbmRXaXRoQmxvY2tlZChyZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IFBvcHVwQmxvY2tlZEVycm9yKCk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geyByZXF1ZXN0LCBlcnJvciwgcmVzcG9uc2U6IG51bGwgfTtcbiAgICAgICAgdGhpcy5jbGVhbnVwKCk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpO1xuICAgIH1cbiAgICByZXNwb25kV2l0aENhbmNlbGxlZChyZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IFBvcHVwQ2xvc2VkRXJyb3IoKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB7IHJlcXVlc3QsIGVycm9yLCByZXNwb25zZTogbnVsbCB9O1xuICAgICAgICB0aGlzLmNsZWFudXAoKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfVxuICAgIHJlc3BvbmRXaXRoRXJyb3IocmVxdWVzdCwgZXJyb3JNZXNzYWdlLCBlcnJvckRlc2NyaXB0aW9uLCBlcnJvclVyaSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBhcHBhdXRoXzEuQXV0aG9yaXphdGlvbkVycm9yKHtcbiAgICAgICAgICAgIGVycm9yOiBlcnJvck1lc3NhZ2UsXG4gICAgICAgICAgICBlcnJvcl9kZXNjcmlwdGlvbjogZXJyb3JEZXNjcmlwdGlvbixcbiAgICAgICAgICAgIGVycm9yX3VyaTogZXJyb3JVcmksXG4gICAgICAgICAgICBzdGF0ZTogcmVxdWVzdC5zdGF0ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geyByZXF1ZXN0LCBlcnJvciwgcmVzcG9uc2U6IG51bGwgfTtcbiAgICAgICAgdGhpcy5jbGVhbnVwKCk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpO1xuICAgIH1cbiAgICByZXNwb25kV2l0aENvZGUocmVxdWVzdCwgY29kZSkge1xuICAgICAgICBsZXQgYXV0aG9yaXphdGlvblJlc3BvbnNlID0gbnVsbDtcbiAgICAgICAgaWYgKGNvZGUpIHtcbiAgICAgICAgICAgIGF1dGhvcml6YXRpb25SZXNwb25zZSA9IG5ldyBhcHBhdXRoXzEuQXV0aG9yaXphdGlvblJlc3BvbnNlKHsgY29kZSwgc3RhdGU6IHJlcXVlc3Quc3RhdGUgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB7IHJlcXVlc3QsIHJlc3BvbnNlOiBhdXRob3JpemF0aW9uUmVzcG9uc2UsIGVycm9yOiBudWxsIH07XG4gICAgICAgIHRoaXMuY2xlYW51cCgpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgY2xlYW51cCgpIHtcbiAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5jbG9zZWRUaW1lcik7XG4gICAgICAgIGRlbGV0ZSB3aW5kb3dbYHBvcHVwQ2FsbGJhY2tfJHt0aGlzLmlkfWBdO1xuICAgICAgICBpZiAodGhpcy5wb3B1cFdpbmRvdykge1xuICAgICAgICAgICAgdGhpcy5wb3B1cFdpbmRvdy5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9wdXBXaW5kb3cgPSBudWxsO1xuICAgICAgICB0aGlzLnBlbmRpbmdSZXF1ZXN0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmVycm9yID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmlkID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnJlc3BvbnNlVXJsID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjaGVja1BvcHVwKCkge1xuICAgICAgICBpZiAodGhpcy5wb3B1cFdpbmRvdyAmJiB0aGlzLnBvcHVwV2luZG93LmNsb3NlZCkge1xuICAgICAgICAgICAgLy8gU3RvcCBjaGVja2luZ1xuICAgICAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5jbG9zZWRUaW1lcik7XG4gICAgICAgICAgICB0aGlzLmlzQ2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuY29tcGxldGVBdXRob3JpemF0aW9uUmVxdWVzdElmUG9zc2libGUoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9wdXBSZXF1ZXN0SGFuZGxlciA9IFBvcHVwUmVxdWVzdEhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb3B1cC1oYW5kbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/auth/popup-handler.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/auth/token-store.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/auth/token-store.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenStore = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst localstorage_store_1 = __webpack_require__(/*! ../utils/localstorage-store */ \"../../node_modules/bitski/lib/utils/localstorage-store.js\");\nconst access_token_1 = __webpack_require__(/*! ./access-token */ \"../../node_modules/bitski/lib/auth/access-token.js\");\nclass TokenStore {\n    constructor(clientId, store) {\n        this.clientId = clientId;\n        this.store = store || new localstorage_store_1.LocalStorageStore();\n        const accessTokenString = this.store.getItem(this.accessTokenKey);\n        if (accessTokenString) {\n            let parsedToken;\n            try {\n                parsedToken = access_token_1.AccessToken.fromString(accessTokenString);\n            }\n            finally {\n                this.accessToken = parsedToken;\n            }\n        }\n        this.idToken = this.store.getItem(this.idTokenKey);\n    }\n    get currentToken() {\n        if (this.accessToken && !this.accessToken.expired) {\n            return this.accessToken.token;\n        }\n    }\n    get currentIdToken() {\n        if (this.idToken && this.accessToken && !this.accessToken.expired) {\n            return this.idToken;\n        }\n    }\n    get refreshToken() {\n        const token = this.store.getItem(this.refreshTokenKey);\n        if (token) {\n            return token;\n        }\n    }\n    get idTokenKey() {\n        return `${constants_1.ID_TOKEN_KEY}.${this.clientId}`;\n    }\n    get accessTokenKey() {\n        return `${constants_1.ACCESS_TOKEN_KEY}.${this.clientId}`;\n    }\n    get refreshTokenKey() {\n        return `${constants_1.REFRESH_TOKEN_KEY}.${this.clientId}`;\n    }\n    persistTokenResponse(response) {\n        if (response.refreshToken) {\n            this.store.setItem(this.refreshTokenKey, response.refreshToken);\n        }\n        const parsedToken = access_token_1.AccessToken.fromTokenResponse(response);\n        this.store.setItem(this.accessTokenKey, parsedToken.toStorageString());\n        this.store.setItem(this.idTokenKey, response.idToken);\n        this.accessToken = parsedToken;\n        this.idToken = response.idToken;\n    }\n    invalidateCurrentToken() {\n        this.accessToken = undefined;\n        this.idToken = undefined;\n        this.store.clearItem(this.accessTokenKey);\n        this.store.clearItem(this.idTokenKey);\n    }\n    clear() {\n        this.accessToken = undefined;\n        this.idToken = undefined;\n        this.store.clearItem(this.refreshTokenKey);\n        this.store.clearItem(this.accessTokenKey);\n        this.store.clearItem(this.idTokenKey);\n    }\n}\nexports.TokenStore = TokenStore;\n//# sourceMappingURL=token-store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvYXV0aC90b2tlbi1zdG9yZS5qcz83OTc1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyxnRUFBYztBQUMxQyw2QkFBNkIsbUJBQU8sQ0FBQyw4RkFBNkI7QUFDbEUsdUJBQXVCLG1CQUFPLENBQUMsMEVBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5QkFBeUIsR0FBRyxjQUFjO0FBQzVEO0FBQ0E7QUFDQSxrQkFBa0IsNkJBQTZCLEdBQUcsY0FBYztBQUNoRTtBQUNBO0FBQ0Esa0JBQWtCLDhCQUE4QixHQUFHLGNBQWM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL2F1dGgvdG9rZW4tc3RvcmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVG9rZW5TdG9yZSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50c1wiKTtcbmNvbnN0IGxvY2Fsc3RvcmFnZV9zdG9yZV8xID0gcmVxdWlyZShcIi4uL3V0aWxzL2xvY2Fsc3RvcmFnZS1zdG9yZVwiKTtcbmNvbnN0IGFjY2Vzc190b2tlbl8xID0gcmVxdWlyZShcIi4vYWNjZXNzLXRva2VuXCIpO1xuY2xhc3MgVG9rZW5TdG9yZSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50SWQsIHN0b3JlKSB7XG4gICAgICAgIHRoaXMuY2xpZW50SWQgPSBjbGllbnRJZDtcbiAgICAgICAgdGhpcy5zdG9yZSA9IHN0b3JlIHx8IG5ldyBsb2NhbHN0b3JhZ2Vfc3RvcmVfMS5Mb2NhbFN0b3JhZ2VTdG9yZSgpO1xuICAgICAgICBjb25zdCBhY2Nlc3NUb2tlblN0cmluZyA9IHRoaXMuc3RvcmUuZ2V0SXRlbSh0aGlzLmFjY2Vzc1Rva2VuS2V5KTtcbiAgICAgICAgaWYgKGFjY2Vzc1Rva2VuU3RyaW5nKSB7XG4gICAgICAgICAgICBsZXQgcGFyc2VkVG9rZW47XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHBhcnNlZFRva2VuID0gYWNjZXNzX3Rva2VuXzEuQWNjZXNzVG9rZW4uZnJvbVN0cmluZyhhY2Nlc3NUb2tlblN0cmluZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gcGFyc2VkVG9rZW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pZFRva2VuID0gdGhpcy5zdG9yZS5nZXRJdGVtKHRoaXMuaWRUb2tlbktleSk7XG4gICAgfVxuICAgIGdldCBjdXJyZW50VG9rZW4oKSB7XG4gICAgICAgIGlmICh0aGlzLmFjY2Vzc1Rva2VuICYmICF0aGlzLmFjY2Vzc1Rva2VuLmV4cGlyZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFjY2Vzc1Rva2VuLnRva2VuO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBjdXJyZW50SWRUb2tlbigpIHtcbiAgICAgICAgaWYgKHRoaXMuaWRUb2tlbiAmJiB0aGlzLmFjY2Vzc1Rva2VuICYmICF0aGlzLmFjY2Vzc1Rva2VuLmV4cGlyZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlkVG9rZW47XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IHJlZnJlc2hUb2tlbigpIHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSB0aGlzLnN0b3JlLmdldEl0ZW0odGhpcy5yZWZyZXNoVG9rZW5LZXkpO1xuICAgICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgICAgIHJldHVybiB0b2tlbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgaWRUb2tlbktleSgpIHtcbiAgICAgICAgcmV0dXJuIGAke2NvbnN0YW50c18xLklEX1RPS0VOX0tFWX0uJHt0aGlzLmNsaWVudElkfWA7XG4gICAgfVxuICAgIGdldCBhY2Nlc3NUb2tlbktleSgpIHtcbiAgICAgICAgcmV0dXJuIGAke2NvbnN0YW50c18xLkFDQ0VTU19UT0tFTl9LRVl9LiR7dGhpcy5jbGllbnRJZH1gO1xuICAgIH1cbiAgICBnZXQgcmVmcmVzaFRva2VuS2V5KCkge1xuICAgICAgICByZXR1cm4gYCR7Y29uc3RhbnRzXzEuUkVGUkVTSF9UT0tFTl9LRVl9LiR7dGhpcy5jbGllbnRJZH1gO1xuICAgIH1cbiAgICBwZXJzaXN0VG9rZW5SZXNwb25zZShyZXNwb25zZSkge1xuICAgICAgICBpZiAocmVzcG9uc2UucmVmcmVzaFRva2VuKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3JlLnNldEl0ZW0odGhpcy5yZWZyZXNoVG9rZW5LZXksIHJlc3BvbnNlLnJlZnJlc2hUb2tlbik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFyc2VkVG9rZW4gPSBhY2Nlc3NfdG9rZW5fMS5BY2Nlc3NUb2tlbi5mcm9tVG9rZW5SZXNwb25zZShyZXNwb25zZSk7XG4gICAgICAgIHRoaXMuc3RvcmUuc2V0SXRlbSh0aGlzLmFjY2Vzc1Rva2VuS2V5LCBwYXJzZWRUb2tlbi50b1N0b3JhZ2VTdHJpbmcoKSk7XG4gICAgICAgIHRoaXMuc3RvcmUuc2V0SXRlbSh0aGlzLmlkVG9rZW5LZXksIHJlc3BvbnNlLmlkVG9rZW4pO1xuICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gcGFyc2VkVG9rZW47XG4gICAgICAgIHRoaXMuaWRUb2tlbiA9IHJlc3BvbnNlLmlkVG9rZW47XG4gICAgfVxuICAgIGludmFsaWRhdGVDdXJyZW50VG9rZW4oKSB7XG4gICAgICAgIHRoaXMuYWNjZXNzVG9rZW4gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuaWRUb2tlbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5zdG9yZS5jbGVhckl0ZW0odGhpcy5hY2Nlc3NUb2tlbktleSk7XG4gICAgICAgIHRoaXMuc3RvcmUuY2xlYXJJdGVtKHRoaXMuaWRUb2tlbktleSk7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmlkVG9rZW4gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuc3RvcmUuY2xlYXJJdGVtKHRoaXMucmVmcmVzaFRva2VuS2V5KTtcbiAgICAgICAgdGhpcy5zdG9yZS5jbGVhckl0ZW0odGhpcy5hY2Nlc3NUb2tlbktleSk7XG4gICAgICAgIHRoaXMuc3RvcmUuY2xlYXJJdGVtKHRoaXMuaWRUb2tlbktleSk7XG4gICAgfVxufVxuZXhwb3J0cy5Ub2tlblN0b3JlID0gVG9rZW5TdG9yZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRva2VuLXN0b3JlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/auth/token-store.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/auth/user-store.js":
/*!*****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/auth/user-store.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserStore = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst localstorage_store_1 = __webpack_require__(/*! ../utils/localstorage-store */ \"../../node_modules/bitski/lib/utils/localstorage-store.js\");\nconst user_1 = __webpack_require__(/*! ./user */ \"../../node_modules/bitski/lib/auth/user.js\");\nclass UserStore {\n    constructor(clientId, store) {\n        this.clientId = clientId;\n        this.store = store || new localstorage_store_1.LocalStorageStore();\n        this.user = this.fetchUser();\n    }\n    get currentUser() {\n        return this.user || this.fetchUser();\n    }\n    get storageKey() {\n        return `${constants_1.USER_KEY}.${this.clientId}`;\n    }\n    set(user) {\n        this.user = user;\n        this.cacheUser(user);\n    }\n    clear() {\n        this.user = undefined;\n        this.cacheUser(undefined);\n    }\n    fetchUser() {\n        const userData = this.store.getItem(this.storageKey);\n        if (userData) {\n            return user_1.User.fromString(userData);\n        }\n    }\n    cacheUser(user) {\n        if (user) {\n            this.store.setItem(this.storageKey, user.toStorageString());\n        }\n        else {\n            this.store.clearItem(this.storageKey);\n        }\n    }\n}\nexports.UserStore = UserStore;\n//# sourceMappingURL=user-store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvYXV0aC91c2VyLXN0b3JlLmpzP2I2OTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLG9CQUFvQixtQkFBTyxDQUFDLGdFQUFjO0FBQzFDLDZCQUE2QixtQkFBTyxDQUFDLDhGQUE2QjtBQUNsRSxlQUFlLG1CQUFPLENBQUMsMERBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUJBQXFCLEdBQUcsY0FBYztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL2F1dGgvdXNlci1zdG9yZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vc2VyU3RvcmUgPSB2b2lkIDA7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG5jb25zdCBsb2NhbHN0b3JhZ2Vfc3RvcmVfMSA9IHJlcXVpcmUoXCIuLi91dGlscy9sb2NhbHN0b3JhZ2Utc3RvcmVcIik7XG5jb25zdCB1c2VyXzEgPSByZXF1aXJlKFwiLi91c2VyXCIpO1xuY2xhc3MgVXNlclN0b3JlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnRJZCwgc3RvcmUpIHtcbiAgICAgICAgdGhpcy5jbGllbnRJZCA9IGNsaWVudElkO1xuICAgICAgICB0aGlzLnN0b3JlID0gc3RvcmUgfHwgbmV3IGxvY2Fsc3RvcmFnZV9zdG9yZV8xLkxvY2FsU3RvcmFnZVN0b3JlKCk7XG4gICAgICAgIHRoaXMudXNlciA9IHRoaXMuZmV0Y2hVc2VyKCk7XG4gICAgfVxuICAgIGdldCBjdXJyZW50VXNlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXNlciB8fCB0aGlzLmZldGNoVXNlcigpO1xuICAgIH1cbiAgICBnZXQgc3RvcmFnZUtleSgpIHtcbiAgICAgICAgcmV0dXJuIGAke2NvbnN0YW50c18xLlVTRVJfS0VZfS4ke3RoaXMuY2xpZW50SWR9YDtcbiAgICB9XG4gICAgc2V0KHVzZXIpIHtcbiAgICAgICAgdGhpcy51c2VyID0gdXNlcjtcbiAgICAgICAgdGhpcy5jYWNoZVVzZXIodXNlcik7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLnVzZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuY2FjaGVVc2VyKHVuZGVmaW5lZCk7XG4gICAgfVxuICAgIGZldGNoVXNlcigpIHtcbiAgICAgICAgY29uc3QgdXNlckRhdGEgPSB0aGlzLnN0b3JlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICAgICAgaWYgKHVzZXJEYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gdXNlcl8xLlVzZXIuZnJvbVN0cmluZyh1c2VyRGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2FjaGVVc2VyKHVzZXIpIHtcbiAgICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcmUuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIHVzZXIudG9TdG9yYWdlU3RyaW5nKCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zdG9yZS5jbGVhckl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuVXNlclN0b3JlID0gVXNlclN0b3JlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlci1zdG9yZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/auth/user-store.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/auth/user.js":
/*!***********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/auth/user.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.User = void 0;\nclass User {\n    constructor(id, accounts, email, emailVerified, phone, phoneNumberVerified, preferredUsername) {\n        this.id = id;\n        this.accounts = accounts;\n        this.email = email;\n        this.emailVerified = emailVerified;\n        this.phoneNumber = phone;\n        this.phoneNumberVerified = phoneNumberVerified;\n        this.preferredUsername = preferredUsername;\n    }\n    static fromJson(json) {\n        return new User(json.sub, json.accounts, json.email, json.email_verified, json.phone_number, json.phone_number_verified, json.preferred_username);\n    }\n    static fromString(s) {\n        let parsed;\n        try {\n            parsed = JSON.parse(s);\n        }\n        catch (e) {\n            return;\n        }\n        if (parsed.id) {\n            return new User(parsed.id, parsed.accounts, parsed.email, parsed.emailVerified, parsed.phoneNumber, parsed.phoneNumberVerified, parsed.preferredUsername);\n        }\n        return;\n    }\n    toStorageString() {\n        return JSON.stringify({\n            accounts: this.accounts,\n            email: this.email,\n            emailVerified: this.emailVerified,\n            id: this.id,\n            phoneNumber: this.phoneNumber,\n            phoneNumberVerified: this.phoneNumberVerified,\n            preferredUsername: this.preferredUsername,\n        });\n    }\n}\nexports.User = User;\n//# sourceMappingURL=user.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvYXV0aC91c2VyLmpzPzlhMjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvYXV0aC91c2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVzZXIgPSB2b2lkIDA7XG5jbGFzcyBVc2VyIHtcbiAgICBjb25zdHJ1Y3RvcihpZCwgYWNjb3VudHMsIGVtYWlsLCBlbWFpbFZlcmlmaWVkLCBwaG9uZSwgcGhvbmVOdW1iZXJWZXJpZmllZCwgcHJlZmVycmVkVXNlcm5hbWUpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLmFjY291bnRzID0gYWNjb3VudHM7XG4gICAgICAgIHRoaXMuZW1haWwgPSBlbWFpbDtcbiAgICAgICAgdGhpcy5lbWFpbFZlcmlmaWVkID0gZW1haWxWZXJpZmllZDtcbiAgICAgICAgdGhpcy5waG9uZU51bWJlciA9IHBob25lO1xuICAgICAgICB0aGlzLnBob25lTnVtYmVyVmVyaWZpZWQgPSBwaG9uZU51bWJlclZlcmlmaWVkO1xuICAgICAgICB0aGlzLnByZWZlcnJlZFVzZXJuYW1lID0gcHJlZmVycmVkVXNlcm5hbWU7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSnNvbihqc29uKSB7XG4gICAgICAgIHJldHVybiBuZXcgVXNlcihqc29uLnN1YiwganNvbi5hY2NvdW50cywganNvbi5lbWFpbCwganNvbi5lbWFpbF92ZXJpZmllZCwganNvbi5waG9uZV9udW1iZXIsIGpzb24ucGhvbmVfbnVtYmVyX3ZlcmlmaWVkLCBqc29uLnByZWZlcnJlZF91c2VybmFtZSk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU3RyaW5nKHMpIHtcbiAgICAgICAgbGV0IHBhcnNlZDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHBhcnNlZCA9IEpTT04ucGFyc2Uocyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFyc2VkLmlkKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVzZXIocGFyc2VkLmlkLCBwYXJzZWQuYWNjb3VudHMsIHBhcnNlZC5lbWFpbCwgcGFyc2VkLmVtYWlsVmVyaWZpZWQsIHBhcnNlZC5waG9uZU51bWJlciwgcGFyc2VkLnBob25lTnVtYmVyVmVyaWZpZWQsIHBhcnNlZC5wcmVmZXJyZWRVc2VybmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0b1N0b3JhZ2VTdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBhY2NvdW50czogdGhpcy5hY2NvdW50cyxcbiAgICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLFxuICAgICAgICAgICAgZW1haWxWZXJpZmllZDogdGhpcy5lbWFpbFZlcmlmaWVkLFxuICAgICAgICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICAgICAgICBwaG9uZU51bWJlcjogdGhpcy5waG9uZU51bWJlcixcbiAgICAgICAgICAgIHBob25lTnVtYmVyVmVyaWZpZWQ6IHRoaXMucGhvbmVOdW1iZXJWZXJpZmllZCxcbiAgICAgICAgICAgIHByZWZlcnJlZFVzZXJuYW1lOiB0aGlzLnByZWZlcnJlZFVzZXJuYW1lLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlVzZXIgPSBVc2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/auth/user.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/bitski.js":
/*!********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/bitski.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bitski = exports.SignerErrorCode = exports.SignerError = exports.ParseErrorCode = exports.ParseError = exports.AuthenticationErrorCode = exports.AuthenticationError = exports.ConnectButtonSize = exports.Mumbai = exports.Polygon = exports.Rinkeby = exports.Mainnet = exports.LOGIN_HINT_SIGNUP = exports.LocalStorageStore = exports.AuthenticationStatus = exports.OAuthSignInMethod = void 0;\nconst bitski_provider_1 = __webpack_require__(/*! bitski-provider */ \"../../node_modules/bitski-provider/lib/index.js\");\nObject.defineProperty(exports, \"Mainnet\", { enumerable: true, get: function () { return bitski_provider_1.Mainnet; } });\nObject.defineProperty(exports, \"Mumbai\", { enumerable: true, get: function () { return bitski_provider_1.Mumbai; } });\nObject.defineProperty(exports, \"Polygon\", { enumerable: true, get: function () { return bitski_provider_1.Polygon; } });\nObject.defineProperty(exports, \"Rinkeby\", { enumerable: true, get: function () { return bitski_provider_1.Rinkeby; } });\nconst oauth_manager_1 = __webpack_require__(/*! ./auth/oauth-manager */ \"../../node_modules/bitski/lib/auth/oauth-manager.js\");\nObject.defineProperty(exports, \"LOGIN_HINT_SIGNUP\", { enumerable: true, get: function () { return oauth_manager_1.LOGIN_HINT_SIGNUP; } });\nconst openid_auth_provider_1 = __webpack_require__(/*! ./auth/openid-auth-provider */ \"../../node_modules/bitski/lib/auth/openid-auth-provider.js\");\nconst connect_button_1 = __webpack_require__(/*! ./components/connect-button */ \"../../node_modules/bitski/lib/components/connect-button.js\");\nObject.defineProperty(exports, \"ConnectButtonSize\", { enumerable: true, get: function () { return connect_button_1.ConnectButtonSize; } });\nconst constants_1 = __webpack_require__(/*! ./constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst bitski_browser_engine_1 = __webpack_require__(/*! ./providers/bitski-browser-engine */ \"../../node_modules/bitski/lib/providers/bitski-browser-engine.js\");\nconst index_1 = __importDefault(__webpack_require__(/*! ./styles/index */ \"../../node_modules/bitski/lib/styles/index.js\"));\nconst callback_1 = __webpack_require__(/*! ./utils/callback */ \"../../node_modules/bitski/lib/utils/callback.js\");\nconst localstorage_store_1 = __webpack_require__(/*! ./utils/localstorage-store */ \"../../node_modules/bitski/lib/utils/localstorage-store.js\");\nObject.defineProperty(exports, \"LocalStorageStore\", { enumerable: true, get: function () { return localstorage_store_1.LocalStorageStore; } });\nvar OAuthSignInMethod;\n(function (OAuthSignInMethod) {\n    OAuthSignInMethod[\"Redirect\"] = \"REDIRECT\";\n    OAuthSignInMethod[\"Popup\"] = \"POPUP\";\n    OAuthSignInMethod[\"Silent\"] = \"SILENT\";\n})(OAuthSignInMethod = exports.OAuthSignInMethod || (exports.OAuthSignInMethod = {}));\nvar AuthenticationStatus;\n(function (AuthenticationStatus) {\n    AuthenticationStatus[\"Connected\"] = \"CONNECTED\";\n    AuthenticationStatus[\"Expired\"] = \"EXPIRED\";\n    AuthenticationStatus[\"NotConnected\"] = \"NOT_CONNECTED\";\n})(AuthenticationStatus = exports.AuthenticationStatus || (exports.AuthenticationStatus = {}));\n// Errors\nvar authentication_error_1 = __webpack_require__(/*! ./errors/authentication-error */ \"../../node_modules/bitski/lib/errors/authentication-error.js\");\nObject.defineProperty(exports, \"AuthenticationError\", { enumerable: true, get: function () { return authentication_error_1.AuthenticationError; } });\nObject.defineProperty(exports, \"AuthenticationErrorCode\", { enumerable: true, get: function () { return authentication_error_1.AuthenticationErrorCode; } });\nvar parse_error_1 = __webpack_require__(/*! ./errors/parse-error */ \"../../node_modules/bitski/lib/errors/parse-error.js\");\nObject.defineProperty(exports, \"ParseError\", { enumerable: true, get: function () { return parse_error_1.ParseError; } });\nObject.defineProperty(exports, \"ParseErrorCode\", { enumerable: true, get: function () { return parse_error_1.ParseErrorCode; } });\nvar signer_error_1 = __webpack_require__(/*! ./errors/signer-error */ \"../../node_modules/bitski/lib/errors/signer-error.js\");\nObject.defineProperty(exports, \"SignerError\", { enumerable: true, get: function () { return signer_error_1.SignerError; } });\nObject.defineProperty(exports, \"SignerErrorCode\", { enumerable: true, get: function () { return signer_error_1.SignerErrorCode; } });\n/**\n * Bitski SDK\n */\nclass Bitski {\n    /**\n     * @param clientId OAuth Client ID\n     * @param redirectUri Redirect uri, defaults to the current url. This should be the location of your callback html file.\n     * @param additionalScopes To use custom scopes, add them here. The default value is ['offline'].\n     * Note: Make sure your app is approved for the scopes you are requesting first.\n     * @param options Other OAuth settings. Don't change these unless you know what you are doing.\n     */\n    constructor(clientId, redirectUri, additionalScopes, options) {\n        this.engines = new Map();\n        this.signoutHandlers = [];\n        this.clientId = clientId;\n        this.sdkVersion = constants_1.SDK_VERSION;\n        this.authProvider = new openid_auth_provider_1.OpenidAuthProvider(clientId, redirectUri || window.location.href, additionalScopes, options);\n        if (document && document.body) {\n            this.injectStyles();\n        }\n        else {\n            window.addEventListener('load', () => {\n                this.injectStyles();\n            });\n        }\n        this.authProvider.signOutCallback = this.onSignOut.bind(this);\n    }\n    /**\n     * Alternative to using our static callback.html file. Call this from your own redirect page.\n     */\n    static callback() {\n        (0, callback_1.processCallback)();\n    }\n    /**\n     * Returns a new web3 provider for a given network.\n     * @param options options for the provider, or a network name\n     */\n    getProvider(options) {\n        // Check cache for existing provider\n        const existingProvider = this.engines.get(JSON.stringify(options));\n        if (existingProvider) {\n            existingProvider.start();\n            return existingProvider;\n        }\n        // Create a new provider if one does not exist\n        let normalizedOptions = {};\n        if (options && typeof options !== 'string') {\n            normalizedOptions = options;\n        }\n        const network = this.networkFromProviderOptions(options);\n        const newProvider = this.createProvider(network, normalizedOptions);\n        newProvider.start();\n        this.engines.set(JSON.stringify(options), newProvider);\n        return newProvider;\n    }\n    /**\n     * Creates a sign in with bitski button to add to your app. If an HTML element is passed in as the\n     * first parameter, it will automatically add it to the DOM inside that element. Make sure to add\n     * a callback to get notified of login events.\n     * @param options {ConnectButtonOptions} Optional configuration for the button\n     * @param callback Post-login callback. Called when sign in is complete. Not applicable for redirect login method.\n     */\n    getConnectButton(options, callback) {\n        return new connect_button_1.ConnectButton(this.authProvider, options, callback);\n    }\n    /**\n     * Signs in or connects to bitski depending on the user's auth state.\n     * Since it may open a popup, this method must be called from user interaction handler,\n     * such as a click or tap handler.\n     * @param options Provide SignInOptions for the sign in request. See signIn() for more info.\n     */\n    start(options) {\n        return this.authProvider.signInOrConnect(undefined, options);\n    }\n    /**\n     * Check the logged in state of the user\n     */\n    get authStatus() {\n        return this.authProvider.authStatus;\n    }\n    /**\n     * Starts the sign in flow. Will trigger a popup window over your app, so it must be called within a user interaction handler such as a click.\n     * @param options Optionally provide additional options for the sign in request.\n     *\n     * You can use the options parameter to request that we show the sign up form instead of the sign in form:\n     * ```javascript\n     * import { LOGIN_HINT_SIGNUP } from 'bitski';\n     *\n     * await bitski.signIn({ login_hint: LOGIN_HINT_SIGNUP });\n     * ```\n     */\n    signIn(options) {\n        return this.authProvider.signIn(OAuthSignInMethod.Popup, options);\n    }\n    /**\n     * Gets the current signed in user. Will reject if we are not signed in.\n     */\n    getUser() {\n        return this.authProvider.getUser();\n    }\n    /**\n     * Connects to bitski to get a valid access token if possible.\n     */\n    connect() {\n        return this.authProvider.connect();\n    }\n    /**\n     * Starts redirect sign in flow. This is an alternative flow to the popup that all takes place in the same browser window.\n     * @param options Optionally provide additional options for the sign in request. See signIn() for more info.\n     */\n    signInRedirect(options) {\n        this.authProvider.signIn(OAuthSignInMethod.Redirect, options);\n    }\n    /**\n     * Call from your oauth redirect page.\n     */\n    redirectCallback() {\n        return this.authProvider.redirectCallback();\n    }\n    /**\n     * Retrieves the current access token for the user, if logged in.\n     */\n    getCurrentAccessToken() {\n        return this.authProvider.getAccessToken();\n    }\n    /**\n     * Retrieves the current ID token for the user, if logged in.\n     */\n    getCurrentIdToken() {\n        return this.authProvider.getIdToken();\n    }\n    /**\n     * Retrieves the current refresh token for the user, if logged in.\n     * Requires that the user has approved your application for offline access.\n     */\n    getCurrentRefreshToken() {\n        return this.authProvider.getRefreshToken();\n    }\n    /**\n     * Register a callback to be called on sign out. This is a good practice,\n     * since there may be situations where you are signed out unexpectedly.\n     * @param fn Your callback function\n     */\n    addSignOutHandler(fn) {\n        this.signoutHandlers.push(fn);\n    }\n    /**\n     * Remove a registered signout callback\n     * @param fn Your callback function\n     */\n    removeSignOutHandler(fn) {\n        const index = this.signoutHandlers.findIndex((item) => item === fn);\n        if (index >= 0) {\n            this.signoutHandlers.splice(index, 1);\n        }\n    }\n    /**\n     * Sign the current user out of your application.\n     */\n    signOut() {\n        this.engines.forEach((engine) => engine.emit('signOut'));\n        return this.authProvider.signOut();\n    }\n    createProvider(network, options = {}) {\n        return new bitski_browser_engine_1.BitskiBrowserEngine(this.clientId, this.authProvider, this.sdkVersion, network, options);\n    }\n    networkFromName(networkName) {\n        switch (networkName) {\n            case '':\n            case 'mainnet':\n                return bitski_provider_1.Mainnet;\n            case 'rinkeby':\n                return bitski_provider_1.Rinkeby;\n            case 'polygon':\n                return bitski_provider_1.Polygon;\n            case 'mumbai':\n                return bitski_provider_1.Mumbai;\n            default:\n                throw new Error(`Unsupported network name ${networkName}. Try passing a \\`network\\` in the options instead.`);\n        }\n    }\n    networkFromProviderOptions(options) {\n        if (!options) {\n            return bitski_provider_1.Mainnet;\n        }\n        if (typeof options === 'string') {\n            return this.networkFromName(options);\n        }\n        if (options.network) {\n            return options.network;\n        }\n        if (options.networkName) {\n            return this.networkFromName(options.networkName);\n        }\n        return bitski_provider_1.Mainnet;\n    }\n    onSignOut() {\n        this.signoutHandlers.forEach((cb) => {\n            cb();\n        });\n    }\n    /**\n     * Embeds Bitski's UI styles\n     */\n    injectStyles() {\n        if (document.getElementById('BitskiEmbeddedStyles')) {\n            return;\n        }\n        const style = document.createElement('style');\n        style.setAttribute('type', 'text/css');\n        style.setAttribute('id', 'BitskiEmbeddedStyles');\n        style.appendChild(document.createTextNode(index_1.default));\n        const head = document.head || document.getElementsByTagName('head')[0];\n        head.appendChild(style);\n    }\n}\nexports.Bitski = Bitski;\n//# sourceMappingURL=bitski.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/bitski.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/components/connect-button.js":
/*!***************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/components/connect-button.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectButton = exports.ConnectButtonSize = void 0;\nconst bitski_1 = __webpack_require__(/*! ../bitski */ \"../../node_modules/bitski/lib/bitski.js\");\nconst authentication_error_1 = __webpack_require__(/*! ../errors/authentication-error */ \"../../node_modules/bitski/lib/errors/authentication-error.js\");\n/**\n * Sizing options for the Bitski connect button.\n */\nvar ConnectButtonSize;\n(function (ConnectButtonSize) {\n    ConnectButtonSize[\"Small\"] = \"SMALL\";\n    ConnectButtonSize[\"Medium\"] = \"MEDIUM\";\n    ConnectButtonSize[\"Large\"] = \"LARGE\";\n})(ConnectButtonSize = exports.ConnectButtonSize || (exports.ConnectButtonSize = {}));\n/**\n * A button used to connect to Bitski.\n */\nclass ConnectButton {\n    /**\n     * @param authProvider An instance of an AuthProvider to process sign in requests.\n     * @param options Optional ConnectButtonOptions to configure your button.\n     * @param callback Optional callback to be called after successful or failed log in attempt.\n     * You can also set this directly later with the `callback` property.\n     */\n    constructor(authProvider, options, callback) {\n        // Set options to object if undefined\n        options = options || {};\n        // Configure instance\n        this.authProvider = authProvider;\n        this.size = options.size || ConnectButtonSize.Medium;\n        this.authIntegrationType = options.authMethod || bitski_1.OAuthSignInMethod.Popup;\n        this.callback = callback;\n        this.signInOptions = options.signInOptions || {};\n        // Create the element\n        this.element = document.createElement('button');\n        this.configureElement();\n        this.element.addEventListener('click', this.signin.bind(this));\n        // Embed if needed\n        if (options.container) {\n            options.container.appendChild(this.element);\n        }\n    }\n    /**\n     * Removes the button from the page\n     */\n    remove() {\n        if (this.element.parentNode) {\n            this.element.parentNode.removeChild(this.element);\n        }\n    }\n    signin() {\n        this.authProvider\n            .signInOrConnect(this.authIntegrationType, this.signInOptions)\n            .then((user) => {\n            if (this.callback) {\n                this.callback(undefined, user);\n            }\n        })\n            .catch((error) => {\n            // Check for cancellation\n            if (error instanceof authentication_error_1.AuthenticationError &&\n                error.code === authentication_error_1.AuthenticationErrorCode.UserCancelled) {\n                // Not a real error, the user just cancelled. Trigger cancellation callback.\n                if (this.onCancel) {\n                    this.onCancel();\n                }\n            }\n            else if (this.callback) {\n                // Real error. Forward to main callback.\n                this.callback(error, undefined);\n            }\n        });\n    }\n    configureElement() {\n        this.element.title = 'Continue with Bitski';\n        this.element.innerText = 'Continue with Bitski';\n        this.element.className = 'bitski-connect-button';\n        let sizeClass = '';\n        switch (this.size) {\n            case ConnectButtonSize.Small:\n                sizeClass = 'size-small';\n                break;\n            case ConnectButtonSize.Medium:\n                sizeClass = 'size-medium';\n                break;\n            case ConnectButtonSize.Large:\n                sizeClass = 'size-large';\n                break;\n        }\n        this.element.classList.add(sizeClass);\n    }\n}\nexports.ConnectButton = ConnectButton;\n//# sourceMappingURL=connect-button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvY29tcG9uZW50cy9jb25uZWN0LWJ1dHRvbi5qcz85Zjc0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQywwREFBVztBQUNwQywrQkFBK0IsbUJBQU8sQ0FBQyxvR0FBZ0M7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0ZBQWtGO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL2NvbXBvbmVudHMvY29ubmVjdC1idXR0b24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29ubmVjdEJ1dHRvbiA9IGV4cG9ydHMuQ29ubmVjdEJ1dHRvblNpemUgPSB2b2lkIDA7XG5jb25zdCBiaXRza2lfMSA9IHJlcXVpcmUoXCIuLi9iaXRza2lcIik7XG5jb25zdCBhdXRoZW50aWNhdGlvbl9lcnJvcl8xID0gcmVxdWlyZShcIi4uL2Vycm9ycy9hdXRoZW50aWNhdGlvbi1lcnJvclwiKTtcbi8qKlxuICogU2l6aW5nIG9wdGlvbnMgZm9yIHRoZSBCaXRza2kgY29ubmVjdCBidXR0b24uXG4gKi9cbnZhciBDb25uZWN0QnV0dG9uU2l6ZTtcbihmdW5jdGlvbiAoQ29ubmVjdEJ1dHRvblNpemUpIHtcbiAgICBDb25uZWN0QnV0dG9uU2l6ZVtcIlNtYWxsXCJdID0gXCJTTUFMTFwiO1xuICAgIENvbm5lY3RCdXR0b25TaXplW1wiTWVkaXVtXCJdID0gXCJNRURJVU1cIjtcbiAgICBDb25uZWN0QnV0dG9uU2l6ZVtcIkxhcmdlXCJdID0gXCJMQVJHRVwiO1xufSkoQ29ubmVjdEJ1dHRvblNpemUgPSBleHBvcnRzLkNvbm5lY3RCdXR0b25TaXplIHx8IChleHBvcnRzLkNvbm5lY3RCdXR0b25TaXplID0ge30pKTtcbi8qKlxuICogQSBidXR0b24gdXNlZCB0byBjb25uZWN0IHRvIEJpdHNraS5cbiAqL1xuY2xhc3MgQ29ubmVjdEJ1dHRvbiB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGF1dGhQcm92aWRlciBBbiBpbnN0YW5jZSBvZiBhbiBBdXRoUHJvdmlkZXIgdG8gcHJvY2VzcyBzaWduIGluIHJlcXVlc3RzLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIENvbm5lY3RCdXR0b25PcHRpb25zIHRvIGNvbmZpZ3VyZSB5b3VyIGJ1dHRvbi5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgT3B0aW9uYWwgY2FsbGJhY2sgdG8gYmUgY2FsbGVkIGFmdGVyIHN1Y2Nlc3NmdWwgb3IgZmFpbGVkIGxvZyBpbiBhdHRlbXB0LlxuICAgICAqIFlvdSBjYW4gYWxzbyBzZXQgdGhpcyBkaXJlY3RseSBsYXRlciB3aXRoIHRoZSBgY2FsbGJhY2tgIHByb3BlcnR5LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGF1dGhQcm92aWRlciwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICAgICAgLy8gU2V0IG9wdGlvbnMgdG8gb2JqZWN0IGlmIHVuZGVmaW5lZFxuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgICAgLy8gQ29uZmlndXJlIGluc3RhbmNlXG4gICAgICAgIHRoaXMuYXV0aFByb3ZpZGVyID0gYXV0aFByb3ZpZGVyO1xuICAgICAgICB0aGlzLnNpemUgPSBvcHRpb25zLnNpemUgfHwgQ29ubmVjdEJ1dHRvblNpemUuTWVkaXVtO1xuICAgICAgICB0aGlzLmF1dGhJbnRlZ3JhdGlvblR5cGUgPSBvcHRpb25zLmF1dGhNZXRob2QgfHwgYml0c2tpXzEuT0F1dGhTaWduSW5NZXRob2QuUG9wdXA7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgdGhpcy5zaWduSW5PcHRpb25zID0gb3B0aW9ucy5zaWduSW5PcHRpb25zIHx8IHt9O1xuICAgICAgICAvLyBDcmVhdGUgdGhlIGVsZW1lbnRcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIHRoaXMuY29uZmlndXJlRWxlbWVudCgpO1xuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnNpZ25pbi5iaW5kKHRoaXMpKTtcbiAgICAgICAgLy8gRW1iZWQgaWYgbmVlZGVkXG4gICAgICAgIGlmIChvcHRpb25zLmNvbnRhaW5lcikge1xuICAgICAgICAgICAgb3B0aW9ucy5jb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIHRoZSBidXR0b24gZnJvbSB0aGUgcGFnZVxuICAgICAqL1xuICAgIHJlbW92ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNpZ25pbigpIHtcbiAgICAgICAgdGhpcy5hdXRoUHJvdmlkZXJcbiAgICAgICAgICAgIC5zaWduSW5PckNvbm5lY3QodGhpcy5hdXRoSW50ZWdyYXRpb25UeXBlLCB0aGlzLnNpZ25Jbk9wdGlvbnMpXG4gICAgICAgICAgICAudGhlbigodXNlcikgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrKHVuZGVmaW5lZCwgdXNlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAvLyBDaGVjayBmb3IgY2FuY2VsbGF0aW9uXG4gICAgICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBhdXRoZW50aWNhdGlvbl9lcnJvcl8xLkF1dGhlbnRpY2F0aW9uRXJyb3IgJiZcbiAgICAgICAgICAgICAgICBlcnJvci5jb2RlID09PSBhdXRoZW50aWNhdGlvbl9lcnJvcl8xLkF1dGhlbnRpY2F0aW9uRXJyb3JDb2RlLlVzZXJDYW5jZWxsZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBOb3QgYSByZWFsIGVycm9yLCB0aGUgdXNlciBqdXN0IGNhbmNlbGxlZC4gVHJpZ2dlciBjYW5jZWxsYXRpb24gY2FsbGJhY2suXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25DYW5jZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkNhbmNlbCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAvLyBSZWFsIGVycm9yLiBGb3J3YXJkIHRvIG1haW4gY2FsbGJhY2suXG4gICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFjayhlcnJvciwgdW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbmZpZ3VyZUVsZW1lbnQoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC50aXRsZSA9ICdDb250aW51ZSB3aXRoIEJpdHNraSc7XG4gICAgICAgIHRoaXMuZWxlbWVudC5pbm5lclRleHQgPSAnQ29udGludWUgd2l0aCBCaXRza2knO1xuICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NOYW1lID0gJ2JpdHNraS1jb25uZWN0LWJ1dHRvbic7XG4gICAgICAgIGxldCBzaXplQ2xhc3MgPSAnJztcbiAgICAgICAgc3dpdGNoICh0aGlzLnNpemUpIHtcbiAgICAgICAgICAgIGNhc2UgQ29ubmVjdEJ1dHRvblNpemUuU21hbGw6XG4gICAgICAgICAgICAgICAgc2l6ZUNsYXNzID0gJ3NpemUtc21hbGwnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBDb25uZWN0QnV0dG9uU2l6ZS5NZWRpdW06XG4gICAgICAgICAgICAgICAgc2l6ZUNsYXNzID0gJ3NpemUtbWVkaXVtJztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQ29ubmVjdEJ1dHRvblNpemUuTGFyZ2U6XG4gICAgICAgICAgICAgICAgc2l6ZUNsYXNzID0gJ3NpemUtbGFyZ2UnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKHNpemVDbGFzcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0QnV0dG9uID0gQ29ubmVjdEJ1dHRvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3QtYnV0dG9uLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/components/connect-button.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/components/dialog.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/components/dialog.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dialog = void 0;\nconst TEMPLATE = `\n  <div class='bitski-dialog'>\n      <button class='bitski-close-button'>Close</button>\n      <div class='bitski-dialog-body'></div>\n  </div>\n`;\n/**\n * Basic modal dialog\n */\nclass Dialog {\n    /**\n     * Creates and displays a new dialog\n     * @param content The content (HTMLElement, selector, or text) to embed in the dialog\n     * @param dynamicContent Set to true to show loading state\n     */\n    constructor(content, dynamicContent = false) {\n        // check for an element passed as content or a selector corresponding to an element\n        this.content = this.parseContent(content);\n        // Find or create dialog container\n        this.container = this.createContainer();\n        // Inject dialog content\n        this.injectTemplate(this.container, this.content);\n        // Show a spinner if content is dynamic\n        if (dynamicContent) {\n            this.setLoading(true);\n        }\n        // Add close handlers\n        this.addCloseHandlers();\n        // A short delay is required before triggering animations\n        setTimeout(() => {\n            this.show();\n        }, 10);\n    }\n    /**\n     * Show the dialog\n     */\n    show() {\n        this.container.classList.add('bitski-visible', 'bitski-loaded');\n    }\n    /**\n     * Hides the dialog, but does not remove\n     */\n    hide() {\n        this.container.classList.remove('bitski-visible', 'bitski-loaded');\n    }\n    /**\n     * Dismisses the dialog without triggering the close handler.\n     */\n    dismiss() {\n        // Allow 500ms for the animations to finish before removing elements from DOM\n        setTimeout(() => {\n            this.container.remove();\n        }, 500);\n        this.hide();\n    }\n    /**\n     * Cancels the dialog by dismissing and triggering the close handler.\n     */\n    close() {\n        this.dismiss();\n        if (this.onClose) {\n            this.onClose();\n        }\n    }\n    /**\n     * Show or hide the loading indicator\n     * @param loading Whether or not to display the spinner\n     */\n    setLoading(loading) {\n        const body = document.querySelector('.bitski-dialog-body');\n        if (body) {\n            if (loading) {\n                body.classList.add('bitski-loading');\n            }\n            else {\n                body.classList.remove('bitski-loading');\n            }\n        }\n    }\n    /**\n     * Determines what content to embed\n     * @param content Content to parse\n     */\n    parseContent(content) {\n        // check for an element passed as content\n        if (content instanceof HTMLElement) {\n            return content;\n        }\n        // determine if content is a selector\n        if (document.querySelector(content)) {\n            return document.querySelector(content);\n        }\n        // otherwise content is text to be appended to the dialog body\n        const div = document.createElement('div');\n        div.innerText = content;\n        return div;\n    }\n    /**\n     * Creates and injects the container element at the end of the body,\n     * responsible for housing all the dialog-related content.\n     */\n    createContainer() {\n        const existingContainer = document.querySelector('#bitski-dialog-container');\n        if (existingContainer) {\n            return existingContainer;\n        }\n        const container = document.createElement('div');\n        container.id = 'bitski-dialog-container';\n        document.body.appendChild(container);\n        return container;\n    }\n    /**\n     * Injects the provided content into the template provided\n     * @param container The container element\n     * @param content The content to inject in the template\n     */\n    injectTemplate(container, content) {\n        container.innerHTML = TEMPLATE;\n        const body = container.querySelector('.bitski-dialog-body');\n        if (body) {\n            body.appendChild(content);\n        }\n    }\n    /**\n     * Adds event listeners for events that should trigger closing the dialog\n     */\n    addCloseHandlers() {\n        // Close on click outside of the dialog\n        this.container.addEventListener('click', (event) => {\n            if (event.target === this.container) {\n                this.close();\n            }\n        });\n        // Close on escape press\n        document.addEventListener('keyup', (e) => {\n            if (e.key === 'Escape') {\n                this.close();\n            }\n        });\n        // Close on close button click\n        const closeButton = this.container.querySelector('.bitski-close-button');\n        if (closeButton) {\n            closeButton.addEventListener('click', this.close.bind(this));\n        }\n    }\n}\nexports.Dialog = Dialog;\n//# sourceMappingURL=dialog.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvY29tcG9uZW50cy9kaWFsb2cuanM/YjAyNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpL2xpYi9jb21wb25lbnRzL2RpYWxvZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EaWFsb2cgPSB2b2lkIDA7XG5jb25zdCBURU1QTEFURSA9IGBcbiAgPGRpdiBjbGFzcz0nYml0c2tpLWRpYWxvZyc+XG4gICAgICA8YnV0dG9uIGNsYXNzPSdiaXRza2ktY2xvc2UtYnV0dG9uJz5DbG9zZTwvYnV0dG9uPlxuICAgICAgPGRpdiBjbGFzcz0nYml0c2tpLWRpYWxvZy1ib2R5Jz48L2Rpdj5cbiAgPC9kaXY+XG5gO1xuLyoqXG4gKiBCYXNpYyBtb2RhbCBkaWFsb2dcbiAqL1xuY2xhc3MgRGlhbG9nIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBkaXNwbGF5cyBhIG5ldyBkaWFsb2dcbiAgICAgKiBAcGFyYW0gY29udGVudCBUaGUgY29udGVudCAoSFRNTEVsZW1lbnQsIHNlbGVjdG9yLCBvciB0ZXh0KSB0byBlbWJlZCBpbiB0aGUgZGlhbG9nXG4gICAgICogQHBhcmFtIGR5bmFtaWNDb250ZW50IFNldCB0byB0cnVlIHRvIHNob3cgbG9hZGluZyBzdGF0ZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbnRlbnQsIGR5bmFtaWNDb250ZW50ID0gZmFsc2UpIHtcbiAgICAgICAgLy8gY2hlY2sgZm9yIGFuIGVsZW1lbnQgcGFzc2VkIGFzIGNvbnRlbnQgb3IgYSBzZWxlY3RvciBjb3JyZXNwb25kaW5nIHRvIGFuIGVsZW1lbnRcbiAgICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy5wYXJzZUNvbnRlbnQoY29udGVudCk7XG4gICAgICAgIC8vIEZpbmQgb3IgY3JlYXRlIGRpYWxvZyBjb250YWluZXJcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSB0aGlzLmNyZWF0ZUNvbnRhaW5lcigpO1xuICAgICAgICAvLyBJbmplY3QgZGlhbG9nIGNvbnRlbnRcbiAgICAgICAgdGhpcy5pbmplY3RUZW1wbGF0ZSh0aGlzLmNvbnRhaW5lciwgdGhpcy5jb250ZW50KTtcbiAgICAgICAgLy8gU2hvdyBhIHNwaW5uZXIgaWYgY29udGVudCBpcyBkeW5hbWljXG4gICAgICAgIGlmIChkeW5hbWljQ29udGVudCkge1xuICAgICAgICAgICAgdGhpcy5zZXRMb2FkaW5nKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFkZCBjbG9zZSBoYW5kbGVyc1xuICAgICAgICB0aGlzLmFkZENsb3NlSGFuZGxlcnMoKTtcbiAgICAgICAgLy8gQSBzaG9ydCBkZWxheSBpcyByZXF1aXJlZCBiZWZvcmUgdHJpZ2dlcmluZyBhbmltYXRpb25zXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zaG93KCk7XG4gICAgICAgIH0sIDEwKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2hvdyB0aGUgZGlhbG9nXG4gICAgICovXG4gICAgc2hvdygpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LmFkZCgnYml0c2tpLXZpc2libGUnLCAnYml0c2tpLWxvYWRlZCcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBIaWRlcyB0aGUgZGlhbG9nLCBidXQgZG9lcyBub3QgcmVtb3ZlXG4gICAgICovXG4gICAgaGlkZSgpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnYml0c2tpLXZpc2libGUnLCAnYml0c2tpLWxvYWRlZCcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEaXNtaXNzZXMgdGhlIGRpYWxvZyB3aXRob3V0IHRyaWdnZXJpbmcgdGhlIGNsb3NlIGhhbmRsZXIuXG4gICAgICovXG4gICAgZGlzbWlzcygpIHtcbiAgICAgICAgLy8gQWxsb3cgNTAwbXMgZm9yIHRoZSBhbmltYXRpb25zIHRvIGZpbmlzaCBiZWZvcmUgcmVtb3ZpbmcgZWxlbWVudHMgZnJvbSBET01cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5yZW1vdmUoKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbmNlbHMgdGhlIGRpYWxvZyBieSBkaXNtaXNzaW5nIGFuZCB0cmlnZ2VyaW5nIHRoZSBjbG9zZSBoYW5kbGVyLlxuICAgICAqL1xuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLmRpc21pc3MoKTtcbiAgICAgICAgaWYgKHRoaXMub25DbG9zZSkge1xuICAgICAgICAgICAgdGhpcy5vbkNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU2hvdyBvciBoaWRlIHRoZSBsb2FkaW5nIGluZGljYXRvclxuICAgICAqIEBwYXJhbSBsb2FkaW5nIFdoZXRoZXIgb3Igbm90IHRvIGRpc3BsYXkgdGhlIHNwaW5uZXJcbiAgICAgKi9cbiAgICBzZXRMb2FkaW5nKGxvYWRpbmcpIHtcbiAgICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iaXRza2ktZGlhbG9nLWJvZHknKTtcbiAgICAgICAgaWYgKGJvZHkpIHtcbiAgICAgICAgICAgIGlmIChsb2FkaW5nKSB7XG4gICAgICAgICAgICAgICAgYm9keS5jbGFzc0xpc3QuYWRkKCdiaXRza2ktbG9hZGluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdiaXRza2ktbG9hZGluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hhdCBjb250ZW50IHRvIGVtYmVkXG4gICAgICogQHBhcmFtIGNvbnRlbnQgQ29udGVudCB0byBwYXJzZVxuICAgICAqL1xuICAgIHBhcnNlQ29udGVudChjb250ZW50KSB7XG4gICAgICAgIC8vIGNoZWNrIGZvciBhbiBlbGVtZW50IHBhc3NlZCBhcyBjb250ZW50XG4gICAgICAgIGlmIChjb250ZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBjb250ZW50O1xuICAgICAgICB9XG4gICAgICAgIC8vIGRldGVybWluZSBpZiBjb250ZW50IGlzIGEgc2VsZWN0b3JcbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGVudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG90aGVyd2lzZSBjb250ZW50IGlzIHRleHQgdG8gYmUgYXBwZW5kZWQgdG8gdGhlIGRpYWxvZyBib2R5XG4gICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBkaXYuaW5uZXJUZXh0ID0gY29udGVudDtcbiAgICAgICAgcmV0dXJuIGRpdjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5qZWN0cyB0aGUgY29udGFpbmVyIGVsZW1lbnQgYXQgdGhlIGVuZCBvZiB0aGUgYm9keSxcbiAgICAgKiByZXNwb25zaWJsZSBmb3IgaG91c2luZyBhbGwgdGhlIGRpYWxvZy1yZWxhdGVkIGNvbnRlbnQuXG4gICAgICovXG4gICAgY3JlYXRlQ29udGFpbmVyKCkge1xuICAgICAgICBjb25zdCBleGlzdGluZ0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNiaXRza2ktZGlhbG9nLWNvbnRhaW5lcicpO1xuICAgICAgICBpZiAoZXhpc3RpbmdDb250YWluZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBleGlzdGluZ0NvbnRhaW5lcjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgY29udGFpbmVyLmlkID0gJ2JpdHNraS1kaWFsb2ctY29udGFpbmVyJztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgICAgICByZXR1cm4gY29udGFpbmVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbmplY3RzIHRoZSBwcm92aWRlZCBjb250ZW50IGludG8gdGhlIHRlbXBsYXRlIHByb3ZpZGVkXG4gICAgICogQHBhcmFtIGNvbnRhaW5lciBUaGUgY29udGFpbmVyIGVsZW1lbnRcbiAgICAgKiBAcGFyYW0gY29udGVudCBUaGUgY29udGVudCB0byBpbmplY3QgaW4gdGhlIHRlbXBsYXRlXG4gICAgICovXG4gICAgaW5qZWN0VGVtcGxhdGUoY29udGFpbmVyLCBjb250ZW50KSB7XG4gICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBURU1QTEFURTtcbiAgICAgICAgY29uc3QgYm9keSA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuYml0c2tpLWRpYWxvZy1ib2R5Jyk7XG4gICAgICAgIGlmIChib2R5KSB7XG4gICAgICAgICAgICBib2R5LmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgZXZlbnQgbGlzdGVuZXJzIGZvciBldmVudHMgdGhhdCBzaG91bGQgdHJpZ2dlciBjbG9zaW5nIHRoZSBkaWFsb2dcbiAgICAgKi9cbiAgICBhZGRDbG9zZUhhbmRsZXJzKCkge1xuICAgICAgICAvLyBDbG9zZSBvbiBjbGljayBvdXRzaWRlIG9mIHRoZSBkaWFsb2dcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQgPT09IHRoaXMuY29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gQ2xvc2Ugb24gZXNjYXBlIHByZXNzXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGUpID0+IHtcbiAgICAgICAgICAgIGlmIChlLmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBDbG9zZSBvbiBjbG9zZSBidXR0b24gY2xpY2tcbiAgICAgICAgY29uc3QgY2xvc2VCdXR0b24gPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuYml0c2tpLWNsb3NlLWJ1dHRvbicpO1xuICAgICAgICBpZiAoY2xvc2VCdXR0b24pIHtcbiAgICAgICAgICAgIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbG9zZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuRGlhbG9nID0gRGlhbG9nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlhbG9nLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/components/dialog.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/constants.js":
/*!***********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/constants.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_AUTHORIZED_METHODS = exports.CACHED_METHODS = exports.USER_KEY = exports.ID_TOKEN_KEY = exports.ACCESS_TOKEN_KEY = exports.REFRESH_TOKEN_KEY = exports.DEFAULT_POPUP_FEATURES = exports.CHECK_FOR_POPUP_CLOSE_INTERVAL = exports.DEFAULT_OPTIONAL_SCOPES = exports.DEFAULT_SCOPES = exports.DEFAULT_OAUTH_CONFIGURATION = exports.IFRAME_MESSAGE_ORIGIN_INCLUDES = exports.BITSKI_WEB_BASE_URL = exports.BITSKI_RPC_BASE_URL = exports.BITSKI_TRANSACTION_API_BASE_URL = exports.BITSKI_USER_API_HOST = exports.SDK_VERSION = void 0;\n// SDK\nexports.SDK_VERSION = '0.13.1';\n// URLs\nexports.BITSKI_USER_API_HOST = 'https://www.bitski.com/v1';\nexports.BITSKI_TRANSACTION_API_BASE_URL = 'https://api.bitski.com/v1';\nexports.BITSKI_RPC_BASE_URL = 'https://api.bitski.com/v1/web3';\nexports.BITSKI_WEB_BASE_URL = 'https://sign.bitski.com';\nexports.IFRAME_MESSAGE_ORIGIN_INCLUDES = '.bitski.com';\n// OAuth\nexports.DEFAULT_OAUTH_CONFIGURATION = {\n    authorization_endpoint: 'https://account.bitski.com/oauth2/auth',\n    revocation_endpoint: '',\n    token_endpoint: 'https://account.bitski.com/oauth2/token',\n    userinfo_endpoint: 'https://account.bitski.com/userinfo',\n};\nexports.DEFAULT_SCOPES = ['openid']; // scopes that are always included\nexports.DEFAULT_OPTIONAL_SCOPES = ['offline']; // scopes that are included by default, but can be overridden\n// Popup Window\nexports.CHECK_FOR_POPUP_CLOSE_INTERVAL = 500;\nexports.DEFAULT_POPUP_FEATURES = {\n    location: 'no',\n    toolbar: 'no',\n    width: 500,\n    height: 500,\n    left: 100,\n    top: 100,\n};\n// Storage\nexports.REFRESH_TOKEN_KEY = 'bitski.refresh_token';\nexports.ACCESS_TOKEN_KEY = 'bitski.access_token';\nexports.ID_TOKEN_KEY = 'bitski.id_token';\nexports.USER_KEY = 'bitski.user';\n// Methods\nexports.CACHED_METHODS = ['eth_accounts'];\nexports.DEFAULT_AUTHORIZED_METHODS = [\n    'eth_sendTransaction',\n    'eth_signTransaction',\n    'eth_sign',\n    'personal_sign',\n    'eth_signTypedData',\n    'eth_signTypedData_v3',\n    'eth_signTypedData_v4',\n];\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvY29uc3RhbnRzLmpzPzUzZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL2NvbnN0YW50cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERUZBVUxUX0FVVEhPUklaRURfTUVUSE9EUyA9IGV4cG9ydHMuQ0FDSEVEX01FVEhPRFMgPSBleHBvcnRzLlVTRVJfS0VZID0gZXhwb3J0cy5JRF9UT0tFTl9LRVkgPSBleHBvcnRzLkFDQ0VTU19UT0tFTl9LRVkgPSBleHBvcnRzLlJFRlJFU0hfVE9LRU5fS0VZID0gZXhwb3J0cy5ERUZBVUxUX1BPUFVQX0ZFQVRVUkVTID0gZXhwb3J0cy5DSEVDS19GT1JfUE9QVVBfQ0xPU0VfSU5URVJWQUwgPSBleHBvcnRzLkRFRkFVTFRfT1BUSU9OQUxfU0NPUEVTID0gZXhwb3J0cy5ERUZBVUxUX1NDT1BFUyA9IGV4cG9ydHMuREVGQVVMVF9PQVVUSF9DT05GSUdVUkFUSU9OID0gZXhwb3J0cy5JRlJBTUVfTUVTU0FHRV9PUklHSU5fSU5DTFVERVMgPSBleHBvcnRzLkJJVFNLSV9XRUJfQkFTRV9VUkwgPSBleHBvcnRzLkJJVFNLSV9SUENfQkFTRV9VUkwgPSBleHBvcnRzLkJJVFNLSV9UUkFOU0FDVElPTl9BUElfQkFTRV9VUkwgPSBleHBvcnRzLkJJVFNLSV9VU0VSX0FQSV9IT1NUID0gZXhwb3J0cy5TREtfVkVSU0lPTiA9IHZvaWQgMDtcbi8vIFNES1xuZXhwb3J0cy5TREtfVkVSU0lPTiA9ICcwLjEzLjEnO1xuLy8gVVJMc1xuZXhwb3J0cy5CSVRTS0lfVVNFUl9BUElfSE9TVCA9ICdodHRwczovL3d3dy5iaXRza2kuY29tL3YxJztcbmV4cG9ydHMuQklUU0tJX1RSQU5TQUNUSU9OX0FQSV9CQVNFX1VSTCA9ICdodHRwczovL2FwaS5iaXRza2kuY29tL3YxJztcbmV4cG9ydHMuQklUU0tJX1JQQ19CQVNFX1VSTCA9ICdodHRwczovL2FwaS5iaXRza2kuY29tL3YxL3dlYjMnO1xuZXhwb3J0cy5CSVRTS0lfV0VCX0JBU0VfVVJMID0gJ2h0dHBzOi8vc2lnbi5iaXRza2kuY29tJztcbmV4cG9ydHMuSUZSQU1FX01FU1NBR0VfT1JJR0lOX0lOQ0xVREVTID0gJy5iaXRza2kuY29tJztcbi8vIE9BdXRoXG5leHBvcnRzLkRFRkFVTFRfT0FVVEhfQ09ORklHVVJBVElPTiA9IHtcbiAgICBhdXRob3JpemF0aW9uX2VuZHBvaW50OiAnaHR0cHM6Ly9hY2NvdW50LmJpdHNraS5jb20vb2F1dGgyL2F1dGgnLFxuICAgIHJldm9jYXRpb25fZW5kcG9pbnQ6ICcnLFxuICAgIHRva2VuX2VuZHBvaW50OiAnaHR0cHM6Ly9hY2NvdW50LmJpdHNraS5jb20vb2F1dGgyL3Rva2VuJyxcbiAgICB1c2VyaW5mb19lbmRwb2ludDogJ2h0dHBzOi8vYWNjb3VudC5iaXRza2kuY29tL3VzZXJpbmZvJyxcbn07XG5leHBvcnRzLkRFRkFVTFRfU0NPUEVTID0gWydvcGVuaWQnXTsgLy8gc2NvcGVzIHRoYXQgYXJlIGFsd2F5cyBpbmNsdWRlZFxuZXhwb3J0cy5ERUZBVUxUX09QVElPTkFMX1NDT1BFUyA9IFsnb2ZmbGluZSddOyAvLyBzY29wZXMgdGhhdCBhcmUgaW5jbHVkZWQgYnkgZGVmYXVsdCwgYnV0IGNhbiBiZSBvdmVycmlkZGVuXG4vLyBQb3B1cCBXaW5kb3dcbmV4cG9ydHMuQ0hFQ0tfRk9SX1BPUFVQX0NMT1NFX0lOVEVSVkFMID0gNTAwO1xuZXhwb3J0cy5ERUZBVUxUX1BPUFVQX0ZFQVRVUkVTID0ge1xuICAgIGxvY2F0aW9uOiAnbm8nLFxuICAgIHRvb2xiYXI6ICdubycsXG4gICAgd2lkdGg6IDUwMCxcbiAgICBoZWlnaHQ6IDUwMCxcbiAgICBsZWZ0OiAxMDAsXG4gICAgdG9wOiAxMDAsXG59O1xuLy8gU3RvcmFnZVxuZXhwb3J0cy5SRUZSRVNIX1RPS0VOX0tFWSA9ICdiaXRza2kucmVmcmVzaF90b2tlbic7XG5leHBvcnRzLkFDQ0VTU19UT0tFTl9LRVkgPSAnYml0c2tpLmFjY2Vzc190b2tlbic7XG5leHBvcnRzLklEX1RPS0VOX0tFWSA9ICdiaXRza2kuaWRfdG9rZW4nO1xuZXhwb3J0cy5VU0VSX0tFWSA9ICdiaXRza2kudXNlcic7XG4vLyBNZXRob2RzXG5leHBvcnRzLkNBQ0hFRF9NRVRIT0RTID0gWydldGhfYWNjb3VudHMnXTtcbmV4cG9ydHMuREVGQVVMVF9BVVRIT1JJWkVEX01FVEhPRFMgPSBbXG4gICAgJ2V0aF9zZW5kVHJhbnNhY3Rpb24nLFxuICAgICdldGhfc2lnblRyYW5zYWN0aW9uJyxcbiAgICAnZXRoX3NpZ24nLFxuICAgICdwZXJzb25hbF9zaWduJyxcbiAgICAnZXRoX3NpZ25UeXBlZERhdGEnLFxuICAgICdldGhfc2lnblR5cGVkRGF0YV92MycsXG4gICAgJ2V0aF9zaWduVHlwZWREYXRhX3Y0Jyxcbl07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/constants.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/errors/authentication-error.js":
/*!*****************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/errors/authentication-error.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticationError = exports.AuthenticationErrorCode = void 0;\nvar AuthenticationErrorCode;\n(function (AuthenticationErrorCode) {\n    // The user is not currently signed in\n    AuthenticationErrorCode[AuthenticationErrorCode[\"NotSignedIn\"] = 1000] = \"NotSignedIn\";\n    // The user cancelled the auth request\n    AuthenticationErrorCode[AuthenticationErrorCode[\"UserCancelled\"] = 1001] = \"UserCancelled\";\n    // Either you did not request offline access, or the user did not approve your app for offline access\n    AuthenticationErrorCode[AuthenticationErrorCode[\"NoRefreshToken\"] = 1002] = \"NoRefreshToken\";\n    // You requested silent sign in, which is deprecated\n    AuthenticationErrorCode[AuthenticationErrorCode[\"UnsupportedAuthenticationMethod\"] = 1003] = \"UnsupportedAuthenticationMethod\";\n    // We received an error from the oauth server\n    AuthenticationErrorCode[AuthenticationErrorCode[\"ServerError\"] = 1004] = \"ServerError\";\n    // The SDK is configured incorrectly\n    AuthenticationErrorCode[AuthenticationErrorCode[\"InvalidConfiguration\"] = 1005] = \"InvalidConfiguration\";\n    // Popup blocked\n    AuthenticationErrorCode[AuthenticationErrorCode[\"PopupBlocked\"] = 1006] = \"PopupBlocked\";\n})(AuthenticationErrorCode = exports.AuthenticationErrorCode || (exports.AuthenticationErrorCode = {}));\n/**\n * Represents an error that is thrown during the authentication process\n */\nclass AuthenticationError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'AuthenticationError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, AuthenticationError);\n        }\n        this.code = code;\n    }\n    // throw AuthenticationError.NotSignedIn()\n    static NotSignedIn() {\n        return new AuthenticationError('Not signed in.', AuthenticationErrorCode.NotSignedIn);\n    }\n    // throw AuthenticationError.UserCancelled()\n    static UserCancelled() {\n        return new AuthenticationError('Sign in request was cancelled.', AuthenticationErrorCode.UserCancelled);\n    }\n    // throw AuthenticationError.NoRefreshToken()\n    static NoRefreshToken() {\n        return new AuthenticationError('Refresh token is not available.', AuthenticationErrorCode.NoRefreshToken);\n    }\n    // throw AuthenticationError.UnsupportedAuthenticationMethod()\n    static UnsupportedAuthenticationMethod() {\n        return new AuthenticationError('Sign in method not supported.', AuthenticationErrorCode.UnsupportedAuthenticationMethod);\n    }\n    // throw AuthenticationError.PopupBlocked()\n    static PopupBlocked(baseUrl) {\n        const msg = `The popup was blocked. Please make sure ${baseUrl} is allowed to open popups.`;\n        return new AuthenticationError(msg, AuthenticationErrorCode.PopupBlocked);\n    }\n    // throw Authentication Error.ServerError(message, description)\n    static ServerError(message, description) {\n        const err = new AuthenticationError(`Error from the server: ${message}`, AuthenticationErrorCode.ServerError);\n        err.description = description;\n        return err;\n    }\n    // throw AuthenticationError.InvalidConfiguration()\n    static InvalidConfiguration(reason) {\n        return new AuthenticationError(`The OAuth Configuration is invalid: ${reason}`, AuthenticationErrorCode.InvalidConfiguration);\n    }\n}\nexports.AuthenticationError = AuthenticationError;\n//# sourceMappingURL=authentication-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvZXJyb3JzL2F1dGhlbnRpY2F0aW9uLWVycm9yLmpzP2IyOGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvR0FBb0c7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsUUFBUTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSxRQUFRO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RUFBOEUsT0FBTztBQUNyRjtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpL2xpYi9lcnJvcnMvYXV0aGVudGljYXRpb24tZXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXV0aGVudGljYXRpb25FcnJvciA9IGV4cG9ydHMuQXV0aGVudGljYXRpb25FcnJvckNvZGUgPSB2b2lkIDA7XG52YXIgQXV0aGVudGljYXRpb25FcnJvckNvZGU7XG4oZnVuY3Rpb24gKEF1dGhlbnRpY2F0aW9uRXJyb3JDb2RlKSB7XG4gICAgLy8gVGhlIHVzZXIgaXMgbm90IGN1cnJlbnRseSBzaWduZWQgaW5cbiAgICBBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtcIk5vdFNpZ25lZEluXCJdID0gMTAwMF0gPSBcIk5vdFNpZ25lZEluXCI7XG4gICAgLy8gVGhlIHVzZXIgY2FuY2VsbGVkIHRoZSBhdXRoIHJlcXVlc3RcbiAgICBBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtcIlVzZXJDYW5jZWxsZWRcIl0gPSAxMDAxXSA9IFwiVXNlckNhbmNlbGxlZFwiO1xuICAgIC8vIEVpdGhlciB5b3UgZGlkIG5vdCByZXF1ZXN0IG9mZmxpbmUgYWNjZXNzLCBvciB0aGUgdXNlciBkaWQgbm90IGFwcHJvdmUgeW91ciBhcHAgZm9yIG9mZmxpbmUgYWNjZXNzXG4gICAgQXV0aGVudGljYXRpb25FcnJvckNvZGVbQXV0aGVudGljYXRpb25FcnJvckNvZGVbXCJOb1JlZnJlc2hUb2tlblwiXSA9IDEwMDJdID0gXCJOb1JlZnJlc2hUb2tlblwiO1xuICAgIC8vIFlvdSByZXF1ZXN0ZWQgc2lsZW50IHNpZ24gaW4sIHdoaWNoIGlzIGRlcHJlY2F0ZWRcbiAgICBBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtcIlVuc3VwcG9ydGVkQXV0aGVudGljYXRpb25NZXRob2RcIl0gPSAxMDAzXSA9IFwiVW5zdXBwb3J0ZWRBdXRoZW50aWNhdGlvbk1ldGhvZFwiO1xuICAgIC8vIFdlIHJlY2VpdmVkIGFuIGVycm9yIGZyb20gdGhlIG9hdXRoIHNlcnZlclxuICAgIEF1dGhlbnRpY2F0aW9uRXJyb3JDb2RlW0F1dGhlbnRpY2F0aW9uRXJyb3JDb2RlW1wiU2VydmVyRXJyb3JcIl0gPSAxMDA0XSA9IFwiU2VydmVyRXJyb3JcIjtcbiAgICAvLyBUaGUgU0RLIGlzIGNvbmZpZ3VyZWQgaW5jb3JyZWN0bHlcbiAgICBBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtBdXRoZW50aWNhdGlvbkVycm9yQ29kZVtcIkludmFsaWRDb25maWd1cmF0aW9uXCJdID0gMTAwNV0gPSBcIkludmFsaWRDb25maWd1cmF0aW9uXCI7XG4gICAgLy8gUG9wdXAgYmxvY2tlZFxuICAgIEF1dGhlbnRpY2F0aW9uRXJyb3JDb2RlW0F1dGhlbnRpY2F0aW9uRXJyb3JDb2RlW1wiUG9wdXBCbG9ja2VkXCJdID0gMTAwNl0gPSBcIlBvcHVwQmxvY2tlZFwiO1xufSkoQXV0aGVudGljYXRpb25FcnJvckNvZGUgPSBleHBvcnRzLkF1dGhlbnRpY2F0aW9uRXJyb3JDb2RlIHx8IChleHBvcnRzLkF1dGhlbnRpY2F0aW9uRXJyb3JDb2RlID0ge30pKTtcbi8qKlxuICogUmVwcmVzZW50cyBhbiBlcnJvciB0aGF0IGlzIHRocm93biBkdXJpbmcgdGhlIGF1dGhlbnRpY2F0aW9uIHByb2Nlc3NcbiAqL1xuY2xhc3MgQXV0aGVudGljYXRpb25FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb2RlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnQXV0aGVudGljYXRpb25FcnJvcic7XG4gICAgICAgIC8vIE1haW50YWlucyBwcm9wZXIgc3RhY2sgdHJhY2UgZm9yIHdoZXJlIG91ciBlcnJvciB3YXMgdGhyb3duIChvbmx5IGF2YWlsYWJsZSBvbiBWOClcbiAgICAgICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBBdXRoZW50aWNhdGlvbkVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIH1cbiAgICAvLyB0aHJvdyBBdXRoZW50aWNhdGlvbkVycm9yLk5vdFNpZ25lZEluKClcbiAgICBzdGF0aWMgTm90U2lnbmVkSW4oKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXV0aGVudGljYXRpb25FcnJvcignTm90IHNpZ25lZCBpbi4nLCBBdXRoZW50aWNhdGlvbkVycm9yQ29kZS5Ob3RTaWduZWRJbik7XG4gICAgfVxuICAgIC8vIHRocm93IEF1dGhlbnRpY2F0aW9uRXJyb3IuVXNlckNhbmNlbGxlZCgpXG4gICAgc3RhdGljIFVzZXJDYW5jZWxsZWQoKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXV0aGVudGljYXRpb25FcnJvcignU2lnbiBpbiByZXF1ZXN0IHdhcyBjYW5jZWxsZWQuJywgQXV0aGVudGljYXRpb25FcnJvckNvZGUuVXNlckNhbmNlbGxlZCk7XG4gICAgfVxuICAgIC8vIHRocm93IEF1dGhlbnRpY2F0aW9uRXJyb3IuTm9SZWZyZXNoVG9rZW4oKVxuICAgIHN0YXRpYyBOb1JlZnJlc2hUb2tlbigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKCdSZWZyZXNoIHRva2VuIGlzIG5vdCBhdmFpbGFibGUuJywgQXV0aGVudGljYXRpb25FcnJvckNvZGUuTm9SZWZyZXNoVG9rZW4pO1xuICAgIH1cbiAgICAvLyB0aHJvdyBBdXRoZW50aWNhdGlvbkVycm9yLlVuc3VwcG9ydGVkQXV0aGVudGljYXRpb25NZXRob2QoKVxuICAgIHN0YXRpYyBVbnN1cHBvcnRlZEF1dGhlbnRpY2F0aW9uTWV0aG9kKCkge1xuICAgICAgICByZXR1cm4gbmV3IEF1dGhlbnRpY2F0aW9uRXJyb3IoJ1NpZ24gaW4gbWV0aG9kIG5vdCBzdXBwb3J0ZWQuJywgQXV0aGVudGljYXRpb25FcnJvckNvZGUuVW5zdXBwb3J0ZWRBdXRoZW50aWNhdGlvbk1ldGhvZCk7XG4gICAgfVxuICAgIC8vIHRocm93IEF1dGhlbnRpY2F0aW9uRXJyb3IuUG9wdXBCbG9ja2VkKClcbiAgICBzdGF0aWMgUG9wdXBCbG9ja2VkKGJhc2VVcmwpIHtcbiAgICAgICAgY29uc3QgbXNnID0gYFRoZSBwb3B1cCB3YXMgYmxvY2tlZC4gUGxlYXNlIG1ha2Ugc3VyZSAke2Jhc2VVcmx9IGlzIGFsbG93ZWQgdG8gb3BlbiBwb3B1cHMuYDtcbiAgICAgICAgcmV0dXJuIG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKG1zZywgQXV0aGVudGljYXRpb25FcnJvckNvZGUuUG9wdXBCbG9ja2VkKTtcbiAgICB9XG4gICAgLy8gdGhyb3cgQXV0aGVudGljYXRpb24gRXJyb3IuU2VydmVyRXJyb3IobWVzc2FnZSwgZGVzY3JpcHRpb24pXG4gICAgc3RhdGljIFNlcnZlckVycm9yKG1lc3NhZ2UsIGRlc2NyaXB0aW9uKSB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKGBFcnJvciBmcm9tIHRoZSBzZXJ2ZXI6ICR7bWVzc2FnZX1gLCBBdXRoZW50aWNhdGlvbkVycm9yQ29kZS5TZXJ2ZXJFcnJvcik7XG4gICAgICAgIGVyci5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICAvLyB0aHJvdyBBdXRoZW50aWNhdGlvbkVycm9yLkludmFsaWRDb25maWd1cmF0aW9uKClcbiAgICBzdGF0aWMgSW52YWxpZENvbmZpZ3VyYXRpb24ocmVhc29uKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXV0aGVudGljYXRpb25FcnJvcihgVGhlIE9BdXRoIENvbmZpZ3VyYXRpb24gaXMgaW52YWxpZDogJHtyZWFzb259YCwgQXV0aGVudGljYXRpb25FcnJvckNvZGUuSW52YWxpZENvbmZpZ3VyYXRpb24pO1xuICAgIH1cbn1cbmV4cG9ydHMuQXV0aGVudGljYXRpb25FcnJvciA9IEF1dGhlbnRpY2F0aW9uRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoZW50aWNhdGlvbi1lcnJvci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/errors/authentication-error.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/errors/parse-error.js":
/*!********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/errors/parse-error.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseError = exports.ParseErrorCode = void 0;\nvar ParseErrorCode;\n(function (ParseErrorCode) {\n    // Could not parse response as JSON\n    ParseErrorCode[ParseErrorCode[\"InvalidJSON\"] = 2000] = \"InvalidJSON\";\n    // Received an error response status,\n    // but not error body was provided.\n    ParseErrorCode[ParseErrorCode[\"NoErrorBody\"] = 2001] = \"NoErrorBody\";\n})(ParseErrorCode = exports.ParseErrorCode || (exports.ParseErrorCode = {}));\n/**\n * Represents an error that is thrown during decoding\n */\nclass ParseError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'ParseError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ParseError);\n        }\n        this.code = code;\n    }\n    static InvalidJSON() {\n        return new ParseError('Could not decode response as JSON', ParseErrorCode.InvalidJSON);\n    }\n    static UnknownError() {\n        return new ParseError('An unknown error occurred.', ParseErrorCode.NoErrorBody);\n    }\n}\nexports.ParseError = ParseError;\n//# sourceMappingURL=parse-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvZXJyb3JzL3BhcnNlLWVycm9yLmpzP2QyZDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5RUFBeUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvZXJyb3JzL3BhcnNlLWVycm9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBhcnNlRXJyb3IgPSBleHBvcnRzLlBhcnNlRXJyb3JDb2RlID0gdm9pZCAwO1xudmFyIFBhcnNlRXJyb3JDb2RlO1xuKGZ1bmN0aW9uIChQYXJzZUVycm9yQ29kZSkge1xuICAgIC8vIENvdWxkIG5vdCBwYXJzZSByZXNwb25zZSBhcyBKU09OXG4gICAgUGFyc2VFcnJvckNvZGVbUGFyc2VFcnJvckNvZGVbXCJJbnZhbGlkSlNPTlwiXSA9IDIwMDBdID0gXCJJbnZhbGlkSlNPTlwiO1xuICAgIC8vIFJlY2VpdmVkIGFuIGVycm9yIHJlc3BvbnNlIHN0YXR1cyxcbiAgICAvLyBidXQgbm90IGVycm9yIGJvZHkgd2FzIHByb3ZpZGVkLlxuICAgIFBhcnNlRXJyb3JDb2RlW1BhcnNlRXJyb3JDb2RlW1wiTm9FcnJvckJvZHlcIl0gPSAyMDAxXSA9IFwiTm9FcnJvckJvZHlcIjtcbn0pKFBhcnNlRXJyb3JDb2RlID0gZXhwb3J0cy5QYXJzZUVycm9yQ29kZSB8fCAoZXhwb3J0cy5QYXJzZUVycm9yQ29kZSA9IHt9KSk7XG4vKipcbiAqIFJlcHJlc2VudHMgYW4gZXJyb3IgdGhhdCBpcyB0aHJvd24gZHVyaW5nIGRlY29kaW5nXG4gKi9cbmNsYXNzIFBhcnNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgY29kZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1BhcnNlRXJyb3InO1xuICAgICAgICAvLyBNYWludGFpbnMgcHJvcGVyIHN0YWNrIHRyYWNlIGZvciB3aGVyZSBvdXIgZXJyb3Igd2FzIHRocm93biAob25seSBhdmFpbGFibGUgb24gVjgpXG4gICAgICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgICAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgUGFyc2VFcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB9XG4gICAgc3RhdGljIEludmFsaWRKU09OKCkge1xuICAgICAgICByZXR1cm4gbmV3IFBhcnNlRXJyb3IoJ0NvdWxkIG5vdCBkZWNvZGUgcmVzcG9uc2UgYXMgSlNPTicsIFBhcnNlRXJyb3JDb2RlLkludmFsaWRKU09OKTtcbiAgICB9XG4gICAgc3RhdGljIFVua25vd25FcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQYXJzZUVycm9yKCdBbiB1bmtub3duIGVycm9yIG9jY3VycmVkLicsIFBhcnNlRXJyb3JDb2RlLk5vRXJyb3JCb2R5KTtcbiAgICB9XG59XG5leHBvcnRzLlBhcnNlRXJyb3IgPSBQYXJzZUVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2UtZXJyb3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/errors/parse-error.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/errors/signer-error.js":
/*!*********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/errors/signer-error.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignerError = exports.SignerErrorCode = void 0;\nvar SignerErrorCode;\n(function (SignerErrorCode) {\n    // The signer module received a request to sign via an unsupported RPC method\n    SignerErrorCode[SignerErrorCode[\"UnsupportedMethod\"] = 3000] = \"UnsupportedMethod\";\n    // The user cancelled or rejected the transaction\n    SignerErrorCode[SignerErrorCode[\"UserCancelled\"] = 3001] = \"UserCancelled\";\n    // The request is missing params for the transaction.\n    // Check that params is an array, and the transaction is the first object.\n    SignerErrorCode[SignerErrorCode[\"MissingTransaction\"] = 3002] = \"MissingTransaction\";\n    // The message signature request is missing expected params.\n    // Check that params is an array, and that they include both a from address, and a message to sign.\n    SignerErrorCode[SignerErrorCode[\"MissingMessage\"] = 3003] = \"MissingMessage\";\n    // Missing from address in typed data request\n    SignerErrorCode[SignerErrorCode[\"MissingFrom\"] = 3004] = \"MissingFrom\";\n    // Missing typed data params. Make sure params is an array and includes\n    // both a from address, and a typed data payload.\n    SignerErrorCode[SignerErrorCode[\"MissingTypedData\"] = 3005] = \"MissingTypedData\";\n})(SignerErrorCode = exports.SignerErrorCode || (exports.SignerErrorCode = {}));\nclass SignerError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'TransactionError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, SignerError);\n        }\n        this.code = code;\n    }\n    static UnsupportedMethod() {\n        return new SignerError('The method requested is not currently supported.', SignerErrorCode.UnsupportedMethod);\n    }\n    static UserCancelled() {\n        return new SignerError('The user cancelled this transaction', SignerErrorCode.UserCancelled);\n    }\n    static MissingTransaction() {\n        return new SignerError('Could not find transaction in request', SignerErrorCode.MissingTransaction);\n    }\n    static MissingMessage() {\n        return new SignerError('Could not find message params in request', SignerErrorCode.MissingMessage);\n    }\n    static MissingFrom() {\n        return new SignerError('Could not find from address in request params.', SignerErrorCode.MissingFrom);\n    }\n    static MissingTypedData() {\n        return new SignerError('Could not find data to sign in request params.', SignerErrorCode.MissingTypedData);\n    }\n}\nexports.SignerError = SignerError;\n//# sourceMappingURL=signer-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvZXJyb3JzL3NpZ25lci1lcnJvci5qcz9kYjc3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0RUFBNEU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvZXJyb3JzL3NpZ25lci1lcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaWduZXJFcnJvciA9IGV4cG9ydHMuU2lnbmVyRXJyb3JDb2RlID0gdm9pZCAwO1xudmFyIFNpZ25lckVycm9yQ29kZTtcbihmdW5jdGlvbiAoU2lnbmVyRXJyb3JDb2RlKSB7XG4gICAgLy8gVGhlIHNpZ25lciBtb2R1bGUgcmVjZWl2ZWQgYSByZXF1ZXN0IHRvIHNpZ24gdmlhIGFuIHVuc3VwcG9ydGVkIFJQQyBtZXRob2RcbiAgICBTaWduZXJFcnJvckNvZGVbU2lnbmVyRXJyb3JDb2RlW1wiVW5zdXBwb3J0ZWRNZXRob2RcIl0gPSAzMDAwXSA9IFwiVW5zdXBwb3J0ZWRNZXRob2RcIjtcbiAgICAvLyBUaGUgdXNlciBjYW5jZWxsZWQgb3IgcmVqZWN0ZWQgdGhlIHRyYW5zYWN0aW9uXG4gICAgU2lnbmVyRXJyb3JDb2RlW1NpZ25lckVycm9yQ29kZVtcIlVzZXJDYW5jZWxsZWRcIl0gPSAzMDAxXSA9IFwiVXNlckNhbmNlbGxlZFwiO1xuICAgIC8vIFRoZSByZXF1ZXN0IGlzIG1pc3NpbmcgcGFyYW1zIGZvciB0aGUgdHJhbnNhY3Rpb24uXG4gICAgLy8gQ2hlY2sgdGhhdCBwYXJhbXMgaXMgYW4gYXJyYXksIGFuZCB0aGUgdHJhbnNhY3Rpb24gaXMgdGhlIGZpcnN0IG9iamVjdC5cbiAgICBTaWduZXJFcnJvckNvZGVbU2lnbmVyRXJyb3JDb2RlW1wiTWlzc2luZ1RyYW5zYWN0aW9uXCJdID0gMzAwMl0gPSBcIk1pc3NpbmdUcmFuc2FjdGlvblwiO1xuICAgIC8vIFRoZSBtZXNzYWdlIHNpZ25hdHVyZSByZXF1ZXN0IGlzIG1pc3NpbmcgZXhwZWN0ZWQgcGFyYW1zLlxuICAgIC8vIENoZWNrIHRoYXQgcGFyYW1zIGlzIGFuIGFycmF5LCBhbmQgdGhhdCB0aGV5IGluY2x1ZGUgYm90aCBhIGZyb20gYWRkcmVzcywgYW5kIGEgbWVzc2FnZSB0byBzaWduLlxuICAgIFNpZ25lckVycm9yQ29kZVtTaWduZXJFcnJvckNvZGVbXCJNaXNzaW5nTWVzc2FnZVwiXSA9IDMwMDNdID0gXCJNaXNzaW5nTWVzc2FnZVwiO1xuICAgIC8vIE1pc3NpbmcgZnJvbSBhZGRyZXNzIGluIHR5cGVkIGRhdGEgcmVxdWVzdFxuICAgIFNpZ25lckVycm9yQ29kZVtTaWduZXJFcnJvckNvZGVbXCJNaXNzaW5nRnJvbVwiXSA9IDMwMDRdID0gXCJNaXNzaW5nRnJvbVwiO1xuICAgIC8vIE1pc3NpbmcgdHlwZWQgZGF0YSBwYXJhbXMuIE1ha2Ugc3VyZSBwYXJhbXMgaXMgYW4gYXJyYXkgYW5kIGluY2x1ZGVzXG4gICAgLy8gYm90aCBhIGZyb20gYWRkcmVzcywgYW5kIGEgdHlwZWQgZGF0YSBwYXlsb2FkLlxuICAgIFNpZ25lckVycm9yQ29kZVtTaWduZXJFcnJvckNvZGVbXCJNaXNzaW5nVHlwZWREYXRhXCJdID0gMzAwNV0gPSBcIk1pc3NpbmdUeXBlZERhdGFcIjtcbn0pKFNpZ25lckVycm9yQ29kZSA9IGV4cG9ydHMuU2lnbmVyRXJyb3JDb2RlIHx8IChleHBvcnRzLlNpZ25lckVycm9yQ29kZSA9IHt9KSk7XG5jbGFzcyBTaWduZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb2RlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnVHJhbnNhY3Rpb25FcnJvcic7XG4gICAgICAgIC8vIE1haW50YWlucyBwcm9wZXIgc3RhY2sgdHJhY2UgZm9yIHdoZXJlIG91ciBlcnJvciB3YXMgdGhyb3duIChvbmx5IGF2YWlsYWJsZSBvbiBWOClcbiAgICAgICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBTaWduZXJFcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB9XG4gICAgc3RhdGljIFVuc3VwcG9ydGVkTWV0aG9kKCkge1xuICAgICAgICByZXR1cm4gbmV3IFNpZ25lckVycm9yKCdUaGUgbWV0aG9kIHJlcXVlc3RlZCBpcyBub3QgY3VycmVudGx5IHN1cHBvcnRlZC4nLCBTaWduZXJFcnJvckNvZGUuVW5zdXBwb3J0ZWRNZXRob2QpO1xuICAgIH1cbiAgICBzdGF0aWMgVXNlckNhbmNlbGxlZCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTaWduZXJFcnJvcignVGhlIHVzZXIgY2FuY2VsbGVkIHRoaXMgdHJhbnNhY3Rpb24nLCBTaWduZXJFcnJvckNvZGUuVXNlckNhbmNlbGxlZCk7XG4gICAgfVxuICAgIHN0YXRpYyBNaXNzaW5nVHJhbnNhY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBuZXcgU2lnbmVyRXJyb3IoJ0NvdWxkIG5vdCBmaW5kIHRyYW5zYWN0aW9uIGluIHJlcXVlc3QnLCBTaWduZXJFcnJvckNvZGUuTWlzc2luZ1RyYW5zYWN0aW9uKTtcbiAgICB9XG4gICAgc3RhdGljIE1pc3NpbmdNZXNzYWdlKCkge1xuICAgICAgICByZXR1cm4gbmV3IFNpZ25lckVycm9yKCdDb3VsZCBub3QgZmluZCBtZXNzYWdlIHBhcmFtcyBpbiByZXF1ZXN0JywgU2lnbmVyRXJyb3JDb2RlLk1pc3NpbmdNZXNzYWdlKTtcbiAgICB9XG4gICAgc3RhdGljIE1pc3NpbmdGcm9tKCkge1xuICAgICAgICByZXR1cm4gbmV3IFNpZ25lckVycm9yKCdDb3VsZCBub3QgZmluZCBmcm9tIGFkZHJlc3MgaW4gcmVxdWVzdCBwYXJhbXMuJywgU2lnbmVyRXJyb3JDb2RlLk1pc3NpbmdGcm9tKTtcbiAgICB9XG4gICAgc3RhdGljIE1pc3NpbmdUeXBlZERhdGEoKSB7XG4gICAgICAgIHJldHVybiBuZXcgU2lnbmVyRXJyb3IoJ0NvdWxkIG5vdCBmaW5kIGRhdGEgdG8gc2lnbiBpbiByZXF1ZXN0IHBhcmFtcy4nLCBTaWduZXJFcnJvckNvZGUuTWlzc2luZ1R5cGVkRGF0YSk7XG4gICAgfVxufVxuZXhwb3J0cy5TaWduZXJFcnJvciA9IFNpZ25lckVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmVyLWVycm9yLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/errors/signer-error.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/providers/bitski-browser-engine.js":
/*!*********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/providers/bitski-browser-engine.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitskiBrowserEngine = void 0;\nconst bitski_provider_1 = __webpack_require__(/*! bitski-provider */ \"../../node_modules/bitski-provider/lib/index.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst transaction_signer_1 = __webpack_require__(/*! ../signing/transaction-signer */ \"../../node_modules/bitski/lib/signing/transaction-signer.js\");\nconst authenticated_cache_1 = __webpack_require__(/*! ../subproviders/authenticated-cache */ \"../../node_modules/bitski/lib/subproviders/authenticated-cache.js\");\nconst remote_accounts_1 = __webpack_require__(/*! ../subproviders/remote-accounts */ \"../../node_modules/bitski/lib/subproviders/remote-accounts.js\");\nconst rest_fetch_1 = __webpack_require__(/*! ../subproviders/rest-fetch */ \"../../node_modules/bitski/lib/subproviders/rest-fetch.js\");\nconst signature_1 = __webpack_require__(/*! ../subproviders/signature */ \"../../node_modules/bitski/lib/subproviders/signature.js\");\n// Predicate to determine if the token provider is an AuthProvider\nfunction isAuthProvider(object) {\n    return object.getUser !== undefined;\n}\nclass BitskiBrowserEngine extends bitski_provider_1.BitskiEngine {\n    constructor(clientId, tokenProvider, sdkVersion, network, options = {}) {\n        super(options);\n        options = options || {};\n        this.network = network;\n        this.clientId = clientId;\n        this.sdkVersion = sdkVersion;\n        this.apiBaseUrl = options.apiBaseUrl || constants_1.BITSKI_TRANSACTION_API_BASE_URL;\n        this.webBaseUrl = options.webBaseUrl || constants_1.BITSKI_WEB_BASE_URL;\n        this.tokenProvider = tokenProvider;\n        const defaultBitskiHeaders = {\n            'X-API-KEY': this.clientId,\n            'X-CLIENT-ID': this.clientId,\n            'X-CLIENT-VERSION': this.sdkVersion,\n        };\n        this.headers = defaultBitskiHeaders;\n        this.rpcHeaders = {};\n        if (options && options.additionalHeaders) {\n            this.headers = Object.assign({}, options.additionalHeaders, this.headers);\n            this.rpcHeaders = options.additionalHeaders;\n        }\n        if (this.network && this.network.rpcUrl.includes('bitski.com')) {\n            this.rpcHeaders = Object.assign({}, this.rpcHeaders, defaultBitskiHeaders);\n        }\n        this.signer = new transaction_signer_1.BitskiTransactionSigner(this.webBaseUrl, this.apiBaseUrl, this.headers, options.callbackURL);\n        this.addSubproviders();\n    }\n    addSubproviders() {\n        // Used for eth_accounts calls\n        const accountsProvider = new remote_accounts_1.RemoteAccountSubprovider(`${constants_1.BITSKI_RPC_BASE_URL}/mainnet`, false, this.tokenProvider, this.headers);\n        // Used for all other calls\n        const fetchSubprovider = new bitski_provider_1.AuthenticatedFetchSubprovider(this.network.rpcUrl, false, this.tokenProvider, this.rpcHeaders);\n        // Respond to some requests via userinfo object if available\n        if (isAuthProvider(this.tokenProvider)) {\n            const cacheSubprovider = new authenticated_cache_1.AuthenticatedCacheSubprovider(this.tokenProvider, this);\n            this.addProvider(cacheSubprovider);\n        }\n        // Ensure that whenever accounts are requested, they go through Bitski\n        this.addProvider(accountsProvider);\n        // Respond to requests that need signed with an iframe\n        const signatureSubprovider = new signature_1.SignatureSubprovider(this.network, this.signer, this.tokenProvider);\n        this.addProvider(signatureSubprovider);\n        // Respond to block request via REST is using Bitski RPC endpoint\n        if (this.network.rpcUrl.startsWith('https://api.bitski.com')) {\n            const blockProvider = new rest_fetch_1.RestFetchSubprovider({\n                rpcUrl: this.network.rpcUrl,\n                defaultHeaders: this.headers,\n            });\n            this.addProvider(blockProvider);\n        }\n        // Finally, add our basic HTTP provider\n        this.addProvider(fetchSubprovider);\n    }\n}\nexports.BitskiBrowserEngine = BitskiBrowserEngine;\n//# sourceMappingURL=bitski-browser-engine.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvcHJvdmlkZXJzL2JpdHNraS1icm93c2VyLWVuZ2luZS5qcz85MDIyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyx3RUFBaUI7QUFDbkQsb0JBQW9CLG1CQUFPLENBQUMsZ0VBQWM7QUFDMUMsNkJBQTZCLG1CQUFPLENBQUMsa0dBQStCO0FBQ3BFLDhCQUE4QixtQkFBTyxDQUFDLDhHQUFxQztBQUMzRSwwQkFBMEIsbUJBQU8sQ0FBQyxzR0FBaUM7QUFDbkUscUJBQXFCLG1CQUFPLENBQUMsNEZBQTRCO0FBQ3pELG9CQUFvQixtQkFBTyxDQUFDLDBGQUEyQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRkFBbUYsZ0NBQWdDO0FBQ25IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpL2xpYi9wcm92aWRlcnMvYml0c2tpLWJyb3dzZXItZW5naW5lLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJpdHNraUJyb3dzZXJFbmdpbmUgPSB2b2lkIDA7XG5jb25zdCBiaXRza2lfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCJiaXRza2ktcHJvdmlkZXJcIik7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG5jb25zdCB0cmFuc2FjdGlvbl9zaWduZXJfMSA9IHJlcXVpcmUoXCIuLi9zaWduaW5nL3RyYW5zYWN0aW9uLXNpZ25lclwiKTtcbmNvbnN0IGF1dGhlbnRpY2F0ZWRfY2FjaGVfMSA9IHJlcXVpcmUoXCIuLi9zdWJwcm92aWRlcnMvYXV0aGVudGljYXRlZC1jYWNoZVwiKTtcbmNvbnN0IHJlbW90ZV9hY2NvdW50c18xID0gcmVxdWlyZShcIi4uL3N1YnByb3ZpZGVycy9yZW1vdGUtYWNjb3VudHNcIik7XG5jb25zdCByZXN0X2ZldGNoXzEgPSByZXF1aXJlKFwiLi4vc3VicHJvdmlkZXJzL3Jlc3QtZmV0Y2hcIik7XG5jb25zdCBzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuLi9zdWJwcm92aWRlcnMvc2lnbmF0dXJlXCIpO1xuLy8gUHJlZGljYXRlIHRvIGRldGVybWluZSBpZiB0aGUgdG9rZW4gcHJvdmlkZXIgaXMgYW4gQXV0aFByb3ZpZGVyXG5mdW5jdGlvbiBpc0F1dGhQcm92aWRlcihvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0LmdldFVzZXIgIT09IHVuZGVmaW5lZDtcbn1cbmNsYXNzIEJpdHNraUJyb3dzZXJFbmdpbmUgZXh0ZW5kcyBiaXRza2lfcHJvdmlkZXJfMS5CaXRza2lFbmdpbmUge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudElkLCB0b2tlblByb3ZpZGVyLCBzZGtWZXJzaW9uLCBuZXR3b3JrLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XG4gICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICB0aGlzLm5ldHdvcmsgPSBuZXR3b3JrO1xuICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XG4gICAgICAgIHRoaXMuc2RrVmVyc2lvbiA9IHNka1ZlcnNpb247XG4gICAgICAgIHRoaXMuYXBpQmFzZVVybCA9IG9wdGlvbnMuYXBpQmFzZVVybCB8fCBjb25zdGFudHNfMS5CSVRTS0lfVFJBTlNBQ1RJT05fQVBJX0JBU0VfVVJMO1xuICAgICAgICB0aGlzLndlYkJhc2VVcmwgPSBvcHRpb25zLndlYkJhc2VVcmwgfHwgY29uc3RhbnRzXzEuQklUU0tJX1dFQl9CQVNFX1VSTDtcbiAgICAgICAgdGhpcy50b2tlblByb3ZpZGVyID0gdG9rZW5Qcm92aWRlcjtcbiAgICAgICAgY29uc3QgZGVmYXVsdEJpdHNraUhlYWRlcnMgPSB7XG4gICAgICAgICAgICAnWC1BUEktS0VZJzogdGhpcy5jbGllbnRJZCxcbiAgICAgICAgICAgICdYLUNMSUVOVC1JRCc6IHRoaXMuY2xpZW50SWQsXG4gICAgICAgICAgICAnWC1DTElFTlQtVkVSU0lPTic6IHRoaXMuc2RrVmVyc2lvbixcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gZGVmYXVsdEJpdHNraUhlYWRlcnM7XG4gICAgICAgIHRoaXMucnBjSGVhZGVycyA9IHt9O1xuICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmFkZGl0aW9uYWxIZWFkZXJzKSB7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLmFkZGl0aW9uYWxIZWFkZXJzLCB0aGlzLmhlYWRlcnMpO1xuICAgICAgICAgICAgdGhpcy5ycGNIZWFkZXJzID0gb3B0aW9ucy5hZGRpdGlvbmFsSGVhZGVycztcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5uZXR3b3JrICYmIHRoaXMubmV0d29yay5ycGNVcmwuaW5jbHVkZXMoJ2JpdHNraS5jb20nKSkge1xuICAgICAgICAgICAgdGhpcy5ycGNIZWFkZXJzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5ycGNIZWFkZXJzLCBkZWZhdWx0Qml0c2tpSGVhZGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zaWduZXIgPSBuZXcgdHJhbnNhY3Rpb25fc2lnbmVyXzEuQml0c2tpVHJhbnNhY3Rpb25TaWduZXIodGhpcy53ZWJCYXNlVXJsLCB0aGlzLmFwaUJhc2VVcmwsIHRoaXMuaGVhZGVycywgb3B0aW9ucy5jYWxsYmFja1VSTCk7XG4gICAgICAgIHRoaXMuYWRkU3VicHJvdmlkZXJzKCk7XG4gICAgfVxuICAgIGFkZFN1YnByb3ZpZGVycygpIHtcbiAgICAgICAgLy8gVXNlZCBmb3IgZXRoX2FjY291bnRzIGNhbGxzXG4gICAgICAgIGNvbnN0IGFjY291bnRzUHJvdmlkZXIgPSBuZXcgcmVtb3RlX2FjY291bnRzXzEuUmVtb3RlQWNjb3VudFN1YnByb3ZpZGVyKGAke2NvbnN0YW50c18xLkJJVFNLSV9SUENfQkFTRV9VUkx9L21haW5uZXRgLCBmYWxzZSwgdGhpcy50b2tlblByb3ZpZGVyLCB0aGlzLmhlYWRlcnMpO1xuICAgICAgICAvLyBVc2VkIGZvciBhbGwgb3RoZXIgY2FsbHNcbiAgICAgICAgY29uc3QgZmV0Y2hTdWJwcm92aWRlciA9IG5ldyBiaXRza2lfcHJvdmlkZXJfMS5BdXRoZW50aWNhdGVkRmV0Y2hTdWJwcm92aWRlcih0aGlzLm5ldHdvcmsucnBjVXJsLCBmYWxzZSwgdGhpcy50b2tlblByb3ZpZGVyLCB0aGlzLnJwY0hlYWRlcnMpO1xuICAgICAgICAvLyBSZXNwb25kIHRvIHNvbWUgcmVxdWVzdHMgdmlhIHVzZXJpbmZvIG9iamVjdCBpZiBhdmFpbGFibGVcbiAgICAgICAgaWYgKGlzQXV0aFByb3ZpZGVyKHRoaXMudG9rZW5Qcm92aWRlcikpIHtcbiAgICAgICAgICAgIGNvbnN0IGNhY2hlU3VicHJvdmlkZXIgPSBuZXcgYXV0aGVudGljYXRlZF9jYWNoZV8xLkF1dGhlbnRpY2F0ZWRDYWNoZVN1YnByb3ZpZGVyKHRoaXMudG9rZW5Qcm92aWRlciwgdGhpcyk7XG4gICAgICAgICAgICB0aGlzLmFkZFByb3ZpZGVyKGNhY2hlU3VicHJvdmlkZXIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEVuc3VyZSB0aGF0IHdoZW5ldmVyIGFjY291bnRzIGFyZSByZXF1ZXN0ZWQsIHRoZXkgZ28gdGhyb3VnaCBCaXRza2lcbiAgICAgICAgdGhpcy5hZGRQcm92aWRlcihhY2NvdW50c1Byb3ZpZGVyKTtcbiAgICAgICAgLy8gUmVzcG9uZCB0byByZXF1ZXN0cyB0aGF0IG5lZWQgc2lnbmVkIHdpdGggYW4gaWZyYW1lXG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZVN1YnByb3ZpZGVyID0gbmV3IHNpZ25hdHVyZV8xLlNpZ25hdHVyZVN1YnByb3ZpZGVyKHRoaXMubmV0d29yaywgdGhpcy5zaWduZXIsIHRoaXMudG9rZW5Qcm92aWRlcik7XG4gICAgICAgIHRoaXMuYWRkUHJvdmlkZXIoc2lnbmF0dXJlU3VicHJvdmlkZXIpO1xuICAgICAgICAvLyBSZXNwb25kIHRvIGJsb2NrIHJlcXVlc3QgdmlhIFJFU1QgaXMgdXNpbmcgQml0c2tpIFJQQyBlbmRwb2ludFxuICAgICAgICBpZiAodGhpcy5uZXR3b3JrLnJwY1VybC5zdGFydHNXaXRoKCdodHRwczovL2FwaS5iaXRza2kuY29tJykpIHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrUHJvdmlkZXIgPSBuZXcgcmVzdF9mZXRjaF8xLlJlc3RGZXRjaFN1YnByb3ZpZGVyKHtcbiAgICAgICAgICAgICAgICBycGNVcmw6IHRoaXMubmV0d29yay5ycGNVcmwsXG4gICAgICAgICAgICAgICAgZGVmYXVsdEhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5hZGRQcm92aWRlcihibG9ja1Byb3ZpZGVyKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBGaW5hbGx5LCBhZGQgb3VyIGJhc2ljIEhUVFAgcHJvdmlkZXJcbiAgICAgICAgdGhpcy5hZGRQcm92aWRlcihmZXRjaFN1YnByb3ZpZGVyKTtcbiAgICB9XG59XG5leHBvcnRzLkJpdHNraUJyb3dzZXJFbmdpbmUgPSBCaXRza2lCcm93c2VyRW5naW5lO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Yml0c2tpLWJyb3dzZXItZW5naW5lLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/providers/bitski-browser-engine.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/signing/transaction-signer.js":
/*!****************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/signing/transaction-signer.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitskiTransactionSigner = void 0;\nconst async_1 = __webpack_require__(/*! async */ \"../../node_modules/async/dist/async.js\");\nconst dialog_1 = __webpack_require__(/*! ../components/dialog */ \"../../node_modules/bitski/lib/components/dialog.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst signer_error_1 = __webpack_require__(/*! ../errors/signer-error */ \"../../node_modules/bitski/lib/errors/signer-error.js\");\nconst request_utils_1 = __webpack_require__(/*! ../utils/request-utils */ \"../../node_modules/bitski/lib/utils/request-utils.js\");\n/**\n * This class is responsible for signing transactions. It only knows about Bitski's proprietary transaction objects.\n * It is also the only class that knows about the iframe signing implementation.\n */\nclass BitskiTransactionSigner {\n    constructor(webBaseUrl, apiBaseUrl, defaultHeaders, callbackURL) {\n        this.webBaseUrl = webBaseUrl;\n        this.apiBaseUrl = apiBaseUrl;\n        this.defaultHeaders = defaultHeaders;\n        this.callbackURL = callbackURL;\n        // Watch for new messages on the window.\n        window.addEventListener('message', this.receiveMessage.bind(this), false);\n    }\n    async sign(transaction, accessToken) {\n        // If we have a callback URL, use the redirect flow\n        if (this.callbackURL) {\n            const persisted = await this.submitTransaction(transaction, accessToken);\n            return this.redirectToCallbackURL(persisted.transaction);\n        }\n        this.submitTransaction(transaction, accessToken).catch((error) => {\n            return this.handleCallback({ error });\n        });\n        // Show the modal (await response)\n        return this.showAuthorizationModal(transaction);\n    }\n    /**\n     * Event listener for callbacks from the iframe\n     * @param event MessageEvent received from the browser\n     */\n    receiveMessage(event) {\n        // Ignore messages from the current window, and from frames that aren't on Bitski.com\n        if (event.source === window || !event.origin.includes(constants_1.IFRAME_MESSAGE_ORIGIN_INCLUDES)) {\n            return;\n        }\n        const data = event.data;\n        // Ignore message events that don't actually have data\n        if (data === undefined || data === null) {\n            return;\n        }\n        this.handleCallback(data);\n    }\n    handleCallback(callback) {\n        // Ignore messages when we don't have a current request in flight\n        if (this.currentRequest === undefined) {\n            return;\n        }\n        const [fulfill, reject] = this.currentRequest;\n        // Dismiss current dialog\n        if (this.currentRequestDialog) {\n            this.currentRequestDialog.dismiss();\n        }\n        // Call the callback to complete the request\n        if (callback.error) {\n            reject(callback.error);\n        }\n        else {\n            fulfill(callback.result);\n        }\n        // Clear state\n        this.currentRequest = undefined;\n        this.currentRequestDialog = undefined;\n    }\n    /**\n     * Responsible for submitting the Transaction object to the API\n     * @param transaction The Transaction object to submit\n     * @param accessToken The current user's access token\n     */\n    async submitTransaction(transaction, accessToken) {\n        const requestBody = { transaction };\n        const headers = Object.assign({}, this.defaultHeaders, {\n            Authorization: `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n        });\n        const parsed = await (0, async_1.retry)({ times: 5 }, async () => {\n            const response = await fetch(`${this.apiBaseUrl}/transactions`, {\n                method: 'POST',\n                body: JSON.stringify(requestBody),\n                headers,\n            });\n            return (0, request_utils_1.parseResponse)(response);\n        });\n        return parsed;\n    }\n    /**\n     * Displays the authorization form in a modal window\n     * @param transaction The transaction that has been submitted\n     */\n    showAuthorizationModal(transaction) {\n        return new Promise((fulfill, reject) => {\n            const url = `${this.webBaseUrl}/transactions/${transaction.id}`;\n            const iframe = document.createElement('iframe');\n            iframe.style.position = 'absolute';\n            iframe.style.top = '0';\n            iframe.style.left = '0';\n            iframe.style.width = '100%';\n            iframe.style.height = '100%';\n            iframe.frameBorder = '0';\n            iframe.src = url;\n            // Dismiss any existing dialogs to prevent UI glitches.\n            if (this.currentRequestDialog) {\n                this.currentRequestDialog.close();\n            }\n            this.currentRequest = [fulfill, reject];\n            this.currentRequestDialog = new dialog_1.Dialog(iframe, true);\n            this.currentRequestDialog.onClose = () => {\n                // Capture reject callback\n                reject(signer_error_1.SignerError.UserCancelled());\n            };\n        });\n    }\n    redirectToCallbackURL(transaction) {\n        const url = `${this.webBaseUrl}/transactions/${transaction.id}?redirectURI=${this.callbackURL}`;\n        window.location.href = url;\n        return Promise.resolve('');\n    }\n}\nexports.BitskiTransactionSigner = BitskiTransactionSigner;\n//# sourceMappingURL=transaction-signer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/signing/transaction-signer.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/styles/connect-button.js":
/*!***********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/styles/connect-button.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* tslint:disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst css = `\n.bitski-connect-button {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, 'Helvetica Neue', sans-serif;\n  font-weight: 500;\n  background-color: #1C11D9;\n  background-repeat: no-repeat;\n  background-position: 0px 0px;\n  border: none;\n  color: #fff;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  text-shadow: 1px 0 1px rgba(0, 0, 0, 0.03);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.14);\n  transition: background 200ms linear, transform 200ms ease-out;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.bitski-connect-button:focus,\n.bitski-connect-button:active {\n  background-color: #2117C7;\n  transform: scale(0.99, 0.99);\n  color: rgba(255, 255, 255, 0.8);\n}\n.bitski-connect-button.size-small {\n  background-image: url('https://cdn.bitskistatic.com/sdk/btn-v2-bg-sm.svg');\n  border-radius: 3px;\n  font-size: 10px;\n  height: 22px;\n  line-height: 19px;\n  padding-left: 30px;\n  padding-right: 8px;\n}\n.bitski-connect-button.size-medium {\n  background-image: url('https://cdn.bitskistatic.com/sdk/btn-v2-bg-md.svg');\n  border-radius: 4px;\n  font-size: 11px;\n  height: 30px;\n  line-height: 29px;\n  padding-left: 40px;\n  padding-right: 12px;\n}\n.bitski-connect-button.size-large {\n  background-image: url('https://cdn.bitskistatic.com/sdk/btn-v2-bg-lg.svg');\n  border-radius: 5px;\n  font-size: 14px;\n  height: 44px;\n  line-height: 44px;\n  padding-left: 57px;\n  padding-right: 15px;\n}\n`;\nexports.default = css;\n//# sourceMappingURL=connect-button.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvc3R5bGVzL2Nvbm5lY3QtYnV0dG9uLmpzPzJjZjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvc3R5bGVzL2Nvbm5lY3QtYnV0dG9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3NzID0gYFxuLmJpdHNraS1jb25uZWN0LWJ1dHRvbiB7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUMxMUQ5O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggMHB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1zaGFkb3c6IDFweCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMDMpO1xuICBib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE0KTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAyMDBtcyBsaW5lYXIsIHRyYW5zZm9ybSAyMDBtcyBlYXNlLW91dDtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbi5iaXRza2ktY29ubmVjdC1idXR0b246Zm9jdXMsXG4uYml0c2tpLWNvbm5lY3QtYnV0dG9uOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTE3Qzc7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC45OSwgMC45OSk7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG59XG4uYml0c2tpLWNvbm5lY3QtYnV0dG9uLnNpemUtc21hbGwge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vY2RuLmJpdHNraXN0YXRpYy5jb20vc2RrL2J0bi12Mi1iZy1zbS5zdmcnKTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBmb250LXNpemU6IDEwcHg7XG4gIGhlaWdodDogMjJweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xufVxuLmJpdHNraS1jb25uZWN0LWJ1dHRvbi5zaXplLW1lZGl1bSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9jZG4uYml0c2tpc3RhdGljLmNvbS9zZGsvYnRuLXYyLWJnLW1kLnN2ZycpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBsaW5lLWhlaWdodDogMjlweDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xufVxuLmJpdHNraS1jb25uZWN0LWJ1dHRvbi5zaXplLWxhcmdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL2Nkbi5iaXRza2lzdGF0aWMuY29tL3Nkay9idG4tdjItYmctbGcuc3ZnJyk7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBoZWlnaHQ6IDQ0cHg7XG4gIGxpbmUtaGVpZ2h0OiA0NHB4O1xuICBwYWRkaW5nLWxlZnQ6IDU3cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG59XG5gO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3NzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdC1idXR0b24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/styles/connect-button.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/styles/dialog.js":
/*!***************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/styles/dialog.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* tslint:disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst css = `\n#bitski-dialog-container {\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0);\n  z-index: 1000;\n  transition: background linear 0.2s;\n  pointer-events: none;\n}\n#bitski-dialog-container.bitski-visible {\n  background: rgba(0, 0, 0, 0.5);\n  pointer-events: auto;\n}\n.bitski-dialog {\n  opacity: 0;\n  transform: translateY(100vh);\n  transition: opacity 300ms linear, transform 400ms cubic-bezier(0.19, 1, 0.22, 1);\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n#bitski-dialog-container.bitski-visible .bitski-dialog {\n  opacity: 1;\n  transform: none;\n  transition: opacity 300ms linear, transform 600ms cubic-bezier(0.19, 1, 0.22, 1);\n  pointer-events: auto;\n}\n.bitski-dialog .bitski-close-button {\n  background: transparent url('https://cdn.bitskistatic.com/sdk/close.svg') no-repeat 50% 50%;\n  position: absolute;\n  right: 12px;\n  top: 12px;\n  border: none;\n  outline: none;\n  margin: 0;\n  cursor: pointer;\n  padding: 0;\n  width: 28px;\n  height: 28px;\n  z-index: 100;\n  overflow: hidden;\n  text-indent: -1000px;\n}\n.bitski-dialog-body {\n  background: #fff;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 5;\n  max-width: 100%;\n}\n.bitski-dialog-body.bitski-loading::after {\n  content: \"\";\n  background: url('https://cdn.bitskistatic.com/sdk/loading.svg') no-repeat 50% 50%;\n  animation: rotate 600ms linear infinite;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  opacity: 0.3;\n  width: 38px;\n  height: 38px;\n  margin-left: -19px;\n  margin-top: -19px;\n  z-index: -1;\n}\n@media (min-width: 600px) {\n  #bitski-dialog-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .bitski-dialog {\n    position: relative;\n    width: 400px;\n    height: 420px;\n  }\n  .bitski-dialog-body {\n    border-radius: 16px;\n    overflow: hidden;\n    box-shadow: 0px 0px 0px 1px rgba(0,0,0,0.1), 0px 10px 50px rgba(0,0,0,0.4);\n  }\n}\n\n@keyframes rotate {\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n`;\nexports.default = css;\n//# sourceMappingURL=dialog.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvc3R5bGVzL2RpYWxvZy5qcz9iZTQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpL2xpYi9zdHlsZXMvZGlhbG9nLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3NzID0gYFxuI2JpdHNraS1kaWFsb2ctY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIHotaW5kZXg6IDEwMDA7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgbGluZWFyIDAuMnM7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuI2JpdHNraS1kaWFsb2ctY29udGFpbmVyLmJpdHNraS12aXNpYmxlIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbn1cbi5iaXRza2ktZGlhbG9nIHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMHZoKTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMDBtcyBsaW5lYXIsIHRyYW5zZm9ybSA0MDBtcyBjdWJpYy1iZXppZXIoMC4xOSwgMSwgMC4yMiwgMSk7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbiNiaXRza2ktZGlhbG9nLWNvbnRhaW5lci5iaXRza2ktdmlzaWJsZSAuYml0c2tpLWRpYWxvZyB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zZm9ybTogbm9uZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMDBtcyBsaW5lYXIsIHRyYW5zZm9ybSA2MDBtcyBjdWJpYy1iZXppZXIoMC4xOSwgMSwgMC4yMiwgMSk7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xufVxuLmJpdHNraS1kaWFsb2cgLmJpdHNraS1jbG9zZS1idXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoJ2h0dHBzOi8vY2RuLmJpdHNraXN0YXRpYy5jb20vc2RrL2Nsb3NlLnN2ZycpIG5vLXJlcGVhdCA1MCUgNTAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxMnB4O1xuICB0b3A6IDEycHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAyOHB4O1xuICBoZWlnaHQ6IDI4cHg7XG4gIHotaW5kZXg6IDEwMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1pbmRlbnQ6IC0xMDAwcHg7XG59XG4uYml0c2tpLWRpYWxvZy1ib2R5IHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHotaW5kZXg6IDU7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi5iaXRza2ktZGlhbG9nLWJvZHkuYml0c2tpLWxvYWRpbmc6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL2Nkbi5iaXRza2lzdGF0aWMuY29tL3Nkay9sb2FkaW5nLnN2ZycpIG5vLXJlcGVhdCA1MCUgNTAlO1xuICBhbmltYXRpb246IHJvdGF0ZSA2MDBtcyBsaW5lYXIgaW5maW5pdGU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgb3BhY2l0eTogMC4zO1xuICB3aWR0aDogMzhweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICBtYXJnaW4tbGVmdDogLTE5cHg7XG4gIG1hcmdpbi10b3A6IC0xOXB4O1xuICB6LWluZGV4OiAtMTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAjYml0c2tpLWRpYWxvZy1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuICAuYml0c2tpLWRpYWxvZyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiA0MDBweDtcbiAgICBoZWlnaHQ6IDQyMHB4O1xuICB9XG4gIC5iaXRza2ktZGlhbG9nLWJvZHkge1xuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAxcHggcmdiYSgwLDAsMCwwLjEpLCAwcHggMTBweCA1MHB4IHJnYmEoMCwwLDAsMC40KTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHJvdGF0ZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuYDtcbmV4cG9ydHMuZGVmYXVsdCA9IGNzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpYWxvZy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/styles/dialog.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/styles/index.js":
/*!**************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/styles/index.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* tslint:disable */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst connect_button_1 = __importDefault(__webpack_require__(/*! ./connect-button */ \"../../node_modules/bitski/lib/styles/connect-button.js\"));\nconst dialog_1 = __importDefault(__webpack_require__(/*! ./dialog */ \"../../node_modules/bitski/lib/styles/dialog.js\"));\nconst css = `\n  ${dialog_1.default}\n  ${connect_button_1.default}\n`;\nexports.default = css;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvc3R5bGVzL2luZGV4LmpzPzZjOTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQseUNBQXlDLG1CQUFPLENBQUMsZ0ZBQWtCO0FBQ25FLGlDQUFpQyxtQkFBTyxDQUFDLGdFQUFVO0FBQ25EO0FBQ0EsSUFBSTtBQUNKLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvc3R5bGVzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY29ubmVjdF9idXR0b25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9jb25uZWN0LWJ1dHRvblwiKSk7XG5jb25zdCBkaWFsb2dfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9kaWFsb2dcIikpO1xuY29uc3QgY3NzID0gYFxuICAke2RpYWxvZ18xLmRlZmF1bHR9XG4gICR7Y29ubmVjdF9idXR0b25fMS5kZWZhdWx0fVxuYDtcbmV4cG9ydHMuZGVmYXVsdCA9IGNzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/styles/index.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/subproviders/authenticated-cache.js":
/*!**********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/subproviders/authenticated-cache.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticatedCacheSubprovider = void 0;\nconst provider_engine_1 = __webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\n/*\n * Subprovider that caches values related to the user.\n */\nclass AuthenticatedCacheSubprovider extends provider_engine_1.Subprovider {\n    constructor(authProvider, engine) {\n        super();\n        this.authProvider = authProvider;\n        this.cachedValues = new Map();\n        if (engine) {\n            engine.on('signOut', () => this.cachedValues.clear());\n        }\n    }\n    handleRequest(payload, next, end) {\n        // Only evaluate matching methods\n        if (this.supportsCache(payload.method) === false) {\n            return next();\n        }\n        // Allow overriding the cache\n        if (payload.skipCache) {\n            return next();\n        }\n        // Load from cache\n        this.checkCachedValues(payload.method)\n            .then((value) => {\n            if (value !== undefined) {\n                // Value for method is cached, return value\n                end(undefined, value);\n            }\n            else {\n                // Value for method is not cached, fallback to fetch\n                next();\n            }\n        })\n            .catch(() => {\n            // If method is not supported, or we encounter an error, fallback to fetch provider\n            return next();\n        });\n    }\n    supportsCache(methodName) {\n        return constants_1.CACHED_METHODS.includes(methodName);\n    }\n    checkCachedValues(methodName) {\n        // First, check in-memory cache\n        if (this.cachedValues.has(methodName)) {\n            return Promise.resolve(this.cachedValues.get(methodName));\n        }\n        // Fallback to local-storage cache\n        switch (methodName) {\n            case 'eth_accounts':\n                return this.getAccounts();\n            default:\n                return Promise.reject(new Error('Method not supported'));\n        }\n    }\n    getAccounts() {\n        // TODO: Move this to a subscription model and load into memory automatically\n        return this.authProvider.getUser().then((user) => {\n            if (user.accounts) {\n                this.cachedValues.set('eth_accounts', user.accounts);\n                return user.accounts;\n            }\n            throw new Error('Accounts not found on user');\n        });\n    }\n}\nexports.AuthenticatedCacheSubprovider = AuthenticatedCacheSubprovider;\n//# sourceMappingURL=authenticated-cache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvc3VicHJvdmlkZXJzL2F1dGhlbnRpY2F0ZWQtY2FjaGUuanM/MDA1NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsMEJBQTBCLG1CQUFPLENBQUMsa0dBQXlCO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLGdFQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL3N1YnByb3ZpZGVycy9hdXRoZW50aWNhdGVkLWNhY2hlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1dGhlbnRpY2F0ZWRDYWNoZVN1YnByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgcHJvdmlkZXJfZW5naW5lXzEgPSByZXF1aXJlKFwiQGJpdHNraS9wcm92aWRlci1lbmdpbmVcIik7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG4vKlxuICogU3VicHJvdmlkZXIgdGhhdCBjYWNoZXMgdmFsdWVzIHJlbGF0ZWQgdG8gdGhlIHVzZXIuXG4gKi9cbmNsYXNzIEF1dGhlbnRpY2F0ZWRDYWNoZVN1YnByb3ZpZGVyIGV4dGVuZHMgcHJvdmlkZXJfZW5naW5lXzEuU3VicHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKGF1dGhQcm92aWRlciwgZW5naW5lKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuYXV0aFByb3ZpZGVyID0gYXV0aFByb3ZpZGVyO1xuICAgICAgICB0aGlzLmNhY2hlZFZhbHVlcyA9IG5ldyBNYXAoKTtcbiAgICAgICAgaWYgKGVuZ2luZSkge1xuICAgICAgICAgICAgZW5naW5lLm9uKCdzaWduT3V0JywgKCkgPT4gdGhpcy5jYWNoZWRWYWx1ZXMuY2xlYXIoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpIHtcbiAgICAgICAgLy8gT25seSBldmFsdWF0ZSBtYXRjaGluZyBtZXRob2RzXG4gICAgICAgIGlmICh0aGlzLnN1cHBvcnRzQ2FjaGUocGF5bG9hZC5tZXRob2QpID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5leHQoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBbGxvdyBvdmVycmlkaW5nIHRoZSBjYWNoZVxuICAgICAgICBpZiAocGF5bG9hZC5za2lwQ2FjaGUpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gTG9hZCBmcm9tIGNhY2hlXG4gICAgICAgIHRoaXMuY2hlY2tDYWNoZWRWYWx1ZXMocGF5bG9hZC5tZXRob2QpXG4gICAgICAgICAgICAudGhlbigodmFsdWUpID0+IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgLy8gVmFsdWUgZm9yIG1ldGhvZCBpcyBjYWNoZWQsIHJldHVybiB2YWx1ZVxuICAgICAgICAgICAgICAgIGVuZCh1bmRlZmluZWQsIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFZhbHVlIGZvciBtZXRob2QgaXMgbm90IGNhY2hlZCwgZmFsbGJhY2sgdG8gZmV0Y2hcbiAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgICAgICAgLy8gSWYgbWV0aG9kIGlzIG5vdCBzdXBwb3J0ZWQsIG9yIHdlIGVuY291bnRlciBhbiBlcnJvciwgZmFsbGJhY2sgdG8gZmV0Y2ggcHJvdmlkZXJcbiAgICAgICAgICAgIHJldHVybiBuZXh0KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdXBwb3J0c0NhY2hlKG1ldGhvZE5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGNvbnN0YW50c18xLkNBQ0hFRF9NRVRIT0RTLmluY2x1ZGVzKG1ldGhvZE5hbWUpO1xuICAgIH1cbiAgICBjaGVja0NhY2hlZFZhbHVlcyhtZXRob2ROYW1lKSB7XG4gICAgICAgIC8vIEZpcnN0LCBjaGVjayBpbi1tZW1vcnkgY2FjaGVcbiAgICAgICAgaWYgKHRoaXMuY2FjaGVkVmFsdWVzLmhhcyhtZXRob2ROYW1lKSkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmNhY2hlZFZhbHVlcy5nZXQobWV0aG9kTmFtZSkpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEZhbGxiYWNrIHRvIGxvY2FsLXN0b3JhZ2UgY2FjaGVcbiAgICAgICAgc3dpdGNoIChtZXRob2ROYW1lKSB7XG4gICAgICAgICAgICBjYXNlICdldGhfYWNjb3VudHMnOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEFjY291bnRzKCk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ01ldGhvZCBub3Qgc3VwcG9ydGVkJykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldEFjY291bnRzKCkge1xuICAgICAgICAvLyBUT0RPOiBNb3ZlIHRoaXMgdG8gYSBzdWJzY3JpcHRpb24gbW9kZWwgYW5kIGxvYWQgaW50byBtZW1vcnkgYXV0b21hdGljYWxseVxuICAgICAgICByZXR1cm4gdGhpcy5hdXRoUHJvdmlkZXIuZ2V0VXNlcigpLnRoZW4oKHVzZXIpID0+IHtcbiAgICAgICAgICAgIGlmICh1c2VyLmFjY291bnRzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZWRWYWx1ZXMuc2V0KCdldGhfYWNjb3VudHMnLCB1c2VyLmFjY291bnRzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXNlci5hY2NvdW50cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQWNjb3VudHMgbm90IGZvdW5kIG9uIHVzZXInKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5BdXRoZW50aWNhdGVkQ2FjaGVTdWJwcm92aWRlciA9IEF1dGhlbnRpY2F0ZWRDYWNoZVN1YnByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aGVudGljYXRlZC1jYWNoZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/subproviders/authenticated-cache.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/subproviders/remote-accounts.js":
/*!******************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/subproviders/remote-accounts.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoteAccountSubprovider = void 0;\nconst bitski_provider_1 = __webpack_require__(/*! bitski-provider */ \"../../node_modules/bitski-provider/lib/index.js\");\n// A subprovider that loads accounts from a custom rpc endpoint.\n// This is necessary because to guarantee that account related calls go through Bitski\nclass RemoteAccountSubprovider extends bitski_provider_1.AuthenticatedFetchSubprovider {\n    handleRequest(payload, next, end) {\n        if (payload.method === 'eth_accounts') {\n            this.handleAuthenticatedRequest(payload, next, end);\n        }\n        else {\n            next();\n        }\n    }\n}\nexports.RemoteAccountSubprovider = RemoteAccountSubprovider;\n//# sourceMappingURL=remote-accounts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvc3VicHJvdmlkZXJzL3JlbW90ZS1hY2NvdW50cy5qcz8xMzkzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyx3RUFBaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpL2xpYi9zdWJwcm92aWRlcnMvcmVtb3RlLWFjY291bnRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlbW90ZUFjY291bnRTdWJwcm92aWRlciA9IHZvaWQgMDtcbmNvbnN0IGJpdHNraV9wcm92aWRlcl8xID0gcmVxdWlyZShcImJpdHNraS1wcm92aWRlclwiKTtcbi8vIEEgc3VicHJvdmlkZXIgdGhhdCBsb2FkcyBhY2NvdW50cyBmcm9tIGEgY3VzdG9tIHJwYyBlbmRwb2ludC5cbi8vIFRoaXMgaXMgbmVjZXNzYXJ5IGJlY2F1c2UgdG8gZ3VhcmFudGVlIHRoYXQgYWNjb3VudCByZWxhdGVkIGNhbGxzIGdvIHRocm91Z2ggQml0c2tpXG5jbGFzcyBSZW1vdGVBY2NvdW50U3VicHJvdmlkZXIgZXh0ZW5kcyBiaXRza2lfcHJvdmlkZXJfMS5BdXRoZW50aWNhdGVkRmV0Y2hTdWJwcm92aWRlciB7XG4gICAgaGFuZGxlUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpIHtcbiAgICAgICAgaWYgKHBheWxvYWQubWV0aG9kID09PSAnZXRoX2FjY291bnRzJykge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVBdXRoZW50aWNhdGVkUmVxdWVzdChwYXlsb2FkLCBuZXh0LCBlbmQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5SZW1vdGVBY2NvdW50U3VicHJvdmlkZXIgPSBSZW1vdGVBY2NvdW50U3VicHJvdmlkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdGUtYWNjb3VudHMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/subproviders/remote-accounts.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/subproviders/rest-fetch.js":
/*!*************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/subproviders/rest-fetch.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestFetchSubprovider = void 0;\nconst provider_engine_1 = __webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\");\nconst asyncify_1 = __importDefault(__webpack_require__(/*! async/asyncify */ \"../../node_modules/async/asyncify.js\"));\nconst retry_1 = __importDefault(__webpack_require__(/*! async/retry */ \"../../node_modules/async/retry.js\"));\nconst waterfall_1 = __importDefault(__webpack_require__(/*! async/waterfall */ \"../../node_modules/async/waterfall.js\"));\nconst cross_fetch_1 = __importDefault(__webpack_require__(/*! cross-fetch */ \"../../node_modules/cross-fetch/dist/node-ponyfill.js\"));\nconst json_rpc_error_1 = __importDefault(__webpack_require__(/*! json-rpc-error */ \"../../node_modules/json-rpc-error/index.js\"));\nconst promise_to_callback_1 = __importDefault(__webpack_require__(/*! promise-to-callback */ \"../../node_modules/promise-to-callback/index.js\"));\nconst RETRIABLE_ERRORS = [\n    // ignore server overload errors\n    'Gateway timeout',\n    'ETIMEDOUT',\n    // ignore server sent html error pages\n    // or truncated json responses\n    'SyntaxError',\n];\nconst MATCHING_METHODS = ['eth_getBlockByNumber', 'eth_blockNumber', 'net_Version', 'eth_getLogs'];\nclass RestFetchSubprovider extends provider_engine_1.Subprovider {\n    constructor(opts) {\n        super();\n        this.rpcUrl = opts.rpcUrl;\n        this.defaultHeaders = opts.defaultHeaders;\n        this.originHttpHeaderKey = opts.originHttpHeaderKey;\n    }\n    handleRequest(payload, next, end) {\n        if (MATCHING_METHODS.includes(payload.method)) {\n            this.handleRestRequest(payload, end);\n        }\n        else {\n            next();\n        }\n    }\n    handleRestRequest(payload, end) {\n        const originDomain = payload.origin;\n        const query = payload.params.length > 0\n            ? `?params=${encodeURIComponent(JSON.stringify(payload.params))}`\n            : '';\n        const url = `${this.rpcUrl}/${payload.method}${query}`;\n        const reqParams = {\n            method: 'GET',\n            headers: Object.assign({\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }, this.defaultHeaders),\n            credentials: 'omit',\n        };\n        if (this.originHttpHeaderKey && originDomain) {\n            reqParams.headers[this.originHttpHeaderKey] = originDomain;\n        }\n        (0, retry_1.default)({\n            times: 5,\n            interval: 1000,\n            errorFilter: isErrorRetriable,\n        }, (cb) => this._submitRequest(url, reqParams, cb), (err, result) => {\n            // ends on retriable error\n            if (err && isErrorRetriable(err)) {\n                const errMsg = `FetchSubprovider - cannot complete request. All retries exhausted.\\nOriginal Error:\\n${err.toString()}\\n\\n`;\n                const retriesExhaustedErr = new Error(errMsg);\n                return end(retriesExhaustedErr);\n            }\n            // otherwise continue normally\n            return end(err, result);\n        });\n    }\n    _submitRequest(targetUrl, reqParams, done) {\n        (0, promise_to_callback_1.default)((0, cross_fetch_1.default)(targetUrl, reqParams))((err, res) => {\n            if (err) {\n                return done(err);\n            }\n            // continue parsing result\n            (0, waterfall_1.default)([\n                checkForHttpErrors,\n                // buffer body\n                (cb) => (0, promise_to_callback_1.default)(res.text())(cb),\n                // parse body\n                (0, asyncify_1.default)((rawBody) => JSON.parse(rawBody)),\n                parseResponse,\n            ], done);\n            function checkForHttpErrors(cb) {\n                // check for errors\n                switch (res.status) {\n                    case 405:\n                        return cb(new json_rpc_error_1.default.MethodNotFound());\n                    case 418:\n                        return cb(createRatelimitError());\n                    case 503:\n                    case 504:\n                        return cb(createTimeoutError());\n                    default:\n                        return cb();\n                }\n            }\n            function parseResponse(body, cb) {\n                // check for error code\n                if (res.status !== 200) {\n                    return cb(new json_rpc_error_1.default.InternalError(body));\n                }\n                cb(null, body);\n            }\n        });\n    }\n}\nexports.RestFetchSubprovider = RestFetchSubprovider;\nfunction isErrorRetriable(err) {\n    const errMsg = err.toString();\n    return RETRIABLE_ERRORS.some((phrase) => errMsg.includes(phrase));\n}\nfunction createRatelimitError() {\n    const msg = 'Request is being rate limited.';\n    const err = new Error(msg);\n    return new json_rpc_error_1.default.InternalError(err);\n}\nfunction createTimeoutError() {\n    let msg = 'Gateway timeout. The request took too long to process. ';\n    msg += 'This can happen when querying logs over too wide a block range.';\n    const err = new Error(msg);\n    return new json_rpc_error_1.default.InternalError(err);\n}\n//# sourceMappingURL=rest-fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/subproviders/rest-fetch.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/subproviders/signature.js":
/*!************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/subproviders/signature.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureSubprovider = exports.TransactionKind = void 0;\nconst provider_engine_1 = __webpack_require__(/*! @bitski/provider-engine */ \"../../node_modules/@bitski/provider-engine/dist/commonjs/index.js\");\nconst uuid_1 = __webpack_require__(/*! uuid */ \"../../node_modules/uuid/dist/index.js\");\nconst constants_1 = __webpack_require__(/*! ../constants */ \"../../node_modules/bitski/lib/constants.js\");\nconst signer_error_1 = __webpack_require__(/*! ../errors/signer-error */ \"../../node_modules/bitski/lib/errors/signer-error.js\");\nvar TransactionKind;\n(function (TransactionKind) {\n    TransactionKind[\"SendTransaction\"] = \"ETH_SEND_TRANSACTION\";\n    TransactionKind[\"SignTransaction\"] = \"ETH_SIGN_TRANSACTION\";\n    TransactionKind[\"Sign\"] = \"ETH_SIGN\";\n    TransactionKind[\"SignTypedData\"] = \"ETH_SIGN_TYPED_DATA\";\n})(TransactionKind = exports.TransactionKind || (exports.TransactionKind = {}));\n/**\n * A Subprovider that manages the interface between JSON-RPC and Bitski's proprietary transaction signing flow.\n * This class is responsible for transforming the JSON-RPC request into a Transaction object that the Bitski signer understands.\n * Also responsible for submitting the transaction to the network, and converting the response back into an RPC response.\n *\n * Important: this class assumes the transaction has all the necessary fields populated. The TransactionValidatorSubprovider\n * should be placed in front of this subprovider.\n */\nclass SignatureSubprovider extends provider_engine_1.Subprovider {\n    constructor(network, signer, tokenProvider, signatureMethods) {\n        super();\n        this.network = network;\n        this.tokenProvider = tokenProvider;\n        this.signer = signer;\n        this.signatureMethods = signatureMethods || constants_1.DEFAULT_AUTHORIZED_METHODS;\n    }\n    /**\n     * Handle RPC request from engine (called by)\n     * @param payload RPC request payload\n     * @param next Callback to skip handling this request\n     * @param end Completion handler\n     */\n    handleRequest(payload, next, end) {\n        if (this.requiresSignature(payload.method)) {\n            this.handleSignatureRequest(payload, end);\n            return;\n        }\n        next();\n    }\n    /**\n     * Called when a payload is received that needs a signature\n     * @param payload The JSON-RPC request\n     * @param callback The callback to call when the request has been handled\n     */\n    async handleSignatureRequest(payload, callback) {\n        try {\n            // Get access token\n            const accessToken = await this.tokenProvider.getAccessToken();\n            // Prepare a transaction object\n            const transaction = await this.createBitskiTransaction(payload);\n            // Sign the transaction object\n            const signedResponse = await this.signer.sign(transaction, accessToken);\n            // Send the transaction if needed\n            const result = await this.sendIfNeeded(payload, signedResponse);\n            // Call the callback with the result\n            callback(undefined, result);\n        }\n        catch (error) {\n            // Call with the error if any of the steps fail\n            callback(error, undefined);\n        }\n    }\n    /** Should this subprovider handle the request?\n     * @param method The RPC method of the request\n     */\n    requiresSignature(method) {\n        return this.signatureMethods.includes(method);\n    }\n    /**\n     * This will forward transactions that should be automatically submitted to the network, otherwise\n     * resolve with the original value.\n     * @param payload The original request payload\n     * @param signedData signed data for the transaction\n     */\n    sendIfNeeded(payload, signedData) {\n        if (payload.method === 'eth_sendTransaction') {\n            // Create a send raw transaction payload\n            const sendPayload = {\n                id: 0,\n                jsonrpc: '2.0',\n                method: 'eth_sendRawTransaction',\n                params: [signedData],\n            };\n            return this.performRequest(sendPayload);\n        }\n        return Promise.resolve(signedData);\n    }\n    /**\n     * Load the balance so the web approval dialog can give the user better context\n     * @param payload Payload for the request\n     */\n    loadBalanceIfNeeded(payload) {\n        // Only necessary if this is a transaction\n        const isTransaction = payload.method === 'eth_sendTransaction' || payload.method === 'eth_signTransaction';\n        const isCustomRPC = !this.network.rpcUrl.includes('api.bitski.com');\n        if (isTransaction && isCustomRPC) {\n            const transaction = payload.params[0];\n            const balancePayload = {\n                id: 0,\n                jsonrpc: '2.0',\n                method: 'eth_getBalance',\n                params: [transaction.from, 'latest'],\n            };\n            return this.performRequest(balancePayload);\n        }\n        return Promise.resolve();\n    }\n    /**\n     * Responsible for creating the Transaction object from a given RPC payload\n     * @param payload JSON-RPC payload to extract the values from\n     */\n    async createBitskiTransaction(payload) {\n        const context = await this.createContext(payload);\n        const kind = this.kindForMethod(payload.method);\n        const extractedPayload = this.createPayload(payload);\n        const transaction = {\n            id: (0, uuid_1.v4)(),\n            kind,\n            payload: extractedPayload,\n            context,\n        };\n        return transaction;\n    }\n    async createContext(request) {\n        switch (request.method) {\n            case 'eth_sendTransaction':\n            case 'eth_signTransaction': {\n                const balance = await this.loadBalanceIfNeeded(request);\n                return { chainId: this.network.chainId, currentBalance: balance };\n            }\n            case 'eth_signTypedData':\n            case 'eth_signTypedData_v3':\n            case 'eth_signTypedData_v4':\n                // The from address should be the first parameter as a 20 byte hex string\n                if (request.params && request.params.length > 0) {\n                    return { from: request.params[0] };\n                }\n                throw signer_error_1.SignerError.MissingFrom();\n            default:\n                // Other transaction types do not need context\n                return {};\n        }\n    }\n    /**\n     * Responsible for creating the payload from a given RPC request\n     * @param request JSON-RPC request to extract params from\n     */\n    createPayload(request) {\n        switch (request.method) {\n            case 'eth_sendTransaction':\n            case 'eth_signTransaction':\n                if (request.params && request.params.length > 0) {\n                    return request.params[0];\n                }\n                else {\n                    throw signer_error_1.SignerError.MissingTransaction();\n                }\n            case 'eth_sign':\n                if (request.params && request.params.length > 1) {\n                    return { from: request.params[0], message: request.params[1] };\n                }\n                else {\n                    throw signer_error_1.SignerError.MissingMessage();\n                }\n            case 'personal_sign':\n                if (request.params && request.params.length > 1) {\n                    return { from: request.params[1], message: request.params[0] };\n                }\n                else {\n                    throw signer_error_1.SignerError.MissingMessage();\n                }\n            case 'eth_signTypedData':\n            case 'eth_signTypedData_v3':\n            case 'eth_signTypedData_v4':\n                if (request.params && request.params.length > 1) {\n                    return request.params[1];\n                }\n                else {\n                    throw signer_error_1.SignerError.MissingTypedData();\n                }\n            default:\n                throw signer_error_1.SignerError.UnsupportedMethod();\n        }\n    }\n    /**\n     * Determines a BitskiTransaction.Kind value from a given RPC method name\n     * @param method The JSON-RPC method being requested\n     */\n    kindForMethod(method) {\n        switch (method) {\n            case 'eth_sendTransaction':\n            case 'eth_signTransaction':\n                // Convert both *sign* and *send* methods into a sign transaction.\n                // (we will forward the transaction locally if needed)\n                return TransactionKind.SignTransaction;\n            case 'eth_sign':\n            case 'personal_sign':\n                return TransactionKind.Sign;\n            case 'eth_signTypedData':\n            case 'eth_signTypedData_v3':\n            case 'eth_signTypedData_v4':\n                return TransactionKind.SignTypedData;\n            default:\n                throw signer_error_1.SignerError.UnsupportedMethod();\n        }\n    }\n    // Wraps emitPayload in a promise\n    performRequest(payload) {\n        return new Promise((fulfill, reject) => {\n            this.emitPayload(payload, (err, result) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    fulfill(result.result);\n                }\n            });\n        });\n    }\n}\nexports.SignatureSubprovider = SignatureSubprovider;\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/subproviders/signature.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/utils/callback.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/utils/callback.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUrlParams = exports.processCallback = void 0;\n/**\n * Automatically handles finalizing the oauth sign in process with the Bitski SDK\n */\nfunction processCallback() {\n    if (window.opener) {\n        notifyOpener(window.location);\n    }\n    else {\n        throw new Error('Parent window could not be found');\n    }\n}\nexports.processCallback = processCallback;\n/**\n * Notifies the opener when in a popup\n * @param url the url that contains the query params\n */\nfunction notifyOpener(url) {\n    if (window.opener) {\n        if (url) {\n            // parse url to get state\n            const data = parseUrlParams(url);\n            if (data.state) {\n                const name = `popupCallback_${data.state}`;\n                const callback = window.opener[name];\n                if (callback) {\n                    callback(url);\n                }\n                else {\n                    throw new Error('No callback found on opener');\n                }\n            }\n            else {\n                throw new Error('No state found in response');\n            }\n        }\n    }\n    else {\n        throw new Error('No window.opener');\n    }\n}\n/**\n * Extracts query params from the hash of the url\n * @param url the url to parse\n */\nfunction parseUrlParams(url) {\n    let params;\n    if (url.href.includes('#')) {\n        params = extractQuery(url.hash);\n    }\n    else if (url.href.includes('?')) {\n        params = url.search.split('?').pop();\n    }\n    if (!params) {\n        throw new Error('No params found in result');\n    }\n    return params.split('&').reduce((prev, item) => {\n        const [key, value] = item.split('=');\n        if (key && value) {\n            prev[decodeURIComponent(key)] = decodeURIComponent(value);\n        }\n        return prev;\n    }, {});\n}\nexports.parseUrlParams = parseUrlParams;\nfunction extractQuery(url) {\n    if (!url.includes('#')) {\n        throw new Error('No params found in result');\n    }\n    return url.split('#').pop();\n}\n//# sourceMappingURL=callback.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvdXRpbHMvY2FsbGJhY2suanM/NGY4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsV0FBVztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL3V0aWxzL2NhbGxiYWNrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhcnNlVXJsUGFyYW1zID0gZXhwb3J0cy5wcm9jZXNzQ2FsbGJhY2sgPSB2b2lkIDA7XG4vKipcbiAqIEF1dG9tYXRpY2FsbHkgaGFuZGxlcyBmaW5hbGl6aW5nIHRoZSBvYXV0aCBzaWduIGluIHByb2Nlc3Mgd2l0aCB0aGUgQml0c2tpIFNES1xuICovXG5mdW5jdGlvbiBwcm9jZXNzQ2FsbGJhY2soKSB7XG4gICAgaWYgKHdpbmRvdy5vcGVuZXIpIHtcbiAgICAgICAgbm90aWZ5T3BlbmVyKHdpbmRvdy5sb2NhdGlvbik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BhcmVudCB3aW5kb3cgY291bGQgbm90IGJlIGZvdW5kJyk7XG4gICAgfVxufVxuZXhwb3J0cy5wcm9jZXNzQ2FsbGJhY2sgPSBwcm9jZXNzQ2FsbGJhY2s7XG4vKipcbiAqIE5vdGlmaWVzIHRoZSBvcGVuZXIgd2hlbiBpbiBhIHBvcHVwXG4gKiBAcGFyYW0gdXJsIHRoZSB1cmwgdGhhdCBjb250YWlucyB0aGUgcXVlcnkgcGFyYW1zXG4gKi9cbmZ1bmN0aW9uIG5vdGlmeU9wZW5lcih1cmwpIHtcbiAgICBpZiAod2luZG93Lm9wZW5lcikge1xuICAgICAgICBpZiAodXJsKSB7XG4gICAgICAgICAgICAvLyBwYXJzZSB1cmwgdG8gZ2V0IHN0YXRlXG4gICAgICAgICAgICBjb25zdCBkYXRhID0gcGFyc2VVcmxQYXJhbXModXJsKTtcbiAgICAgICAgICAgIGlmIChkYXRhLnN0YXRlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IGBwb3B1cENhbGxiYWNrXyR7ZGF0YS5zdGF0ZX1gO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrID0gd2luZG93Lm9wZW5lcltuYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sodXJsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gY2FsbGJhY2sgZm91bmQgb24gb3BlbmVyJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBzdGF0ZSBmb3VuZCBpbiByZXNwb25zZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHdpbmRvdy5vcGVuZXInKTtcbiAgICB9XG59XG4vKipcbiAqIEV4dHJhY3RzIHF1ZXJ5IHBhcmFtcyBmcm9tIHRoZSBoYXNoIG9mIHRoZSB1cmxcbiAqIEBwYXJhbSB1cmwgdGhlIHVybCB0byBwYXJzZVxuICovXG5mdW5jdGlvbiBwYXJzZVVybFBhcmFtcyh1cmwpIHtcbiAgICBsZXQgcGFyYW1zO1xuICAgIGlmICh1cmwuaHJlZi5pbmNsdWRlcygnIycpKSB7XG4gICAgICAgIHBhcmFtcyA9IGV4dHJhY3RRdWVyeSh1cmwuaGFzaCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHVybC5ocmVmLmluY2x1ZGVzKCc/JykpIHtcbiAgICAgICAgcGFyYW1zID0gdXJsLnNlYXJjaC5zcGxpdCgnPycpLnBvcCgpO1xuICAgIH1cbiAgICBpZiAoIXBhcmFtcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHBhcmFtcyBmb3VuZCBpbiByZXN1bHQnKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhcmFtcy5zcGxpdCgnJicpLnJlZHVjZSgocHJldiwgaXRlbSkgPT4ge1xuICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBpdGVtLnNwbGl0KCc9Jyk7XG4gICAgICAgIGlmIChrZXkgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgIHByZXZbZGVjb2RlVVJJQ29tcG9uZW50KGtleSldID0gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJldjtcbiAgICB9LCB7fSk7XG59XG5leHBvcnRzLnBhcnNlVXJsUGFyYW1zID0gcGFyc2VVcmxQYXJhbXM7XG5mdW5jdGlvbiBleHRyYWN0UXVlcnkodXJsKSB7XG4gICAgaWYgKCF1cmwuaW5jbHVkZXMoJyMnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHBhcmFtcyBmb3VuZCBpbiByZXN1bHQnKTtcbiAgICB9XG4gICAgcmV0dXJuIHVybC5zcGxpdCgnIycpLnBvcCgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FsbGJhY2suanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/utils/callback.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/utils/localstorage-store.js":
/*!**************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/utils/localstorage-store.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalStorageStore = void 0;\n// Default implementation of generic store interface.\n// Uses localStorage or sessionStorage (pass which one you want in constructor).\nclass LocalStorageStore {\n    constructor(storage = localStorage) {\n        this.storage = storage;\n    }\n    clear() {\n        this.storage.clear();\n    }\n    getItem(key) {\n        return this.storage.getItem(key);\n    }\n    setItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    clearItem(key) {\n        this.storage.removeItem(key);\n    }\n}\nexports.LocalStorageStore = LocalStorageStore;\n//# sourceMappingURL=localstorage-store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvdXRpbHMvbG9jYWxzdG9yYWdlLXN0b3JlLmpzPzA5ZDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvYml0c2tpL2xpYi91dGlscy9sb2NhbHN0b3JhZ2Utc3RvcmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9jYWxTdG9yYWdlU3RvcmUgPSB2b2lkIDA7XG4vLyBEZWZhdWx0IGltcGxlbWVudGF0aW9uIG9mIGdlbmVyaWMgc3RvcmUgaW50ZXJmYWNlLlxuLy8gVXNlcyBsb2NhbFN0b3JhZ2Ugb3Igc2Vzc2lvblN0b3JhZ2UgKHBhc3Mgd2hpY2ggb25lIHlvdSB3YW50IGluIGNvbnN0cnVjdG9yKS5cbmNsYXNzIExvY2FsU3RvcmFnZVN0b3JlIHtcbiAgICBjb25zdHJ1Y3RvcihzdG9yYWdlID0gbG9jYWxTdG9yYWdlKSB7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2U7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UuY2xlYXIoKTtcbiAgICB9XG4gICAgZ2V0SXRlbShrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgfVxuICAgIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcbiAgICB9XG4gICAgY2xlYXJJdGVtKGtleSkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgIH1cbn1cbmV4cG9ydHMuTG9jYWxTdG9yYWdlU3RvcmUgPSBMb2NhbFN0b3JhZ2VTdG9yZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvY2Fsc3RvcmFnZS1zdG9yZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/utils/localstorage-store.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/utils/no-hash-query-string-utils.js":
/*!**********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/utils/no-hash-query-string-utils.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoHashQueryStringUtils = void 0;\nconst appauth_1 = __webpack_require__(/*! @openid/appauth */ \"../../node_modules/@openid/appauth/built/index.js\");\nclass NoHashQueryStringUtils extends appauth_1.BasicQueryStringUtils {\n    parse(input, useHash) {\n        return super.parse(input, false /* never use hash */);\n    }\n}\nexports.NoHashQueryStringUtils = NoHashQueryStringUtils;\n//# sourceMappingURL=no-hash-query-string-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvdXRpbHMvbm8taGFzaC1xdWVyeS1zdHJpbmctdXRpbHMuanM/YTFjMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsMEVBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL3V0aWxzL25vLWhhc2gtcXVlcnktc3RyaW5nLXV0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vSGFzaFF1ZXJ5U3RyaW5nVXRpbHMgPSB2b2lkIDA7XG5jb25zdCBhcHBhdXRoXzEgPSByZXF1aXJlKFwiQG9wZW5pZC9hcHBhdXRoXCIpO1xuY2xhc3MgTm9IYXNoUXVlcnlTdHJpbmdVdGlscyBleHRlbmRzIGFwcGF1dGhfMS5CYXNpY1F1ZXJ5U3RyaW5nVXRpbHMge1xuICAgIHBhcnNlKGlucHV0LCB1c2VIYXNoKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5wYXJzZShpbnB1dCwgZmFsc2UgLyogbmV2ZXIgdXNlIGhhc2ggKi8pO1xuICAgIH1cbn1cbmV4cG9ydHMuTm9IYXNoUXVlcnlTdHJpbmdVdGlscyA9IE5vSGFzaFF1ZXJ5U3RyaW5nVXRpbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uby1oYXNoLXF1ZXJ5LXN0cmluZy11dGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/utils/no-hash-query-string-utils.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/utils/popup-validator.js":
/*!***********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/utils/popup-validator.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PopupValidator = void 0;\n/**\n * A simple utility class that will check to see if a popup is blocked.\n * Derived from info and examples on this page:\n * https://stackoverflow.com/questions/2914/how-can-i-detect-if-a-browser-is-blocking-a-popup\n */\nclass PopupValidator {\n    constructor(errorHandler) {\n        this.errorHandler = errorHandler;\n    }\n    // Check a popup window to see if it has been blocked.\n    // The error handler will be called asynchronously if\n    // the window has been detected to have been blocked.\n    check(popup) {\n        if (popup) {\n            if (/chrome/.test(navigator.userAgent.toLowerCase())) {\n                setTimeout(() => {\n                    this.isPopupBlocked(popup);\n                }, 200);\n            }\n            else {\n                popup.onload = () => {\n                    this.isPopupBlocked(popup);\n                };\n            }\n        }\n        else {\n            this.handleBlocked();\n        }\n    }\n    isPopupBlocked(popup) {\n        if (popup.innerHeight > 0 === false) {\n            this.handleBlocked();\n        }\n    }\n    handleBlocked() {\n        this.errorHandler();\n    }\n}\nexports.PopupValidator = PopupValidator;\n//# sourceMappingURL=popup-validator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvdXRpbHMvcG9wdXAtdmFsaWRhdG9yLmpzPzVjMTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvdXRpbHMvcG9wdXAtdmFsaWRhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvcHVwVmFsaWRhdG9yID0gdm9pZCAwO1xuLyoqXG4gKiBBIHNpbXBsZSB1dGlsaXR5IGNsYXNzIHRoYXQgd2lsbCBjaGVjayB0byBzZWUgaWYgYSBwb3B1cCBpcyBibG9ja2VkLlxuICogRGVyaXZlZCBmcm9tIGluZm8gYW5kIGV4YW1wbGVzIG9uIHRoaXMgcGFnZTpcbiAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzI5MTQvaG93LWNhbi1pLWRldGVjdC1pZi1hLWJyb3dzZXItaXMtYmxvY2tpbmctYS1wb3B1cFxuICovXG5jbGFzcyBQb3B1cFZhbGlkYXRvciB7XG4gICAgY29uc3RydWN0b3IoZXJyb3JIYW5kbGVyKSB7XG4gICAgICAgIHRoaXMuZXJyb3JIYW5kbGVyID0gZXJyb3JIYW5kbGVyO1xuICAgIH1cbiAgICAvLyBDaGVjayBhIHBvcHVwIHdpbmRvdyB0byBzZWUgaWYgaXQgaGFzIGJlZW4gYmxvY2tlZC5cbiAgICAvLyBUaGUgZXJyb3IgaGFuZGxlciB3aWxsIGJlIGNhbGxlZCBhc3luY2hyb25vdXNseSBpZlxuICAgIC8vIHRoZSB3aW5kb3cgaGFzIGJlZW4gZGV0ZWN0ZWQgdG8gaGF2ZSBiZWVuIGJsb2NrZWQuXG4gICAgY2hlY2socG9wdXApIHtcbiAgICAgICAgaWYgKHBvcHVwKSB7XG4gICAgICAgICAgICBpZiAoL2Nocm9tZS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNQb3B1cEJsb2NrZWQocG9wdXApO1xuICAgICAgICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwb3B1cC5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNQb3B1cEJsb2NrZWQocG9wdXApO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUJsb2NrZWQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpc1BvcHVwQmxvY2tlZChwb3B1cCkge1xuICAgICAgICBpZiAocG9wdXAuaW5uZXJIZWlnaHQgPiAwID09PSBmYWxzZSkge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVCbG9ja2VkKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlQmxvY2tlZCgpIHtcbiAgICAgICAgdGhpcy5lcnJvckhhbmRsZXIoKTtcbiAgICB9XG59XG5leHBvcnRzLlBvcHVwVmFsaWRhdG9yID0gUG9wdXBWYWxpZGF0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb3B1cC12YWxpZGF0b3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/utils/popup-validator.js\n");

/***/ }),

/***/ "../../node_modules/bitski/lib/utils/request-utils.js":
/*!*********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bitski/lib/utils/request-utils.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseResponse = void 0;\nconst bitski_provider_1 = __webpack_require__(/*! bitski-provider */ \"../../node_modules/bitski-provider/lib/index.js\");\nconst parse_error_1 = __webpack_require__(/*! ../errors/parse-error */ \"../../node_modules/bitski/lib/errors/parse-error.js\");\n/**\n * Parses a Fetch Response to extract either the result or the error\n * @param response the fetch response to parse\n */\nfunction parseResponse(response) {\n    return response\n        .json()\n        .catch(() => {\n        throw parse_error_1.ParseError.InvalidJSON();\n    })\n        .then((json) => {\n        if (response.status >= 200 && response.status < 300) {\n            return json;\n        }\n        else {\n            if (json && json.error && json.error.message) {\n                throw new bitski_provider_1.ServerError(json.error.message, response.status, response.url);\n            }\n            else if (json && json.error) {\n                throw new bitski_provider_1.ServerError(json.error, response.status, response.url);\n            }\n            else {\n                throw parse_error_1.ParseError.UnknownError();\n            }\n        }\n    });\n}\nexports.parseResponse = parseResponse;\n//# sourceMappingURL=request-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2JpdHNraS9saWIvdXRpbHMvcmVxdWVzdC11dGlscy5qcz9iMWFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyx3RUFBaUI7QUFDbkQsc0JBQXNCLG1CQUFPLENBQUMsa0ZBQXVCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9iaXRza2kvbGliL3V0aWxzL3JlcXVlc3QtdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VSZXNwb25zZSA9IHZvaWQgMDtcbmNvbnN0IGJpdHNraV9wcm92aWRlcl8xID0gcmVxdWlyZShcImJpdHNraS1wcm92aWRlclwiKTtcbmNvbnN0IHBhcnNlX2Vycm9yXzEgPSByZXF1aXJlKFwiLi4vZXJyb3JzL3BhcnNlLWVycm9yXCIpO1xuLyoqXG4gKiBQYXJzZXMgYSBGZXRjaCBSZXNwb25zZSB0byBleHRyYWN0IGVpdGhlciB0aGUgcmVzdWx0IG9yIHRoZSBlcnJvclxuICogQHBhcmFtIHJlc3BvbnNlIHRoZSBmZXRjaCByZXNwb25zZSB0byBwYXJzZVxuICovXG5mdW5jdGlvbiBwYXJzZVJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIHJlc3BvbnNlXG4gICAgICAgIC5qc29uKClcbiAgICAgICAgLmNhdGNoKCgpID0+IHtcbiAgICAgICAgdGhyb3cgcGFyc2VfZXJyb3JfMS5QYXJzZUVycm9yLkludmFsaWRKU09OKCk7XG4gICAgfSlcbiAgICAgICAgLnRoZW4oKGpzb24pID0+IHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA+PSAyMDAgJiYgcmVzcG9uc2Uuc3RhdHVzIDwgMzAwKSB7XG4gICAgICAgICAgICByZXR1cm4ganNvbjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChqc29uICYmIGpzb24uZXJyb3IgJiYganNvbi5lcnJvci5tZXNzYWdlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGJpdHNraV9wcm92aWRlcl8xLlNlcnZlckVycm9yKGpzb24uZXJyb3IubWVzc2FnZSwgcmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS51cmwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoanNvbiAmJiBqc29uLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGJpdHNraV9wcm92aWRlcl8xLlNlcnZlckVycm9yKGpzb24uZXJyb3IsIHJlc3BvbnNlLnN0YXR1cywgcmVzcG9uc2UudXJsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IHBhcnNlX2Vycm9yXzEuUGFyc2VFcnJvci5Vbmtub3duRXJyb3IoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5wYXJzZVJlc3BvbnNlID0gcGFyc2VSZXNwb25zZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QtdXRpbHMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/bitski/lib/utils/request-utils.js\n");

/***/ }),

/***/ "../../node_modules/bn.js/lib/bn.js":
/*!***************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/bn.js/lib/bn.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = __webpack_require__(/*! buffer */ \"buffer\").Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../example/v6/node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/bn.js/lib/bn.js\n");

/***/ }),

/***/ "../../node_modules/clone/clone.js":
/*!**************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/clone/clone.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif ( true && module.exports) {\n  module.exports = clone;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/clone/clone.js\n");

/***/ }),

/***/ "../../node_modules/cross-fetch/dist/node-ponyfill.js":
/*!*********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/cross-fetch/dist/node-ponyfill.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const nodeFetch = __webpack_require__(/*! node-fetch */ \"../../node_modules/node-fetch/lib/index.js\")\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2Nyb3NzLWZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcz8zMTBhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLDhEQUFZO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9jcm9zcy1mZXRjaC9kaXN0L25vZGUtcG9ueWZpbGwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBub2RlRmV0Y2ggPSByZXF1aXJlKCdub2RlLWZldGNoJylcbmNvbnN0IHJlYWxGZXRjaCA9IG5vZGVGZXRjaC5kZWZhdWx0IHx8IG5vZGVGZXRjaFxuXG5jb25zdCBmZXRjaCA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgLy8gU3VwcG9ydCBzY2hlbWFsZXNzIFVSSXMgb24gdGhlIHNlcnZlciBmb3IgcGFyaXR5IHdpdGggdGhlIGJyb3dzZXIuXG4gIC8vIEV4OiAvL2dpdGh1Yi5jb20vIC0+IGh0dHBzOi8vZ2l0aHViLmNvbS9cbiAgaWYgKC9eXFwvXFwvLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSAnaHR0cHM6JyArIHVybFxuICB9XG4gIHJldHVybiByZWFsRmV0Y2guY2FsbCh0aGlzLCB1cmwsIG9wdGlvbnMpXG59XG5cbmZldGNoLnBvbnlmaWxsID0gdHJ1ZVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBmZXRjaFxuZXhwb3J0cy5mZXRjaCA9IGZldGNoXG5leHBvcnRzLkhlYWRlcnMgPSBub2RlRmV0Y2guSGVhZGVyc1xuZXhwb3J0cy5SZXF1ZXN0ID0gbm9kZUZldGNoLlJlcXVlc3RcbmV4cG9ydHMuUmVzcG9uc2UgPSBub2RlRmV0Y2guUmVzcG9uc2VcblxuLy8gTmVlZGVkIGZvciBUeXBlU2NyaXB0IGNvbnN1bWVycyB3aXRob3V0IGVzTW9kdWxlSW50ZXJvcC5cbmV4cG9ydHMuZGVmYXVsdCA9IGZldGNoXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/cross-fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "../../node_modules/eth-block-tracker/src/base.js":
/*!*****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-block-tracker/src/base.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const EthQuery = __webpack_require__(/*! eth-query */ \"../../node_modules/eth-query/index.js\")\nconst pify = __webpack_require__(/*! pify */ \"../../node_modules/pify/index.js\")\nconst SafeEventEmitter = __webpack_require__(/*! safe-event-emitter */ \"../../node_modules/safe-event-emitter/index.js\")\n\nconst sec = 1000\n\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue\nconst blockTrackerEvents = ['sync', 'latest']\n\nclass BaseBlockTracker extends SafeEventEmitter {\n\n  //\n  // public\n  //\n\n  constructor (opts = {}) {\n    super()\n    // config\n    this._blockResetDuration = opts.blockResetDuration || 20 * sec\n    // state\n    this._blockResetTimeout\n    this._currentBlock = null\n    this._isRunning = false\n    // bind functions for internal use\n    this._onNewListener = this._onNewListener.bind(this)\n    this._onRemoveListener = this._onRemoveListener.bind(this)\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this)\n    // listen for handler changes\n    this._setupInternalEvents()\n  }\n\n  isRunning () {\n    return this._isRunning\n  }\n\n  getCurrentBlock () {\n    return this._currentBlock\n  }\n\n  async getLatestBlock () {\n    // return if available\n    if (this._currentBlock) return this._currentBlock\n    // wait for a new latest block\n    const latestBlock = await new Promise(resolve => this.once('latest', resolve))\n    // return newly set current block\n    return latestBlock\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners (eventName) {\n    // perform default behavior, preserve fn arity\n    if (eventName) {\n      super.removeAllListeners(eventName)\n    } else {\n      super.removeAllListeners()\n    }\n    // re-add internal events\n    this._setupInternalEvents()\n    // trigger stop check just in case\n    this._onRemoveListener()\n  }\n\n  //\n  // to be implemented in subclass\n  //\n\n  _start () {\n    // default behavior is noop\n  }\n\n  _end () {\n    // default behavior is noop\n  }\n\n  //\n  // private\n  //\n\n  _setupInternalEvents () {\n    // first remove listeners for idempotence\n    this.removeListener('newListener', this._onNewListener)\n    this.removeListener('removeListener', this._onRemoveListener)\n    // then add them\n    this.on('newListener', this._onNewListener)\n    this.on('removeListener', this._onRemoveListener)\n  }\n\n  _onNewListener (eventName, handler) {\n    // `newListener` is called *before* the listener is added\n    if (!blockTrackerEvents.includes(eventName)) return\n    this._maybeStart()\n  }\n\n  _onRemoveListener (eventName, handler) {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) return\n    this._maybeEnd()\n  }\n\n  _maybeStart () {\n    if (this._isRunning) return\n    this._isRunning = true\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout()\n    this._start()\n  }\n\n  _maybeEnd () {\n    if (!this._isRunning) return\n    this._isRunning = false\n    this._setupBlockResetTimeout()\n    this._end()\n  }\n\n  _getBlockTrackerEventCount () {\n    return blockTrackerEvents\n      .map(eventName => this.listenerCount(eventName))\n      .reduce(calculateSum)\n  }\n\n  _newPotentialLatest (newBlock) {\n    const currentBlock = this._currentBlock\n    // only update if blok number is higher\n    if (currentBlock && (hexToInt(newBlock) <= hexToInt(currentBlock))) return\n    this._setCurrentBlock(newBlock)\n  }\n\n  _setCurrentBlock (newBlock) {\n    const oldBlock = this._currentBlock\n    this._currentBlock = newBlock\n    this.emit('latest', newBlock)\n    this.emit('sync', { oldBlock, newBlock })\n  }\n\n  _setupBlockResetTimeout () {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout()\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration)\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref()\n    }\n  }\n\n  _cancelBlockResetTimeout () {\n    clearTimeout(this._blockResetTimeout)\n  }\n\n  _resetCurrentBlock () {\n    this._currentBlock = null\n  }\n\n}\n\nmodule.exports = BaseBlockTracker\n\nfunction hexToInt(hexInt) {\n  return Number.parseInt(hexInt, 16)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1ibG9jay10cmFja2VyL3NyYy9iYXNlLmpzPzQ3ZTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsd0RBQVc7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLDhDQUFNO0FBQzNCLHlCQUF5QixtQkFBTyxDQUFDLDBFQUFvQjs7QUFFckQ7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixxQkFBcUI7QUFDNUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1ibG9jay10cmFja2VyL3NyYy9iYXNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXRoUXVlcnkgPSByZXF1aXJlKCdldGgtcXVlcnknKVxuY29uc3QgcGlmeSA9IHJlcXVpcmUoJ3BpZnknKVxuY29uc3QgU2FmZUV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ3NhZmUtZXZlbnQtZW1pdHRlcicpXG5cbmNvbnN0IHNlYyA9IDEwMDBcblxuY29uc3QgY2FsY3VsYXRlU3VtID0gKGFjY3VtdWxhdG9yLCBjdXJyZW50VmFsdWUpID0+IGFjY3VtdWxhdG9yICsgY3VycmVudFZhbHVlXG5jb25zdCBibG9ja1RyYWNrZXJFdmVudHMgPSBbJ3N5bmMnLCAnbGF0ZXN0J11cblxuY2xhc3MgQmFzZUJsb2NrVHJhY2tlciBleHRlbmRzIFNhZmVFdmVudEVtaXR0ZXIge1xuXG4gIC8vXG4gIC8vIHB1YmxpY1xuICAvL1xuXG4gIGNvbnN0cnVjdG9yIChvcHRzID0ge30pIHtcbiAgICBzdXBlcigpXG4gICAgLy8gY29uZmlnXG4gICAgdGhpcy5fYmxvY2tSZXNldER1cmF0aW9uID0gb3B0cy5ibG9ja1Jlc2V0RHVyYXRpb24gfHwgMjAgKiBzZWNcbiAgICAvLyBzdGF0ZVxuICAgIHRoaXMuX2Jsb2NrUmVzZXRUaW1lb3V0XG4gICAgdGhpcy5fY3VycmVudEJsb2NrID0gbnVsbFxuICAgIHRoaXMuX2lzUnVubmluZyA9IGZhbHNlXG4gICAgLy8gYmluZCBmdW5jdGlvbnMgZm9yIGludGVybmFsIHVzZVxuICAgIHRoaXMuX29uTmV3TGlzdGVuZXIgPSB0aGlzLl9vbk5ld0xpc3RlbmVyLmJpbmQodGhpcylcbiAgICB0aGlzLl9vblJlbW92ZUxpc3RlbmVyID0gdGhpcy5fb25SZW1vdmVMaXN0ZW5lci5iaW5kKHRoaXMpXG4gICAgdGhpcy5fcmVzZXRDdXJyZW50QmxvY2sgPSB0aGlzLl9yZXNldEN1cnJlbnRCbG9jay5iaW5kKHRoaXMpXG4gICAgLy8gbGlzdGVuIGZvciBoYW5kbGVyIGNoYW5nZXNcbiAgICB0aGlzLl9zZXR1cEludGVybmFsRXZlbnRzKClcbiAgfVxuXG4gIGlzUnVubmluZyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lzUnVubmluZ1xuICB9XG5cbiAgZ2V0Q3VycmVudEJsb2NrICgpIHtcbiAgICByZXR1cm4gdGhpcy5fY3VycmVudEJsb2NrXG4gIH1cblxuICBhc3luYyBnZXRMYXRlc3RCbG9jayAoKSB7XG4gICAgLy8gcmV0dXJuIGlmIGF2YWlsYWJsZVxuICAgIGlmICh0aGlzLl9jdXJyZW50QmxvY2spIHJldHVybiB0aGlzLl9jdXJyZW50QmxvY2tcbiAgICAvLyB3YWl0IGZvciBhIG5ldyBsYXRlc3QgYmxvY2tcbiAgICBjb25zdCBsYXRlc3RCbG9jayA9IGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gdGhpcy5vbmNlKCdsYXRlc3QnLCByZXNvbHZlKSlcbiAgICAvLyByZXR1cm4gbmV3bHkgc2V0IGN1cnJlbnQgYmxvY2tcbiAgICByZXR1cm4gbGF0ZXN0QmxvY2tcbiAgfVxuXG4gIC8vIGRvbnQgYWxsb3cgbW9kdWxlIGNvbnN1bWVyIHRvIHJlbW92ZSBvdXIgaW50ZXJuYWwgZXZlbnQgbGlzdGVuZXJzXG4gIHJlbW92ZUFsbExpc3RlbmVycyAoZXZlbnROYW1lKSB7XG4gICAgLy8gcGVyZm9ybSBkZWZhdWx0IGJlaGF2aW9yLCBwcmVzZXJ2ZSBmbiBhcml0eVxuICAgIGlmIChldmVudE5hbWUpIHtcbiAgICAgIHN1cGVyLnJlbW92ZUFsbExpc3RlbmVycyhldmVudE5hbWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHN1cGVyLnJlbW92ZUFsbExpc3RlbmVycygpXG4gICAgfVxuICAgIC8vIHJlLWFkZCBpbnRlcm5hbCBldmVudHNcbiAgICB0aGlzLl9zZXR1cEludGVybmFsRXZlbnRzKClcbiAgICAvLyB0cmlnZ2VyIHN0b3AgY2hlY2sganVzdCBpbiBjYXNlXG4gICAgdGhpcy5fb25SZW1vdmVMaXN0ZW5lcigpXG4gIH1cblxuICAvL1xuICAvLyB0byBiZSBpbXBsZW1lbnRlZCBpbiBzdWJjbGFzc1xuICAvL1xuXG4gIF9zdGFydCAoKSB7XG4gICAgLy8gZGVmYXVsdCBiZWhhdmlvciBpcyBub29wXG4gIH1cblxuICBfZW5kICgpIHtcbiAgICAvLyBkZWZhdWx0IGJlaGF2aW9yIGlzIG5vb3BcbiAgfVxuXG4gIC8vXG4gIC8vIHByaXZhdGVcbiAgLy9cblxuICBfc2V0dXBJbnRlcm5hbEV2ZW50cyAoKSB7XG4gICAgLy8gZmlyc3QgcmVtb3ZlIGxpc3RlbmVycyBmb3IgaWRlbXBvdGVuY2VcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKCduZXdMaXN0ZW5lcicsIHRoaXMuX29uTmV3TGlzdGVuZXIpXG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcigncmVtb3ZlTGlzdGVuZXInLCB0aGlzLl9vblJlbW92ZUxpc3RlbmVyKVxuICAgIC8vIHRoZW4gYWRkIHRoZW1cbiAgICB0aGlzLm9uKCduZXdMaXN0ZW5lcicsIHRoaXMuX29uTmV3TGlzdGVuZXIpXG4gICAgdGhpcy5vbigncmVtb3ZlTGlzdGVuZXInLCB0aGlzLl9vblJlbW92ZUxpc3RlbmVyKVxuICB9XG5cbiAgX29uTmV3TGlzdGVuZXIgKGV2ZW50TmFtZSwgaGFuZGxlcikge1xuICAgIC8vIGBuZXdMaXN0ZW5lcmAgaXMgY2FsbGVkICpiZWZvcmUqIHRoZSBsaXN0ZW5lciBpcyBhZGRlZFxuICAgIGlmICghYmxvY2tUcmFja2VyRXZlbnRzLmluY2x1ZGVzKGV2ZW50TmFtZSkpIHJldHVyblxuICAgIHRoaXMuX21heWJlU3RhcnQoKVxuICB9XG5cbiAgX29uUmVtb3ZlTGlzdGVuZXIgKGV2ZW50TmFtZSwgaGFuZGxlcikge1xuICAgIC8vIGByZW1vdmVMaXN0ZW5lcmAgaXMgY2FsbGVkICphZnRlciogdGhlIGxpc3RlbmVyIGlzIHJlbW92ZWRcbiAgICBpZiAodGhpcy5fZ2V0QmxvY2tUcmFja2VyRXZlbnRDb3VudCgpID4gMCkgcmV0dXJuXG4gICAgdGhpcy5fbWF5YmVFbmQoKVxuICB9XG5cbiAgX21heWJlU3RhcnQgKCkge1xuICAgIGlmICh0aGlzLl9pc1J1bm5pbmcpIHJldHVyblxuICAgIHRoaXMuX2lzUnVubmluZyA9IHRydWVcbiAgICAvLyBjYW5jZWwgc2V0dGluZyBsYXRlc3QgYmxvY2sgdG8gc3RhbGVcbiAgICB0aGlzLl9jYW5jZWxCbG9ja1Jlc2V0VGltZW91dCgpXG4gICAgdGhpcy5fc3RhcnQoKVxuICB9XG5cbiAgX21heWJlRW5kICgpIHtcbiAgICBpZiAoIXRoaXMuX2lzUnVubmluZykgcmV0dXJuXG4gICAgdGhpcy5faXNSdW5uaW5nID0gZmFsc2VcbiAgICB0aGlzLl9zZXR1cEJsb2NrUmVzZXRUaW1lb3V0KClcbiAgICB0aGlzLl9lbmQoKVxuICB9XG5cbiAgX2dldEJsb2NrVHJhY2tlckV2ZW50Q291bnQgKCkge1xuICAgIHJldHVybiBibG9ja1RyYWNrZXJFdmVudHNcbiAgICAgIC5tYXAoZXZlbnROYW1lID0+IHRoaXMubGlzdGVuZXJDb3VudChldmVudE5hbWUpKVxuICAgICAgLnJlZHVjZShjYWxjdWxhdGVTdW0pXG4gIH1cblxuICBfbmV3UG90ZW50aWFsTGF0ZXN0IChuZXdCbG9jaykge1xuICAgIGNvbnN0IGN1cnJlbnRCbG9jayA9IHRoaXMuX2N1cnJlbnRCbG9ja1xuICAgIC8vIG9ubHkgdXBkYXRlIGlmIGJsb2sgbnVtYmVyIGlzIGhpZ2hlclxuICAgIGlmIChjdXJyZW50QmxvY2sgJiYgKGhleFRvSW50KG5ld0Jsb2NrKSA8PSBoZXhUb0ludChjdXJyZW50QmxvY2spKSkgcmV0dXJuXG4gICAgdGhpcy5fc2V0Q3VycmVudEJsb2NrKG5ld0Jsb2NrKVxuICB9XG5cbiAgX3NldEN1cnJlbnRCbG9jayAobmV3QmxvY2spIHtcbiAgICBjb25zdCBvbGRCbG9jayA9IHRoaXMuX2N1cnJlbnRCbG9ja1xuICAgIHRoaXMuX2N1cnJlbnRCbG9jayA9IG5ld0Jsb2NrXG4gICAgdGhpcy5lbWl0KCdsYXRlc3QnLCBuZXdCbG9jaylcbiAgICB0aGlzLmVtaXQoJ3N5bmMnLCB7IG9sZEJsb2NrLCBuZXdCbG9jayB9KVxuICB9XG5cbiAgX3NldHVwQmxvY2tSZXNldFRpbWVvdXQgKCkge1xuICAgIC8vIGNsZWFyIGFueSBleGlzdGluZyB0aW1lb3V0XG4gICAgdGhpcy5fY2FuY2VsQmxvY2tSZXNldFRpbWVvdXQoKVxuICAgIC8vIGNsZWFyIGxhdGVzdCBibG9jayB3aGVuIHN0YWxlXG4gICAgdGhpcy5fYmxvY2tSZXNldFRpbWVvdXQgPSBzZXRUaW1lb3V0KHRoaXMuX3Jlc2V0Q3VycmVudEJsb2NrLCB0aGlzLl9ibG9ja1Jlc2V0RHVyYXRpb24pXG4gICAgLy8gbm9kZWpzIC0gZG9udCBob2xkIHByb2Nlc3Mgb3BlblxuICAgIGlmICh0aGlzLl9ibG9ja1Jlc2V0VGltZW91dC51bnJlZikge1xuICAgICAgdGhpcy5fYmxvY2tSZXNldFRpbWVvdXQudW5yZWYoKVxuICAgIH1cbiAgfVxuXG4gIF9jYW5jZWxCbG9ja1Jlc2V0VGltZW91dCAoKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuX2Jsb2NrUmVzZXRUaW1lb3V0KVxuICB9XG5cbiAgX3Jlc2V0Q3VycmVudEJsb2NrICgpIHtcbiAgICB0aGlzLl9jdXJyZW50QmxvY2sgPSBudWxsXG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJhc2VCbG9ja1RyYWNrZXJcblxuZnVuY3Rpb24gaGV4VG9JbnQoaGV4SW50KSB7XG4gIHJldHVybiBOdW1iZXIucGFyc2VJbnQoaGV4SW50LCAxNilcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/eth-block-tracker/src/base.js\n");

/***/ }),

/***/ "../../node_modules/eth-block-tracker/src/polling.js":
/*!********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-block-tracker/src/polling.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const pify = __webpack_require__(/*! pify */ \"../../node_modules/pify/index.js\")\nconst BaseBlockTracker = __webpack_require__(/*! ./base */ \"../../node_modules/eth-block-tracker/src/base.js\")\n\nconst sec = 1000\n\nclass PollingBlockTracker extends BaseBlockTracker {\n\n  constructor (opts = {}) {\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.')\n    const pollingInterval = opts.pollingInterval || 20 * sec\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false\n    // BaseBlockTracker constructor\n    super(Object.assign({\n      blockResetDuration: pollingInterval,\n    }, opts))\n    // config\n    this._provider = opts.provider\n    this._pollingInterval = pollingInterval\n    this._retryTimeout = retryTimeout\n    this._keepEventLoopActive = keepEventLoopActive\n    this._setSkipCacheFlag = setSkipCacheFlag\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock () {\n    await this._updateLatestBlock()\n    return await this.getLatestBlock()\n  }\n\n  //\n  // private\n  //\n\n  _start () {\n    this._performSync().catch(err => this.emit('error', err))\n  }\n\n  async _performSync () {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock()\n        await timeout(this._pollingInterval, !this._keepEventLoopActive)\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`)\n        try {\n          this.emit('error', newErr)\n        } catch (emitErr) {\n          console.error(newErr)\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive)\n      }\n    }\n  }\n\n  async _updateLatestBlock () {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock()\n    this._newPotentialLatest(latestBlock)\n  }\n\n  async _fetchLatestBlock () {\n    const req = { jsonrpc: \"2.0\", id: 1, method: 'eth_blockNumber', params: [] }\n    if (this._setSkipCacheFlag) req.skipCache = true\n    const res = await pify((cb) => this._provider.sendAsync(req, cb))()\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`)\n    return res.result\n  }\n\n}\n\nmodule.exports = PollingBlockTracker\n\nfunction timeout (duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration)\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref()\n    }\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1ibG9jay10cmFja2VyL3NyYy9wb2xsaW5nLmpzP2JhMWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLDhDQUFNO0FBQzNCLHlCQUF5QixtQkFBTyxDQUFDLGdFQUFROztBQUV6Qzs7QUFFQTs7QUFFQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCx5SEFBeUgsVUFBVTtBQUNuSTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSwrRkFBK0YsVUFBVTtBQUN6RztBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9ldGgtYmxvY2stdHJhY2tlci9zcmMvcG9sbGluZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBpZnkgPSByZXF1aXJlKCdwaWZ5JylcbmNvbnN0IEJhc2VCbG9ja1RyYWNrZXIgPSByZXF1aXJlKCcuL2Jhc2UnKVxuXG5jb25zdCBzZWMgPSAxMDAwXG5cbmNsYXNzIFBvbGxpbmdCbG9ja1RyYWNrZXIgZXh0ZW5kcyBCYXNlQmxvY2tUcmFja2VyIHtcblxuICBjb25zdHJ1Y3RvciAob3B0cyA9IHt9KSB7XG4gICAgLy8gcGFyc2UgKyB2YWxpZGF0ZSBhcmdzXG4gICAgaWYgKCFvcHRzLnByb3ZpZGVyKSB0aHJvdyBuZXcgRXJyb3IoJ1BvbGxpbmdCbG9ja1RyYWNrZXIgLSBubyBwcm92aWRlciBzcGVjaWZpZWQuJylcbiAgICBjb25zdCBwb2xsaW5nSW50ZXJ2YWwgPSBvcHRzLnBvbGxpbmdJbnRlcnZhbCB8fCAyMCAqIHNlY1xuICAgIGNvbnN0IHJldHJ5VGltZW91dCA9IG9wdHMucmV0cnlUaW1lb3V0IHx8IHBvbGxpbmdJbnRlcnZhbCAvIDEwXG4gICAgY29uc3Qga2VlcEV2ZW50TG9vcEFjdGl2ZSA9IG9wdHMua2VlcEV2ZW50TG9vcEFjdGl2ZSAhPT0gdW5kZWZpbmVkID8gb3B0cy5rZWVwRXZlbnRMb29wQWN0aXZlIDogdHJ1ZVxuICAgIGNvbnN0IHNldFNraXBDYWNoZUZsYWcgPSBvcHRzLnNldFNraXBDYWNoZUZsYWcgfHwgZmFsc2VcbiAgICAvLyBCYXNlQmxvY2tUcmFja2VyIGNvbnN0cnVjdG9yXG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbih7XG4gICAgICBibG9ja1Jlc2V0RHVyYXRpb246IHBvbGxpbmdJbnRlcnZhbCxcbiAgICB9LCBvcHRzKSlcbiAgICAvLyBjb25maWdcbiAgICB0aGlzLl9wcm92aWRlciA9IG9wdHMucHJvdmlkZXJcbiAgICB0aGlzLl9wb2xsaW5nSW50ZXJ2YWwgPSBwb2xsaW5nSW50ZXJ2YWxcbiAgICB0aGlzLl9yZXRyeVRpbWVvdXQgPSByZXRyeVRpbWVvdXRcbiAgICB0aGlzLl9rZWVwRXZlbnRMb29wQWN0aXZlID0ga2VlcEV2ZW50TG9vcEFjdGl2ZVxuICAgIHRoaXMuX3NldFNraXBDYWNoZUZsYWcgPSBzZXRTa2lwQ2FjaGVGbGFnXG4gIH1cblxuICAvL1xuICAvLyBwdWJsaWNcbiAgLy9cblxuICAvLyB0cmlnZ2VyIGJsb2NrIHBvbGxpbmdcbiAgYXN5bmMgY2hlY2tGb3JMYXRlc3RCbG9jayAoKSB7XG4gICAgYXdhaXQgdGhpcy5fdXBkYXRlTGF0ZXN0QmxvY2soKVxuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldExhdGVzdEJsb2NrKClcbiAgfVxuXG4gIC8vXG4gIC8vIHByaXZhdGVcbiAgLy9cblxuICBfc3RhcnQgKCkge1xuICAgIHRoaXMuX3BlcmZvcm1TeW5jKCkuY2F0Y2goZXJyID0+IHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpKVxuICB9XG5cbiAgYXN5bmMgX3BlcmZvcm1TeW5jICgpIHtcbiAgICB3aGlsZSAodGhpcy5faXNSdW5uaW5nKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB0aGlzLl91cGRhdGVMYXRlc3RCbG9jaygpXG4gICAgICAgIGF3YWl0IHRpbWVvdXQodGhpcy5fcG9sbGluZ0ludGVydmFsLCAhdGhpcy5fa2VlcEV2ZW50TG9vcEFjdGl2ZSlcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBjb25zdCBuZXdFcnIgPSBuZXcgRXJyb3IoYFBvbGxpbmdCbG9ja1RyYWNrZXIgLSBlbmNvdW50ZXJlZCBhbiBlcnJvciB3aGlsZSBhdHRlbXB0aW5nIHRvIHVwZGF0ZSBsYXRlc3QgYmxvY2s6XFxuJHtlcnIuc3RhY2t9YClcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgbmV3RXJyKVxuICAgICAgICB9IGNhdGNoIChlbWl0RXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihuZXdFcnIpXG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgdGltZW91dCh0aGlzLl9yZXRyeVRpbWVvdXQsICF0aGlzLl9rZWVwRXZlbnRMb29wQWN0aXZlKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIF91cGRhdGVMYXRlc3RCbG9jayAoKSB7XG4gICAgLy8gZmV0Y2ggKyBzZXQgbGF0ZXN0IGJsb2NrXG4gICAgY29uc3QgbGF0ZXN0QmxvY2sgPSBhd2FpdCB0aGlzLl9mZXRjaExhdGVzdEJsb2NrKClcbiAgICB0aGlzLl9uZXdQb3RlbnRpYWxMYXRlc3QobGF0ZXN0QmxvY2spXG4gIH1cblxuICBhc3luYyBfZmV0Y2hMYXRlc3RCbG9jayAoKSB7XG4gICAgY29uc3QgcmVxID0geyBqc29ucnBjOiBcIjIuMFwiLCBpZDogMSwgbWV0aG9kOiAnZXRoX2Jsb2NrTnVtYmVyJywgcGFyYW1zOiBbXSB9XG4gICAgaWYgKHRoaXMuX3NldFNraXBDYWNoZUZsYWcpIHJlcS5za2lwQ2FjaGUgPSB0cnVlXG4gICAgY29uc3QgcmVzID0gYXdhaXQgcGlmeSgoY2IpID0+IHRoaXMuX3Byb3ZpZGVyLnNlbmRBc3luYyhyZXEsIGNiKSkoKVxuICAgIGlmIChyZXMuZXJyb3IpIHRocm93IG5ldyBFcnJvcihgUG9sbGluZ0Jsb2NrVHJhY2tlciAtIGVuY291bnRlcmVkIGVycm9yIGZldGNoaW5nIGJsb2NrOlxcbiR7cmVzLmVycm9yfWApXG4gICAgcmV0dXJuIHJlcy5yZXN1bHRcbiAgfVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gUG9sbGluZ0Jsb2NrVHJhY2tlclxuXG5mdW5jdGlvbiB0aW1lb3V0IChkdXJhdGlvbiwgdW5yZWYpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgIGNvbnN0IHRpbW91dFJlZiA9IHNldFRpbWVvdXQocmVzb2x2ZSwgZHVyYXRpb24pXG4gICAgLy8gZG9uJ3Qga2VlcCBwcm9jZXNzIG9wZW5cbiAgICBpZiAodGltb3V0UmVmLnVucmVmICYmIHVucmVmKSB7XG4gICAgICB0aW1vdXRSZWYudW5yZWYoKVxuICAgIH1cbiAgfSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/eth-block-tracker/src/polling.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/base-filter-history.js":
/*!*******************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/base-filter-history.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const BaseFilter = __webpack_require__(/*! ./base-filter */ \"../../node_modules/eth-json-rpc-filters/base-filter.js\")\n\n// tracks all results ever recorded\nclass BaseFilterWithHistory extends BaseFilter {\n\n  constructor () {\n    super()\n    this.allResults = []\n  }\n\n  async update () {\n    throw new Error('BaseFilterWithHistory - no update method specified')\n  }\n\n  addResults (newResults) {\n    this.allResults = this.allResults.concat(newResults)\n    super.addResults(newResults)\n  }\n\n  addInitialResults (newResults) {\n    this.allResults = this.allResults.concat(newResults)\n    super.addInitialResults(newResults)\n  }\n\n  getAllResults () {\n    return this.allResults\n  }\n\n}\n\nmodule.exports = BaseFilterWithHistory//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL2Jhc2UtZmlsdGVyLWhpc3RvcnkuanM/NTE2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBZTs7QUFFMUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9ldGgtanNvbi1ycGMtZmlsdGVycy9iYXNlLWZpbHRlci1oaXN0b3J5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQmFzZUZpbHRlciA9IHJlcXVpcmUoJy4vYmFzZS1maWx0ZXInKVxuXG4vLyB0cmFja3MgYWxsIHJlc3VsdHMgZXZlciByZWNvcmRlZFxuY2xhc3MgQmFzZUZpbHRlcldpdGhIaXN0b3J5IGV4dGVuZHMgQmFzZUZpbHRlciB7XG5cbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLmFsbFJlc3VsdHMgPSBbXVxuICB9XG5cbiAgYXN5bmMgdXBkYXRlICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Jhc2VGaWx0ZXJXaXRoSGlzdG9yeSAtIG5vIHVwZGF0ZSBtZXRob2Qgc3BlY2lmaWVkJylcbiAgfVxuXG4gIGFkZFJlc3VsdHMgKG5ld1Jlc3VsdHMpIHtcbiAgICB0aGlzLmFsbFJlc3VsdHMgPSB0aGlzLmFsbFJlc3VsdHMuY29uY2F0KG5ld1Jlc3VsdHMpXG4gICAgc3VwZXIuYWRkUmVzdWx0cyhuZXdSZXN1bHRzKVxuICB9XG5cbiAgYWRkSW5pdGlhbFJlc3VsdHMgKG5ld1Jlc3VsdHMpIHtcbiAgICB0aGlzLmFsbFJlc3VsdHMgPSB0aGlzLmFsbFJlc3VsdHMuY29uY2F0KG5ld1Jlc3VsdHMpXG4gICAgc3VwZXIuYWRkSW5pdGlhbFJlc3VsdHMobmV3UmVzdWx0cylcbiAgfVxuXG4gIGdldEFsbFJlc3VsdHMgKCkge1xuICAgIHJldHVybiB0aGlzLmFsbFJlc3VsdHNcbiAgfVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQmFzZUZpbHRlcldpdGhIaXN0b3J5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/base-filter-history.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/base-filter.js":
/*!***********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/base-filter.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const SafeEventEmitter = __webpack_require__(/*! @metamask/safe-event-emitter */ \"../../node_modules/@metamask/safe-event-emitter/index.js\").default\n\nclass BaseFilter extends SafeEventEmitter {\n\n  constructor () {\n    super()\n    this.updates = []\n  }\n\n  async initialize () {}\n\n  async update () {\n    throw new Error('BaseFilter - no update method specified')\n  }\n\n  addResults (newResults) {\n    this.updates = this.updates.concat(newResults)\n    newResults.forEach(result => this.emit('update', result))\n  }\n\n  addInitialResults (newResults) {}\n\n  getChangesAndClear () {\n    const updates = this.updates\n    this.updates = []\n    return updates\n  }\n  \n}\n\nmodule.exports = BaseFilter\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL2Jhc2UtZmlsdGVyLmpzPzkzNTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUJBQXlCLG1CQUFPLENBQUMsOEZBQThCOztBQUUvRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLWZpbHRlcnMvYmFzZS1maWx0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTYWZlRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnQG1ldGFtYXNrL3NhZmUtZXZlbnQtZW1pdHRlcicpLmRlZmF1bHRcblxuY2xhc3MgQmFzZUZpbHRlciBleHRlbmRzIFNhZmVFdmVudEVtaXR0ZXIge1xuXG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICBzdXBlcigpXG4gICAgdGhpcy51cGRhdGVzID0gW11cbiAgfVxuXG4gIGFzeW5jIGluaXRpYWxpemUgKCkge31cblxuICBhc3luYyB1cGRhdGUgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQmFzZUZpbHRlciAtIG5vIHVwZGF0ZSBtZXRob2Qgc3BlY2lmaWVkJylcbiAgfVxuXG4gIGFkZFJlc3VsdHMgKG5ld1Jlc3VsdHMpIHtcbiAgICB0aGlzLnVwZGF0ZXMgPSB0aGlzLnVwZGF0ZXMuY29uY2F0KG5ld1Jlc3VsdHMpXG4gICAgbmV3UmVzdWx0cy5mb3JFYWNoKHJlc3VsdCA9PiB0aGlzLmVtaXQoJ3VwZGF0ZScsIHJlc3VsdCkpXG4gIH1cblxuICBhZGRJbml0aWFsUmVzdWx0cyAobmV3UmVzdWx0cykge31cblxuICBnZXRDaGFuZ2VzQW5kQ2xlYXIgKCkge1xuICAgIGNvbnN0IHVwZGF0ZXMgPSB0aGlzLnVwZGF0ZXNcbiAgICB0aGlzLnVwZGF0ZXMgPSBbXVxuICAgIHJldHVybiB1cGRhdGVzXG4gIH1cbiAgXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQmFzZUZpbHRlclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/base-filter.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/block-filter.js":
/*!************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/block-filter.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const BaseFilter = __webpack_require__(/*! ./base-filter */ \"../../node_modules/eth-json-rpc-filters/base-filter.js\")\nconst getBlocksForRange = __webpack_require__(/*! ./getBlocksForRange */ \"../../node_modules/eth-json-rpc-filters/getBlocksForRange.js\")\nconst { incrementHexInt } = __webpack_require__(/*! ./hexUtils */ \"../../node_modules/eth-json-rpc-filters/hexUtils.js\")\n\nclass BlockFilter extends BaseFilter {\n\n  constructor ({ provider, params }) {\n    super()\n    this.type = 'block'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock, newBlock }) {\n    const toBlock = newBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blockBodies = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockHashes = blockBodies.map((block) => block.hash)\n    this.addResults(blockHashes)\n  }\n\n}\n\nmodule.exports = BlockFilter\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL2Jsb2NrLWZpbHRlci5qcz81MmE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFlO0FBQzFDLDBCQUEwQixtQkFBTyxDQUFDLHlGQUFxQjtBQUN2RCxPQUFPLGtCQUFrQixHQUFHLG1CQUFPLENBQUMsdUVBQVk7O0FBRWhEOztBQUVBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLHFCQUFxQjtBQUN0QztBQUNBO0FBQ0EsaURBQWlELDhDQUE4QztBQUMvRjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL2Jsb2NrLWZpbHRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJhc2VGaWx0ZXIgPSByZXF1aXJlKCcuL2Jhc2UtZmlsdGVyJylcbmNvbnN0IGdldEJsb2Nrc0ZvclJhbmdlID0gcmVxdWlyZSgnLi9nZXRCbG9ja3NGb3JSYW5nZScpXG5jb25zdCB7IGluY3JlbWVudEhleEludCB9ID0gcmVxdWlyZSgnLi9oZXhVdGlscycpXG5cbmNsYXNzIEJsb2NrRmlsdGVyIGV4dGVuZHMgQmFzZUZpbHRlciB7XG5cbiAgY29uc3RydWN0b3IgKHsgcHJvdmlkZXIsIHBhcmFtcyB9KSB7XG4gICAgc3VwZXIoKVxuICAgIHRoaXMudHlwZSA9ICdibG9jaydcbiAgICB0aGlzLnByb3ZpZGVyID0gcHJvdmlkZXJcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZSAoeyBvbGRCbG9jaywgbmV3QmxvY2sgfSkge1xuICAgIGNvbnN0IHRvQmxvY2sgPSBuZXdCbG9ja1xuICAgIGNvbnN0IGZyb21CbG9jayA9IGluY3JlbWVudEhleEludChvbGRCbG9jaylcbiAgICBjb25zdCBibG9ja0JvZGllcyA9IGF3YWl0IGdldEJsb2Nrc0ZvclJhbmdlKHsgcHJvdmlkZXI6IHRoaXMucHJvdmlkZXIsIGZyb21CbG9jaywgdG9CbG9jayB9KVxuICAgIGNvbnN0IGJsb2NrSGFzaGVzID0gYmxvY2tCb2RpZXMubWFwKChibG9jaykgPT4gYmxvY2suaGFzaClcbiAgICB0aGlzLmFkZFJlc3VsdHMoYmxvY2tIYXNoZXMpXG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJsb2NrRmlsdGVyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/block-filter.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/getBlocksForRange.js":
/*!*****************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/getBlocksForRange.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = getBlocksForRange\n\nasync function getBlocksForRange({ provider, fromBlock, toBlock }) {\n  if (!fromBlock) fromBlock = toBlock\n\n  const fromBlockNumber = hexToInt(fromBlock)\n  const toBlockNumber = hexToInt(toBlock)\n  const blockCountToQuery = toBlockNumber - fromBlockNumber + 1\n  // load all blocks from old to new (inclusive)\n  const missingBlockNumbers = Array(blockCountToQuery).fill()\n                              .map((_,index) => fromBlockNumber + index)\n                              .map(intToHex)\n  const blockBodies = await Promise.all(\n    missingBlockNumbers.map(blockNum => query(provider, 'eth_getBlockByNumber', [blockNum, false]))\n  )\n  return blockBodies\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  const hexString = int.toString(16)\n  return '0x' + hexString\n}\n\nfunction query(provider, method, params) {\n  return new Promise((resolve, reject) => {\n    provider.sendAsync({ id: 1, jsonrpc: '2.0', method, params }, (err, res) => {\n      if (err) return reject(err)\n      resolve(res.result)\n    })\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL2dldEJsb2Nrc0ZvclJhbmdlLmpzPzdjNDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsa0NBQWtDLCtCQUErQjtBQUNqRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3QkFBd0Isd0NBQXdDO0FBQ2hFO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9ldGgtanNvbi1ycGMtZmlsdGVycy9nZXRCbG9ja3NGb3JSYW5nZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZ2V0QmxvY2tzRm9yUmFuZ2VcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QmxvY2tzRm9yUmFuZ2UoeyBwcm92aWRlciwgZnJvbUJsb2NrLCB0b0Jsb2NrIH0pIHtcbiAgaWYgKCFmcm9tQmxvY2spIGZyb21CbG9jayA9IHRvQmxvY2tcblxuICBjb25zdCBmcm9tQmxvY2tOdW1iZXIgPSBoZXhUb0ludChmcm9tQmxvY2spXG4gIGNvbnN0IHRvQmxvY2tOdW1iZXIgPSBoZXhUb0ludCh0b0Jsb2NrKVxuICBjb25zdCBibG9ja0NvdW50VG9RdWVyeSA9IHRvQmxvY2tOdW1iZXIgLSBmcm9tQmxvY2tOdW1iZXIgKyAxXG4gIC8vIGxvYWQgYWxsIGJsb2NrcyBmcm9tIG9sZCB0byBuZXcgKGluY2x1c2l2ZSlcbiAgY29uc3QgbWlzc2luZ0Jsb2NrTnVtYmVycyA9IEFycmF5KGJsb2NrQ291bnRUb1F1ZXJ5KS5maWxsKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoKF8saW5kZXgpID0+IGZyb21CbG9ja051bWJlciArIGluZGV4KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChpbnRUb0hleClcbiAgY29uc3QgYmxvY2tCb2RpZXMgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICBtaXNzaW5nQmxvY2tOdW1iZXJzLm1hcChibG9ja051bSA9PiBxdWVyeShwcm92aWRlciwgJ2V0aF9nZXRCbG9ja0J5TnVtYmVyJywgW2Jsb2NrTnVtLCBmYWxzZV0pKVxuICApXG4gIHJldHVybiBibG9ja0JvZGllc1xufVxuXG5mdW5jdGlvbiBoZXhUb0ludChoZXhTdHJpbmcpIHtcbiAgaWYgKGhleFN0cmluZyA9PT0gdW5kZWZpbmVkIHx8IGhleFN0cmluZyA9PT0gbnVsbCkgcmV0dXJuIGhleFN0cmluZ1xuICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KGhleFN0cmluZywgMTYpXG59XG5cbmZ1bmN0aW9uIGluY3JlbWVudEhleEludChoZXhTdHJpbmcpe1xuICBpZiAoaGV4U3RyaW5nID09PSB1bmRlZmluZWQgfHwgaGV4U3RyaW5nID09PSBudWxsKSByZXR1cm4gaGV4U3RyaW5nXG4gIGNvbnN0IHZhbHVlID0gaGV4VG9JbnQoaGV4U3RyaW5nKVxuICByZXR1cm4gaW50VG9IZXgodmFsdWUgKyAxKVxufVxuXG5mdW5jdGlvbiBpbnRUb0hleChpbnQpIHtcbiAgaWYgKGludCA9PT0gdW5kZWZpbmVkIHx8IGludCA9PT0gbnVsbCkgcmV0dXJuIGludFxuICBjb25zdCBoZXhTdHJpbmcgPSBpbnQudG9TdHJpbmcoMTYpXG4gIHJldHVybiAnMHgnICsgaGV4U3RyaW5nXG59XG5cbmZ1bmN0aW9uIHF1ZXJ5KHByb3ZpZGVyLCBtZXRob2QsIHBhcmFtcykge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHByb3ZpZGVyLnNlbmRBc3luYyh7IGlkOiAxLCBqc29ucnBjOiAnMi4wJywgbWV0aG9kLCBwYXJhbXMgfSwgKGVyciwgcmVzKSA9PiB7XG4gICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycilcbiAgICAgIHJlc29sdmUocmVzLnJlc3VsdClcbiAgICB9KVxuICB9KVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/getBlocksForRange.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/hexUtils.js":
/*!********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/hexUtils.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nmodule.exports = {\n  minBlockRef,\n  maxBlockRef,\n  sortBlockRefs,\n  bnToHex,\n  blockRefIsNumber,\n  hexToInt,\n  incrementHexInt,\n  intToHex,\n  unsafeRandomBytes,\n}\n\nfunction minBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[0]\n}\n\nfunction maxBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[sortedRefs.length-1]\n}\n\nfunction sortBlockRefs(refs) {\n  return refs.sort((refA, refB) => {\n    if (refA === 'latest' || refB === 'earliest') return 1\n    if (refB === 'latest' || refA === 'earliest') return -1\n    return hexToInt(refA) - hexToInt(refB)\n  })\n}\n\nfunction bnToHex(bn) {\n  return '0x' + bn.toString(16)\n}\n\nfunction blockRefIsNumber(blockRef){\n  return blockRef && !['earliest', 'latest', 'pending'].includes(blockRef)\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  let hexString = int.toString(16)\n  const needsLeftPad = hexString.length % 2\n  if (needsLeftPad) hexString = '0' + hexString\n  return '0x' + hexString\n}\n\nfunction unsafeRandomBytes(byteCount) {\n  let result = '0x'\n  for (let i = 0; i < byteCount; i++) {\n    result += unsafeRandomNibble()\n    result += unsafeRandomNibble()\n  }\n  return result\n}\n\nfunction unsafeRandomNibble() {\n  return Math.floor(Math.random() * 16).toString(16)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL2hleFV0aWxzLmpzPzI1ZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9ldGgtanNvbi1ycGMtZmlsdGVycy9oZXhVdGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG1pbkJsb2NrUmVmLFxuICBtYXhCbG9ja1JlZixcbiAgc29ydEJsb2NrUmVmcyxcbiAgYm5Ub0hleCxcbiAgYmxvY2tSZWZJc051bWJlcixcbiAgaGV4VG9JbnQsXG4gIGluY3JlbWVudEhleEludCxcbiAgaW50VG9IZXgsXG4gIHVuc2FmZVJhbmRvbUJ5dGVzLFxufVxuXG5mdW5jdGlvbiBtaW5CbG9ja1JlZiguLi5yZWZzKSB7XG4gIGNvbnN0IHNvcnRlZFJlZnMgPSBzb3J0QmxvY2tSZWZzKHJlZnMpXG4gIHJldHVybiBzb3J0ZWRSZWZzWzBdXG59XG5cbmZ1bmN0aW9uIG1heEJsb2NrUmVmKC4uLnJlZnMpIHtcbiAgY29uc3Qgc29ydGVkUmVmcyA9IHNvcnRCbG9ja1JlZnMocmVmcylcbiAgcmV0dXJuIHNvcnRlZFJlZnNbc29ydGVkUmVmcy5sZW5ndGgtMV1cbn1cblxuZnVuY3Rpb24gc29ydEJsb2NrUmVmcyhyZWZzKSB7XG4gIHJldHVybiByZWZzLnNvcnQoKHJlZkEsIHJlZkIpID0+IHtcbiAgICBpZiAocmVmQSA9PT0gJ2xhdGVzdCcgfHwgcmVmQiA9PT0gJ2VhcmxpZXN0JykgcmV0dXJuIDFcbiAgICBpZiAocmVmQiA9PT0gJ2xhdGVzdCcgfHwgcmVmQSA9PT0gJ2VhcmxpZXN0JykgcmV0dXJuIC0xXG4gICAgcmV0dXJuIGhleFRvSW50KHJlZkEpIC0gaGV4VG9JbnQocmVmQilcbiAgfSlcbn1cblxuZnVuY3Rpb24gYm5Ub0hleChibikge1xuICByZXR1cm4gJzB4JyArIGJuLnRvU3RyaW5nKDE2KVxufVxuXG5mdW5jdGlvbiBibG9ja1JlZklzTnVtYmVyKGJsb2NrUmVmKXtcbiAgcmV0dXJuIGJsb2NrUmVmICYmICFbJ2VhcmxpZXN0JywgJ2xhdGVzdCcsICdwZW5kaW5nJ10uaW5jbHVkZXMoYmxvY2tSZWYpXG59XG5cbmZ1bmN0aW9uIGhleFRvSW50KGhleFN0cmluZykge1xuICBpZiAoaGV4U3RyaW5nID09PSB1bmRlZmluZWQgfHwgaGV4U3RyaW5nID09PSBudWxsKSByZXR1cm4gaGV4U3RyaW5nXG4gIHJldHVybiBOdW1iZXIucGFyc2VJbnQoaGV4U3RyaW5nLCAxNilcbn1cblxuZnVuY3Rpb24gaW5jcmVtZW50SGV4SW50KGhleFN0cmluZyl7XG4gIGlmIChoZXhTdHJpbmcgPT09IHVuZGVmaW5lZCB8fCBoZXhTdHJpbmcgPT09IG51bGwpIHJldHVybiBoZXhTdHJpbmdcbiAgY29uc3QgdmFsdWUgPSBoZXhUb0ludChoZXhTdHJpbmcpXG4gIHJldHVybiBpbnRUb0hleCh2YWx1ZSArIDEpXG59XG5cbmZ1bmN0aW9uIGludFRvSGV4KGludCkge1xuICBpZiAoaW50ID09PSB1bmRlZmluZWQgfHwgaW50ID09PSBudWxsKSByZXR1cm4gaW50XG4gIGxldCBoZXhTdHJpbmcgPSBpbnQudG9TdHJpbmcoMTYpXG4gIGNvbnN0IG5lZWRzTGVmdFBhZCA9IGhleFN0cmluZy5sZW5ndGggJSAyXG4gIGlmIChuZWVkc0xlZnRQYWQpIGhleFN0cmluZyA9ICcwJyArIGhleFN0cmluZ1xuICByZXR1cm4gJzB4JyArIGhleFN0cmluZ1xufVxuXG5mdW5jdGlvbiB1bnNhZmVSYW5kb21CeXRlcyhieXRlQ291bnQpIHtcbiAgbGV0IHJlc3VsdCA9ICcweCdcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlQ291bnQ7IGkrKykge1xuICAgIHJlc3VsdCArPSB1bnNhZmVSYW5kb21OaWJibGUoKVxuICAgIHJlc3VsdCArPSB1bnNhZmVSYW5kb21OaWJibGUoKVxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxuZnVuY3Rpb24gdW5zYWZlUmFuZG9tTmliYmxlKCkge1xuICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTYpLnRvU3RyaW5nKDE2KVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/hexUtils.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/index.js":
/*!*****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/index.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Mutex = __webpack_require__(/*! async-mutex */ \"../../node_modules/async-mutex/lib/index.js\").Mutex\nconst { createAsyncMiddleware } = __webpack_require__(/*! json-rpc-engine */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/index.js\")\nconst createJsonRpcMiddleware = __webpack_require__(/*! eth-json-rpc-middleware/scaffold */ \"../../node_modules/eth-json-rpc-middleware/scaffold.js\")\nconst LogFilter = __webpack_require__(/*! ./log-filter.js */ \"../../node_modules/eth-json-rpc-filters/log-filter.js\")\nconst BlockFilter = __webpack_require__(/*! ./block-filter.js */ \"../../node_modules/eth-json-rpc-filters/block-filter.js\")\nconst TxFilter = __webpack_require__(/*! ./tx-filter.js */ \"../../node_modules/eth-json-rpc-filters/tx-filter.js\")\nconst { intToHex, hexToInt } = __webpack_require__(/*! ./hexUtils */ \"../../node_modules/eth-json-rpc-filters/hexUtils.js\")\n\nmodule.exports = createEthFilterMiddleware\n\nfunction createEthFilterMiddleware({ blockTracker, provider }) {\n\n  // create filter collection\n  let filterIndex = 0\n  let filters = {}\n  // create update mutex\n  const mutex = new Mutex()\n  const waitForFree = mutexMiddlewareWrapper({ mutex })\n\n  const middleware = createJsonRpcMiddleware({\n    // install filters\n    eth_newFilter:                   waitForFree(toFilterCreationMiddleware(newLogFilter)),\n    eth_newBlockFilter:              waitForFree(toFilterCreationMiddleware(newBlockFilter)),\n    eth_newPendingTransactionFilter: waitForFree(toFilterCreationMiddleware(newPendingTransactionFilter)),\n    // uninstall filters\n    eth_uninstallFilter:             waitForFree(toAsyncRpcMiddleware(uninstallFilterHandler)),\n    // checking filter changes\n    eth_getFilterChanges:            waitForFree(toAsyncRpcMiddleware(getFilterChanges)),\n    eth_getFilterLogs:               waitForFree(toAsyncRpcMiddleware(getFilterLogs)),\n  })\n\n  // setup filter updating and destroy handler\n  const filterUpdater = async ({ oldBlock, newBlock }) => {\n    if (filters.length === 0) return\n    // lock update reads\n    const releaseLock = await mutex.acquire()\n    try {\n      // process all filters in parallel\n      await Promise.all(objValues(filters).map(async (filter) => {\n        try {\n         await filter.update({ oldBlock, newBlock })\n        } catch (err) {\n          // handle each error individually so filter update errors don't affect other filters\n          console.error(err)\n        }\n      }))\n    } catch (err) {\n      // log error so we don't skip the releaseLock\n      console.error(err)\n    }\n    // unlock update reads\n    releaseLock()\n  }\n\n  // expose filter methods directly\n  middleware.newLogFilter = newLogFilter\n  middleware.newBlockFilter = newBlockFilter\n  middleware.newPendingTransactionFilter = newPendingTransactionFilter\n  middleware.uninstallFilter = uninstallFilterHandler\n  middleware.getFilterChanges = getFilterChanges\n  middleware.getFilterLogs = getFilterLogs\n\n  // expose destroy method for cleanup\n  middleware.destroy = () => {\n    uninstallAllFilters()\n  }\n\n  return middleware\n\n  //\n  // new filters\n  //\n\n  async function newLogFilter(params) {\n    const filter = new LogFilter({ provider, params })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  async function newBlockFilter() {\n    const filter = new BlockFilter({ provider })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  async function newPendingTransactionFilter() {\n    const filter = new TxFilter({ provider })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  //\n  // get filter changes\n  //\n\n  async function getFilterChanges(filterIndexHex) {\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    if (!filter) {\n      throw new Error(`No filter for index \"${filterIndex}\"`)\n    }\n    const results = filter.getChangesAndClear()\n    return results\n  }\n\n  async function getFilterLogs(filterIndexHex) {\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    if (!filter) {\n      throw new Error(`No filter for index \"${filterIndex}\"`)\n    }\n    // only return results for log filters\n    if (filter.type === 'log') {\n      results = filter.getAllResults()\n    } else {\n      results = []\n    }\n    return results\n  }\n\n\n  //\n  // remove filters\n  //\n\n\n  async function uninstallFilterHandler(filterIndexHex) {\n    // check filter exists\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    const result = Boolean(filter)\n    // uninstall filter\n    if (result) {\n      await uninstallFilter(filterIndex)\n    }\n    return result\n  }\n\n  //\n  // utils\n  //\n\n  async function installFilter(filter) {\n    const prevFilterCount = objValues(filters).length\n    // install filter\n    const currentBlock = await blockTracker.getLatestBlock()\n    await filter.initialize({ currentBlock })\n    filterIndex++\n    filters[filterIndex] = filter\n    filter.id = filterIndex\n    filter.idHex = intToHex(filterIndex)\n    // update block tracker subs\n    const newFilterCount = objValues(filters).length\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount })\n    return filterIndex\n  }\n\n  async function uninstallFilter(filterIndex) {\n    const prevFilterCount = objValues(filters).length\n    delete filters[filterIndex]\n    // update block tracker subs\n    const newFilterCount = objValues(filters).length\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount })\n  }\n\n  async function uninstallAllFilters() {\n    const prevFilterCount = objValues(filters).length\n    filters = {}\n    // update block tracker subs\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount: 0 })\n  }\n\n  function updateBlockTrackerSubs({ prevFilterCount, newFilterCount }) {\n    // subscribe\n    if (prevFilterCount === 0 && newFilterCount > 0) {\n      blockTracker.on('sync', filterUpdater)\n      return\n    }\n    // unsubscribe\n    if (prevFilterCount > 0 && newFilterCount === 0) {\n      blockTracker.removeListener('sync', filterUpdater)\n      return\n    }\n  }\n\n}\n\n// helper for turning filter constructors into rpc middleware\nfunction toFilterCreationMiddleware(createFilterFn) {\n  return toAsyncRpcMiddleware(async (...args) => {\n    const filter = await createFilterFn(...args)\n    const result = intToHex(filter.id)\n    return result\n  })\n}\n\n// helper for pulling out req.params and setting res.result\nfunction toAsyncRpcMiddleware(asyncFn) {\n  return createAsyncMiddleware(async (req, res) => {\n    const result = await asyncFn.apply(null, req.params)\n    res.result = result\n  })\n}\n\nfunction mutexMiddlewareWrapper({ mutex }) {\n  return (middleware) => {\n    return async (req, res, next, end) => {\n      // wait for mutex available\n      // we can release immediately because\n      // we just need to make sure updates aren't active\n      const releaseLock = await mutex.acquire()\n      releaseLock()\n      middleware(req, res, next, end)\n    }\n  }\n}\n\nfunction objValues(obj, fn){\n  const values = []\n  for (let key in obj) {\n    values.push(obj[key])\n  }\n  return values\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/index.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/log-filter.js":
/*!**********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/log-filter.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const EthQuery = __webpack_require__(/*! eth-query */ \"../../node_modules/eth-query/index.js\")\nconst pify = __webpack_require__(/*! pify */ \"../../node_modules/eth-json-rpc-filters/node_modules/pify/index.js\")\nconst BaseFilterWithHistory = __webpack_require__(/*! ./base-filter-history */ \"../../node_modules/eth-json-rpc-filters/base-filter-history.js\")\nconst { bnToHex, hexToInt, incrementHexInt, minBlockRef, blockRefIsNumber } = __webpack_require__(/*! ./hexUtils */ \"../../node_modules/eth-json-rpc-filters/hexUtils.js\")\n\nclass LogFilter extends BaseFilterWithHistory {\n\n  constructor ({ provider, params }) {\n    super()\n    this.type = 'log'\n    this.ethQuery = new EthQuery(provider)\n    this.params = Object.assign({\n      fromBlock: 'latest',\n      toBlock: 'latest',\n      address: undefined,\n      topics: [],\n    }, params)\n    // normalize address parameter\n    if (this.params.address) {\n      // ensure array\n      if (!Array.isArray(this.params.address)) {\n        this.params.address = [this.params.address]\n      }\n      // ensure lowercase\n      this.params.address = this.params.address.map(address => address.toLowerCase())\n    }\n  }\n\n  async initialize({ currentBlock }) {\n    // resolve params.fromBlock\n    let fromBlock = this.params.fromBlock\n    if (['latest', 'pending'].includes(fromBlock)) fromBlock = currentBlock\n    if ('earliest' === fromBlock) fromBlock = '0x0'\n    this.params.fromBlock = fromBlock\n    // set toBlock for initial lookup\n    const toBlock = minBlockRef(this.params.toBlock, currentBlock)\n    const params = Object.assign({}, this.params, { toBlock })\n    // fetch logs and add to results\n    const newLogs = await this._fetchLogs(params)\n    this.addInitialResults(newLogs)\n  }\n\n  async update ({ oldBlock, newBlock }) {\n    // configure params for this update\n    const toBlock = newBlock\n    let fromBlock\n    // oldBlock is empty on first sync\n    if (oldBlock) {\n      fromBlock = incrementHexInt(oldBlock)\n    } else {\n      fromBlock = newBlock\n    }\n    // fetch logs\n    const params = Object.assign({}, this.params, { fromBlock, toBlock })\n    const newLogs = await this._fetchLogs(params)\n    const matchingLogs = newLogs.filter(log => this.matchLog(log))\n\n    // add to results\n    this.addResults(matchingLogs)\n  }\n\n  async _fetchLogs (params) {\n    const newLogs = await pify(cb => this.ethQuery.getLogs(params, cb))()\n    // add to results\n    return newLogs\n  }\n\n  matchLog(log) {\n    // check if block number in bounds:\n    if (hexToInt(this.params.fromBlock) >= hexToInt(log.blockNumber)) return false\n    if (blockRefIsNumber(this.params.toBlock) && hexToInt(this.params.toBlock) <= hexToInt(log.blockNumber)) return false\n\n    // address is correct:\n    const normalizedLogAddress = log.address && log.address.toLowerCase()\n    if (this.params.address && normalizedLogAddress && !this.params.address.includes(normalizedLogAddress)) return false\n\n    // topics match:\n    // topics are position-dependant\n    // topics can be nested to represent `or` [[a || b], c]\n    // topics can be null, representing a wild card for that position\n    const topicsMatch = this.params.topics.every((topicPattern, index) => {\n      // pattern is longer than actual topics\n      let logTopic = log.topics[index]\n      if (!logTopic) return false\n      logTopic = logTopic.toLowerCase()\n      // normalize subTopics\n      let subtopicsToMatch = Array.isArray(topicPattern) ? topicPattern : [topicPattern]\n      // check for wild card\n      const subtopicsIncludeWildcard = subtopicsToMatch.includes(null)\n      if (subtopicsIncludeWildcard) return true\n      subtopicsToMatch = subtopicsToMatch.map(topic => topic.toLowerCase())\n      // check each possible matching topic\n      const topicDoesMatch = subtopicsToMatch.includes(logTopic)\n      return topicDoesMatch\n    })\n\n    return topicsMatch\n  }\n\n}\n\nmodule.exports = LogFilter\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL2xvZy1maWx0ZXIuanM/YjZlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyx3REFBVztBQUNwQyxhQUFhLG1CQUFPLENBQUMsZ0ZBQU07QUFDM0IsOEJBQThCLG1CQUFPLENBQUMsNkZBQXVCO0FBQzdELE9BQU8sb0VBQW9FLEdBQUcsbUJBQU8sQ0FBQyx1RUFBWTs7QUFFbEc7O0FBRUEsZ0JBQWdCLG1CQUFtQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixlQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQixVQUFVO0FBQzdEO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnQkFBZ0IscUJBQXFCO0FBQ3hFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLWZpbHRlcnMvbG9nLWZpbHRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEV0aFF1ZXJ5ID0gcmVxdWlyZSgnZXRoLXF1ZXJ5JylcbmNvbnN0IHBpZnkgPSByZXF1aXJlKCdwaWZ5JylcbmNvbnN0IEJhc2VGaWx0ZXJXaXRoSGlzdG9yeSA9IHJlcXVpcmUoJy4vYmFzZS1maWx0ZXItaGlzdG9yeScpXG5jb25zdCB7IGJuVG9IZXgsIGhleFRvSW50LCBpbmNyZW1lbnRIZXhJbnQsIG1pbkJsb2NrUmVmLCBibG9ja1JlZklzTnVtYmVyIH0gPSByZXF1aXJlKCcuL2hleFV0aWxzJylcblxuY2xhc3MgTG9nRmlsdGVyIGV4dGVuZHMgQmFzZUZpbHRlcldpdGhIaXN0b3J5IHtcblxuICBjb25zdHJ1Y3RvciAoeyBwcm92aWRlciwgcGFyYW1zIH0pIHtcbiAgICBzdXBlcigpXG4gICAgdGhpcy50eXBlID0gJ2xvZydcbiAgICB0aGlzLmV0aFF1ZXJ5ID0gbmV3IEV0aFF1ZXJ5KHByb3ZpZGVyKVxuICAgIHRoaXMucGFyYW1zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBmcm9tQmxvY2s6ICdsYXRlc3QnLFxuICAgICAgdG9CbG9jazogJ2xhdGVzdCcsXG4gICAgICBhZGRyZXNzOiB1bmRlZmluZWQsXG4gICAgICB0b3BpY3M6IFtdLFxuICAgIH0sIHBhcmFtcylcbiAgICAvLyBub3JtYWxpemUgYWRkcmVzcyBwYXJhbWV0ZXJcbiAgICBpZiAodGhpcy5wYXJhbXMuYWRkcmVzcykge1xuICAgICAgLy8gZW5zdXJlIGFycmF5XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5wYXJhbXMuYWRkcmVzcykpIHtcbiAgICAgICAgdGhpcy5wYXJhbXMuYWRkcmVzcyA9IFt0aGlzLnBhcmFtcy5hZGRyZXNzXVxuICAgICAgfVxuICAgICAgLy8gZW5zdXJlIGxvd2VyY2FzZVxuICAgICAgdGhpcy5wYXJhbXMuYWRkcmVzcyA9IHRoaXMucGFyYW1zLmFkZHJlc3MubWFwKGFkZHJlc3MgPT4gYWRkcmVzcy50b0xvd2VyQ2FzZSgpKVxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGluaXRpYWxpemUoeyBjdXJyZW50QmxvY2sgfSkge1xuICAgIC8vIHJlc29sdmUgcGFyYW1zLmZyb21CbG9ja1xuICAgIGxldCBmcm9tQmxvY2sgPSB0aGlzLnBhcmFtcy5mcm9tQmxvY2tcbiAgICBpZiAoWydsYXRlc3QnLCAncGVuZGluZyddLmluY2x1ZGVzKGZyb21CbG9jaykpIGZyb21CbG9jayA9IGN1cnJlbnRCbG9ja1xuICAgIGlmICgnZWFybGllc3QnID09PSBmcm9tQmxvY2spIGZyb21CbG9jayA9ICcweDAnXG4gICAgdGhpcy5wYXJhbXMuZnJvbUJsb2NrID0gZnJvbUJsb2NrXG4gICAgLy8gc2V0IHRvQmxvY2sgZm9yIGluaXRpYWwgbG9va3VwXG4gICAgY29uc3QgdG9CbG9jayA9IG1pbkJsb2NrUmVmKHRoaXMucGFyYW1zLnRvQmxvY2ssIGN1cnJlbnRCbG9jaylcbiAgICBjb25zdCBwYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnBhcmFtcywgeyB0b0Jsb2NrIH0pXG4gICAgLy8gZmV0Y2ggbG9ncyBhbmQgYWRkIHRvIHJlc3VsdHNcbiAgICBjb25zdCBuZXdMb2dzID0gYXdhaXQgdGhpcy5fZmV0Y2hMb2dzKHBhcmFtcylcbiAgICB0aGlzLmFkZEluaXRpYWxSZXN1bHRzKG5ld0xvZ3MpXG4gIH1cblxuICBhc3luYyB1cGRhdGUgKHsgb2xkQmxvY2ssIG5ld0Jsb2NrIH0pIHtcbiAgICAvLyBjb25maWd1cmUgcGFyYW1zIGZvciB0aGlzIHVwZGF0ZVxuICAgIGNvbnN0IHRvQmxvY2sgPSBuZXdCbG9ja1xuICAgIGxldCBmcm9tQmxvY2tcbiAgICAvLyBvbGRCbG9jayBpcyBlbXB0eSBvbiBmaXJzdCBzeW5jXG4gICAgaWYgKG9sZEJsb2NrKSB7XG4gICAgICBmcm9tQmxvY2sgPSBpbmNyZW1lbnRIZXhJbnQob2xkQmxvY2spXG4gICAgfSBlbHNlIHtcbiAgICAgIGZyb21CbG9jayA9IG5ld0Jsb2NrXG4gICAgfVxuICAgIC8vIGZldGNoIGxvZ3NcbiAgICBjb25zdCBwYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnBhcmFtcywgeyBmcm9tQmxvY2ssIHRvQmxvY2sgfSlcbiAgICBjb25zdCBuZXdMb2dzID0gYXdhaXQgdGhpcy5fZmV0Y2hMb2dzKHBhcmFtcylcbiAgICBjb25zdCBtYXRjaGluZ0xvZ3MgPSBuZXdMb2dzLmZpbHRlcihsb2cgPT4gdGhpcy5tYXRjaExvZyhsb2cpKVxuXG4gICAgLy8gYWRkIHRvIHJlc3VsdHNcbiAgICB0aGlzLmFkZFJlc3VsdHMobWF0Y2hpbmdMb2dzKVxuICB9XG5cbiAgYXN5bmMgX2ZldGNoTG9ncyAocGFyYW1zKSB7XG4gICAgY29uc3QgbmV3TG9ncyA9IGF3YWl0IHBpZnkoY2IgPT4gdGhpcy5ldGhRdWVyeS5nZXRMb2dzKHBhcmFtcywgY2IpKSgpXG4gICAgLy8gYWRkIHRvIHJlc3VsdHNcbiAgICByZXR1cm4gbmV3TG9nc1xuICB9XG5cbiAgbWF0Y2hMb2cobG9nKSB7XG4gICAgLy8gY2hlY2sgaWYgYmxvY2sgbnVtYmVyIGluIGJvdW5kczpcbiAgICBpZiAoaGV4VG9JbnQodGhpcy5wYXJhbXMuZnJvbUJsb2NrKSA+PSBoZXhUb0ludChsb2cuYmxvY2tOdW1iZXIpKSByZXR1cm4gZmFsc2VcbiAgICBpZiAoYmxvY2tSZWZJc051bWJlcih0aGlzLnBhcmFtcy50b0Jsb2NrKSAmJiBoZXhUb0ludCh0aGlzLnBhcmFtcy50b0Jsb2NrKSA8PSBoZXhUb0ludChsb2cuYmxvY2tOdW1iZXIpKSByZXR1cm4gZmFsc2VcblxuICAgIC8vIGFkZHJlc3MgaXMgY29ycmVjdDpcbiAgICBjb25zdCBub3JtYWxpemVkTG9nQWRkcmVzcyA9IGxvZy5hZGRyZXNzICYmIGxvZy5hZGRyZXNzLnRvTG93ZXJDYXNlKClcbiAgICBpZiAodGhpcy5wYXJhbXMuYWRkcmVzcyAmJiBub3JtYWxpemVkTG9nQWRkcmVzcyAmJiAhdGhpcy5wYXJhbXMuYWRkcmVzcy5pbmNsdWRlcyhub3JtYWxpemVkTG9nQWRkcmVzcykpIHJldHVybiBmYWxzZVxuXG4gICAgLy8gdG9waWNzIG1hdGNoOlxuICAgIC8vIHRvcGljcyBhcmUgcG9zaXRpb24tZGVwZW5kYW50XG4gICAgLy8gdG9waWNzIGNhbiBiZSBuZXN0ZWQgdG8gcmVwcmVzZW50IGBvcmAgW1thIHx8IGJdLCBjXVxuICAgIC8vIHRvcGljcyBjYW4gYmUgbnVsbCwgcmVwcmVzZW50aW5nIGEgd2lsZCBjYXJkIGZvciB0aGF0IHBvc2l0aW9uXG4gICAgY29uc3QgdG9waWNzTWF0Y2ggPSB0aGlzLnBhcmFtcy50b3BpY3MuZXZlcnkoKHRvcGljUGF0dGVybiwgaW5kZXgpID0+IHtcbiAgICAgIC8vIHBhdHRlcm4gaXMgbG9uZ2VyIHRoYW4gYWN0dWFsIHRvcGljc1xuICAgICAgbGV0IGxvZ1RvcGljID0gbG9nLnRvcGljc1tpbmRleF1cbiAgICAgIGlmICghbG9nVG9waWMpIHJldHVybiBmYWxzZVxuICAgICAgbG9nVG9waWMgPSBsb2dUb3BpYy50b0xvd2VyQ2FzZSgpXG4gICAgICAvLyBub3JtYWxpemUgc3ViVG9waWNzXG4gICAgICBsZXQgc3VidG9waWNzVG9NYXRjaCA9IEFycmF5LmlzQXJyYXkodG9waWNQYXR0ZXJuKSA/IHRvcGljUGF0dGVybiA6IFt0b3BpY1BhdHRlcm5dXG4gICAgICAvLyBjaGVjayBmb3Igd2lsZCBjYXJkXG4gICAgICBjb25zdCBzdWJ0b3BpY3NJbmNsdWRlV2lsZGNhcmQgPSBzdWJ0b3BpY3NUb01hdGNoLmluY2x1ZGVzKG51bGwpXG4gICAgICBpZiAoc3VidG9waWNzSW5jbHVkZVdpbGRjYXJkKSByZXR1cm4gdHJ1ZVxuICAgICAgc3VidG9waWNzVG9NYXRjaCA9IHN1YnRvcGljc1RvTWF0Y2gubWFwKHRvcGljID0+IHRvcGljLnRvTG93ZXJDYXNlKCkpXG4gICAgICAvLyBjaGVjayBlYWNoIHBvc3NpYmxlIG1hdGNoaW5nIHRvcGljXG4gICAgICBjb25zdCB0b3BpY0RvZXNNYXRjaCA9IHN1YnRvcGljc1RvTWF0Y2guaW5jbHVkZXMobG9nVG9waWMpXG4gICAgICByZXR1cm4gdG9waWNEb2VzTWF0Y2hcbiAgICB9KVxuXG4gICAgcmV0dXJuIHRvcGljc01hdGNoXG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IExvZ0ZpbHRlclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/log-filter.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/classes.js":
/*!****************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/classes.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProviderError = exports.EthereumRpcError = void 0;\nconst fast_safe_stringify_1 = __webpack_require__(/*! fast-safe-stringify */ \"../../node_modules/fast-safe-stringify/index.js\");\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP-1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n    constructor(code, message, data) {\n        if (!Number.isInteger(code)) {\n            throw new Error('\"code\" must be an integer.');\n        }\n        if (!message || typeof message !== 'string') {\n            throw new Error('\"message\" must be a nonempty string.');\n        }\n        super(message);\n        this.code = code;\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n    /**\n     * Returns a plain object with all public class properties.\n     */\n    serialize() {\n        const serialized = {\n            code: this.code,\n            message: this.message,\n        };\n        if (this.data !== undefined) {\n            serialized.data = this.data;\n        }\n        if (this.stack) {\n            serialized.stack = this.stack;\n        }\n        return serialized;\n    }\n    /**\n     * Return a string representation of the serialized error, omitting\n     * any circular references.\n     */\n    toString() {\n        return fast_safe_stringify_1.default(this.serialize(), stringifyReplacer, 2);\n    }\n}\nexports.EthereumRpcError = EthereumRpcError;\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n    /**\n     * Create an Ethereum Provider JSON-RPC error.\n     * `code` must be an integer in the 1000 <= 4999 range.\n     */\n    constructor(code, message, data) {\n        if (!isValidEthProviderCode(code)) {\n            throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n        }\n        super(code, message, data);\n    }\n}\nexports.EthereumProviderError = EthereumProviderError;\n// Internal\nfunction isValidEthProviderCode(code) {\n    return Number.isInteger(code) && code >= 1000 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n    if (value === '[Circular]') {\n        return undefined;\n    }\n    return value;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3Nlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGFzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUFnRDtBQVNoRDs7OztHQUlHO0FBQ0gsTUFBYSxnQkFBb0IsU0FBUSxLQUFLO0lBTTVDLFlBQVksSUFBWSxFQUFFLE9BQWUsRUFBRSxJQUFRO1FBRWpELElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzNCLE1BQU0sSUFBSSxLQUFLLENBQ2IsNEJBQTRCLENBQzdCLENBQUM7U0FDSDtRQUNELElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQzNDLE1BQU0sSUFBSSxLQUFLLENBQ2Isc0NBQXNDLENBQ3ZDLENBQUM7U0FDSDtRQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNsQjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVM7UUFDUCxNQUFNLFVBQVUsR0FBK0I7WUFDN0MsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUM7UUFDRixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQzNCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztTQUM3QjtRQUNELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUMvQjtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxRQUFRO1FBQ04sT0FBTyw2QkFBYSxDQUNsQixJQUFJLENBQUMsU0FBUyxFQUFFLEVBQ2hCLGlCQUFpQixFQUNqQixDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQXRERCw0Q0FzREM7QUFFRDs7O0dBR0c7QUFDSCxNQUFhLHFCQUF5QixTQUFRLGdCQUFtQjtJQUUvRDs7O09BR0c7SUFDSCxZQUFZLElBQVksRUFBRSxPQUFlLEVBQUUsSUFBUTtRQUVqRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDakMsTUFBTSxJQUFJLEtBQUssQ0FDYiwyREFBMkQsQ0FDNUQsQ0FBQztTQUNIO1FBRUQsS0FBSyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztDQUNGO0FBaEJELHNEQWdCQztBQUVELFdBQVc7QUFFWCxTQUFTLHNCQUFzQixDQUFDLElBQVk7SUFDMUMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztBQUNoRSxDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxDQUFVLEVBQUUsS0FBYztJQUNuRCxJQUFJLEtBQUssS0FBSyxZQUFZLEVBQUU7UUFDMUIsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMifQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9ldGgtcnBjLWVycm9ycy9kaXN0L2NsYXNzZXMuanM/NzNjMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsOEJBQThCLG1CQUFPLENBQUMsNEVBQXFCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9ldGgtcnBjLWVycm9ycy9kaXN0L2NsYXNzZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXRoZXJldW1Qcm92aWRlckVycm9yID0gZXhwb3J0cy5FdGhlcmV1bVJwY0Vycm9yID0gdm9pZCAwO1xuY29uc3QgZmFzdF9zYWZlX3N0cmluZ2lmeV8xID0gcmVxdWlyZShcImZhc3Qtc2FmZS1zdHJpbmdpZnlcIik7XG4vKipcbiAqIEVycm9yIHN1YmNsYXNzIGltcGxlbWVudGluZyBKU09OIFJQQyAyLjAgZXJyb3JzIGFuZCBFdGhlcmV1bSBSUEMgZXJyb3JzXG4gKiBwZXIgRUlQLTE0NzQuXG4gKiBQZXJtaXRzIGFueSBpbnRlZ2VyIGVycm9yIGNvZGUuXG4gKi9cbmNsYXNzIEV0aGVyZXVtUnBjRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY29kZSwgbWVzc2FnZSwgZGF0YSkge1xuICAgICAgICBpZiAoIU51bWJlci5pc0ludGVnZXIoY29kZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignXCJjb2RlXCIgbXVzdCBiZSBhbiBpbnRlZ2VyLicpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghbWVzc2FnZSB8fCB0eXBlb2YgbWVzc2FnZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignXCJtZXNzYWdlXCIgbXVzdCBiZSBhIG5vbmVtcHR5IHN0cmluZy4nKTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgcGxhaW4gb2JqZWN0IHdpdGggYWxsIHB1YmxpYyBjbGFzcyBwcm9wZXJ0aWVzLlxuICAgICAqL1xuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZCA9IHtcbiAgICAgICAgICAgIGNvZGU6IHRoaXMuY29kZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMuZGF0YSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzZXJpYWxpemVkLmRhdGEgPSB0aGlzLmRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc3RhY2spIHtcbiAgICAgICAgICAgIHNlcmlhbGl6ZWQuc3RhY2sgPSB0aGlzLnN0YWNrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZXJpYWxpemVkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gYSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHNlcmlhbGl6ZWQgZXJyb3IsIG9taXR0aW5nXG4gICAgICogYW55IGNpcmN1bGFyIHJlZmVyZW5jZXMuXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBmYXN0X3NhZmVfc3RyaW5naWZ5XzEuZGVmYXVsdCh0aGlzLnNlcmlhbGl6ZSgpLCBzdHJpbmdpZnlSZXBsYWNlciwgMik7XG4gICAgfVxufVxuZXhwb3J0cy5FdGhlcmV1bVJwY0Vycm9yID0gRXRoZXJldW1ScGNFcnJvcjtcbi8qKlxuICogRXJyb3Igc3ViY2xhc3MgaW1wbGVtZW50aW5nIEV0aGVyZXVtIFByb3ZpZGVyIGVycm9ycyBwZXIgRUlQLTExOTMuXG4gKiBQZXJtaXRzIGludGVnZXIgZXJyb3IgY29kZXMgaW4gdGhlIFsgMTAwMCA8PSA0OTk5IF0gcmFuZ2UuXG4gKi9cbmNsYXNzIEV0aGVyZXVtUHJvdmlkZXJFcnJvciBleHRlbmRzIEV0aGVyZXVtUnBjRXJyb3Ige1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBFdGhlcmV1bSBQcm92aWRlciBKU09OLVJQQyBlcnJvci5cbiAgICAgKiBgY29kZWAgbXVzdCBiZSBhbiBpbnRlZ2VyIGluIHRoZSAxMDAwIDw9IDQ5OTkgcmFuZ2UuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29kZSwgbWVzc2FnZSwgZGF0YSkge1xuICAgICAgICBpZiAoIWlzVmFsaWRFdGhQcm92aWRlckNvZGUoY29kZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignXCJjb2RlXCIgbXVzdCBiZSBhbiBpbnRlZ2VyIHN1Y2ggdGhhdDogMTAwMCA8PSBjb2RlIDw9IDQ5OTknKTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihjb2RlLCBtZXNzYWdlLCBkYXRhKTtcbiAgICB9XG59XG5leHBvcnRzLkV0aGVyZXVtUHJvdmlkZXJFcnJvciA9IEV0aGVyZXVtUHJvdmlkZXJFcnJvcjtcbi8vIEludGVybmFsXG5mdW5jdGlvbiBpc1ZhbGlkRXRoUHJvdmlkZXJDb2RlKGNvZGUpIHtcbiAgICByZXR1cm4gTnVtYmVyLmlzSW50ZWdlcihjb2RlKSAmJiBjb2RlID49IDEwMDAgJiYgY29kZSA8PSA0OTk5O1xufVxuZnVuY3Rpb24gc3RyaW5naWZ5UmVwbGFjZXIoXywgdmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09ICdbQ2lyY3VsYXJdJykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZMnhoYzNObGN5NXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpJanBiSWk0dUwzTnlZeTlqYkdGemMyVnpMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3T3p0QlFVRkJMRFpFUVVGblJEdEJRVk5vUkRzN096dEhRVWxITzBGQlEwZ3NUVUZCWVN4blFrRkJiMElzVTBGQlVTeExRVUZMTzBsQlRUVkRMRmxCUVZrc1NVRkJXU3hGUVVGRkxFOUJRV1VzUlVGQlJTeEpRVUZSTzFGQlJXcEVMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZPMWxCUXpOQ0xFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlEySXNORUpCUVRSQ0xFTkJRemRDTEVOQlFVTTdVMEZEU0R0UlFVTkVMRWxCUVVrc1EwRkJReXhQUVVGUExFbEJRVWtzVDBGQlR5eFBRVUZQTEV0QlFVc3NVVUZCVVN4RlFVRkZPMWxCUXpORExFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlEySXNjME5CUVhORExFTkJRM1pETEVOQlFVTTdVMEZEU0R0UlFVVkVMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dFJRVU5tTEVsQlFVa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRE8xRkJRMnBDTEVsQlFVa3NTVUZCU1N4TFFVRkxMRk5CUVZNc1JVRkJSVHRaUVVOMFFpeEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJRenRUUVVOc1FqdEpRVU5JTEVOQlFVTTdTVUZGUkRzN1QwRkZSenRKUVVOSUxGTkJRVk03VVVGRFVDeE5RVUZOTEZWQlFWVXNSMEZCSzBJN1dVRkROME1zU1VGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4SlFVRkpPMWxCUTJZc1QwRkJUeXhGUVVGRkxFbEJRVWtzUTBGQlF5eFBRVUZQTzFOQlEzUkNMRU5CUVVNN1VVRkRSaXhKUVVGSkxFbEJRVWtzUTBGQlF5eEpRVUZKTEV0QlFVc3NVMEZCVXl4RlFVRkZPMWxCUXpOQ0xGVkJRVlVzUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJRenRUUVVNM1FqdFJRVU5FTEVsQlFVa3NTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSVHRaUVVOa0xGVkJRVlVzUTBGQlF5eExRVUZMTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenRUUVVNdlFqdFJRVU5FTEU5QlFVOHNWVUZCVlN4RFFVRkRPMGxCUTNCQ0xFTkJRVU03U1VGRlJEczdPMDlCUjBjN1NVRkRTQ3hSUVVGUk8xRkJRMDRzVDBGQlR5dzJRa0ZCWVN4RFFVTnNRaXhKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTEVWQlEyaENMR2xDUVVGcFFpeEZRVU5xUWl4RFFVRkRMRU5CUTBZc1EwRkJRenRKUVVOS0xFTkJRVU03UTBGRFJqdEJRWFJFUkN3MFEwRnpSRU03UVVGRlJEczdPMGRCUjBjN1FVRkRTQ3hOUVVGaExIRkNRVUY1UWl4VFFVRlJMR2RDUVVGdFFqdEpRVVV2UkRzN08wOUJSMGM3U1VGRFNDeFpRVUZaTEVsQlFWa3NSVUZCUlN4UFFVRmxMRVZCUVVVc1NVRkJVVHRSUVVWcVJDeEpRVUZKTEVOQlFVTXNjMEpCUVhOQ0xFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVTdXVUZEYWtNc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGRFlpd3lSRUZCTWtRc1EwRkROVVFzUTBGQlF6dFRRVU5JTzFGQlJVUXNTMEZCU3l4RFFVRkRMRWxCUVVrc1JVRkJSU3hQUVVGUExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdTVUZETjBJc1EwRkJRenREUVVOR08wRkJhRUpFTEhORVFXZENRenRCUVVWRUxGZEJRVmM3UVVGRldDeFRRVUZUTEhOQ1FVRnpRaXhEUVVGRExFbEJRVms3U1VGRE1VTXNUMEZCVHl4TlFVRk5MRU5CUVVNc1UwRkJVeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVsQlFVa3NTVUZCU1N4SlFVRkpMRWxCUVVrc1NVRkJTU3hKUVVGSkxFbEJRVWtzUTBGQlF6dEJRVU5vUlN4RFFVRkRPMEZCUlVRc1UwRkJVeXhwUWtGQmFVSXNRMEZCUXl4RFFVRlZMRVZCUVVVc1MwRkJZenRKUVVOdVJDeEpRVUZKTEV0QlFVc3NTMEZCU3l4WlFVRlpMRVZCUVVVN1VVRkRNVUlzVDBGQlR5eFRRVUZUTEVOQlFVTTdTMEZEYkVJN1NVRkRSQ3hQUVVGUExFdEJRVXNzUTBGQlF6dEJRVU5tTEVOQlFVTWlmUT09Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/classes.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/error-constants.js":
/*!************************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/error-constants.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorValues = exports.errorCodes = void 0;\nexports.errorCodes = {\n    rpc: {\n        invalidInput: -32000,\n        resourceNotFound: -32001,\n        resourceUnavailable: -32002,\n        transactionRejected: -32003,\n        methodNotSupported: -32004,\n        limitExceeded: -32005,\n        parse: -32700,\n        invalidRequest: -32600,\n        methodNotFound: -32601,\n        invalidParams: -32602,\n        internal: -32603,\n    },\n    provider: {\n        userRejectedRequest: 4001,\n        unauthorized: 4100,\n        unsupportedMethod: 4200,\n        disconnected: 4900,\n        chainDisconnected: 4901,\n    },\n};\nexports.errorValues = {\n    '-32700': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    },\n    '-32600': {\n        standard: 'JSON RPC 2.0',\n        message: 'The JSON sent is not a valid Request object.',\n    },\n    '-32601': {\n        standard: 'JSON RPC 2.0',\n        message: 'The method does not exist / is not available.',\n    },\n    '-32602': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid method parameter(s).',\n    },\n    '-32603': {\n        standard: 'JSON RPC 2.0',\n        message: 'Internal JSON-RPC error.',\n    },\n    '-32000': {\n        standard: 'EIP-1474',\n        message: 'Invalid input.',\n    },\n    '-32001': {\n        standard: 'EIP-1474',\n        message: 'Resource not found.',\n    },\n    '-32002': {\n        standard: 'EIP-1474',\n        message: 'Resource unavailable.',\n    },\n    '-32003': {\n        standard: 'EIP-1474',\n        message: 'Transaction rejected.',\n    },\n    '-32004': {\n        standard: 'EIP-1474',\n        message: 'Method not supported.',\n    },\n    '-32005': {\n        standard: 'EIP-1474',\n        message: 'Request limit exceeded.',\n    },\n    '4001': {\n        standard: 'EIP-1193',\n        message: 'User rejected the request.',\n    },\n    '4100': {\n        standard: 'EIP-1193',\n        message: 'The requested account and/or method has not been authorized by the user.',\n    },\n    '4200': {\n        standard: 'EIP-1193',\n        message: 'The requested method is not supported by this Ethereum provider.',\n    },\n    '4900': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from all chains.',\n    },\n    '4901': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from the specified chain.',\n    },\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9yLWNvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUF1QmEsUUFBQSxVQUFVLEdBQWU7SUFDcEMsR0FBRyxFQUFFO1FBQ0gsWUFBWSxFQUFFLENBQUMsS0FBSztRQUNwQixnQkFBZ0IsRUFBRSxDQUFDLEtBQUs7UUFDeEIsbUJBQW1CLEVBQUUsQ0FBQyxLQUFLO1FBQzNCLG1CQUFtQixFQUFFLENBQUMsS0FBSztRQUMzQixrQkFBa0IsRUFBRSxDQUFDLEtBQUs7UUFDMUIsYUFBYSxFQUFFLENBQUMsS0FBSztRQUNyQixLQUFLLEVBQUUsQ0FBQyxLQUFLO1FBQ2IsY0FBYyxFQUFFLENBQUMsS0FBSztRQUN0QixjQUFjLEVBQUUsQ0FBQyxLQUFLO1FBQ3RCLGFBQWEsRUFBRSxDQUFDLEtBQUs7UUFDckIsUUFBUSxFQUFFLENBQUMsS0FBSztLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNSLG1CQUFtQixFQUFFLElBQUk7UUFDekIsWUFBWSxFQUFFLElBQUk7UUFDbEIsaUJBQWlCLEVBQUUsSUFBSTtRQUN2QixZQUFZLEVBQUUsSUFBSTtRQUNsQixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCO0NBQ0YsQ0FBQztBQUVXLFFBQUEsV0FBVyxHQUFHO0lBQ3pCLFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSx1R0FBdUc7S0FDakg7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsOENBQThDO0tBQ3hEO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLGNBQWM7UUFDeEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSw4QkFBOEI7S0FDeEM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsMEJBQTBCO0tBQ3BDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLGdCQUFnQjtLQUMxQjtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSxxQkFBcUI7S0FDL0I7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsdUJBQXVCO0tBQ2pDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtLQUNqQztJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx1QkFBdUI7S0FDakM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUseUJBQXlCO0tBQ25DO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLDRCQUE0QjtLQUN0QztJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSwwRUFBMEU7S0FDcEY7SUFDRCxNQUFNLEVBQUU7UUFDTixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsa0VBQWtFO0tBQzVFO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx3REFBd0Q7S0FDbEU7Q0FDRixDQUFDIn0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9ldGgtcnBjLWVycm9ycy9kaXN0L2Vycm9yLWNvbnN0YW50cy5qcz8yY2ExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLWZpbHRlcnMvbm9kZV9tb2R1bGVzL2V0aC1ycGMtZXJyb3JzL2Rpc3QvZXJyb3ItY29uc3RhbnRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmVycm9yVmFsdWVzID0gZXhwb3J0cy5lcnJvckNvZGVzID0gdm9pZCAwO1xuZXhwb3J0cy5lcnJvckNvZGVzID0ge1xuICAgIHJwYzoge1xuICAgICAgICBpbnZhbGlkSW5wdXQ6IC0zMjAwMCxcbiAgICAgICAgcmVzb3VyY2VOb3RGb3VuZDogLTMyMDAxLFxuICAgICAgICByZXNvdXJjZVVuYXZhaWxhYmxlOiAtMzIwMDIsXG4gICAgICAgIHRyYW5zYWN0aW9uUmVqZWN0ZWQ6IC0zMjAwMyxcbiAgICAgICAgbWV0aG9kTm90U3VwcG9ydGVkOiAtMzIwMDQsXG4gICAgICAgIGxpbWl0RXhjZWVkZWQ6IC0zMjAwNSxcbiAgICAgICAgcGFyc2U6IC0zMjcwMCxcbiAgICAgICAgaW52YWxpZFJlcXVlc3Q6IC0zMjYwMCxcbiAgICAgICAgbWV0aG9kTm90Rm91bmQ6IC0zMjYwMSxcbiAgICAgICAgaW52YWxpZFBhcmFtczogLTMyNjAyLFxuICAgICAgICBpbnRlcm5hbDogLTMyNjAzLFxuICAgIH0sXG4gICAgcHJvdmlkZXI6IHtcbiAgICAgICAgdXNlclJlamVjdGVkUmVxdWVzdDogNDAwMSxcbiAgICAgICAgdW5hdXRob3JpemVkOiA0MTAwLFxuICAgICAgICB1bnN1cHBvcnRlZE1ldGhvZDogNDIwMCxcbiAgICAgICAgZGlzY29ubmVjdGVkOiA0OTAwLFxuICAgICAgICBjaGFpbkRpc2Nvbm5lY3RlZDogNDkwMSxcbiAgICB9LFxufTtcbmV4cG9ydHMuZXJyb3JWYWx1ZXMgPSB7XG4gICAgJy0zMjcwMCc6IHtcbiAgICAgICAgc3RhbmRhcmQ6ICdKU09OIFJQQyAyLjAnLFxuICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCBKU09OIHdhcyByZWNlaXZlZCBieSB0aGUgc2VydmVyLiBBbiBlcnJvciBvY2N1cnJlZCBvbiB0aGUgc2VydmVyIHdoaWxlIHBhcnNpbmcgdGhlIEpTT04gdGV4dC4nLFxuICAgIH0sXG4gICAgJy0zMjYwMCc6IHtcbiAgICAgICAgc3RhbmRhcmQ6ICdKU09OIFJQQyAyLjAnLFxuICAgICAgICBtZXNzYWdlOiAnVGhlIEpTT04gc2VudCBpcyBub3QgYSB2YWxpZCBSZXF1ZXN0IG9iamVjdC4nLFxuICAgIH0sXG4gICAgJy0zMjYwMSc6IHtcbiAgICAgICAgc3RhbmRhcmQ6ICdKU09OIFJQQyAyLjAnLFxuICAgICAgICBtZXNzYWdlOiAnVGhlIG1ldGhvZCBkb2VzIG5vdCBleGlzdCAvIGlzIG5vdCBhdmFpbGFibGUuJyxcbiAgICB9LFxuICAgICctMzI2MDInOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnSlNPTiBSUEMgMi4wJyxcbiAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgbWV0aG9kIHBhcmFtZXRlcihzKS4nLFxuICAgIH0sXG4gICAgJy0zMjYwMyc6IHtcbiAgICAgICAgc3RhbmRhcmQ6ICdKU09OIFJQQyAyLjAnLFxuICAgICAgICBtZXNzYWdlOiAnSW50ZXJuYWwgSlNPTi1SUEMgZXJyb3IuJyxcbiAgICB9LFxuICAgICctMzIwMDAnOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTE0NzQnLFxuICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCBpbnB1dC4nLFxuICAgIH0sXG4gICAgJy0zMjAwMSc6IHtcbiAgICAgICAgc3RhbmRhcmQ6ICdFSVAtMTQ3NCcsXG4gICAgICAgIG1lc3NhZ2U6ICdSZXNvdXJjZSBub3QgZm91bmQuJyxcbiAgICB9LFxuICAgICctMzIwMDInOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTE0NzQnLFxuICAgICAgICBtZXNzYWdlOiAnUmVzb3VyY2UgdW5hdmFpbGFibGUuJyxcbiAgICB9LFxuICAgICctMzIwMDMnOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTE0NzQnLFxuICAgICAgICBtZXNzYWdlOiAnVHJhbnNhY3Rpb24gcmVqZWN0ZWQuJyxcbiAgICB9LFxuICAgICctMzIwMDQnOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTE0NzQnLFxuICAgICAgICBtZXNzYWdlOiAnTWV0aG9kIG5vdCBzdXBwb3J0ZWQuJyxcbiAgICB9LFxuICAgICctMzIwMDUnOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTE0NzQnLFxuICAgICAgICBtZXNzYWdlOiAnUmVxdWVzdCBsaW1pdCBleGNlZWRlZC4nLFxuICAgIH0sXG4gICAgJzQwMDEnOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTExOTMnLFxuICAgICAgICBtZXNzYWdlOiAnVXNlciByZWplY3RlZCB0aGUgcmVxdWVzdC4nLFxuICAgIH0sXG4gICAgJzQxMDAnOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTExOTMnLFxuICAgICAgICBtZXNzYWdlOiAnVGhlIHJlcXVlc3RlZCBhY2NvdW50IGFuZC9vciBtZXRob2QgaGFzIG5vdCBiZWVuIGF1dGhvcml6ZWQgYnkgdGhlIHVzZXIuJyxcbiAgICB9LFxuICAgICc0MjAwJzoge1xuICAgICAgICBzdGFuZGFyZDogJ0VJUC0xMTkzJyxcbiAgICAgICAgbWVzc2FnZTogJ1RoZSByZXF1ZXN0ZWQgbWV0aG9kIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBFdGhlcmV1bSBwcm92aWRlci4nLFxuICAgIH0sXG4gICAgJzQ5MDAnOiB7XG4gICAgICAgIHN0YW5kYXJkOiAnRUlQLTExOTMnLFxuICAgICAgICBtZXNzYWdlOiAnVGhlIHByb3ZpZGVyIGlzIGRpc2Nvbm5lY3RlZCBmcm9tIGFsbCBjaGFpbnMuJyxcbiAgICB9LFxuICAgICc0OTAxJzoge1xuICAgICAgICBzdGFuZGFyZDogJ0VJUC0xMTkzJyxcbiAgICAgICAgbWVzc2FnZTogJ1RoZSBwcm92aWRlciBpcyBkaXNjb25uZWN0ZWQgZnJvbSB0aGUgc3BlY2lmaWVkIGNoYWluLicsXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2laWEp5YjNJdFkyOXVjM1JoYm5SekxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dmMzSmpMMlZ5Y205eUxXTnZibk4wWVc1MGN5NTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3UVVGMVFtRXNVVUZCUVN4VlFVRlZMRWRCUVdVN1NVRkRjRU1zUjBGQlJ5eEZRVUZGTzFGQlEwZ3NXVUZCV1N4RlFVRkZMRU5CUVVNc1MwRkJTenRSUVVOd1FpeG5Ra0ZCWjBJc1JVRkJSU3hEUVVGRExFdEJRVXM3VVVGRGVFSXNiVUpCUVcxQ0xFVkJRVVVzUTBGQlF5eExRVUZMTzFGQlF6TkNMRzFDUVVGdFFpeEZRVUZGTEVOQlFVTXNTMEZCU3p0UlFVTXpRaXhyUWtGQmEwSXNSVUZCUlN4RFFVRkRMRXRCUVVzN1VVRkRNVUlzWVVGQllTeEZRVUZGTEVOQlFVTXNTMEZCU3p0UlFVTnlRaXhMUVVGTExFVkJRVVVzUTBGQlF5eExRVUZMTzFGQlEySXNZMEZCWXl4RlFVRkZMRU5CUVVNc1MwRkJTenRSUVVOMFFpeGpRVUZqTEVWQlFVVXNRMEZCUXl4TFFVRkxPMUZCUTNSQ0xHRkJRV0VzUlVGQlJTeERRVUZETEV0QlFVczdVVUZEY2tJc1VVRkJVU3hGUVVGRkxFTkJRVU1zUzBGQlN6dExRVU5xUWp0SlFVTkVMRkZCUVZFc1JVRkJSVHRSUVVOU0xHMUNRVUZ0UWl4RlFVRkZMRWxCUVVrN1VVRkRla0lzV1VGQldTeEZRVUZGTEVsQlFVazdVVUZEYkVJc2FVSkJRV2xDTEVWQlFVVXNTVUZCU1R0UlFVTjJRaXhaUVVGWkxFVkJRVVVzU1VGQlNUdFJRVU5zUWl4cFFrRkJhVUlzUlVGQlJTeEpRVUZKTzB0QlEzaENPME5CUTBZc1EwRkJRenRCUVVWWExGRkJRVUVzVjBGQlZ5eEhRVUZITzBsQlEzcENMRkZCUVZFc1JVRkJSVHRSUVVOU0xGRkJRVkVzUlVGQlJTeGpRVUZqTzFGQlEzaENMRTlCUVU4c1JVRkJSU3gxUjBGQmRVYzdTMEZEYWtnN1NVRkRSQ3hSUVVGUkxFVkJRVVU3VVVGRFVpeFJRVUZSTEVWQlFVVXNZMEZCWXp0UlFVTjRRaXhQUVVGUExFVkJRVVVzT0VOQlFUaERPMHRCUTNoRU8wbEJRMFFzVVVGQlVTeEZRVUZGTzFGQlExSXNVVUZCVVN4RlFVRkZMR05CUVdNN1VVRkRlRUlzVDBGQlR5eEZRVUZGTEN0RFFVRXJRenRMUVVONlJEdEpRVU5FTEZGQlFWRXNSVUZCUlR0UlFVTlNMRkZCUVZFc1JVRkJSU3hqUVVGak8xRkJRM2hDTEU5QlFVOHNSVUZCUlN3NFFrRkJPRUk3UzBGRGVFTTdTVUZEUkN4UlFVRlJMRVZCUVVVN1VVRkRVaXhSUVVGUkxFVkJRVVVzWTBGQll6dFJRVU40UWl4UFFVRlBMRVZCUVVVc01FSkJRVEJDTzB0QlEzQkRPMGxCUTBRc1VVRkJVU3hGUVVGRk8xRkJRMUlzVVVGQlVTeEZRVUZGTEZWQlFWVTdVVUZEY0VJc1QwRkJUeXhGUVVGRkxHZENRVUZuUWp0TFFVTXhRanRKUVVORUxGRkJRVkVzUlVGQlJUdFJRVU5TTEZGQlFWRXNSVUZCUlN4VlFVRlZPMUZCUTNCQ0xFOUJRVThzUlVGQlJTeHhRa0ZCY1VJN1MwRkRMMEk3U1VGRFJDeFJRVUZSTEVWQlFVVTdVVUZEVWl4UlFVRlJMRVZCUVVVc1ZVRkJWVHRSUVVOd1FpeFBRVUZQTEVWQlFVVXNkVUpCUVhWQ08wdEJRMnBETzBsQlEwUXNVVUZCVVN4RlFVRkZPMUZCUTFJc1VVRkJVU3hGUVVGRkxGVkJRVlU3VVVGRGNFSXNUMEZCVHl4RlFVRkZMSFZDUVVGMVFqdExRVU5xUXp0SlFVTkVMRkZCUVZFc1JVRkJSVHRSUVVOU0xGRkJRVkVzUlVGQlJTeFZRVUZWTzFGQlEzQkNMRTlCUVU4c1JVRkJSU3gxUWtGQmRVSTdTMEZEYWtNN1NVRkRSQ3hSUVVGUkxFVkJRVVU3VVVGRFVpeFJRVUZSTEVWQlFVVXNWVUZCVlR0UlFVTndRaXhQUVVGUExFVkJRVVVzZVVKQlFYbENPMHRCUTI1RE8wbEJRMFFzVFVGQlRTeEZRVUZGTzFGQlEwNHNVVUZCVVN4RlFVRkZMRlZCUVZVN1VVRkRjRUlzVDBGQlR5eEZRVUZGTERSQ1FVRTBRanRMUVVOMFF6dEpRVU5FTEUxQlFVMHNSVUZCUlR0UlFVTk9MRkZCUVZFc1JVRkJSU3hWUVVGVk8xRkJRM0JDTEU5QlFVOHNSVUZCUlN3d1JVRkJNRVU3UzBGRGNFWTdTVUZEUkN4TlFVRk5MRVZCUVVVN1VVRkRUaXhSUVVGUkxFVkJRVVVzVlVGQlZUdFJRVU53UWl4UFFVRlBMRVZCUVVVc2EwVkJRV3RGTzB0QlF6VkZPMGxCUTBRc1RVRkJUU3hGUVVGRk8xRkJRMDRzVVVGQlVTeEZRVUZGTEZWQlFWVTdVVUZEY0VJc1QwRkJUeXhGUVVGRkxDdERRVUVyUXp0TFFVTjZSRHRKUVVORUxFMUJRVTBzUlVGQlJUdFJRVU5PTEZGQlFWRXNSVUZCUlN4VlFVRlZPMUZCUTNCQ0xFOUJRVThzUlVGQlJTeDNSRUZCZDBRN1MwRkRiRVU3UTBGRFJpeERRVUZESW4wPSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/error-constants.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/errors.js":
/*!***************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/errors.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethErrors = void 0;\nconst classes_1 = __webpack_require__(/*! ./classes */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/classes.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/utils.js\");\nconst error_constants_1 = __webpack_require__(/*! ./error-constants */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/error-constants.js\");\nexports.ethErrors = {\n    rpc: {\n        /**\n         * Get a JSON RPC 2.0 Parse (-32700) error.\n         */\n        parse: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.parse, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n         */\n        invalidRequest: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidRequest, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n         */\n        invalidParams: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidParams, arg),\n        /**\n         * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n         */\n        methodNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotFound, arg),\n        /**\n         * Get a JSON RPC 2.0 Internal (-32603) error.\n         */\n        internal: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.internal, arg),\n        /**\n         * Get a JSON RPC 2.0 Server error.\n         * Permits integer error codes in the [ -32099 <= -32005 ] range.\n         * Codes -32000 through -32004 are reserved by EIP-1474.\n         */\n        server: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum RPC Server errors must provide single object argument.');\n            }\n            const { code } = opts;\n            if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n                throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n            }\n            return getEthJsonRpcError(code, opts);\n        },\n        /**\n         * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n         */\n        invalidInput: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidInput, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n         */\n        resourceNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceNotFound, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n         */\n        resourceUnavailable: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceUnavailable, arg),\n        /**\n         * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n         */\n        transactionRejected: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.transactionRejected, arg),\n        /**\n         * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n         */\n        methodNotSupported: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotSupported, arg),\n        /**\n         * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n         */\n        limitExceeded: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.limitExceeded, arg),\n    },\n    provider: {\n        /**\n         * Get an Ethereum Provider User Rejected Request (4001) error.\n         */\n        userRejectedRequest: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.userRejectedRequest, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unauthorized (4100) error.\n         */\n        unauthorized: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unauthorized, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unsupported Method (4200) error.\n         */\n        unsupportedMethod: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unsupportedMethod, arg);\n        },\n        /**\n         * Get an Ethereum Provider Not Connected (4900) error.\n         */\n        disconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.disconnected, arg);\n        },\n        /**\n         * Get an Ethereum Provider Chain Not Connected (4901) error.\n         */\n        chainDisconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.chainDisconnected, arg);\n        },\n        /**\n         * Get a custom Ethereum Provider error.\n         */\n        custom: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum Provider custom errors must provide single object argument.');\n            }\n            const { code, message, data } = opts;\n            if (!message || typeof message !== 'string') {\n                throw new Error('\"message\" must be a nonempty string');\n            }\n            return new classes_1.EthereumProviderError(code, message, data);\n        },\n    },\n};\n// Internal\nfunction getEthJsonRpcError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumRpcError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction getEthProviderError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumProviderError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction parseOpts(arg) {\n    if (arg) {\n        if (typeof arg === 'string') {\n            return [arg];\n        }\n        else if (typeof arg === 'object' && !Array.isArray(arg)) {\n            const { message, data } = arg;\n            if (message && typeof message !== 'string') {\n                throw new Error('Must specify string message.');\n            }\n            return [message || undefined, data];\n        }\n    }\n    return [];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx1Q0FBb0U7QUFDcEUsbUNBQTZDO0FBQzdDLHVEQUErQztBQWVsQyxRQUFBLFNBQVMsR0FBRztJQUN2QixHQUFHLEVBQUU7UUFFSDs7V0FFRztRQUNILEtBQUssRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUNyRCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUMxQjtRQUVEOztXQUVHO1FBQ0gsY0FBYyxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQzlELDRCQUFVLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQ25DO1FBRUQ7O1dBRUc7UUFDSCxhQUFhLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDN0QsNEJBQVUsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FDbEM7UUFFRDs7V0FFRztRQUNILGNBQWMsRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUM5RCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUNuQztRQUVEOztXQUVHO1FBQ0gsUUFBUSxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQ3hELDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQzdCO1FBRUQ7Ozs7V0FJRztRQUNILE1BQU0sRUFBRSxDQUFJLElBQTJCLEVBQUUsRUFBRTtZQUN6QyxJQUFJLENBQUMsSUFBSSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM1RCxNQUFNLElBQUksS0FBSyxDQUFDLGlFQUFpRSxDQUFDLENBQUM7YUFDcEY7WUFDRCxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUU7Z0JBQzdELE1BQU0sSUFBSSxLQUFLLENBQ2IsK0RBQStELENBQ2hFLENBQUM7YUFDSDtZQUNELE9BQU8sa0JBQWtCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3hDLENBQUM7UUFFRDs7V0FFRztRQUNILFlBQVksRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUM1RCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUNqQztRQUVEOztXQUVHO1FBQ0gsZ0JBQWdCLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDaEUsNEJBQVUsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUNyQztRQUVEOztXQUVHO1FBQ0gsbUJBQW1CLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDbkUsNEJBQVUsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxDQUN4QztRQUVEOztXQUVHO1FBQ0gsbUJBQW1CLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDbkUsNEJBQVUsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxDQUN4QztRQUVEOztXQUVHO1FBQ0gsa0JBQWtCLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDbEUsNEJBQVUsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxDQUN2QztRQUVEOztXQUVHO1FBQ0gsYUFBYSxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQzdELDRCQUFVLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxHQUFHLENBQ2xDO0tBQ0Y7SUFFRCxRQUFRLEVBQUU7UUFFUjs7V0FFRztRQUNILG1CQUFtQixFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFO1lBQ2hELE9BQU8sbUJBQW1CLENBQ3hCLDRCQUFVLENBQUMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLEdBQUcsQ0FDN0MsQ0FBQztRQUNKLENBQUM7UUFFRDs7V0FFRztRQUNILFlBQVksRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRTtZQUN6QyxPQUFPLG1CQUFtQixDQUN4Qiw0QkFBVSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUN0QyxDQUFDO1FBQ0osQ0FBQztRQUVEOztXQUVHO1FBQ0gsaUJBQWlCLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUU7WUFDOUMsT0FBTyxtQkFBbUIsQ0FDeEIsNEJBQVUsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxDQUMzQyxDQUFDO1FBQ0osQ0FBQztRQUVEOztXQUVHO1FBQ0gsWUFBWSxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFO1lBQ3pDLE9BQU8sbUJBQW1CLENBQ3hCLDRCQUFVLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxHQUFHLENBQ3RDLENBQUM7UUFDSixDQUFDO1FBRUQ7O1dBRUc7UUFDSCxpQkFBaUIsRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRTtZQUM5QyxPQUFPLG1CQUFtQixDQUN4Qiw0QkFBVSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxHQUFHLENBQzNDLENBQUM7UUFDSixDQUFDO1FBRUQ7O1dBRUc7UUFDSCxNQUFNLEVBQUUsQ0FBSSxJQUF1QixFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDNUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxzRUFBc0UsQ0FBQyxDQUFDO2FBQ3pGO1lBRUQsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDO1lBRXJDLElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO2dCQUMzQyxNQUFNLElBQUksS0FBSyxDQUNiLHFDQUFxQyxDQUN0QyxDQUFDO2FBQ0g7WUFDRCxPQUFPLElBQUksK0JBQXFCLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN4RCxDQUFDO0tBQ0Y7Q0FDRixDQUFDO0FBRUYsV0FBVztBQUVYLFNBQVMsa0JBQWtCLENBQUksSUFBWSxFQUFFLEdBQXFCO0lBQ2hFLE1BQU0sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sSUFBSSwwQkFBZ0IsQ0FDekIsSUFBSSxFQUNKLE9BQU8sSUFBSSwwQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFDbkMsSUFBSSxDQUNMLENBQUM7QUFDSixDQUFDO0FBRUQsU0FBUyxtQkFBbUIsQ0FBSSxJQUFZLEVBQUUsR0FBcUI7SUFDakUsTUFBTSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkMsT0FBTyxJQUFJLCtCQUFxQixDQUM5QixJQUFJLEVBQ0osT0FBTyxJQUFJLDBCQUFrQixDQUFDLElBQUksQ0FBQyxFQUNuQyxJQUFJLENBQ0wsQ0FBQztBQUNKLENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBSSxHQUFxQjtJQUN6QyxJQUFJLEdBQUcsRUFBRTtRQUNQLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNkO2FBQU0sSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3pELE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsR0FBRyxDQUFDO1lBRTlCLElBQUksT0FBTyxJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVEsRUFBRTtnQkFDMUMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO2FBQ2pEO1lBQ0QsT0FBTyxDQUFDLE9BQU8sSUFBSSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDckM7S0FDRjtJQUNELE9BQU8sRUFBRSxDQUFDO0FBQ1osQ0FBQyJ9//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/errors.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/index.js":
/*!**************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/index.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMessageFromCode = exports.serializeError = exports.EthereumProviderError = exports.EthereumRpcError = exports.ethErrors = exports.errorCodes = void 0;\nconst classes_1 = __webpack_require__(/*! ./classes */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/classes.js\");\nObject.defineProperty(exports, \"EthereumRpcError\", { enumerable: true, get: function () { return classes_1.EthereumRpcError; } });\nObject.defineProperty(exports, \"EthereumProviderError\", { enumerable: true, get: function () { return classes_1.EthereumProviderError; } });\nconst utils_1 = __webpack_require__(/*! ./utils */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/utils.js\");\nObject.defineProperty(exports, \"serializeError\", { enumerable: true, get: function () { return utils_1.serializeError; } });\nObject.defineProperty(exports, \"getMessageFromCode\", { enumerable: true, get: function () { return utils_1.getMessageFromCode; } });\nconst errors_1 = __webpack_require__(/*! ./errors */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/errors.js\");\nObject.defineProperty(exports, \"ethErrors\", { enumerable: true, get: function () { return errors_1.ethErrors; } });\nconst error_constants_1 = __webpack_require__(/*! ./error-constants */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/error-constants.js\");\nObject.defineProperty(exports, \"errorCodes\", { enumerable: true, get: function () { return error_constants_1.errorCodes; } });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQW9FO0FBVWxFLGlHQVZPLDBCQUFnQixPQVVQO0FBQ2hCLHNHQVh5QiwrQkFBcUIsT0FXekI7QUFWdkIsbUNBRWlCO0FBU2YsK0ZBVkEsc0JBQWMsT0FVQTtBQUNkLG1HQVhnQiwwQkFBa0IsT0FXaEI7QUFUcEIscUNBQXFDO0FBS25DLDBGQUxPLGtCQUFTLE9BS1A7QUFKWCx1REFBK0M7QUFHN0MsMkZBSE8sNEJBQVUsT0FHUCJ9//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9ldGgtcnBjLWVycm9ycy9kaXN0L2luZGV4LmpzPzdiYzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHNHQUFXO0FBQ3JDLG9EQUFvRCxxQ0FBcUMsbUNBQW1DLEVBQUUsRUFBRTtBQUNoSSx5REFBeUQscUNBQXFDLHdDQUF3QyxFQUFFLEVBQUU7QUFDMUksZ0JBQWdCLG1CQUFPLENBQUMsa0dBQVM7QUFDakMsa0RBQWtELHFDQUFxQywrQkFBK0IsRUFBRSxFQUFFO0FBQzFILHNEQUFzRCxxQ0FBcUMsbUNBQW1DLEVBQUUsRUFBRTtBQUNsSSxpQkFBaUIsbUJBQU8sQ0FBQyxvR0FBVTtBQUNuQyw2Q0FBNkMscUNBQXFDLDJCQUEyQixFQUFFLEVBQUU7QUFDakgsMEJBQTBCLG1CQUFPLENBQUMsc0hBQW1CO0FBQ3JELDhDQUE4QyxxQ0FBcUMscUNBQXFDLEVBQUUsRUFBRTtBQUM1SCwyQ0FBMkMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9ldGgtcnBjLWVycm9ycy9kaXN0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldE1lc3NhZ2VGcm9tQ29kZSA9IGV4cG9ydHMuc2VyaWFsaXplRXJyb3IgPSBleHBvcnRzLkV0aGVyZXVtUHJvdmlkZXJFcnJvciA9IGV4cG9ydHMuRXRoZXJldW1ScGNFcnJvciA9IGV4cG9ydHMuZXRoRXJyb3JzID0gZXhwb3J0cy5lcnJvckNvZGVzID0gdm9pZCAwO1xuY29uc3QgY2xhc3Nlc18xID0gcmVxdWlyZShcIi4vY2xhc3Nlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkV0aGVyZXVtUnBjRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNsYXNzZXNfMS5FdGhlcmV1bVJwY0Vycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXRoZXJldW1Qcm92aWRlckVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjbGFzc2VzXzEuRXRoZXJldW1Qcm92aWRlckVycm9yOyB9IH0pO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2VyaWFsaXplRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuc2VyaWFsaXplRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRNZXNzYWdlRnJvbUNvZGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuZ2V0TWVzc2FnZUZyb21Db2RlOyB9IH0pO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJldGhFcnJvcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLmV0aEVycm9yczsgfSB9KTtcbmNvbnN0IGVycm9yX2NvbnN0YW50c18xID0gcmVxdWlyZShcIi4vZXJyb3ItY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZXJyb3JDb2Rlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JfY29uc3RhbnRzXzEuZXJyb3JDb2RlczsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN08wRkJRVUVzZFVOQlFXOUZPMEZCVld4RkxHbEhRVlpQTERCQ1FVRm5RaXhQUVZWUU8wRkJRMmhDTEhOSFFWaDVRaXdyUWtGQmNVSXNUMEZYZWtJN1FVRldka0lzYlVOQlJXbENPMEZCVTJZc0swWkJWa0VzYzBKQlFXTXNUMEZWUVR0QlFVTmtMRzFIUVZoblFpd3dRa0ZCYTBJc1QwRlhhRUk3UVVGVWNFSXNjVU5CUVhGRE8wRkJTMjVETERCR1FVeFBMR3RDUVVGVExFOUJTMUE3UVVGS1dDeDFSRUZCSzBNN1FVRkhOME1zTWtaQlNFOHNORUpCUVZVc1QwRkhVQ0o5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/index.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/utils.js":
/*!**************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/utils.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\nconst error_constants_1 = __webpack_require__(/*! ./error-constants */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/error-constants.js\");\nconst classes_1 = __webpack_require__(/*! ./classes */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/classes.js\");\nconst FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal;\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\nconst FALLBACK_ERROR = {\n    code: FALLBACK_ERROR_CODE,\n    message: getMessageFromCode(FALLBACK_ERROR_CODE),\n};\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n    if (Number.isInteger(code)) {\n        const codeString = code.toString();\n        if (hasKey(error_constants_1.errorValues, codeString)) {\n            return error_constants_1.errorValues[codeString].message;\n        }\n        if (isJsonRpcServerError(code)) {\n            return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n        }\n    }\n    return fallbackMessage;\n}\nexports.getMessageFromCode = getMessageFromCode;\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nfunction isValidCode(code) {\n    if (!Number.isInteger(code)) {\n        return false;\n    }\n    const codeString = code.toString();\n    if (error_constants_1.errorValues[codeString]) {\n        return true;\n    }\n    if (isJsonRpcServerError(code)) {\n        return true;\n    }\n    return false;\n}\nexports.isValidCode = isValidCode;\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n */\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = false, } = {}) {\n    var _a, _b;\n    if (!fallbackError ||\n        !Number.isInteger(fallbackError.code) ||\n        typeof fallbackError.message !== 'string') {\n        throw new Error('Must provide fallback error with integer number code and string message.');\n    }\n    if (error instanceof classes_1.EthereumRpcError) {\n        return error.serialize();\n    }\n    const serialized = {};\n    if (error &&\n        typeof error === 'object' &&\n        !Array.isArray(error) &&\n        hasKey(error, 'code') &&\n        isValidCode(error.code)) {\n        const _error = error;\n        serialized.code = _error.code;\n        if (_error.message && typeof _error.message === 'string') {\n            serialized.message = _error.message;\n            if (hasKey(_error, 'data')) {\n                serialized.data = _error.data;\n            }\n        }\n        else {\n            serialized.message = getMessageFromCode(serialized.code);\n            serialized.data = { originalError: assignOriginalError(error) };\n        }\n    }\n    else {\n        serialized.code = fallbackError.code;\n        const message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\n        serialized.message = (message && typeof message === 'string'\n            ? message\n            : fallbackError.message);\n        serialized.data = { originalError: assignOriginalError(error) };\n    }\n    const stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\n    if (shouldIncludeStack && error && stack && typeof stack === 'string') {\n        serialized.stack = stack;\n    }\n    return serialized;\n}\nexports.serializeError = serializeError;\n// Internal\nfunction isJsonRpcServerError(code) {\n    return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\n        return Object.assign({}, error);\n    }\n    return error;\n}\nfunction hasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdURBQTREO0FBQzVELHVDQUF5RTtBQUV6RSxNQUFNLG1CQUFtQixHQUFHLDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztBQUNwRCxNQUFNLGdCQUFnQixHQUFHLDZEQUE2RCxDQUFDO0FBQ3ZGLE1BQU0sY0FBYyxHQUErQjtJQUNqRCxJQUFJLEVBQUUsbUJBQW1CO0lBQ3pCLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQztDQUNqRCxDQUFDO0FBRVcsUUFBQSw2QkFBNkIsR0FBRywyQkFBMkIsQ0FBQztBQUl6RTs7O0dBR0c7QUFDSCxTQUFnQixrQkFBa0IsQ0FDaEMsSUFBWSxFQUNaLGtCQUEwQixnQkFBZ0I7SUFFMUMsSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzFCLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVuQyxJQUFJLE1BQU0sQ0FBQyw2QkFBVyxFQUFFLFVBQVUsQ0FBQyxFQUFFO1lBQ25DLE9BQU8sNkJBQVcsQ0FBQyxVQUEyQixDQUFDLENBQUMsT0FBTyxDQUFDO1NBQ3pEO1FBQ0QsSUFBSSxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM5QixPQUFPLHFDQUE2QixDQUFDO1NBQ3RDO0tBQ0Y7SUFDRCxPQUFPLGVBQWUsQ0FBQztBQUN6QixDQUFDO0FBZkQsZ0RBZUM7QUFFRDs7O0dBR0c7QUFDSCxTQUFnQixXQUFXLENBQUMsSUFBWTtJQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUMzQixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25DLElBQUksNkJBQVcsQ0FBQyxVQUEyQixDQUFDLEVBQUU7UUFDNUMsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUVELElBQUksb0JBQW9CLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDOUIsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQWRELGtDQWNDO0FBRUQ7Ozs7O0dBS0c7QUFDSCxTQUFnQixjQUFjLENBQzVCLEtBQWMsRUFDZCxFQUNFLGFBQWEsR0FBRyxjQUFjLEVBQzlCLGtCQUFrQixHQUFHLEtBQUssR0FDM0IsR0FBRyxFQUFFOztJQUdOLElBQ0UsQ0FBQyxhQUFhO1FBQ2QsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7UUFDckMsT0FBTyxhQUFhLENBQUMsT0FBTyxLQUFLLFFBQVEsRUFDekM7UUFDQSxNQUFNLElBQUksS0FBSyxDQUNiLDBFQUEwRSxDQUMzRSxDQUFDO0tBQ0g7SUFFRCxJQUFJLEtBQUssWUFBWSwwQkFBZ0IsRUFBRTtRQUNyQyxPQUFPLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQztLQUMxQjtJQUVELE1BQU0sVUFBVSxHQUF3QyxFQUFFLENBQUM7SUFFM0QsSUFDRSxLQUFLO1FBQ0wsT0FBTyxLQUFLLEtBQUssUUFBUTtRQUN6QixDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ3JCLE1BQU0sQ0FBQyxLQUFnQyxFQUFFLE1BQU0sQ0FBQztRQUNoRCxXQUFXLENBQUUsS0FBb0MsQ0FBQyxJQUFJLENBQUMsRUFDdkQ7UUFDQSxNQUFNLE1BQU0sR0FBRyxLQUE0QyxDQUFDO1FBQzVELFVBQVUsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztRQUU5QixJQUFJLE1BQU0sQ0FBQyxPQUFPLElBQUksT0FBTyxNQUFNLENBQUMsT0FBTyxLQUFLLFFBQVEsRUFBRTtZQUN4RCxVQUFVLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUM7WUFFcEMsSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFO2dCQUMxQixVQUFVLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7YUFDL0I7U0FDRjthQUFNO1lBQ0wsVUFBVSxDQUFDLE9BQU8sR0FBRyxrQkFBa0IsQ0FDcEMsVUFBeUMsQ0FBQyxJQUFJLENBQ2hELENBQUM7WUFFRixVQUFVLENBQUMsSUFBSSxHQUFHLEVBQUUsYUFBYSxFQUFFLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7U0FDakU7S0FDRjtTQUFNO1FBQ0wsVUFBVSxDQUFDLElBQUksR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDO1FBRXJDLE1BQU0sT0FBTyxTQUFJLEtBQWEsMENBQUUsT0FBTyxDQUFDO1FBRXhDLFVBQVUsQ0FBQyxPQUFPLEdBQUcsQ0FDbkIsT0FBTyxJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVE7WUFDcEMsQ0FBQyxDQUFDLE9BQU87WUFDVCxDQUFDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FDMUIsQ0FBQztRQUNGLFVBQVUsQ0FBQyxJQUFJLEdBQUcsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztLQUNqRTtJQUVELE1BQU0sS0FBSyxTQUFJLEtBQWEsMENBQUUsS0FBSyxDQUFDO0lBRXBDLElBQUksa0JBQWtCLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDckUsVUFBVSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7S0FDMUI7SUFDRCxPQUFPLFVBQXdDLENBQUM7QUFDbEQsQ0FBQztBQWxFRCx3Q0FrRUM7QUFFRCxXQUFXO0FBRVgsU0FBUyxvQkFBb0IsQ0FBQyxJQUFZO0lBQ3hDLE9BQU8sSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQztBQUMxQyxDQUFDO0FBRUQsU0FBUyxtQkFBbUIsQ0FBQyxLQUFjO0lBQ3pDLElBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDL0QsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNqQztJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELFNBQVMsTUFBTSxDQUFDLEdBQTRCLEVBQUUsR0FBVztJQUN2RCxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDeEQsQ0FBQyJ9//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/utils.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/JsonRpcEngine.js":
/*!***********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/JsonRpcEngine.js ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcEngine = void 0;\nconst safe_event_emitter_1 = __importDefault(__webpack_require__(/*! @metamask/safe-event-emitter */ \"../../node_modules/@metamask/safe-event-emitter/index.js\"));\nconst eth_rpc_errors_1 = __webpack_require__(/*! eth-rpc-errors */ \"../../node_modules/eth-json-rpc-filters/node_modules/eth-rpc-errors/dist/index.js\");\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nclass JsonRpcEngine extends safe_event_emitter_1.default {\n    constructor() {\n        super();\n        this._middleware = [];\n    }\n    /**\n     * Add a middleware function to the engine's middleware stack.\n     *\n     * @param middleware - The middleware function to add.\n     */\n    push(middleware) {\n        this._middleware.push(middleware);\n    }\n    handle(req, cb) {\n        if (cb && typeof cb !== 'function') {\n            throw new Error('\"callback\" must be a function if provided.');\n        }\n        if (Array.isArray(req)) {\n            if (cb) {\n                return this._handleBatch(req, cb);\n            }\n            return this._handleBatch(req);\n        }\n        if (cb) {\n            return this._handle(req, cb);\n        }\n        return this._promiseHandle(req);\n    }\n    /**\n     * Returns this engine as a middleware function that can be pushed to other\n     * engines.\n     *\n     * @returns This engine as a middleware function.\n     */\n    asMiddleware() {\n        return async (req, res, next, end) => {\n            try {\n                const [middlewareError, isComplete, returnHandlers,] = await JsonRpcEngine._runAllMiddleware(req, res, this._middleware);\n                if (isComplete) {\n                    await JsonRpcEngine._runReturnHandlers(returnHandlers);\n                    return end(middlewareError);\n                }\n                return next(async (handlerCallback) => {\n                    try {\n                        await JsonRpcEngine._runReturnHandlers(returnHandlers);\n                    }\n                    catch (error) {\n                        return handlerCallback(error);\n                    }\n                    return handlerCallback();\n                });\n            }\n            catch (error) {\n                return end(error);\n            }\n        };\n    }\n    async _handleBatch(reqs, cb) {\n        // The order here is important\n        try {\n            // 2. Wait for all requests to finish, or throw on some kind of fatal\n            // error\n            const responses = await Promise.all(\n            // 1. Begin executing each request in the order received\n            reqs.map(this._promiseHandle.bind(this)));\n            // 3. Return batch response\n            if (cb) {\n                return cb(null, responses);\n            }\n            return responses;\n        }\n        catch (error) {\n            if (cb) {\n                return cb(error);\n            }\n            throw error;\n        }\n    }\n    /**\n     * A promise-wrapped _handle.\n     */\n    _promiseHandle(req) {\n        return new Promise((resolve) => {\n            this._handle(req, (_err, res) => {\n                // There will always be a response, and it will always have any error\n                // that is caught and propagated.\n                resolve(res);\n            });\n        });\n    }\n    /**\n     * Ensures that the request object is valid, processes it, and passes any\n     * error and the response object to the given callback.\n     *\n     * Does not reject.\n     */\n    async _handle(callerReq, cb) {\n        if (!callerReq ||\n            Array.isArray(callerReq) ||\n            typeof callerReq !== 'object') {\n            const error = new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.invalidRequest, `Requests must be plain objects. Received: ${typeof callerReq}`, { request: callerReq });\n            return cb(error, { id: undefined, jsonrpc: '2.0', error });\n        }\n        if (typeof callerReq.method !== 'string') {\n            const error = new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.invalidRequest, `Must specify a string method. Received: ${typeof callerReq.method}`, { request: callerReq });\n            return cb(error, { id: callerReq.id, jsonrpc: '2.0', error });\n        }\n        const req = Object.assign({}, callerReq);\n        const res = {\n            id: req.id,\n            jsonrpc: req.jsonrpc,\n        };\n        let error = null;\n        try {\n            await this._processRequest(req, res);\n        }\n        catch (_error) {\n            // A request handler error, a re-thrown middleware error, or something\n            // unexpected.\n            error = _error;\n        }\n        if (error) {\n            // Ensure no result is present on an errored response\n            delete res.result;\n            if (!res.error) {\n                res.error = eth_rpc_errors_1.serializeError(error);\n            }\n        }\n        return cb(error, res);\n    }\n    /**\n     * For the given request and response, runs all middleware and their return\n     * handlers, if any, and ensures that internal request processing semantics\n     * are satisfied.\n     */\n    async _processRequest(req, res) {\n        const [error, isComplete, returnHandlers,] = await JsonRpcEngine._runAllMiddleware(req, res, this._middleware);\n        // Throw if \"end\" was not called, or if the response has neither a result\n        // nor an error.\n        JsonRpcEngine._checkForCompletion(req, res, isComplete);\n        // The return handlers should run even if an error was encountered during\n        // middleware processing.\n        await JsonRpcEngine._runReturnHandlers(returnHandlers);\n        // Now we re-throw the middleware processing error, if any, to catch it\n        // further up the call chain.\n        if (error) {\n            throw error;\n        }\n    }\n    /**\n     * Serially executes the given stack of middleware.\n     *\n     * @returns An array of any error encountered during middleware execution,\n     * a boolean indicating whether the request was completed, and an array of\n     * middleware-defined return handlers.\n     */\n    static async _runAllMiddleware(req, res, middlewareStack) {\n        const returnHandlers = [];\n        let error = null;\n        let isComplete = false;\n        // Go down stack of middleware, call and collect optional returnHandlers\n        for (const middleware of middlewareStack) {\n            [error, isComplete] = await JsonRpcEngine._runMiddleware(req, res, middleware, returnHandlers);\n            if (isComplete) {\n                break;\n            }\n        }\n        return [error, isComplete, returnHandlers.reverse()];\n    }\n    /**\n     * Runs an individual middleware.\n     *\n     * @returns An array of any error encountered during middleware exection,\n     * and a boolean indicating whether the request should end.\n     */\n    static _runMiddleware(req, res, middleware, returnHandlers) {\n        return new Promise((resolve) => {\n            const end = (err) => {\n                const error = err || res.error;\n                if (error) {\n                    res.error = eth_rpc_errors_1.serializeError(error);\n                }\n                // True indicates that the request should end\n                resolve([error, true]);\n            };\n            const next = (returnHandler) => {\n                if (res.error) {\n                    end(res.error);\n                }\n                else {\n                    if (returnHandler) {\n                        if (typeof returnHandler !== 'function') {\n                            end(new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: \"next\" return handlers must be functions. ` +\n                                `Received \"${typeof returnHandler}\" for request:\\n${jsonify(req)}`, { request: req }));\n                        }\n                        returnHandlers.push(returnHandler);\n                    }\n                    // False indicates that the request should not end\n                    resolve([null, false]);\n                }\n            };\n            try {\n                middleware(req, res, next, end);\n            }\n            catch (error) {\n                end(error);\n            }\n        });\n    }\n    /**\n     * Serially executes array of return handlers. The request and response are\n     * assumed to be in their scope.\n     */\n    static async _runReturnHandlers(handlers) {\n        for (const handler of handlers) {\n            await new Promise((resolve, reject) => {\n                handler((err) => (err ? reject(err) : resolve()));\n            });\n        }\n    }\n    /**\n     * Throws an error if the response has neither a result nor an error, or if\n     * the \"isComplete\" flag is falsy.\n     */\n    static _checkForCompletion(req, res, isComplete) {\n        if (!('result' in res) && !('error' in res)) {\n            throw new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: Response has no error or result for request:\\n${jsonify(req)}`, { request: req });\n        }\n        if (!isComplete) {\n            throw new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.internal, `JsonRpcEngine: Nothing ended request:\\n${jsonify(req)}`, { request: req });\n        }\n    }\n}\nexports.JsonRpcEngine = JsonRpcEngine;\nfunction jsonify(request) {\n    return JSON.stringify(request, null, 2);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSnNvblJwY0VuZ2luZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Kc29uUnBjRW5naW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUE0RDtBQUM1RCxtREFBOEU7QUF1RjlFOzs7R0FHRztBQUNILE1BQWEsYUFBYyxTQUFRLDRCQUFnQjtJQUdqRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxJQUFJLENBQU8sVUFBbUM7UUFDNUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBaUQsQ0FBQyxDQUFDO0lBQzNFLENBQUM7SUEyQ0QsTUFBTSxDQUFDLEdBQVksRUFBRSxFQUFRO1FBQzNCLElBQUksRUFBRSxJQUFJLE9BQU8sRUFBRSxLQUFLLFVBQVUsRUFBRTtZQUNsQyxNQUFNLElBQUksS0FBSyxDQUFDLDRDQUE0QyxDQUFDLENBQUM7U0FDL0Q7UUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDdEIsSUFBSSxFQUFFLEVBQUU7Z0JBQ04sT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNELE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUMvQjtRQUVELElBQUksRUFBRSxFQUFFO1lBQ04sT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQThCLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDekQ7UUFDRCxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBOEIsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILFlBQVk7UUFDVixPQUFPLEtBQUssRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUNuQyxJQUFJO2dCQUNGLE1BQU0sQ0FDSixlQUFlLEVBQ2YsVUFBVSxFQUNWLGNBQWMsRUFDZixHQUFHLE1BQU0sYUFBYSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUV0RSxJQUFJLFVBQVUsRUFBRTtvQkFDZCxNQUFNLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsQ0FBQztvQkFDdkQsT0FBTyxHQUFHLENBQUMsZUFBNkMsQ0FBQyxDQUFDO2lCQUMzRDtnQkFFRCxPQUFPLElBQUksQ0FBQyxLQUFLLEVBQUUsZUFBZSxFQUFFLEVBQUU7b0JBQ3BDLElBQUk7d0JBQ0YsTUFBTSxhQUFhLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLENBQUM7cUJBQ3hEO29CQUFDLE9BQU8sS0FBSyxFQUFFO3dCQUNkLE9BQU8sZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO3FCQUMvQjtvQkFDRCxPQUFPLGVBQWUsRUFBRSxDQUFDO2dCQUMzQixDQUFDLENBQUMsQ0FBQzthQUNKO1lBQUMsT0FBTyxLQUFLLEVBQUU7Z0JBQ2QsT0FBTyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDbkI7UUFDSCxDQUFDLENBQUM7SUFDSixDQUFDO0lBaUJPLEtBQUssQ0FBQyxZQUFZLENBQ3hCLElBQStCLEVBQy9CLEVBQXFFO1FBRXJFLDhCQUE4QjtRQUM5QixJQUFJO1lBQ0YscUVBQXFFO1lBQ3JFLFFBQVE7WUFDUixNQUFNLFNBQVMsR0FBRyxNQUFNLE9BQU8sQ0FBQyxHQUFHO1lBQ2pDLHdEQUF3RDtZQUN4RCxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQ3pDLENBQUM7WUFFRiwyQkFBMkI7WUFDM0IsSUFBSSxFQUFFLEVBQUU7Z0JBQ04sT0FBTyxFQUFFLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO2FBQzVCO1lBQ0QsT0FBTyxTQUFTLENBQUM7U0FDbEI7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNkLElBQUksRUFBRSxFQUFFO2dCQUNOLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ2xCO1lBRUQsTUFBTSxLQUFLLENBQUM7U0FDYjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNLLGNBQWMsQ0FDcEIsR0FBNEI7UUFFNUIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxFQUFFO2dCQUM5QixxRUFBcUU7Z0JBQ3JFLGlDQUFpQztnQkFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2YsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNLLEtBQUssQ0FBQyxPQUFPLENBQ25CLFNBQWtDLEVBQ2xDLEVBQWdFO1FBRWhFLElBQ0UsQ0FBQyxTQUFTO1lBQ1YsS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7WUFDeEIsT0FBTyxTQUFTLEtBQUssUUFBUSxFQUM3QjtZQUNBLE1BQU0sS0FBSyxHQUFHLElBQUksaUNBQWdCLENBQ2hDLDJCQUFVLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFDN0IsNkNBQTZDLE9BQU8sU0FBUyxFQUFFLEVBQy9ELEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxDQUN2QixDQUFDO1lBQ0YsT0FBTyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7U0FDNUQ7UUFFRCxJQUFJLE9BQU8sU0FBUyxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUU7WUFDeEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxpQ0FBZ0IsQ0FDaEMsMkJBQVUsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUM3QiwyQ0FBMkMsT0FBTyxTQUFTLENBQUMsTUFBTSxFQUFFLEVBQ3BFLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxDQUN2QixDQUFDO1lBQ0YsT0FBTyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLFNBQVMsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQy9EO1FBRUQsTUFBTSxHQUFHLHFCQUFpQyxTQUFTLENBQUUsQ0FBQztRQUN0RCxNQUFNLEdBQUcsR0FBb0M7WUFDM0MsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQ1YsT0FBTyxFQUFFLEdBQUcsQ0FBQyxPQUFPO1NBQ3JCLENBQUM7UUFDRixJQUFJLEtBQUssR0FBK0IsSUFBSSxDQUFDO1FBRTdDLElBQUk7WUFDRixNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ3RDO1FBQUMsT0FBTyxNQUFNLEVBQUU7WUFDZixzRUFBc0U7WUFDdEUsY0FBYztZQUNkLEtBQUssR0FBRyxNQUFNLENBQUM7U0FDaEI7UUFFRCxJQUFJLEtBQUssRUFBRTtZQUNULHFEQUFxRDtZQUNyRCxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFDbEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUU7Z0JBQ2QsR0FBRyxDQUFDLEtBQUssR0FBRywrQkFBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ25DO1NBQ0Y7UUFFRCxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsR0FBK0IsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRDs7OztPQUlHO0lBQ0ssS0FBSyxDQUFDLGVBQWUsQ0FDM0IsR0FBNEIsRUFDNUIsR0FBb0M7UUFFcEMsTUFBTSxDQUNKLEtBQUssRUFDTCxVQUFVLEVBQ1YsY0FBYyxFQUNmLEdBQUcsTUFBTSxhQUFhLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFdEUseUVBQXlFO1FBQ3pFLGdCQUFnQjtRQUNoQixhQUFhLENBQUMsbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUV4RCx5RUFBeUU7UUFDekUseUJBQXlCO1FBQ3pCLE1BQU0sYUFBYSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRXZELHVFQUF1RTtRQUN2RSw2QkFBNkI7UUFDN0IsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLEtBQUssQ0FBQztTQUNiO0lBQ0gsQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNLLE1BQU0sQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQ3BDLEdBQTRCLEVBQzVCLEdBQW9DLEVBQ3BDLGVBQXNEO1FBUXRELE1BQU0sY0FBYyxHQUFpQyxFQUFFLENBQUM7UUFDeEQsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztRQUV2Qix3RUFBd0U7UUFDeEUsS0FBSyxNQUFNLFVBQVUsSUFBSSxlQUFlLEVBQUU7WUFDeEMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLEdBQUcsTUFBTSxhQUFhLENBQUMsY0FBYyxDQUN0RCxHQUFHLEVBQ0gsR0FBRyxFQUNILFVBQVUsRUFDVixjQUFjLENBQ2YsQ0FBQztZQUNGLElBQUksVUFBVSxFQUFFO2dCQUNkLE1BQU07YUFDUDtTQUNGO1FBQ0QsT0FBTyxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsY0FBYyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ssTUFBTSxDQUFDLGNBQWMsQ0FDM0IsR0FBNEIsRUFDNUIsR0FBb0MsRUFDcEMsVUFBK0MsRUFDL0MsY0FBNEM7UUFFNUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQzdCLE1BQU0sR0FBRyxHQUE2QixDQUFDLEdBQWEsRUFBRSxFQUFFO2dCQUN0RCxNQUFNLEtBQUssR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQztnQkFDL0IsSUFBSSxLQUFLLEVBQUU7b0JBQ1QsR0FBRyxDQUFDLEtBQUssR0FBRywrQkFBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO2lCQUNuQztnQkFDRCw2Q0FBNkM7Z0JBQzdDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLENBQUMsQ0FBQztZQUVGLE1BQU0sSUFBSSxHQUE4QixDQUN0QyxhQUEwQyxFQUMxQyxFQUFFO2dCQUNGLElBQUksR0FBRyxDQUFDLEtBQUssRUFBRTtvQkFDYixHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO2lCQUNoQjtxQkFBTTtvQkFDTCxJQUFJLGFBQWEsRUFBRTt3QkFDakIsSUFBSSxPQUFPLGFBQWEsS0FBSyxVQUFVLEVBQUU7NEJBQ3ZDLEdBQUcsQ0FDRCxJQUFJLGlDQUFnQixDQUNsQiwyQkFBVSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQ3ZCLDJEQUEyRDtnQ0FDekQsYUFBYSxPQUFPLGFBQWEsbUJBQW1CLE9BQU8sQ0FDekQsR0FBRyxDQUNKLEVBQUUsRUFDTCxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FDakIsQ0FDRixDQUFDO3lCQUNIO3dCQUNELGNBQWMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7cUJBQ3BDO29CQUVELGtEQUFrRDtvQkFDbEQsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7aUJBQ3hCO1lBQ0gsQ0FBQyxDQUFDO1lBRUYsSUFBSTtnQkFDRixVQUFVLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7YUFDakM7WUFBQyxPQUFPLEtBQUssRUFBRTtnQkFDZCxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDWjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNLLE1BQU0sQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQ3JDLFFBQXNDO1FBRXRDLEtBQUssTUFBTSxPQUFPLElBQUksUUFBUSxFQUFFO1lBQzlCLE1BQU0sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7Z0JBQ3BDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3BELENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ssTUFBTSxDQUFDLG1CQUFtQixDQUNoQyxHQUE0QixFQUM1QixHQUFvQyxFQUNwQyxVQUFtQjtRQUVuQixJQUFJLENBQUMsQ0FBQyxRQUFRLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sSUFBSSxHQUFHLENBQUMsRUFBRTtZQUMzQyxNQUFNLElBQUksaUNBQWdCLENBQ3hCLDJCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFDdkIsZ0VBQWdFLE9BQU8sQ0FDckUsR0FBRyxDQUNKLEVBQUUsRUFDSCxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FDakIsQ0FBQztTQUNIO1FBQ0QsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNmLE1BQU0sSUFBSSxpQ0FBZ0IsQ0FDeEIsMkJBQVUsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUN2QiwwQ0FBMEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQ3hELEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUNqQixDQUFDO1NBQ0g7SUFDSCxDQUFDO0NBQ0Y7QUFyWUQsc0NBcVlDO0FBRUQsU0FBUyxPQUFPLENBQUMsT0FBZ0M7SUFDL0MsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDMUMsQ0FBQyJ9//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/JsonRpcEngine.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createAsyncMiddleware.js":
/*!*******************************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createAsyncMiddleware.js ***!
  \*******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAsyncMiddleware = void 0;\n/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n */\nfunction createAsyncMiddleware(asyncMiddleware) {\n    return async (req, res, next, end) => {\n        // nextPromise is the key to the implementation\n        // it is resolved by the return handler passed to the\n        // \"next\" function\n        let resolveNextPromise;\n        const nextPromise = new Promise((resolve) => {\n            resolveNextPromise = resolve;\n        });\n        let returnHandlerCallback = null;\n        let nextWasCalled = false;\n        // This will be called by the consumer's async middleware.\n        const asyncNext = async () => {\n            nextWasCalled = true;\n            // We pass a return handler to next(). When it is called by the engine,\n            // the consumer's async middleware will resume executing.\n            // eslint-disable-next-line node/callback-return\n            next((runReturnHandlersCallback) => {\n                // This callback comes from JsonRpcEngine._runReturnHandlers\n                returnHandlerCallback = runReturnHandlersCallback;\n                resolveNextPromise();\n            });\n            await nextPromise;\n        };\n        try {\n            await asyncMiddleware(req, res, asyncNext);\n            if (nextWasCalled) {\n                await nextPromise; // we must wait until the return handler is called\n                returnHandlerCallback(null);\n            }\n            else {\n                end(null);\n            }\n        }\n        catch (error) {\n            if (returnHandlerCallback) {\n                returnHandlerCallback(error);\n            }\n            else {\n                end(error);\n            }\n        }\n    };\n}\nexports.createAsyncMiddleware = createAsyncMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlQXN5bmNNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NyZWF0ZUFzeW5jTWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFnQkE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFDSCxTQUFnQixxQkFBcUIsQ0FDbkMsZUFBNkM7SUFFN0MsT0FBTyxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDbkMsK0NBQStDO1FBQy9DLHFEQUFxRDtRQUNyRCxrQkFBa0I7UUFDbEIsSUFBSSxrQkFBOEIsQ0FBQztRQUNuQyxNQUFNLFdBQVcsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQzFDLGtCQUFrQixHQUFHLE9BQU8sQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQztRQUVILElBQUkscUJBQXFCLEdBQVksSUFBSSxDQUFDO1FBQzFDLElBQUksYUFBYSxHQUFHLEtBQUssQ0FBQztRQUUxQiwwREFBMEQ7UUFDMUQsTUFBTSxTQUFTLEdBQUcsS0FBSyxJQUFJLEVBQUU7WUFDM0IsYUFBYSxHQUFHLElBQUksQ0FBQztZQUVyQix1RUFBdUU7WUFDdkUseURBQXlEO1lBQ3pELGdEQUFnRDtZQUNoRCxJQUFJLENBQUMsQ0FBQyx5QkFBeUIsRUFBRSxFQUFFO2dCQUNqQyw0REFBNEQ7Z0JBQzVELHFCQUFxQixHQUFHLHlCQUF5QixDQUFDO2dCQUNsRCxrQkFBa0IsRUFBRSxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxXQUFXLENBQUM7UUFDcEIsQ0FBQyxDQUFDO1FBRUYsSUFBSTtZQUNGLE1BQU0sZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFFM0MsSUFBSSxhQUFhLEVBQUU7Z0JBQ2pCLE1BQU0sV0FBVyxDQUFDLENBQUMsa0RBQWtEO2dCQUNwRSxxQkFBK0MsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN4RDtpQkFBTTtnQkFDTCxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDWDtTQUNGO1FBQUMsT0FBTyxLQUFLLEVBQUU7WUFDZCxJQUFJLHFCQUFxQixFQUFFO2dCQUN4QixxQkFBK0MsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN6RDtpQkFBTTtnQkFDTCxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDWjtTQUNGO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQS9DRCxzREErQ0MifQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9jcmVhdGVBc3luY01pZGRsZXdhcmUuanM/MzA4ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLWZpbHRlcnMvbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVuZ2luZS9kaXN0L2NyZWF0ZUFzeW5jTWlkZGxld2FyZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVBc3luY01pZGRsZXdhcmUgPSB2b2lkIDA7XG4vKipcbiAqIEpzb25ScGNFbmdpbmUgb25seSBhY2NlcHRzIGNhbGxiYWNrLWJhc2VkIG1pZGRsZXdhcmUgZGlyZWN0bHkuXG4gKiBjcmVhdGVBc3luY01pZGRsZXdhcmUgZXhpc3RzIHRvIGVuYWJsZSBjb25zdW1lcnMgdG8gcGFzcyBpbiBhc3luYyBtaWRkbGV3YXJlXG4gKiBmdW5jdGlvbnMuXG4gKlxuICogQXN5bmMgbWlkZGxld2FyZSBoYXZlIG5vIFwiZW5kXCIgZnVuY3Rpb24uIEluc3RlYWQsIHRoZXkgXCJlbmRcIiBpZiB0aGV5IHJldHVyblxuICogd2l0aG91dCBjYWxsaW5nIFwibmV4dFwiLiBSYXRoZXIgdGhhbiBwYXNzaW5nIGluIGV4cGxpY2l0IHJldHVybiBoYW5kbGVycyxcbiAqIGFzeW5jIG1pZGRsZXdhcmUgY2FuIHNpbXBseSBhd2FpdCBcIm5leHRcIiwgYW5kIHBlcmZvcm0gb3BlcmF0aW9ucyBvbiB0aGVcbiAqIHJlc3BvbnNlIG9iamVjdCB3aGVuIGV4ZWN1dGlvbiByZXN1bWVzLlxuICpcbiAqIFRvIGFjY29tcGxpc2ggdGhpcywgY3JlYXRlQXN5bmNNaWRkbGV3YXJlIHBhc3NlcyB0aGUgYXN5bmMgbWlkZGxld2FyZSBhXG4gKiB3cmFwcGVkIFwibmV4dFwiIGZ1bmN0aW9uLiBUaGF0IGZ1bmN0aW9uIGNhbGxzIHRoZSBpbnRlcm5hbCBKc29uUnBjRW5naW5lXG4gKiBcIm5leHRcIiBmdW5jdGlvbiB3aXRoIGEgcmV0dXJuIGhhbmRsZXIgdGhhdCByZXNvbHZlcyBhIHByb21pc2Ugd2hlbiBjYWxsZWQuXG4gKlxuICogVGhlIHJldHVybiBoYW5kbGVyIHdpbGwgYWx3YXlzIGJlIGNhbGxlZC4gSXRzIHJlc29sdXRpb24gb2YgdGhlIHByb21pc2VcbiAqIGVuYWJsZXMgdGhlIGNvbnRyb2wgZmxvdyBkZXNjcmliZWQgYWJvdmUuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUFzeW5jTWlkZGxld2FyZShhc3luY01pZGRsZXdhcmUpIHtcbiAgICByZXR1cm4gYXN5bmMgKHJlcSwgcmVzLCBuZXh0LCBlbmQpID0+IHtcbiAgICAgICAgLy8gbmV4dFByb21pc2UgaXMgdGhlIGtleSB0byB0aGUgaW1wbGVtZW50YXRpb25cbiAgICAgICAgLy8gaXQgaXMgcmVzb2x2ZWQgYnkgdGhlIHJldHVybiBoYW5kbGVyIHBhc3NlZCB0byB0aGVcbiAgICAgICAgLy8gXCJuZXh0XCIgZnVuY3Rpb25cbiAgICAgICAgbGV0IHJlc29sdmVOZXh0UHJvbWlzZTtcbiAgICAgICAgY29uc3QgbmV4dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZU5leHRQcm9taXNlID0gcmVzb2x2ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGxldCByZXR1cm5IYW5kbGVyQ2FsbGJhY2sgPSBudWxsO1xuICAgICAgICBsZXQgbmV4dFdhc0NhbGxlZCA9IGZhbHNlO1xuICAgICAgICAvLyBUaGlzIHdpbGwgYmUgY2FsbGVkIGJ5IHRoZSBjb25zdW1lcidzIGFzeW5jIG1pZGRsZXdhcmUuXG4gICAgICAgIGNvbnN0IGFzeW5jTmV4dCA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIG5leHRXYXNDYWxsZWQgPSB0cnVlO1xuICAgICAgICAgICAgLy8gV2UgcGFzcyBhIHJldHVybiBoYW5kbGVyIHRvIG5leHQoKS4gV2hlbiBpdCBpcyBjYWxsZWQgYnkgdGhlIGVuZ2luZSxcbiAgICAgICAgICAgIC8vIHRoZSBjb25zdW1lcidzIGFzeW5jIG1pZGRsZXdhcmUgd2lsbCByZXN1bWUgZXhlY3V0aW5nLlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vZGUvY2FsbGJhY2stcmV0dXJuXG4gICAgICAgICAgICBuZXh0KChydW5SZXR1cm5IYW5kbGVyc0NhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBjYWxsYmFjayBjb21lcyBmcm9tIEpzb25ScGNFbmdpbmUuX3J1blJldHVybkhhbmRsZXJzXG4gICAgICAgICAgICAgICAgcmV0dXJuSGFuZGxlckNhbGxiYWNrID0gcnVuUmV0dXJuSGFuZGxlcnNDYWxsYmFjaztcbiAgICAgICAgICAgICAgICByZXNvbHZlTmV4dFByb21pc2UoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYXdhaXQgbmV4dFByb21pc2U7XG4gICAgICAgIH07XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBhc3luY01pZGRsZXdhcmUocmVxLCByZXMsIGFzeW5jTmV4dCk7XG4gICAgICAgICAgICBpZiAobmV4dFdhc0NhbGxlZCkge1xuICAgICAgICAgICAgICAgIGF3YWl0IG5leHRQcm9taXNlOyAvLyB3ZSBtdXN0IHdhaXQgdW50aWwgdGhlIHJldHVybiBoYW5kbGVyIGlzIGNhbGxlZFxuICAgICAgICAgICAgICAgIHJldHVybkhhbmRsZXJDYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGVuZChudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChyZXR1cm5IYW5kbGVyQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICByZXR1cm5IYW5kbGVyQ2FsbGJhY2soZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZW5kKGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLmNyZWF0ZUFzeW5jTWlkZGxld2FyZSA9IGNyZWF0ZUFzeW5jTWlkZGxld2FyZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVkzSmxZWFJsUVhONWJtTk5hV1JrYkdWM1lYSmxMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZjM0pqTDJOeVpXRjBaVUZ6ZVc1alRXbGtaR3hsZDJGeVpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3UVVGblFrRTdPenM3T3pzN096czdPenM3T3pzN1IwRm5Ra2M3UVVGRFNDeFRRVUZuUWl4eFFrRkJjVUlzUTBGRGJrTXNaVUZCTmtNN1NVRkZOME1zVDBGQlR5eExRVUZMTEVWQlFVVXNSMEZCUnl4RlFVRkZMRWRCUVVjc1JVRkJSU3hKUVVGSkxFVkJRVVVzUjBGQlJ5eEZRVUZGTEVWQlFVVTdVVUZEYmtNc0swTkJRU3RETzFGQlF5OURMSEZFUVVGeFJEdFJRVU55UkN4clFrRkJhMEk3VVVGRGJFSXNTVUZCU1N4clFrRkJPRUlzUTBGQlF6dFJRVU51UXl4TlFVRk5MRmRCUVZjc1IwRkJSeXhKUVVGSkxFOUJRVThzUTBGQlF5eERRVUZETEU5QlFVOHNSVUZCUlN4RlFVRkZPMWxCUXpGRExHdENRVUZyUWl4SFFVRkhMRTlCUVU4c1EwRkJRenRSUVVNdlFpeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVVklMRWxCUVVrc2NVSkJRWEZDTEVkQlFWa3NTVUZCU1N4RFFVRkRPMUZCUXpGRExFbEJRVWtzWVVGQllTeEhRVUZITEV0QlFVc3NRMEZCUXp0UlFVVXhRaXd3UkVGQk1FUTdVVUZETVVRc1RVRkJUU3hUUVVGVExFZEJRVWNzUzBGQlN5eEpRVUZKTEVWQlFVVTdXVUZETTBJc1lVRkJZU3hIUVVGSExFbEJRVWtzUTBGQlF6dFpRVVZ5UWl4MVJVRkJkVVU3V1VGRGRrVXNlVVJCUVhsRU8xbEJRM3BFTEdkRVFVRm5SRHRaUVVOb1JDeEpRVUZKTEVOQlFVTXNRMEZCUXl4NVFrRkJlVUlzUlVGQlJTeEZRVUZGTzJkQ1FVTnFReXcwUkVGQk5FUTdaMEpCUXpWRUxIRkNRVUZ4UWl4SFFVRkhMSGxDUVVGNVFpeERRVUZETzJkQ1FVTnNSQ3hyUWtGQmEwSXNSVUZCUlN4RFFVRkRPMWxCUTNaQ0xFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEwZ3NUVUZCVFN4WFFVRlhMRU5CUVVNN1VVRkRjRUlzUTBGQlF5eERRVUZETzFGQlJVWXNTVUZCU1R0WlFVTkdMRTFCUVUwc1pVRkJaU3hEUVVGRExFZEJRVWNzUlVGQlJTeEhRVUZITEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNN1dVRkZNME1zU1VGQlNTeGhRVUZoTEVWQlFVVTdaMEpCUTJwQ0xFMUJRVTBzVjBGQlZ5eERRVUZETEVOQlFVTXNhMFJCUVd0RU8yZENRVU53UlN4eFFrRkJLME1zUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0aFFVTjRSRHRwUWtGQlRUdG5Ra0ZEVEN4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WVVGRFdEdFRRVU5HTzFGQlFVTXNUMEZCVHl4TFFVRkxMRVZCUVVVN1dVRkRaQ3hKUVVGSkxIRkNRVUZ4UWl4RlFVRkZPMmRDUVVONFFpeHhRa0ZCSzBNc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dGhRVU42UkR0cFFrRkJUVHRuUWtGRFRDeEhRVUZITEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1lVRkRXanRUUVVOR08wbEJRMGdzUTBGQlF5eERRVUZETzBGQlEwb3NRMEZCUXp0QlFTOURSQ3h6UkVFclEwTWlmUT09Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createAsyncMiddleware.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createScaffoldMiddleware.js":
/*!**********************************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createScaffoldMiddleware.js ***!
  \**********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createScaffoldMiddleware = void 0;\nfunction createScaffoldMiddleware(handlers) {\n    return (req, res, next, end) => {\n        const handler = handlers[req.method];\n        // if no handler, return\n        if (handler === undefined) {\n            return next();\n        }\n        // if handler is fn, call as middleware\n        if (typeof handler === 'function') {\n            return handler(req, res, next, end);\n        }\n        // if handler is some other value, use as result\n        res.result = handler;\n        return end();\n    };\n}\nexports.createScaffoldMiddleware = createScaffoldMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlU2NhZmZvbGRNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NyZWF0ZVNjYWZmb2xkTWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQSxTQUFnQix3QkFBd0IsQ0FBQyxRQUV4QztJQUNDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUM3QixNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JDLHdCQUF3QjtRQUN4QixJQUFJLE9BQU8sS0FBSyxTQUFTLEVBQUU7WUFDekIsT0FBTyxJQUFJLEVBQUUsQ0FBQztTQUNmO1FBQ0QsdUNBQXVDO1FBQ3ZDLElBQUksT0FBTyxPQUFPLEtBQUssVUFBVSxFQUFFO1lBQ2pDLE9BQU8sT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ3JDO1FBQ0QsZ0RBQWdEO1FBQy9DLEdBQStCLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQztRQUNsRCxPQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ2YsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQWpCRCw0REFpQkMifQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9jcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUuanM/OGQ3YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLWZpbHRlcnMvbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVuZ2luZS9kaXN0L2NyZWF0ZVNjYWZmb2xkTWlkZGxld2FyZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUgPSB2b2lkIDA7XG5mdW5jdGlvbiBjcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUoaGFuZGxlcnMpIHtcbiAgICByZXR1cm4gKHJlcSwgcmVzLCBuZXh0LCBlbmQpID0+IHtcbiAgICAgICAgY29uc3QgaGFuZGxlciA9IGhhbmRsZXJzW3JlcS5tZXRob2RdO1xuICAgICAgICAvLyBpZiBubyBoYW5kbGVyLCByZXR1cm5cbiAgICAgICAgaWYgKGhhbmRsZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIG5leHQoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiBoYW5kbGVyIGlzIGZuLCBjYWxsIGFzIG1pZGRsZXdhcmVcbiAgICAgICAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlcihyZXEsIHJlcywgbmV4dCwgZW5kKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiBoYW5kbGVyIGlzIHNvbWUgb3RoZXIgdmFsdWUsIHVzZSBhcyByZXN1bHRcbiAgICAgICAgcmVzLnJlc3VsdCA9IGhhbmRsZXI7XG4gICAgICAgIHJldHVybiBlbmQoKTtcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUgPSBjcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lZM0psWVhSbFUyTmhabVp2YkdSTmFXUmtiR1YzWVhKbExtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dmMzSmpMMk55WldGMFpWTmpZV1ptYjJ4a1RXbGtaR3hsZDJGeVpTNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3UVVGSlFTeFRRVUZuUWl4M1FrRkJkMElzUTBGQlF5eFJRVVY0UXp0SlFVTkRMRTlCUVU4c1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVsQlFVa3NSVUZCUlN4SFFVRkhMRVZCUVVVc1JVRkJSVHRSUVVNM1FpeE5RVUZOTEU5QlFVOHNSMEZCUnl4UlFVRlJMRU5CUVVNc1IwRkJSeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzFGQlEzSkRMSGRDUVVGM1FqdFJRVU40UWl4SlFVRkpMRTlCUVU4c1MwRkJTeXhUUVVGVExFVkJRVVU3V1VGRGVrSXNUMEZCVHl4SlFVRkpMRVZCUVVVc1EwRkJRenRUUVVObU8xRkJRMFFzZFVOQlFYVkRPMUZCUTNaRExFbEJRVWtzVDBGQlR5eFBRVUZQTEV0QlFVc3NWVUZCVlN4RlFVRkZPMWxCUTJwRExFOUJRVThzVDBGQlR5eERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVc1NVRkJTU3hGUVVGRkxFZEJRVWNzUTBGQlF5eERRVUZETzFOQlEzSkRPMUZCUTBRc1owUkJRV2RFTzFGQlF5OURMRWRCUVN0Q0xFTkJRVU1zVFVGQlRTeEhRVUZITEU5QlFVOHNRMEZCUXp0UlFVTnNSQ3hQUVVGUExFZEJRVWNzUlVGQlJTeERRVUZETzBsQlEyWXNRMEZCUXl4RFFVRkRPMEZCUTBvc1EwRkJRenRCUVdwQ1JDdzBSRUZwUWtNaWZRPT0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createScaffoldMiddleware.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/getUniqueId.js":
/*!*********************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/getUniqueId.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUniqueId = void 0;\n// uint32 (two's complement) max\n// more conservative than Number.MAX_SAFE_INTEGER\nconst MAX = 4294967295;\nlet idCounter = Math.floor(Math.random() * MAX);\nfunction getUniqueId() {\n    idCounter = (idCounter + 1) % MAX;\n    return idCounter;\n}\nexports.getUniqueId = getUniqueId;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0VW5pcXVlSWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ2V0VW5pcXVlSWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0NBQWdDO0FBQ2hDLGlEQUFpRDtBQUNqRCxNQUFNLEdBQUcsR0FBRyxVQUFVLENBQUM7QUFDdkIsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFFaEQsU0FBZ0IsV0FBVztJQUN6QixTQUFTLEdBQUcsQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ2xDLE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUM7QUFIRCxrQ0FHQyJ9//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9nZXRVbmlxdWVJZC5qcz8yNWJmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9nZXRVbmlxdWVJZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRVbmlxdWVJZCA9IHZvaWQgMDtcbi8vIHVpbnQzMiAodHdvJ3MgY29tcGxlbWVudCkgbWF4XG4vLyBtb3JlIGNvbnNlcnZhdGl2ZSB0aGFuIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXG5jb25zdCBNQVggPSA0Mjk0OTY3Mjk1O1xubGV0IGlkQ291bnRlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1BWCk7XG5mdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcbiAgICBpZENvdW50ZXIgPSAoaWRDb3VudGVyICsgMSkgJSBNQVg7XG4gICAgcmV0dXJuIGlkQ291bnRlcjtcbn1cbmV4cG9ydHMuZ2V0VW5pcXVlSWQgPSBnZXRVbmlxdWVJZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVoyVjBWVzVwY1hWbFNXUXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12WjJWMFZXNXBjWFZsU1dRdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPMEZCUVVFc1owTkJRV2RETzBGQlEyaERMR2xFUVVGcFJEdEJRVU5xUkN4TlFVRk5MRWRCUVVjc1IwRkJSeXhWUVVGVkxFTkJRVU03UVVGRGRrSXNTVUZCU1N4VFFVRlRMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRWRCUVVjc1IwRkJSeXhEUVVGRExFTkJRVU03UVVGRmFFUXNVMEZCWjBJc1YwRkJWenRKUVVONlFpeFRRVUZUTEVkQlFVY3NRMEZCUXl4VFFVRlRMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUjBGQlJ5eERRVUZETzBsQlEyeERMRTlCUVU4c1UwRkJVeXhEUVVGRE8wRkJRMjVDTEVOQlFVTTdRVUZJUkN4clEwRkhReUo5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/getUniqueId.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/idRemapMiddleware.js":
/*!***************************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/idRemapMiddleware.js ***!
  \***************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createIdRemapMiddleware = void 0;\nconst getUniqueId_1 = __webpack_require__(/*! ./getUniqueId */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/getUniqueId.js\");\nfunction createIdRemapMiddleware() {\n    return (req, res, next, _end) => {\n        const originalId = req.id;\n        const newId = getUniqueId_1.getUniqueId();\n        req.id = newId;\n        res.id = newId;\n        next((done) => {\n            req.id = originalId;\n            res.id = originalId;\n            done();\n        });\n    };\n}\nexports.createIdRemapMiddleware = createIdRemapMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWRSZW1hcE1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaWRSZW1hcE1pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0NBQTRDO0FBRzVDLFNBQWdCLHVCQUF1QjtJQUNyQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7UUFDOUIsTUFBTSxVQUFVLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUMxQixNQUFNLEtBQUssR0FBRyx5QkFBVyxFQUFFLENBQUM7UUFDNUIsR0FBRyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFDZixHQUFHLENBQUMsRUFBRSxHQUFHLEtBQUssQ0FBQztRQUNmLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ1osR0FBRyxDQUFDLEVBQUUsR0FBRyxVQUFVLENBQUM7WUFDcEIsR0FBRyxDQUFDLEVBQUUsR0FBRyxVQUFVLENBQUM7WUFDcEIsSUFBSSxFQUFFLENBQUM7UUFDVCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztBQUNKLENBQUM7QUFaRCwwREFZQyJ9//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9pZFJlbWFwTWlkZGxld2FyZS5qcz9iZDc5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQywrR0FBZTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9pZFJlbWFwTWlkZGxld2FyZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVJZFJlbWFwTWlkZGxld2FyZSA9IHZvaWQgMDtcbmNvbnN0IGdldFVuaXF1ZUlkXzEgPSByZXF1aXJlKFwiLi9nZXRVbmlxdWVJZFwiKTtcbmZ1bmN0aW9uIGNyZWF0ZUlkUmVtYXBNaWRkbGV3YXJlKCkge1xuICAgIHJldHVybiAocmVxLCByZXMsIG5leHQsIF9lbmQpID0+IHtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxJZCA9IHJlcS5pZDtcbiAgICAgICAgY29uc3QgbmV3SWQgPSBnZXRVbmlxdWVJZF8xLmdldFVuaXF1ZUlkKCk7XG4gICAgICAgIHJlcS5pZCA9IG5ld0lkO1xuICAgICAgICByZXMuaWQgPSBuZXdJZDtcbiAgICAgICAgbmV4dCgoZG9uZSkgPT4ge1xuICAgICAgICAgICAgcmVxLmlkID0gb3JpZ2luYWxJZDtcbiAgICAgICAgICAgIHJlcy5pZCA9IG9yaWdpbmFsSWQ7XG4gICAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5leHBvcnRzLmNyZWF0ZUlkUmVtYXBNaWRkbGV3YXJlID0gY3JlYXRlSWRSZW1hcE1pZGRsZXdhcmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhV1JTWlcxaGNFMXBaR1JzWlhkaGNtVXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12YVdSU1pXMWhjRTFwWkdSc1pYZGhjbVV1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN08wRkJRVUVzSzBOQlFUUkRPMEZCUnpWRExGTkJRV2RDTEhWQ1FVRjFRanRKUVVOeVF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RlFVRkZMRWRCUVVjc1JVRkJSU3hKUVVGSkxFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVTdVVUZET1VJc1RVRkJUU3hWUVVGVkxFZEJRVWNzUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXp0UlFVTXhRaXhOUVVGTkxFdEJRVXNzUjBGQlJ5eDVRa0ZCVnl4RlFVRkZMRU5CUVVNN1VVRkROVUlzUjBGQlJ5eERRVUZETEVWQlFVVXNSMEZCUnl4TFFVRkxMRU5CUVVNN1VVRkRaaXhIUVVGSExFTkJRVU1zUlVGQlJTeEhRVUZITEV0QlFVc3NRMEZCUXp0UlFVTm1MRWxCUVVrc1EwRkJReXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTzFsQlExb3NSMEZCUnl4RFFVRkRMRVZCUVVVc1IwRkJSeXhWUVVGVkxFTkJRVU03V1VGRGNFSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1IwRkJSeXhWUVVGVkxFTkJRVU03V1VGRGNFSXNTVUZCU1N4RlFVRkZMRU5CUVVNN1VVRkRWQ3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5NTEVOQlFVTXNRMEZCUXp0QlFVTktMRU5CUVVNN1FVRmFSQ3d3UkVGWlF5SjkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/idRemapMiddleware.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/index.js":
/*!***************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/index.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./idRemapMiddleware */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/idRemapMiddleware.js\"), exports);\n__exportStar(__webpack_require__(/*! ./createAsyncMiddleware */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createAsyncMiddleware.js\"), exports);\n__exportStar(__webpack_require__(/*! ./createScaffoldMiddleware */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/createScaffoldMiddleware.js\"), exports);\n__exportStar(__webpack_require__(/*! ./getUniqueId */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/getUniqueId.js\"), exports);\n__exportStar(__webpack_require__(/*! ./JsonRpcEngine */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/JsonRpcEngine.js\"), exports);\n__exportStar(__webpack_require__(/*! ./mergeMiddleware */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/mergeMiddleware.js\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsc0RBQW9DO0FBQ3BDLDBEQUF3QztBQUN4Qyw2REFBMkM7QUFDM0MsZ0RBQThCO0FBQzlCLGtEQUFnQztBQUNoQyxvREFBa0MifQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9pbmRleC5qcz9hNTYyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLDJIQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsbUlBQXlCO0FBQzlDLGFBQWEsbUJBQU8sQ0FBQyx5SUFBNEI7QUFDakQsYUFBYSxtQkFBTyxDQUFDLCtHQUFlO0FBQ3BDLGFBQWEsbUJBQU8sQ0FBQyxtSEFBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLHVIQUFtQjtBQUN4QywyQ0FBMkMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaWRSZW1hcE1pZGRsZXdhcmVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZUFzeW5jTWlkZGxld2FyZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3JlYXRlU2NhZmZvbGRNaWRkbGV3YXJlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9nZXRVbmlxdWVJZFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSnNvblJwY0VuZ2luZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWVyZ2VNaWRkbGV3YXJlXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTl6Y21NdmFXNWtaWGd1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN096czdPenM3T3pzN08wRkJRVUVzYzBSQlFXOURPMEZCUTNCRExEQkVRVUYzUXp0QlFVTjRReXcyUkVGQk1rTTdRVUZETTBNc1owUkJRVGhDTzBGQlF6bENMR3RFUVVGblF6dEJRVU5vUXl4dlJFRkJhME1pZlE9PSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/index.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/mergeMiddleware.js":
/*!*************************************************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/mergeMiddleware.js ***!
  \*************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeMiddleware = void 0;\nconst JsonRpcEngine_1 = __webpack_require__(/*! ./JsonRpcEngine */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/JsonRpcEngine.js\");\nfunction mergeMiddleware(middlewareStack) {\n    const engine = new JsonRpcEngine_1.JsonRpcEngine();\n    middlewareStack.forEach((middleware) => engine.push(middleware));\n    return engine.asMiddleware();\n}\nexports.mergeMiddleware = mergeMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVyZ2VNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL21lcmdlTWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxtREFBbUU7QUFFbkUsU0FBZ0IsZUFBZSxDQUFDLGVBQXNEO0lBQ3BGLE1BQU0sTUFBTSxHQUFHLElBQUksNkJBQWEsRUFBRSxDQUFDO0lBQ25DLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUNqRSxPQUFPLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUMvQixDQUFDO0FBSkQsMENBSUMifQ==//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9qc29uLXJwYy1lbmdpbmUvZGlzdC9tZXJnZU1pZGRsZXdhcmUuanM/MjljMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0Esd0JBQXdCLG1CQUFPLENBQUMsbUhBQWlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLWZpbHRlcnMvbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVuZ2luZS9kaXN0L21lcmdlTWlkZGxld2FyZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZXJnZU1pZGRsZXdhcmUgPSB2b2lkIDA7XG5jb25zdCBKc29uUnBjRW5naW5lXzEgPSByZXF1aXJlKFwiLi9Kc29uUnBjRW5naW5lXCIpO1xuZnVuY3Rpb24gbWVyZ2VNaWRkbGV3YXJlKG1pZGRsZXdhcmVTdGFjaykge1xuICAgIGNvbnN0IGVuZ2luZSA9IG5ldyBKc29uUnBjRW5naW5lXzEuSnNvblJwY0VuZ2luZSgpO1xuICAgIG1pZGRsZXdhcmVTdGFjay5mb3JFYWNoKChtaWRkbGV3YXJlKSA9PiBlbmdpbmUucHVzaChtaWRkbGV3YXJlKSk7XG4gICAgcmV0dXJuIGVuZ2luZS5hc01pZGRsZXdhcmUoKTtcbn1cbmV4cG9ydHMubWVyZ2VNaWRkbGV3YXJlID0gbWVyZ2VNaWRkbGV3YXJlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYldWeVoyVk5hV1JrYkdWM1lYSmxMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZjM0pqTDIxbGNtZGxUV2xrWkd4bGQyRnlaUzUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3pzN1FVRkJRU3h0UkVGQmJVVTdRVUZGYmtVc1UwRkJaMElzWlVGQlpTeERRVUZETEdWQlFYTkVPMGxCUTNCR0xFMUJRVTBzVFVGQlRTeEhRVUZITEVsQlFVa3NOa0pCUVdFc1JVRkJSU3hEUVVGRE8wbEJRMjVETEdWQlFXVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhWUVVGVkxFVkJRVVVzUlVGQlJTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5xUlN4UFFVRlBMRTFCUVUwc1EwRkJReXhaUVVGWkxFVkJRVVVzUTBGQlF6dEJRVU12UWl4RFFVRkRPMEZCU2tRc01FTkJTVU1pZlE9PSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/mergeMiddleware.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/node_modules/pify/index.js":
/*!***********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/node_modules/pify/index.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst processFn = (fn, options, proxy, unwrapped) => function (...arguments_) {\n\tconst P = options.promiseModule;\n\n\treturn new P((resolve, reject) => {\n\t\tif (options.multiArgs) {\n\t\t\targuments_.push((...result) => {\n\t\t\t\tif (options.errorFirst) {\n\t\t\t\t\tif (result[0]) {\n\t\t\t\t\t\treject(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.shift();\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (options.errorFirst) {\n\t\t\targuments_.push((error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\targuments_.push(resolve);\n\t\t}\n\n\t\tconst self = this === proxy ? unwrapped : this;\n\t\tReflect.apply(fn, self, arguments_);\n\t});\n};\n\nconst filterCache = new WeakMap();\n\nmodule.exports = (input, options) => {\n\toptions = {\n\t\texclude: [/.+(?:Sync|Stream)$/],\n\t\terrorFirst: true,\n\t\tpromiseModule: Promise,\n\t\t...options\n\t};\n\n\tconst objectType = typeof input;\n\tif (!(input !== null && (objectType === 'object' || objectType === 'function'))) {\n\t\tthrow new TypeError(`Expected \\`input\\` to be a \\`Function\\` or \\`Object\\`, got \\`${input === null ? 'null' : objectType}\\``);\n\t}\n\n\tconst filter = (target, key) => {\n\t\tlet cached = filterCache.get(target);\n\n\t\tif (!cached) {\n\t\t\tcached = {};\n\t\t\tfilterCache.set(target, cached);\n\t\t}\n\n\t\tif (key in cached) {\n\t\t\treturn cached[key];\n\t\t}\n\n\t\tconst match = pattern => (typeof pattern === 'string' || typeof key === 'symbol') ? key === pattern : pattern.test(key);\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(target, key);\n\t\tconst writableOrConfigurableOwn = (desc === undefined || desc.writable || desc.configurable);\n\t\tconst included = options.include ? options.include.some(match) : !options.exclude.some(match);\n\t\tconst shouldFilter = included && writableOrConfigurableOwn;\n\t\tcached[key] = shouldFilter;\n\t\treturn shouldFilter;\n\t};\n\n\tconst cache = new WeakMap();\n\n\tconst proxy = new Proxy(input, {\n\t\tapply(target, thisArg, args) {\n\t\t\tconst cached = cache.get(target);\n\n\t\t\tif (cached) {\n\t\t\t\treturn Reflect.apply(cached, thisArg, args);\n\t\t\t}\n\n\t\t\tconst pified = options.excludeMain ? target : processFn(target, options, proxy, target);\n\t\t\tcache.set(target, pified);\n\t\t\treturn Reflect.apply(pified, thisArg, args);\n\t\t},\n\n\t\tget(target, key) {\n\t\t\tconst property = target[key];\n\n\t\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\t\tif (!filter(target, key) || property === Function.prototype[key]) {\n\t\t\t\treturn property;\n\t\t\t}\n\n\t\t\tconst cached = cache.get(property);\n\n\t\t\tif (cached) {\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tif (typeof property === 'function') {\n\t\t\t\tconst pified = processFn(property, options, proxy, target);\n\t\t\t\tcache.set(property, pified);\n\t\t\t\treturn pified;\n\t\t\t}\n\n\t\t\treturn property;\n\t\t}\n\t});\n\n\treturn proxy;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL25vZGVfbW9kdWxlcy9waWZ5L2luZGV4LmpzPzFlZTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxJQUFJO0FBQ0osR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSTtBQUNKLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNGQUFzRixxQ0FBcUM7QUFDM0g7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9ldGgtanNvbi1ycGMtZmlsdGVycy9ub2RlX21vZHVsZXMvcGlmeS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgcHJvY2Vzc0ZuID0gKGZuLCBvcHRpb25zLCBwcm94eSwgdW53cmFwcGVkKSA9PiBmdW5jdGlvbiAoLi4uYXJndW1lbnRzXykge1xuXHRjb25zdCBQID0gb3B0aW9ucy5wcm9taXNlTW9kdWxlO1xuXG5cdHJldHVybiBuZXcgUCgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0aWYgKG9wdGlvbnMubXVsdGlBcmdzKSB7XG5cdFx0XHRhcmd1bWVudHNfLnB1c2goKC4uLnJlc3VsdCkgPT4ge1xuXHRcdFx0XHRpZiAob3B0aW9ucy5lcnJvckZpcnN0KSB7XG5cdFx0XHRcdFx0aWYgKHJlc3VsdFswXSkge1xuXHRcdFx0XHRcdFx0cmVqZWN0KHJlc3VsdCk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlc3VsdC5zaGlmdCgpO1xuXHRcdFx0XHRcdFx0cmVzb2x2ZShyZXN1bHQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZXNvbHZlKHJlc3VsdCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0gZWxzZSBpZiAob3B0aW9ucy5lcnJvckZpcnN0KSB7XG5cdFx0XHRhcmd1bWVudHNfLnB1c2goKGVycm9yLCByZXN1bHQpID0+IHtcblx0XHRcdFx0aWYgKGVycm9yKSB7XG5cdFx0XHRcdFx0cmVqZWN0KGVycm9yKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZXNvbHZlKHJlc3VsdCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRhcmd1bWVudHNfLnB1c2gocmVzb2x2ZSk7XG5cdFx0fVxuXG5cdFx0Y29uc3Qgc2VsZiA9IHRoaXMgPT09IHByb3h5ID8gdW53cmFwcGVkIDogdGhpcztcblx0XHRSZWZsZWN0LmFwcGx5KGZuLCBzZWxmLCBhcmd1bWVudHNfKTtcblx0fSk7XG59O1xuXG5jb25zdCBmaWx0ZXJDYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gKGlucHV0LCBvcHRpb25zKSA9PiB7XG5cdG9wdGlvbnMgPSB7XG5cdFx0ZXhjbHVkZTogWy8uKyg/OlN5bmN8U3RyZWFtKSQvXSxcblx0XHRlcnJvckZpcnN0OiB0cnVlLFxuXHRcdHByb21pc2VNb2R1bGU6IFByb21pc2UsXG5cdFx0Li4ub3B0aW9uc1xuXHR9O1xuXG5cdGNvbnN0IG9iamVjdFR5cGUgPSB0eXBlb2YgaW5wdXQ7XG5cdGlmICghKGlucHV0ICE9PSBudWxsICYmIChvYmplY3RUeXBlID09PSAnb2JqZWN0JyB8fCBvYmplY3RUeXBlID09PSAnZnVuY3Rpb24nKSkpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCBcXGBpbnB1dFxcYCB0byBiZSBhIFxcYEZ1bmN0aW9uXFxgIG9yIFxcYE9iamVjdFxcYCwgZ290IFxcYCR7aW5wdXQgPT09IG51bGwgPyAnbnVsbCcgOiBvYmplY3RUeXBlfVxcYGApO1xuXHR9XG5cblx0Y29uc3QgZmlsdGVyID0gKHRhcmdldCwga2V5KSA9PiB7XG5cdFx0bGV0IGNhY2hlZCA9IGZpbHRlckNhY2hlLmdldCh0YXJnZXQpO1xuXG5cdFx0aWYgKCFjYWNoZWQpIHtcblx0XHRcdGNhY2hlZCA9IHt9O1xuXHRcdFx0ZmlsdGVyQ2FjaGUuc2V0KHRhcmdldCwgY2FjaGVkKTtcblx0XHR9XG5cblx0XHRpZiAoa2V5IGluIGNhY2hlZCkge1xuXHRcdFx0cmV0dXJuIGNhY2hlZFtrZXldO1xuXHRcdH1cblxuXHRcdGNvbnN0IG1hdGNoID0gcGF0dGVybiA9PiAodHlwZW9mIHBhdHRlcm4gPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBrZXkgPT09ICdzeW1ib2wnKSA/IGtleSA9PT0gcGF0dGVybiA6IHBhdHRlcm4udGVzdChrZXkpO1xuXHRcdGNvbnN0IGRlc2MgPSBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSk7XG5cdFx0Y29uc3Qgd3JpdGFibGVPckNvbmZpZ3VyYWJsZU93biA9IChkZXNjID09PSB1bmRlZmluZWQgfHwgZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSk7XG5cdFx0Y29uc3QgaW5jbHVkZWQgPSBvcHRpb25zLmluY2x1ZGUgPyBvcHRpb25zLmluY2x1ZGUuc29tZShtYXRjaCkgOiAhb3B0aW9ucy5leGNsdWRlLnNvbWUobWF0Y2gpO1xuXHRcdGNvbnN0IHNob3VsZEZpbHRlciA9IGluY2x1ZGVkICYmIHdyaXRhYmxlT3JDb25maWd1cmFibGVPd247XG5cdFx0Y2FjaGVkW2tleV0gPSBzaG91bGRGaWx0ZXI7XG5cdFx0cmV0dXJuIHNob3VsZEZpbHRlcjtcblx0fTtcblxuXHRjb25zdCBjYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG5cblx0Y29uc3QgcHJveHkgPSBuZXcgUHJveHkoaW5wdXQsIHtcblx0XHRhcHBseSh0YXJnZXQsIHRoaXNBcmcsIGFyZ3MpIHtcblx0XHRcdGNvbnN0IGNhY2hlZCA9IGNhY2hlLmdldCh0YXJnZXQpO1xuXG5cdFx0XHRpZiAoY2FjaGVkKSB7XG5cdFx0XHRcdHJldHVybiBSZWZsZWN0LmFwcGx5KGNhY2hlZCwgdGhpc0FyZywgYXJncyk7XG5cdFx0XHR9XG5cblx0XHRcdGNvbnN0IHBpZmllZCA9IG9wdGlvbnMuZXhjbHVkZU1haW4gPyB0YXJnZXQgOiBwcm9jZXNzRm4odGFyZ2V0LCBvcHRpb25zLCBwcm94eSwgdGFyZ2V0KTtcblx0XHRcdGNhY2hlLnNldCh0YXJnZXQsIHBpZmllZCk7XG5cdFx0XHRyZXR1cm4gUmVmbGVjdC5hcHBseShwaWZpZWQsIHRoaXNBcmcsIGFyZ3MpO1xuXHRcdH0sXG5cblx0XHRnZXQodGFyZ2V0LCBrZXkpIHtcblx0XHRcdGNvbnN0IHByb3BlcnR5ID0gdGFyZ2V0W2tleV07XG5cblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2UtZXh0ZW5kLW5hdGl2ZS9uby11c2UtZXh0ZW5kLW5hdGl2ZVxuXHRcdFx0aWYgKCFmaWx0ZXIodGFyZ2V0LCBrZXkpIHx8IHByb3BlcnR5ID09PSBGdW5jdGlvbi5wcm90b3R5cGVba2V5XSkge1xuXHRcdFx0XHRyZXR1cm4gcHJvcGVydHk7XG5cdFx0XHR9XG5cblx0XHRcdGNvbnN0IGNhY2hlZCA9IGNhY2hlLmdldChwcm9wZXJ0eSk7XG5cblx0XHRcdGlmIChjYWNoZWQpIHtcblx0XHRcdFx0cmV0dXJuIGNhY2hlZDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKHR5cGVvZiBwcm9wZXJ0eSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRjb25zdCBwaWZpZWQgPSBwcm9jZXNzRm4ocHJvcGVydHksIG9wdGlvbnMsIHByb3h5LCB0YXJnZXQpO1xuXHRcdFx0XHRjYWNoZS5zZXQocHJvcGVydHksIHBpZmllZCk7XG5cdFx0XHRcdHJldHVybiBwaWZpZWQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBwcm9wZXJ0eTtcblx0XHR9XG5cdH0pO1xuXG5cdHJldHVybiBwcm94eTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/node_modules/pify/index.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/subscriptionManager.js":
/*!*******************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/subscriptionManager.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const SafeEventEmitter = __webpack_require__(/*! @metamask/safe-event-emitter */ \"../../node_modules/@metamask/safe-event-emitter/index.js\").default\nconst createScaffoldMiddleware = __webpack_require__(/*! eth-json-rpc-middleware/scaffold */ \"../../node_modules/eth-json-rpc-middleware/scaffold.js\")\nconst { createAsyncMiddleware } = __webpack_require__(/*! json-rpc-engine */ \"../../node_modules/eth-json-rpc-filters/node_modules/json-rpc-engine/dist/index.js\")\nconst createFilterMiddleware = __webpack_require__(/*! ./index.js */ \"../../node_modules/eth-json-rpc-filters/index.js\")\nconst { unsafeRandomBytes, incrementHexInt } = __webpack_require__(/*! ./hexUtils.js */ \"../../node_modules/eth-json-rpc-filters/hexUtils.js\")\nconst getBlocksForRange = __webpack_require__(/*! ./getBlocksForRange.js */ \"../../node_modules/eth-json-rpc-filters/getBlocksForRange.js\")\n\nmodule.exports = createSubscriptionMiddleware\n\n\nfunction createSubscriptionMiddleware({ blockTracker, provider }) {\n  // state and utilities for handling subscriptions\n  const subscriptions = {}\n  const filterManager = createFilterMiddleware({ blockTracker, provider })\n\n  // internal flag\n  let isDestroyed = false\n\n  // create subscriptionManager api object\n  const events = new SafeEventEmitter()\n  const middleware = createScaffoldMiddleware({\n    eth_subscribe: createAsyncMiddleware(subscribe),\n    eth_unsubscribe: createAsyncMiddleware(unsubscribe),\n  })\n  middleware.destroy = destroy\n  return { events, middleware }\n\n  async function subscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const subscriptionType = req.params[0]\n    // subId is 16 byte hex string\n    const subId = unsafeRandomBytes(16)\n\n    // create sub\n    let sub\n    switch (subscriptionType) {\n      case 'newHeads':\n        sub = createSubNewHeads({ subId })\n        break\n      case 'logs':\n        const filterParams = req.params[1]\n        const filter = await filterManager.newLogFilter(filterParams)\n        sub = createSubFromFilter({ subId, filter })\n        break\n      default:\n        throw new Error(`SubscriptionManager - unsupported subscription type \"${subscriptionType}\"`)\n\n    }\n    subscriptions[subId] = sub\n\n    res.result = subId\n    return\n\n    function createSubNewHeads({ subId }) {\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          blockTracker.removeListener('sync', sub.update)\n        },\n        update: async ({ oldBlock, newBlock }) => {\n          // for newHeads\n          const toBlock = newBlock\n          const fromBlock = incrementHexInt(oldBlock)\n          const rawBlocks = await getBlocksForRange({ provider, fromBlock, toBlock })\n          const results = rawBlocks.map(normalizeBlock)\n          results.forEach((value) => {\n            _emitSubscriptionResult(subId, value)\n          })\n        }\n      }\n      // check for subscription updates on new block\n      blockTracker.on('sync', sub.update)\n      return sub\n    }\n\n    function createSubFromFilter({ subId, filter }){\n      filter.on('update', result => _emitSubscriptionResult(subId, result))\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          return await filterManager.uninstallFilter(filter.idHex)\n        },\n      }\n      return sub\n    }\n  }\n\n  async function unsubscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const id = req.params[0]\n    const subscription = subscriptions[id]\n    // if missing, return \"false\" to indicate it was not removed\n    if (!subscription) {\n      res.result = false\n      return\n    }\n    // cleanup subscription\n    delete subscriptions[id]\n    await subscription.destroy()\n    res.result = true\n  }\n\n  function _emitSubscriptionResult(filterIdHex, value) {\n    events.emit('notification', {\n      jsonrpc: '2.0',\n      method: 'eth_subscription',\n      params: {\n        subscription: filterIdHex,\n        result: value,\n      },\n    })\n  }\n\n  function destroy () {\n    events.removeAllListeners()\n    for (const id in subscriptions) {\n      subscriptions[id].destroy()\n      delete subscriptions[id]\n    }\n    isDestroyed = true\n  }\n}\n\nfunction normalizeBlock(block) {\n  return {\n    hash: block.hash,\n    parentHash: block.parentHash,\n    sha3Uncles: block.sha3Uncles,\n    miner: block.miner,\n    stateRoot: block.stateRoot,\n    transactionsRoot: block.transactionsRoot,\n    receiptsRoot: block.receiptsRoot,\n    logsBloom: block.logsBloom,\n    difficulty: block.difficulty,\n    number: block.number,\n    gasLimit: block.gasLimit,\n    gasUsed: block.gasUsed,\n    nonce: block.nonce,\n    mixHash: block.mixHash,\n    timestamp: block.timestamp,\n    extraData: block.extraData,\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL3N1YnNjcmlwdGlvbk1hbmFnZXIuanM/Zjk4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUIsbUJBQU8sQ0FBQyw4RkFBOEI7QUFDL0QsaUNBQWlDLG1CQUFPLENBQUMsZ0dBQWtDO0FBQzNFLE9BQU8sd0JBQXdCLEdBQUcsbUJBQU8sQ0FBQywyR0FBaUI7QUFDM0QsK0JBQStCLG1CQUFPLENBQUMsb0VBQVk7QUFDbkQsT0FBTyxxQ0FBcUMsR0FBRyxtQkFBTyxDQUFDLDBFQUFlO0FBQ3RFLDBCQUEwQixtQkFBTyxDQUFDLDRGQUF3Qjs7QUFFMUQ7OztBQUdBLHVDQUF1Qyx5QkFBeUI7QUFDaEU7QUFDQTtBQUNBLGdEQUFnRCx5QkFBeUI7O0FBRXpFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFVBQVU7O0FBRVY7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxRQUFRO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRDtBQUNBO0FBQ0EsZ0ZBQWdGLGlCQUFpQjs7QUFFakc7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdDQUFnQyxRQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EscURBQXFELCtCQUErQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtDQUFrQyxnQkFBZ0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLWZpbHRlcnMvc3Vic2NyaXB0aW9uTWFuYWdlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNhZmVFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdAbWV0YW1hc2svc2FmZS1ldmVudC1lbWl0dGVyJykuZGVmYXVsdFxuY29uc3QgY3JlYXRlU2NhZmZvbGRNaWRkbGV3YXJlID0gcmVxdWlyZSgnZXRoLWpzb24tcnBjLW1pZGRsZXdhcmUvc2NhZmZvbGQnKVxuY29uc3QgeyBjcmVhdGVBc3luY01pZGRsZXdhcmUgfSA9IHJlcXVpcmUoJ2pzb24tcnBjLWVuZ2luZScpXG5jb25zdCBjcmVhdGVGaWx0ZXJNaWRkbGV3YXJlID0gcmVxdWlyZSgnLi9pbmRleC5qcycpXG5jb25zdCB7IHVuc2FmZVJhbmRvbUJ5dGVzLCBpbmNyZW1lbnRIZXhJbnQgfSA9IHJlcXVpcmUoJy4vaGV4VXRpbHMuanMnKVxuY29uc3QgZ2V0QmxvY2tzRm9yUmFuZ2UgPSByZXF1aXJlKCcuL2dldEJsb2Nrc0ZvclJhbmdlLmpzJylcblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVTdWJzY3JpcHRpb25NaWRkbGV3YXJlXG5cblxuZnVuY3Rpb24gY3JlYXRlU3Vic2NyaXB0aW9uTWlkZGxld2FyZSh7IGJsb2NrVHJhY2tlciwgcHJvdmlkZXIgfSkge1xuICAvLyBzdGF0ZSBhbmQgdXRpbGl0aWVzIGZvciBoYW5kbGluZyBzdWJzY3JpcHRpb25zXG4gIGNvbnN0IHN1YnNjcmlwdGlvbnMgPSB7fVxuICBjb25zdCBmaWx0ZXJNYW5hZ2VyID0gY3JlYXRlRmlsdGVyTWlkZGxld2FyZSh7IGJsb2NrVHJhY2tlciwgcHJvdmlkZXIgfSlcblxuICAvLyBpbnRlcm5hbCBmbGFnXG4gIGxldCBpc0Rlc3Ryb3llZCA9IGZhbHNlXG5cbiAgLy8gY3JlYXRlIHN1YnNjcmlwdGlvbk1hbmFnZXIgYXBpIG9iamVjdFxuICBjb25zdCBldmVudHMgPSBuZXcgU2FmZUV2ZW50RW1pdHRlcigpXG4gIGNvbnN0IG1pZGRsZXdhcmUgPSBjcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUoe1xuICAgIGV0aF9zdWJzY3JpYmU6IGNyZWF0ZUFzeW5jTWlkZGxld2FyZShzdWJzY3JpYmUpLFxuICAgIGV0aF91bnN1YnNjcmliZTogY3JlYXRlQXN5bmNNaWRkbGV3YXJlKHVuc3Vic2NyaWJlKSxcbiAgfSlcbiAgbWlkZGxld2FyZS5kZXN0cm95ID0gZGVzdHJveVxuICByZXR1cm4geyBldmVudHMsIG1pZGRsZXdhcmUgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIHN1YnNjcmliZShyZXEsIHJlcykge1xuXG4gICAgaWYgKGlzRGVzdHJveWVkKSB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnU3Vic2NyaXB0aW9uTWFuYWdlciAtIGF0dGVtcHRpbmcgdG8gdXNlIGFmdGVyIGRlc3Ryb3lpbmcnXG4gICAgKVxuXG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uVHlwZSA9IHJlcS5wYXJhbXNbMF1cbiAgICAvLyBzdWJJZCBpcyAxNiBieXRlIGhleCBzdHJpbmdcbiAgICBjb25zdCBzdWJJZCA9IHVuc2FmZVJhbmRvbUJ5dGVzKDE2KVxuXG4gICAgLy8gY3JlYXRlIHN1YlxuICAgIGxldCBzdWJcbiAgICBzd2l0Y2ggKHN1YnNjcmlwdGlvblR5cGUpIHtcbiAgICAgIGNhc2UgJ25ld0hlYWRzJzpcbiAgICAgICAgc3ViID0gY3JlYXRlU3ViTmV3SGVhZHMoeyBzdWJJZCB9KVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnbG9ncyc6XG4gICAgICAgIGNvbnN0IGZpbHRlclBhcmFtcyA9IHJlcS5wYXJhbXNbMV1cbiAgICAgICAgY29uc3QgZmlsdGVyID0gYXdhaXQgZmlsdGVyTWFuYWdlci5uZXdMb2dGaWx0ZXIoZmlsdGVyUGFyYW1zKVxuICAgICAgICBzdWIgPSBjcmVhdGVTdWJGcm9tRmlsdGVyKHsgc3ViSWQsIGZpbHRlciB9KVxuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBTdWJzY3JpcHRpb25NYW5hZ2VyIC0gdW5zdXBwb3J0ZWQgc3Vic2NyaXB0aW9uIHR5cGUgXCIke3N1YnNjcmlwdGlvblR5cGV9XCJgKVxuXG4gICAgfVxuICAgIHN1YnNjcmlwdGlvbnNbc3ViSWRdID0gc3ViXG5cbiAgICByZXMucmVzdWx0ID0gc3ViSWRcbiAgICByZXR1cm5cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVN1Yk5ld0hlYWRzKHsgc3ViSWQgfSkge1xuICAgICAgY29uc3Qgc3ViID0ge1xuICAgICAgICB0eXBlOiBzdWJzY3JpcHRpb25UeXBlLFxuICAgICAgICBkZXN0cm95OiBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgYmxvY2tUcmFja2VyLnJlbW92ZUxpc3RlbmVyKCdzeW5jJywgc3ViLnVwZGF0ZSlcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlOiBhc3luYyAoeyBvbGRCbG9jaywgbmV3QmxvY2sgfSkgPT4ge1xuICAgICAgICAgIC8vIGZvciBuZXdIZWFkc1xuICAgICAgICAgIGNvbnN0IHRvQmxvY2sgPSBuZXdCbG9ja1xuICAgICAgICAgIGNvbnN0IGZyb21CbG9jayA9IGluY3JlbWVudEhleEludChvbGRCbG9jaylcbiAgICAgICAgICBjb25zdCByYXdCbG9ja3MgPSBhd2FpdCBnZXRCbG9ja3NGb3JSYW5nZSh7IHByb3ZpZGVyLCBmcm9tQmxvY2ssIHRvQmxvY2sgfSlcbiAgICAgICAgICBjb25zdCByZXN1bHRzID0gcmF3QmxvY2tzLm1hcChub3JtYWxpemVCbG9jaylcbiAgICAgICAgICByZXN1bHRzLmZvckVhY2goKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICBfZW1pdFN1YnNjcmlwdGlvblJlc3VsdChzdWJJZCwgdmFsdWUpXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gY2hlY2sgZm9yIHN1YnNjcmlwdGlvbiB1cGRhdGVzIG9uIG5ldyBibG9ja1xuICAgICAgYmxvY2tUcmFja2VyLm9uKCdzeW5jJywgc3ViLnVwZGF0ZSlcbiAgICAgIHJldHVybiBzdWJcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVTdWJGcm9tRmlsdGVyKHsgc3ViSWQsIGZpbHRlciB9KXtcbiAgICAgIGZpbHRlci5vbigndXBkYXRlJywgcmVzdWx0ID0+IF9lbWl0U3Vic2NyaXB0aW9uUmVzdWx0KHN1YklkLCByZXN1bHQpKVxuICAgICAgY29uc3Qgc3ViID0ge1xuICAgICAgICB0eXBlOiBzdWJzY3JpcHRpb25UeXBlLFxuICAgICAgICBkZXN0cm95OiBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGF3YWl0IGZpbHRlck1hbmFnZXIudW5pbnN0YWxsRmlsdGVyKGZpbHRlci5pZEhleClcbiAgICAgICAgfSxcbiAgICAgIH1cbiAgICAgIHJldHVybiBzdWJcbiAgICB9XG4gIH1cblxuICBhc3luYyBmdW5jdGlvbiB1bnN1YnNjcmliZShyZXEsIHJlcykge1xuXG4gICAgaWYgKGlzRGVzdHJveWVkKSB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnU3Vic2NyaXB0aW9uTWFuYWdlciAtIGF0dGVtcHRpbmcgdG8gdXNlIGFmdGVyIGRlc3Ryb3lpbmcnXG4gICAgKVxuXG4gICAgY29uc3QgaWQgPSByZXEucGFyYW1zWzBdXG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gc3Vic2NyaXB0aW9uc1tpZF1cbiAgICAvLyBpZiBtaXNzaW5nLCByZXR1cm4gXCJmYWxzZVwiIHRvIGluZGljYXRlIGl0IHdhcyBub3QgcmVtb3ZlZFxuICAgIGlmICghc3Vic2NyaXB0aW9uKSB7XG4gICAgICByZXMucmVzdWx0ID0gZmFsc2VcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICAvLyBjbGVhbnVwIHN1YnNjcmlwdGlvblxuICAgIGRlbGV0ZSBzdWJzY3JpcHRpb25zW2lkXVxuICAgIGF3YWl0IHN1YnNjcmlwdGlvbi5kZXN0cm95KClcbiAgICByZXMucmVzdWx0ID0gdHJ1ZVxuICB9XG5cbiAgZnVuY3Rpb24gX2VtaXRTdWJzY3JpcHRpb25SZXN1bHQoZmlsdGVySWRIZXgsIHZhbHVlKSB7XG4gICAgZXZlbnRzLmVtaXQoJ25vdGlmaWNhdGlvbicsIHtcbiAgICAgIGpzb25ycGM6ICcyLjAnLFxuICAgICAgbWV0aG9kOiAnZXRoX3N1YnNjcmlwdGlvbicsXG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgc3Vic2NyaXB0aW9uOiBmaWx0ZXJJZEhleCxcbiAgICAgICAgcmVzdWx0OiB2YWx1ZSxcbiAgICAgIH0sXG4gICAgfSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc3Ryb3kgKCkge1xuICAgIGV2ZW50cy5yZW1vdmVBbGxMaXN0ZW5lcnMoKVxuICAgIGZvciAoY29uc3QgaWQgaW4gc3Vic2NyaXB0aW9ucykge1xuICAgICAgc3Vic2NyaXB0aW9uc1tpZF0uZGVzdHJveSgpXG4gICAgICBkZWxldGUgc3Vic2NyaXB0aW9uc1tpZF1cbiAgICB9XG4gICAgaXNEZXN0cm95ZWQgPSB0cnVlXG4gIH1cbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplQmxvY2soYmxvY2spIHtcbiAgcmV0dXJuIHtcbiAgICBoYXNoOiBibG9jay5oYXNoLFxuICAgIHBhcmVudEhhc2g6IGJsb2NrLnBhcmVudEhhc2gsXG4gICAgc2hhM1VuY2xlczogYmxvY2suc2hhM1VuY2xlcyxcbiAgICBtaW5lcjogYmxvY2subWluZXIsXG4gICAgc3RhdGVSb290OiBibG9jay5zdGF0ZVJvb3QsXG4gICAgdHJhbnNhY3Rpb25zUm9vdDogYmxvY2sudHJhbnNhY3Rpb25zUm9vdCxcbiAgICByZWNlaXB0c1Jvb3Q6IGJsb2NrLnJlY2VpcHRzUm9vdCxcbiAgICBsb2dzQmxvb206IGJsb2NrLmxvZ3NCbG9vbSxcbiAgICBkaWZmaWN1bHR5OiBibG9jay5kaWZmaWN1bHR5LFxuICAgIG51bWJlcjogYmxvY2subnVtYmVyLFxuICAgIGdhc0xpbWl0OiBibG9jay5nYXNMaW1pdCxcbiAgICBnYXNVc2VkOiBibG9jay5nYXNVc2VkLFxuICAgIG5vbmNlOiBibG9jay5ub25jZSxcbiAgICBtaXhIYXNoOiBibG9jay5taXhIYXNoLFxuICAgIHRpbWVzdGFtcDogYmxvY2sudGltZXN0YW1wLFxuICAgIGV4dHJhRGF0YTogYmxvY2suZXh0cmFEYXRhLFxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/subscriptionManager.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-filters/tx-filter.js":
/*!*********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-filters/tx-filter.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const BaseFilter = __webpack_require__(/*! ./base-filter */ \"../../node_modules/eth-json-rpc-filters/base-filter.js\")\nconst getBlocksForRange = __webpack_require__(/*! ./getBlocksForRange */ \"../../node_modules/eth-json-rpc-filters/getBlocksForRange.js\")\nconst { incrementHexInt } = __webpack_require__(/*! ./hexUtils */ \"../../node_modules/eth-json-rpc-filters/hexUtils.js\")\n\nclass TxFilter extends BaseFilter {\n\n  constructor ({ provider }) {\n    super()\n    this.type = 'tx'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock }) {\n    const toBlock = oldBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blocks = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockTxHashes = []\n    for (const block of blocks) {\n      blockTxHashes.push(...block.transactions)\n    }\n    // add to results\n    this.addResults(blockTxHashes)\n  }\n\n}\n\nmodule.exports = TxFilter\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1maWx0ZXJzL3R4LWZpbHRlci5qcz9iOWM5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFlO0FBQzFDLDBCQUEwQixtQkFBTyxDQUFDLHlGQUFxQjtBQUN2RCxPQUFPLGtCQUFrQixHQUFHLG1CQUFPLENBQUMsdUVBQVk7O0FBRWhEOztBQUVBLGdCQUFnQixXQUFXO0FBQzNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQSw0Q0FBNEMsOENBQThDO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9ldGgtanNvbi1ycGMtZmlsdGVycy90eC1maWx0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCYXNlRmlsdGVyID0gcmVxdWlyZSgnLi9iYXNlLWZpbHRlcicpXG5jb25zdCBnZXRCbG9ja3NGb3JSYW5nZSA9IHJlcXVpcmUoJy4vZ2V0QmxvY2tzRm9yUmFuZ2UnKVxuY29uc3QgeyBpbmNyZW1lbnRIZXhJbnQgfSA9IHJlcXVpcmUoJy4vaGV4VXRpbHMnKVxuXG5jbGFzcyBUeEZpbHRlciBleHRlbmRzIEJhc2VGaWx0ZXIge1xuXG4gIGNvbnN0cnVjdG9yICh7IHByb3ZpZGVyIH0pIHtcbiAgICBzdXBlcigpXG4gICAgdGhpcy50eXBlID0gJ3R4J1xuICAgIHRoaXMucHJvdmlkZXIgPSBwcm92aWRlclxuICB9XG5cbiAgYXN5bmMgdXBkYXRlICh7IG9sZEJsb2NrIH0pIHtcbiAgICBjb25zdCB0b0Jsb2NrID0gb2xkQmxvY2tcbiAgICBjb25zdCBmcm9tQmxvY2sgPSBpbmNyZW1lbnRIZXhJbnQob2xkQmxvY2spXG4gICAgY29uc3QgYmxvY2tzID0gYXdhaXQgZ2V0QmxvY2tzRm9yUmFuZ2UoeyBwcm92aWRlcjogdGhpcy5wcm92aWRlciwgZnJvbUJsb2NrLCB0b0Jsb2NrIH0pXG4gICAgY29uc3QgYmxvY2tUeEhhc2hlcyA9IFtdXG4gICAgZm9yIChjb25zdCBibG9jayBvZiBibG9ja3MpIHtcbiAgICAgIGJsb2NrVHhIYXNoZXMucHVzaCguLi5ibG9jay50cmFuc2FjdGlvbnMpXG4gICAgfVxuICAgIC8vIGFkZCB0byByZXN1bHRzXG4gICAgdGhpcy5hZGRSZXN1bHRzKGJsb2NrVHhIYXNoZXMpXG4gIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFR4RmlsdGVyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-filters/tx-filter.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-middleware/block-cache.js":
/*!**************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-middleware/block-cache.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const cacheUtils = __webpack_require__(/*! ./cache-utils.js */ \"../../node_modules/eth-json-rpc-middleware/cache-utils.js\")\nconst createAsyncMiddleware = __webpack_require__(/*! json-rpc-engine/src/createAsyncMiddleware */ \"../../node_modules/json-rpc-engine/src/createAsyncMiddleware.js\")\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [undefined, null, '\\u003cnil\\u003e']\n\nmodule.exports = createBlockCacheMiddleware\n\n\nfunction createBlockCacheMiddleware(opts = {}) {\n  // validate options\n  const { blockTracker } = opts\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified')\n\n  // create caching strategies\n  const blockCache = new BlockCacheStrategy()\n  const strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache,\n  }\n\n  return createAsyncMiddleware(async (req, res, next) => {\n    // allow cach to be skipped if so specified\n    if (req.skipCache) {\n      return next()\n    }\n    // check type and matching strategy\n    const type = cacheUtils.cacheTypeForPayload(req)\n    const strategy = strategies[type]\n    // If there's no strategy in place, pass it down the chain.\n    if (!strategy) {\n      return next()\n    }\n    // If the strategy can't cache this request, ignore it.\n    if (!strategy.canCacheRequest(req)) {\n      return next()\n    }\n\n    // get block reference (number or keyword)\n    let blockTag = cacheUtils.blockTagForPayload(req)\n    if (!blockTag) blockTag = 'latest'\n\n    // get exact block number\n    let requestedBlockNumber\n    if (blockTag === 'earliest') {\n      // this just exists for symmetry with \"latest\"\n      requestedBlockNumber = '0x00'\n    } else if (blockTag === 'latest') {\n      // fetch latest block number\n      const latestBlockNumber = await blockTracker.getLatestBlock()\n      // clear all cache before latest block\n      blockCache.clearBefore(latestBlockNumber)\n      requestedBlockNumber = latestBlockNumber\n    } else {\n      // We have a hex number\n      requestedBlockNumber = blockTag\n    }\n\n    // end on a hit, continue on a miss\n    const cacheResult = await strategy.get(req, requestedBlockNumber)\n    if (cacheResult === undefined) {\n      // cache miss\n      // wait for other middleware to handle request\n      await next()\n      // add result to cache\n      await strategy.set(req, requestedBlockNumber, res.result)\n    } else {\n      // fill in result from cache\n      res.result = cacheResult\n    }\n  })\n}\n\n\n//\n// Cache Strategies\n//\n\nclass BlockCacheStrategy {\n  \n  constructor () {\n    this.cache = {}\n  }\n\n  getBlockCacheForPayload (payload, blockNumberHex) {\n    const blockNumber = Number.parseInt(blockNumberHex, 16)\n    let blockCache = this.cache[blockNumber]\n    // create new cache if necesary\n    if (!blockCache) {\n      const newCache = {}\n      this.cache[blockNumber] = newCache\n      blockCache = newCache\n    }\n    return blockCache\n  }\n\n  async get (payload, requestedBlockNumber) {\n    // lookup block cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    if (!blockCache) return\n    // lookup payload in block cache\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    const cached = blockCache[identifier]\n    // may be undefined\n    return cached\n  }\n\n  async set (payload, requestedBlockNumber, result) {\n    // check if we can cached this result\n    const canCache = this.canCacheResult(payload, result)\n    if (!canCache) return\n    // set the value in the cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    blockCache[identifier] = result\n  }\n\n  canCacheRequest (payload) {\n    // check request method\n    if (!cacheUtils.canCache(payload)) {\n      return false\n    }\n    // check blockTag\n    const blockTag = cacheUtils.blockTagForPayload(payload)\n    if (blockTag === 'pending') {\n      return false\n    }\n    // can be cached\n    return true\n  }\n\n  canCacheResult (payload, result) {\n    // never cache empty values (e.g. undefined)\n    if (emptyValues.includes(result)) return\n    // check if transactions have block reference before caching\n    if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n      if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n        return false\n      }\n    }\n    // otherwise true\n    return true\n  }\n\n  // removes all block caches with block number lower than `oldBlockHex`\n  clearBefore (oldBlockHex){\n    const self = this\n    const oldBlockNumber = Number.parseInt(oldBlockHex, 16)\n    // clear old caches\n    Object.keys(self.cache)\n      .map(Number)\n      .filter(num => num < oldBlockNumber)\n      .forEach(num => delete self.cache[num])\n  }\n\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL2Jsb2NrLWNhY2hlLmpzPzkzMzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsbUZBQWtCO0FBQzdDLDhCQUE4QixtQkFBTyxDQUFDLGtIQUEyQztBQUNqRjtBQUNBOztBQUVBOzs7QUFHQSw2Q0FBNkM7QUFDN0M7QUFDQSxTQUFTLGVBQWU7QUFDeEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9ldGgtanNvbi1ycGMtbWlkZGxld2FyZS9ibG9jay1jYWNoZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNhY2hlVXRpbHMgPSByZXF1aXJlKCcuL2NhY2hlLXV0aWxzLmpzJylcbmNvbnN0IGNyZWF0ZUFzeW5jTWlkZGxld2FyZSA9IHJlcXVpcmUoJ2pzb24tcnBjLWVuZ2luZS9zcmMvY3JlYXRlQXN5bmNNaWRkbGV3YXJlJylcbi8vIGA8bmlsPmAgY29tZXMgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZ28tZXRoZXJldW0vaXNzdWVzLzE2OTI1XG5jb25zdCBlbXB0eVZhbHVlcyA9IFt1bmRlZmluZWQsIG51bGwsICdcXHUwMDNjbmlsXFx1MDAzZSddXG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQmxvY2tDYWNoZU1pZGRsZXdhcmVcblxuXG5mdW5jdGlvbiBjcmVhdGVCbG9ja0NhY2hlTWlkZGxld2FyZShvcHRzID0ge30pIHtcbiAgLy8gdmFsaWRhdGUgb3B0aW9uc1xuICBjb25zdCB7IGJsb2NrVHJhY2tlciB9ID0gb3B0c1xuICBpZiAoIWJsb2NrVHJhY2tlcikgdGhyb3cgbmV3IEVycm9yKCdjcmVhdGVCbG9ja0NhY2hlTWlkZGxld2FyZSAtIE5vIEJsb2NrVHJhY2tlciBzcGVjaWZpZWQnKVxuXG4gIC8vIGNyZWF0ZSBjYWNoaW5nIHN0cmF0ZWdpZXNcbiAgY29uc3QgYmxvY2tDYWNoZSA9IG5ldyBCbG9ja0NhY2hlU3RyYXRlZ3koKVxuICBjb25zdCBzdHJhdGVnaWVzID0ge1xuICAgIHBlcm1hOiBibG9ja0NhY2hlLFxuICAgIGJsb2NrOiBibG9ja0NhY2hlLFxuICAgIGZvcms6IGJsb2NrQ2FjaGUsXG4gIH1cblxuICByZXR1cm4gY3JlYXRlQXN5bmNNaWRkbGV3YXJlKGFzeW5jIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIC8vIGFsbG93IGNhY2ggdG8gYmUgc2tpcHBlZCBpZiBzbyBzcGVjaWZpZWRcbiAgICBpZiAocmVxLnNraXBDYWNoZSkge1xuICAgICAgcmV0dXJuIG5leHQoKVxuICAgIH1cbiAgICAvLyBjaGVjayB0eXBlIGFuZCBtYXRjaGluZyBzdHJhdGVneVxuICAgIGNvbnN0IHR5cGUgPSBjYWNoZVV0aWxzLmNhY2hlVHlwZUZvclBheWxvYWQocmVxKVxuICAgIGNvbnN0IHN0cmF0ZWd5ID0gc3RyYXRlZ2llc1t0eXBlXVxuICAgIC8vIElmIHRoZXJlJ3Mgbm8gc3RyYXRlZ3kgaW4gcGxhY2UsIHBhc3MgaXQgZG93biB0aGUgY2hhaW4uXG4gICAgaWYgKCFzdHJhdGVneSkge1xuICAgICAgcmV0dXJuIG5leHQoKVxuICAgIH1cbiAgICAvLyBJZiB0aGUgc3RyYXRlZ3kgY2FuJ3QgY2FjaGUgdGhpcyByZXF1ZXN0LCBpZ25vcmUgaXQuXG4gICAgaWYgKCFzdHJhdGVneS5jYW5DYWNoZVJlcXVlc3QocmVxKSkge1xuICAgICAgcmV0dXJuIG5leHQoKVxuICAgIH1cblxuICAgIC8vIGdldCBibG9jayByZWZlcmVuY2UgKG51bWJlciBvciBrZXl3b3JkKVxuICAgIGxldCBibG9ja1RhZyA9IGNhY2hlVXRpbHMuYmxvY2tUYWdGb3JQYXlsb2FkKHJlcSlcbiAgICBpZiAoIWJsb2NrVGFnKSBibG9ja1RhZyA9ICdsYXRlc3QnXG5cbiAgICAvLyBnZXQgZXhhY3QgYmxvY2sgbnVtYmVyXG4gICAgbGV0IHJlcXVlc3RlZEJsb2NrTnVtYmVyXG4gICAgaWYgKGJsb2NrVGFnID09PSAnZWFybGllc3QnKSB7XG4gICAgICAvLyB0aGlzIGp1c3QgZXhpc3RzIGZvciBzeW1tZXRyeSB3aXRoIFwibGF0ZXN0XCJcbiAgICAgIHJlcXVlc3RlZEJsb2NrTnVtYmVyID0gJzB4MDAnXG4gICAgfSBlbHNlIGlmIChibG9ja1RhZyA9PT0gJ2xhdGVzdCcpIHtcbiAgICAgIC8vIGZldGNoIGxhdGVzdCBibG9jayBudW1iZXJcbiAgICAgIGNvbnN0IGxhdGVzdEJsb2NrTnVtYmVyID0gYXdhaXQgYmxvY2tUcmFja2VyLmdldExhdGVzdEJsb2NrKClcbiAgICAgIC8vIGNsZWFyIGFsbCBjYWNoZSBiZWZvcmUgbGF0ZXN0IGJsb2NrXG4gICAgICBibG9ja0NhY2hlLmNsZWFyQmVmb3JlKGxhdGVzdEJsb2NrTnVtYmVyKVxuICAgICAgcmVxdWVzdGVkQmxvY2tOdW1iZXIgPSBsYXRlc3RCbG9ja051bWJlclxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBXZSBoYXZlIGEgaGV4IG51bWJlclxuICAgICAgcmVxdWVzdGVkQmxvY2tOdW1iZXIgPSBibG9ja1RhZ1xuICAgIH1cblxuICAgIC8vIGVuZCBvbiBhIGhpdCwgY29udGludWUgb24gYSBtaXNzXG4gICAgY29uc3QgY2FjaGVSZXN1bHQgPSBhd2FpdCBzdHJhdGVneS5nZXQocmVxLCByZXF1ZXN0ZWRCbG9ja051bWJlcilcbiAgICBpZiAoY2FjaGVSZXN1bHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gY2FjaGUgbWlzc1xuICAgICAgLy8gd2FpdCBmb3Igb3RoZXIgbWlkZGxld2FyZSB0byBoYW5kbGUgcmVxdWVzdFxuICAgICAgYXdhaXQgbmV4dCgpXG4gICAgICAvLyBhZGQgcmVzdWx0IHRvIGNhY2hlXG4gICAgICBhd2FpdCBzdHJhdGVneS5zZXQocmVxLCByZXF1ZXN0ZWRCbG9ja051bWJlciwgcmVzLnJlc3VsdClcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZmlsbCBpbiByZXN1bHQgZnJvbSBjYWNoZVxuICAgICAgcmVzLnJlc3VsdCA9IGNhY2hlUmVzdWx0XG4gICAgfVxuICB9KVxufVxuXG5cbi8vXG4vLyBDYWNoZSBTdHJhdGVnaWVzXG4vL1xuXG5jbGFzcyBCbG9ja0NhY2hlU3RyYXRlZ3kge1xuICBcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMuY2FjaGUgPSB7fVxuICB9XG5cbiAgZ2V0QmxvY2tDYWNoZUZvclBheWxvYWQgKHBheWxvYWQsIGJsb2NrTnVtYmVySGV4KSB7XG4gICAgY29uc3QgYmxvY2tOdW1iZXIgPSBOdW1iZXIucGFyc2VJbnQoYmxvY2tOdW1iZXJIZXgsIDE2KVxuICAgIGxldCBibG9ja0NhY2hlID0gdGhpcy5jYWNoZVtibG9ja051bWJlcl1cbiAgICAvLyBjcmVhdGUgbmV3IGNhY2hlIGlmIG5lY2VzYXJ5XG4gICAgaWYgKCFibG9ja0NhY2hlKSB7XG4gICAgICBjb25zdCBuZXdDYWNoZSA9IHt9XG4gICAgICB0aGlzLmNhY2hlW2Jsb2NrTnVtYmVyXSA9IG5ld0NhY2hlXG4gICAgICBibG9ja0NhY2hlID0gbmV3Q2FjaGVcbiAgICB9XG4gICAgcmV0dXJuIGJsb2NrQ2FjaGVcbiAgfVxuXG4gIGFzeW5jIGdldCAocGF5bG9hZCwgcmVxdWVzdGVkQmxvY2tOdW1iZXIpIHtcbiAgICAvLyBsb29rdXAgYmxvY2sgY2FjaGVcbiAgICBjb25zdCBibG9ja0NhY2hlID0gdGhpcy5nZXRCbG9ja0NhY2hlRm9yUGF5bG9hZChwYXlsb2FkLCByZXF1ZXN0ZWRCbG9ja051bWJlcilcbiAgICBpZiAoIWJsb2NrQ2FjaGUpIHJldHVyblxuICAgIC8vIGxvb2t1cCBwYXlsb2FkIGluIGJsb2NrIGNhY2hlXG4gICAgY29uc3QgaWRlbnRpZmllciA9IGNhY2hlVXRpbHMuY2FjaGVJZGVudGlmaWVyRm9yUGF5bG9hZChwYXlsb2FkLCB0cnVlKVxuICAgIGNvbnN0IGNhY2hlZCA9IGJsb2NrQ2FjaGVbaWRlbnRpZmllcl1cbiAgICAvLyBtYXkgYmUgdW5kZWZpbmVkXG4gICAgcmV0dXJuIGNhY2hlZFxuICB9XG5cbiAgYXN5bmMgc2V0IChwYXlsb2FkLCByZXF1ZXN0ZWRCbG9ja051bWJlciwgcmVzdWx0KSB7XG4gICAgLy8gY2hlY2sgaWYgd2UgY2FuIGNhY2hlZCB0aGlzIHJlc3VsdFxuICAgIGNvbnN0IGNhbkNhY2hlID0gdGhpcy5jYW5DYWNoZVJlc3VsdChwYXlsb2FkLCByZXN1bHQpXG4gICAgaWYgKCFjYW5DYWNoZSkgcmV0dXJuXG4gICAgLy8gc2V0IHRoZSB2YWx1ZSBpbiB0aGUgY2FjaGVcbiAgICBjb25zdCBibG9ja0NhY2hlID0gdGhpcy5nZXRCbG9ja0NhY2hlRm9yUGF5bG9hZChwYXlsb2FkLCByZXF1ZXN0ZWRCbG9ja051bWJlcilcbiAgICBjb25zdCBpZGVudGlmaWVyID0gY2FjaGVVdGlscy5jYWNoZUlkZW50aWZpZXJGb3JQYXlsb2FkKHBheWxvYWQsIHRydWUpXG4gICAgYmxvY2tDYWNoZVtpZGVudGlmaWVyXSA9IHJlc3VsdFxuICB9XG5cbiAgY2FuQ2FjaGVSZXF1ZXN0IChwYXlsb2FkKSB7XG4gICAgLy8gY2hlY2sgcmVxdWVzdCBtZXRob2RcbiAgICBpZiAoIWNhY2hlVXRpbHMuY2FuQ2FjaGUocGF5bG9hZCkpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICAvLyBjaGVjayBibG9ja1RhZ1xuICAgIGNvbnN0IGJsb2NrVGFnID0gY2FjaGVVdGlscy5ibG9ja1RhZ0ZvclBheWxvYWQocGF5bG9hZClcbiAgICBpZiAoYmxvY2tUYWcgPT09ICdwZW5kaW5nJykge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIC8vIGNhbiBiZSBjYWNoZWRcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgY2FuQ2FjaGVSZXN1bHQgKHBheWxvYWQsIHJlc3VsdCkge1xuICAgIC8vIG5ldmVyIGNhY2hlIGVtcHR5IHZhbHVlcyAoZS5nLiB1bmRlZmluZWQpXG4gICAgaWYgKGVtcHR5VmFsdWVzLmluY2x1ZGVzKHJlc3VsdCkpIHJldHVyblxuICAgIC8vIGNoZWNrIGlmIHRyYW5zYWN0aW9ucyBoYXZlIGJsb2NrIHJlZmVyZW5jZSBiZWZvcmUgY2FjaGluZ1xuICAgIGlmIChbJ2V0aF9nZXRUcmFuc2FjdGlvbkJ5SGFzaCcsICdldGhfZ2V0VHJhbnNhY3Rpb25SZWNlaXB0J10uaW5jbHVkZXMocGF5bG9hZC5tZXRob2QpKSB7XG4gICAgICBpZiAoIXJlc3VsdCB8fCAhcmVzdWx0LmJsb2NrSGFzaCB8fCByZXN1bHQuYmxvY2tIYXNoID09PSAnMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJykge1xuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gb3RoZXJ3aXNlIHRydWVcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgLy8gcmVtb3ZlcyBhbGwgYmxvY2sgY2FjaGVzIHdpdGggYmxvY2sgbnVtYmVyIGxvd2VyIHRoYW4gYG9sZEJsb2NrSGV4YFxuICBjbGVhckJlZm9yZSAob2xkQmxvY2tIZXgpe1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzXG4gICAgY29uc3Qgb2xkQmxvY2tOdW1iZXIgPSBOdW1iZXIucGFyc2VJbnQob2xkQmxvY2tIZXgsIDE2KVxuICAgIC8vIGNsZWFyIG9sZCBjYWNoZXNcbiAgICBPYmplY3Qua2V5cyhzZWxmLmNhY2hlKVxuICAgICAgLm1hcChOdW1iZXIpXG4gICAgICAuZmlsdGVyKG51bSA9PiBudW0gPCBvbGRCbG9ja051bWJlcilcbiAgICAgIC5mb3JFYWNoKG51bSA9PiBkZWxldGUgc2VsZi5jYWNoZVtudW1dKVxuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-middleware/block-cache.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-middleware/cache-utils.js":
/*!**************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-middleware/cache-utils.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const stringify = __webpack_require__(/*! json-stable-stringify */ \"../../node_modules/json-stable-stringify/index.js\")\n\nmodule.exports = {\n  cacheIdentifierForPayload: cacheIdentifierForPayload,\n  canCache: canCache,\n  blockTagForPayload: blockTagForPayload,\n  paramsWithoutBlockTag: paramsWithoutBlockTag,\n  blockTagParamIndex: blockTagParamIndex,\n  cacheTypeForPayload: cacheTypeForPayload\n}\n\nfunction cacheIdentifierForPayload (payload, skipBlockRef) {\n  const simpleParams = skipBlockRef ? paramsWithoutBlockTag(payload) : payload.params\n  if (canCache(payload)) {\n    return payload.method + ':' + stringify(simpleParams)\n  } else {\n    return null\n  }\n}\n\nfunction canCache (payload) {\n  return cacheTypeForPayload(payload) !== 'never'\n}\n\nfunction blockTagForPayload (payload) {\n  let index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return null\n  }\n\n  return payload.params[index]\n}\n\nfunction paramsWithoutBlockTag (payload) {\n  const index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return payload.params\n  }\n\n  // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1)\n  }\n\n  return payload.params.slice(0, index)\n}\n\nfunction blockTagParamIndex (payload) {\n  switch (payload.method) {\n    // blockTag is at index 2\n    case 'eth_getStorageAt':\n      return 2\n    // blockTag is at index 1\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n      return 1\n    // blockTag is at index 0\n    case 'eth_getBlockByNumber':\n      return 0\n    // there is no blockTag\n    default:\n      return undefined\n  }\n}\n\nfunction cacheTypeForPayload (payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n    case 'test_permaCache':\n      return 'perma'\n\n    // cache until fork\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n    case 'test_forkCache':\n      return 'fork'\n\n    // cache for block\n    case 'eth_gasPrice':\n    case 'eth_blockNumber':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'test_blockCache':\n      return 'block'\n\n    // never cache\n    case 'net_version':\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n    case 'test_neverCache':\n      return 'never'\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL2NhY2hlLXV0aWxzLmpzPzBkZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsZ0ZBQXVCOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL2NhY2hlLXV0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc3RyaW5naWZ5ID0gcmVxdWlyZSgnanNvbi1zdGFibGUtc3RyaW5naWZ5JylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNhY2hlSWRlbnRpZmllckZvclBheWxvYWQ6IGNhY2hlSWRlbnRpZmllckZvclBheWxvYWQsXG4gIGNhbkNhY2hlOiBjYW5DYWNoZSxcbiAgYmxvY2tUYWdGb3JQYXlsb2FkOiBibG9ja1RhZ0ZvclBheWxvYWQsXG4gIHBhcmFtc1dpdGhvdXRCbG9ja1RhZzogcGFyYW1zV2l0aG91dEJsb2NrVGFnLFxuICBibG9ja1RhZ1BhcmFtSW5kZXg6IGJsb2NrVGFnUGFyYW1JbmRleCxcbiAgY2FjaGVUeXBlRm9yUGF5bG9hZDogY2FjaGVUeXBlRm9yUGF5bG9hZFxufVxuXG5mdW5jdGlvbiBjYWNoZUlkZW50aWZpZXJGb3JQYXlsb2FkIChwYXlsb2FkLCBza2lwQmxvY2tSZWYpIHtcbiAgY29uc3Qgc2ltcGxlUGFyYW1zID0gc2tpcEJsb2NrUmVmID8gcGFyYW1zV2l0aG91dEJsb2NrVGFnKHBheWxvYWQpIDogcGF5bG9hZC5wYXJhbXNcbiAgaWYgKGNhbkNhY2hlKHBheWxvYWQpKSB7XG4gICAgcmV0dXJuIHBheWxvYWQubWV0aG9kICsgJzonICsgc3RyaW5naWZ5KHNpbXBsZVBhcmFtcylcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5cbmZ1bmN0aW9uIGNhbkNhY2hlIChwYXlsb2FkKSB7XG4gIHJldHVybiBjYWNoZVR5cGVGb3JQYXlsb2FkKHBheWxvYWQpICE9PSAnbmV2ZXInXG59XG5cbmZ1bmN0aW9uIGJsb2NrVGFnRm9yUGF5bG9hZCAocGF5bG9hZCkge1xuICBsZXQgaW5kZXggPSBibG9ja1RhZ1BhcmFtSW5kZXgocGF5bG9hZClcblxuICAvLyBCbG9jayB0YWcgcGFyYW0gbm90IHBhc3NlZC5cbiAgaWYgKGluZGV4ID49IHBheWxvYWQucGFyYW1zLmxlbmd0aCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICByZXR1cm4gcGF5bG9hZC5wYXJhbXNbaW5kZXhdXG59XG5cbmZ1bmN0aW9uIHBhcmFtc1dpdGhvdXRCbG9ja1RhZyAocGF5bG9hZCkge1xuICBjb25zdCBpbmRleCA9IGJsb2NrVGFnUGFyYW1JbmRleChwYXlsb2FkKVxuXG4gIC8vIEJsb2NrIHRhZyBwYXJhbSBub3QgcGFzc2VkLlxuICBpZiAoaW5kZXggPj0gcGF5bG9hZC5wYXJhbXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHBheWxvYWQucGFyYW1zXG4gIH1cblxuICAvLyBldGhfZ2V0QmxvY2tCeU51bWJlciBoYXMgdGhlIGJsb2NrIHRhZyBmaXJzdCwgdGhlbiB0aGUgb3B0aW9uYWwgaW5jbHVkZVR4PyBwYXJhbVxuICBpZiAocGF5bG9hZC5tZXRob2QgPT09ICdldGhfZ2V0QmxvY2tCeU51bWJlcicpIHtcbiAgICByZXR1cm4gcGF5bG9hZC5wYXJhbXMuc2xpY2UoMSlcbiAgfVxuXG4gIHJldHVybiBwYXlsb2FkLnBhcmFtcy5zbGljZSgwLCBpbmRleClcbn1cblxuZnVuY3Rpb24gYmxvY2tUYWdQYXJhbUluZGV4IChwYXlsb2FkKSB7XG4gIHN3aXRjaCAocGF5bG9hZC5tZXRob2QpIHtcbiAgICAvLyBibG9ja1RhZyBpcyBhdCBpbmRleCAyXG4gICAgY2FzZSAnZXRoX2dldFN0b3JhZ2VBdCc6XG4gICAgICByZXR1cm4gMlxuICAgIC8vIGJsb2NrVGFnIGlzIGF0IGluZGV4IDFcbiAgICBjYXNlICdldGhfZ2V0QmFsYW5jZSc6XG4gICAgY2FzZSAnZXRoX2dldENvZGUnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkNvdW50JzpcbiAgICBjYXNlICdldGhfY2FsbCc6XG4gICAgICByZXR1cm4gMVxuICAgIC8vIGJsb2NrVGFnIGlzIGF0IGluZGV4IDBcbiAgICBjYXNlICdldGhfZ2V0QmxvY2tCeU51bWJlcic6XG4gICAgICByZXR1cm4gMFxuICAgIC8vIHRoZXJlIGlzIG5vIGJsb2NrVGFnXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5mdW5jdGlvbiBjYWNoZVR5cGVGb3JQYXlsb2FkIChwYXlsb2FkKSB7XG4gIHN3aXRjaCAocGF5bG9hZC5tZXRob2QpIHtcbiAgICAvLyBjYWNoZSBwZXJtYW5lbnRseVxuICAgIGNhc2UgJ3dlYjNfY2xpZW50VmVyc2lvbic6XG4gICAgY2FzZSAnd2ViM19zaGEzJzpcbiAgICBjYXNlICdldGhfcHJvdG9jb2xWZXJzaW9uJzpcbiAgICBjYXNlICdldGhfZ2V0QmxvY2tUcmFuc2FjdGlvbkNvdW50QnlIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0VW5jbGVDb3VudEJ5QmxvY2tIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0Q29kZSc6XG4gICAgY2FzZSAnZXRoX2dldEJsb2NrQnlIYXNoJzpcbiAgICBjYXNlICdldGhfZ2V0VHJhbnNhY3Rpb25CeUhhc2gnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkJ5QmxvY2tIYXNoQW5kSW5kZXgnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvblJlY2VpcHQnOlxuICAgIGNhc2UgJ2V0aF9nZXRVbmNsZUJ5QmxvY2tIYXNoQW5kSW5kZXgnOlxuICAgIGNhc2UgJ2V0aF9nZXRDb21waWxlcnMnOlxuICAgIGNhc2UgJ2V0aF9jb21waWxlTExMJzpcbiAgICBjYXNlICdldGhfY29tcGlsZVNvbGlkaXR5JzpcbiAgICBjYXNlICdldGhfY29tcGlsZVNlcnBlbnQnOlxuICAgIGNhc2UgJ3NoaF92ZXJzaW9uJzpcbiAgICBjYXNlICd0ZXN0X3Blcm1hQ2FjaGUnOlxuICAgICAgcmV0dXJuICdwZXJtYSdcblxuICAgIC8vIGNhY2hlIHVudGlsIGZvcmtcbiAgICBjYXNlICdldGhfZ2V0QmxvY2tCeU51bWJlcic6XG4gICAgY2FzZSAnZXRoX2dldEJsb2NrVHJhbnNhY3Rpb25Db3VudEJ5TnVtYmVyJzpcbiAgICBjYXNlICdldGhfZ2V0VW5jbGVDb3VudEJ5QmxvY2tOdW1iZXInOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkJ5QmxvY2tOdW1iZXJBbmRJbmRleCc6XG4gICAgY2FzZSAnZXRoX2dldFVuY2xlQnlCbG9ja051bWJlckFuZEluZGV4JzpcbiAgICBjYXNlICd0ZXN0X2ZvcmtDYWNoZSc6XG4gICAgICByZXR1cm4gJ2ZvcmsnXG5cbiAgICAvLyBjYWNoZSBmb3IgYmxvY2tcbiAgICBjYXNlICdldGhfZ2FzUHJpY2UnOlxuICAgIGNhc2UgJ2V0aF9ibG9ja051bWJlcic6XG4gICAgY2FzZSAnZXRoX2dldEJhbGFuY2UnOlxuICAgIGNhc2UgJ2V0aF9nZXRTdG9yYWdlQXQnOlxuICAgIGNhc2UgJ2V0aF9nZXRUcmFuc2FjdGlvbkNvdW50JzpcbiAgICBjYXNlICdldGhfY2FsbCc6XG4gICAgY2FzZSAnZXRoX2VzdGltYXRlR2FzJzpcbiAgICBjYXNlICdldGhfZ2V0RmlsdGVyTG9ncyc6XG4gICAgY2FzZSAnZXRoX2dldExvZ3MnOlxuICAgIGNhc2UgJ3Rlc3RfYmxvY2tDYWNoZSc6XG4gICAgICByZXR1cm4gJ2Jsb2NrJ1xuXG4gICAgLy8gbmV2ZXIgY2FjaGVcbiAgICBjYXNlICduZXRfdmVyc2lvbic6XG4gICAgY2FzZSAnbmV0X3BlZXJDb3VudCc6XG4gICAgY2FzZSAnbmV0X2xpc3RlbmluZyc6XG4gICAgY2FzZSAnZXRoX3N5bmNpbmcnOlxuICAgIGNhc2UgJ2V0aF9zaWduJzpcbiAgICBjYXNlICdldGhfY29pbmJhc2UnOlxuICAgIGNhc2UgJ2V0aF9taW5pbmcnOlxuICAgIGNhc2UgJ2V0aF9oYXNocmF0ZSc6XG4gICAgY2FzZSAnZXRoX2FjY291bnRzJzpcbiAgICBjYXNlICdldGhfc2VuZFRyYW5zYWN0aW9uJzpcbiAgICBjYXNlICdldGhfc2VuZFJhd1RyYW5zYWN0aW9uJzpcbiAgICBjYXNlICdldGhfbmV3RmlsdGVyJzpcbiAgICBjYXNlICdldGhfbmV3QmxvY2tGaWx0ZXInOlxuICAgIGNhc2UgJ2V0aF9uZXdQZW5kaW5nVHJhbnNhY3Rpb25GaWx0ZXInOlxuICAgIGNhc2UgJ2V0aF91bmluc3RhbGxGaWx0ZXInOlxuICAgIGNhc2UgJ2V0aF9nZXRGaWx0ZXJDaGFuZ2VzJzpcbiAgICBjYXNlICdldGhfZ2V0V29yayc6XG4gICAgY2FzZSAnZXRoX3N1Ym1pdFdvcmsnOlxuICAgIGNhc2UgJ2V0aF9zdWJtaXRIYXNocmF0ZSc6XG4gICAgY2FzZSAnZGJfcHV0U3RyaW5nJzpcbiAgICBjYXNlICdkYl9nZXRTdHJpbmcnOlxuICAgIGNhc2UgJ2RiX3B1dEhleCc6XG4gICAgY2FzZSAnZGJfZ2V0SGV4JzpcbiAgICBjYXNlICdzaGhfcG9zdCc6XG4gICAgY2FzZSAnc2hoX25ld0lkZW50aXR5JzpcbiAgICBjYXNlICdzaGhfaGFzSWRlbnRpdHknOlxuICAgIGNhc2UgJ3NoaF9uZXdHcm91cCc6XG4gICAgY2FzZSAnc2hoX2FkZFRvR3JvdXAnOlxuICAgIGNhc2UgJ3NoaF9uZXdGaWx0ZXInOlxuICAgIGNhc2UgJ3NoaF91bmluc3RhbGxGaWx0ZXInOlxuICAgIGNhc2UgJ3NoaF9nZXRGaWx0ZXJDaGFuZ2VzJzpcbiAgICBjYXNlICdzaGhfZ2V0TWVzc2FnZXMnOlxuICAgIGNhc2UgJ3Rlc3RfbmV2ZXJDYWNoZSc6XG4gICAgICByZXR1cm4gJ25ldmVyJ1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-middleware/cache-utils.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-middleware/inflight-cache.js":
/*!*****************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-middleware/inflight-cache.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const clone = __webpack_require__(/*! clone */ \"../../node_modules/clone/clone.js\")\nconst createAsyncMiddleware = __webpack_require__(/*! json-rpc-engine/src/createAsyncMiddleware */ \"../../node_modules/json-rpc-engine/src/createAsyncMiddleware.js\")\nconst cacheIdentifierForPayload = __webpack_require__(/*! ./cache-utils */ \"../../node_modules/eth-json-rpc-middleware/cache-utils.js\").cacheIdentifierForPayload\n\nmodule.exports = createInflightCache\n\n\nfunction createInflightCache () {\n  const inflightRequests = {}\n\n  return createAsyncMiddleware(async (req, res, next) => {\n    // allow cach to be skipped if so specified\n    if (req.skipCache) return next()\n    // get cacheId, if cacheable\n    const cacheId = cacheIdentifierForPayload(req)\n    // if not cacheable, skip\n    if (!cacheId) return next()\n    // check for matching requests\n    let activeRequestHandlers = inflightRequests[cacheId]\n    // if found, wait for the active request to be handled\n    if (activeRequestHandlers) {\n      // setup the response listener and wait for it to be called\n      // it will handle copying the result and request fields\n      await createActiveRequestHandler(res, activeRequestHandlers)\n      return\n    }\n    // setup response handler array for subsequent requests\n    activeRequestHandlers = []\n    inflightRequests[cacheId] = activeRequestHandlers\n    // allow request to be handled normally\n    await next()\n    // clear inflight requests\n    delete inflightRequests[cacheId]\n    // schedule activeRequestHandlers to be handled\n    handleActiveRequest(res, activeRequestHandlers)\n    // complete\n    return\n  })\n\n  function createActiveRequestHandler(res, activeRequestHandlers) {\n    const { resolve, promise } = deferredPromise()\n    activeRequestHandlers.push((handledRes) => {\n      // append a copy of the result and error to the response\n      res.result = clone(handledRes.result)\n      res.error = clone(handledRes.error)\n      resolve()\n    })\n    return promise\n  }\n\n  function handleActiveRequest(res, activeRequestHandlers) {\n    // use setTimeout so we can resolve our original request first\n    setTimeout(() => {\n      activeRequestHandlers.forEach((handler) => {\n        try {\n          handler(res)\n        } catch (err) {\n          // catch error so all requests are handled correctly\n          console.error(err)\n        }\n      })\n    })\n  }\n}\n\nfunction deferredPromise() {\n  let resolve\n  const promise = new Promise(_resolve => { resolve = _resolve })\n  return { resolve, promise }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL2luZmxpZ2h0LWNhY2hlLmpzPzAxNWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLGdEQUFPO0FBQzdCLDhCQUE4QixtQkFBTyxDQUFDLGtIQUEyQztBQUNqRixrQ0FBa0MsbUJBQU8sQ0FBQyxnRkFBZTs7QUFFekQ7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSwyQ0FBMkMscUJBQXFCO0FBQ2hFLFVBQVU7QUFDViIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvZXRoLWpzb24tcnBjLW1pZGRsZXdhcmUvaW5mbGlnaHQtY2FjaGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjbG9uZSA9IHJlcXVpcmUoJ2Nsb25lJylcbmNvbnN0IGNyZWF0ZUFzeW5jTWlkZGxld2FyZSA9IHJlcXVpcmUoJ2pzb24tcnBjLWVuZ2luZS9zcmMvY3JlYXRlQXN5bmNNaWRkbGV3YXJlJylcbmNvbnN0IGNhY2hlSWRlbnRpZmllckZvclBheWxvYWQgPSByZXF1aXJlKCcuL2NhY2hlLXV0aWxzJykuY2FjaGVJZGVudGlmaWVyRm9yUGF5bG9hZFxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUluZmxpZ2h0Q2FjaGVcblxuXG5mdW5jdGlvbiBjcmVhdGVJbmZsaWdodENhY2hlICgpIHtcbiAgY29uc3QgaW5mbGlnaHRSZXF1ZXN0cyA9IHt9XG5cbiAgcmV0dXJuIGNyZWF0ZUFzeW5jTWlkZGxld2FyZShhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAvLyBhbGxvdyBjYWNoIHRvIGJlIHNraXBwZWQgaWYgc28gc3BlY2lmaWVkXG4gICAgaWYgKHJlcS5za2lwQ2FjaGUpIHJldHVybiBuZXh0KClcbiAgICAvLyBnZXQgY2FjaGVJZCwgaWYgY2FjaGVhYmxlXG4gICAgY29uc3QgY2FjaGVJZCA9IGNhY2hlSWRlbnRpZmllckZvclBheWxvYWQocmVxKVxuICAgIC8vIGlmIG5vdCBjYWNoZWFibGUsIHNraXBcbiAgICBpZiAoIWNhY2hlSWQpIHJldHVybiBuZXh0KClcbiAgICAvLyBjaGVjayBmb3IgbWF0Y2hpbmcgcmVxdWVzdHNcbiAgICBsZXQgYWN0aXZlUmVxdWVzdEhhbmRsZXJzID0gaW5mbGlnaHRSZXF1ZXN0c1tjYWNoZUlkXVxuICAgIC8vIGlmIGZvdW5kLCB3YWl0IGZvciB0aGUgYWN0aXZlIHJlcXVlc3QgdG8gYmUgaGFuZGxlZFxuICAgIGlmIChhY3RpdmVSZXF1ZXN0SGFuZGxlcnMpIHtcbiAgICAgIC8vIHNldHVwIHRoZSByZXNwb25zZSBsaXN0ZW5lciBhbmQgd2FpdCBmb3IgaXQgdG8gYmUgY2FsbGVkXG4gICAgICAvLyBpdCB3aWxsIGhhbmRsZSBjb3B5aW5nIHRoZSByZXN1bHQgYW5kIHJlcXVlc3QgZmllbGRzXG4gICAgICBhd2FpdCBjcmVhdGVBY3RpdmVSZXF1ZXN0SGFuZGxlcihyZXMsIGFjdGl2ZVJlcXVlc3RIYW5kbGVycylcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICAvLyBzZXR1cCByZXNwb25zZSBoYW5kbGVyIGFycmF5IGZvciBzdWJzZXF1ZW50IHJlcXVlc3RzXG4gICAgYWN0aXZlUmVxdWVzdEhhbmRsZXJzID0gW11cbiAgICBpbmZsaWdodFJlcXVlc3RzW2NhY2hlSWRdID0gYWN0aXZlUmVxdWVzdEhhbmRsZXJzXG4gICAgLy8gYWxsb3cgcmVxdWVzdCB0byBiZSBoYW5kbGVkIG5vcm1hbGx5XG4gICAgYXdhaXQgbmV4dCgpXG4gICAgLy8gY2xlYXIgaW5mbGlnaHQgcmVxdWVzdHNcbiAgICBkZWxldGUgaW5mbGlnaHRSZXF1ZXN0c1tjYWNoZUlkXVxuICAgIC8vIHNjaGVkdWxlIGFjdGl2ZVJlcXVlc3RIYW5kbGVycyB0byBiZSBoYW5kbGVkXG4gICAgaGFuZGxlQWN0aXZlUmVxdWVzdChyZXMsIGFjdGl2ZVJlcXVlc3RIYW5kbGVycylcbiAgICAvLyBjb21wbGV0ZVxuICAgIHJldHVyblxuICB9KVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUFjdGl2ZVJlcXVlc3RIYW5kbGVyKHJlcywgYWN0aXZlUmVxdWVzdEhhbmRsZXJzKSB7XG4gICAgY29uc3QgeyByZXNvbHZlLCBwcm9taXNlIH0gPSBkZWZlcnJlZFByb21pc2UoKVxuICAgIGFjdGl2ZVJlcXVlc3RIYW5kbGVycy5wdXNoKChoYW5kbGVkUmVzKSA9PiB7XG4gICAgICAvLyBhcHBlbmQgYSBjb3B5IG9mIHRoZSByZXN1bHQgYW5kIGVycm9yIHRvIHRoZSByZXNwb25zZVxuICAgICAgcmVzLnJlc3VsdCA9IGNsb25lKGhhbmRsZWRSZXMucmVzdWx0KVxuICAgICAgcmVzLmVycm9yID0gY2xvbmUoaGFuZGxlZFJlcy5lcnJvcilcbiAgICAgIHJlc29sdmUoKVxuICAgIH0pXG4gICAgcmV0dXJuIHByb21pc2VcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUFjdGl2ZVJlcXVlc3QocmVzLCBhY3RpdmVSZXF1ZXN0SGFuZGxlcnMpIHtcbiAgICAvLyB1c2Ugc2V0VGltZW91dCBzbyB3ZSBjYW4gcmVzb2x2ZSBvdXIgb3JpZ2luYWwgcmVxdWVzdCBmaXJzdFxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgYWN0aXZlUmVxdWVzdEhhbmRsZXJzLmZvckVhY2goKGhhbmRsZXIpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBoYW5kbGVyKHJlcylcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgLy8gY2F0Y2ggZXJyb3Igc28gYWxsIHJlcXVlc3RzIGFyZSBoYW5kbGVkIGNvcnJlY3RseVxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cblxuZnVuY3Rpb24gZGVmZXJyZWRQcm9taXNlKCkge1xuICBsZXQgcmVzb2x2ZVxuICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoX3Jlc29sdmUgPT4geyByZXNvbHZlID0gX3Jlc29sdmUgfSlcbiAgcmV0dXJuIHsgcmVzb2x2ZSwgcHJvbWlzZSB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-middleware/inflight-cache.js\n");

/***/ }),

/***/ "../../node_modules/eth-json-rpc-middleware/scaffold.js":
/*!***********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-json-rpc-middleware/scaffold.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// for backwards compat\nmodule.exports = __webpack_require__(/*! json-rpc-engine/src/createScaffoldMiddleware */ \"../../node_modules/json-rpc-engine/src/createScaffoldMiddleware.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL3NjYWZmb2xkLmpzPzExNWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQyx3SEFBOEMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2V0aC1qc29uLXJwYy1taWRkbGV3YXJlL3NjYWZmb2xkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZm9yIGJhY2t3YXJkcyBjb21wYXRcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnanNvbi1ycGMtZW5naW5lL3NyYy9jcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUnKVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/eth-json-rpc-middleware/scaffold.js\n");

/***/ }),

/***/ "../../node_modules/eth-query/index.js":
/*!******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/eth-query/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const extend = __webpack_require__(/*! xtend */ \"../../node_modules/xtend/immutable.js\")\nconst createRandomId = __webpack_require__(/*! json-rpc-random-id */ \"../../node_modules/json-rpc-random-id/index.js\")()\n\nmodule.exports = EthQuery\n\n\nfunction EthQuery(provider){\n  const self = this\n  self.currentProvider = provider\n}\n\n//\n// base queries\n//\n\n// default block\nEthQuery.prototype.getBalance =                          generateFnWithDefaultBlockFor(2, 'eth_getBalance')\nEthQuery.prototype.getCode =                             generateFnWithDefaultBlockFor(2, 'eth_getCode')\nEthQuery.prototype.getTransactionCount =                 generateFnWithDefaultBlockFor(2, 'eth_getTransactionCount')\nEthQuery.prototype.getStorageAt =                        generateFnWithDefaultBlockFor(3, 'eth_getStorageAt')\nEthQuery.prototype.call =                                generateFnWithDefaultBlockFor(2, 'eth_call')\n// standard\nEthQuery.prototype.protocolVersion =                     generateFnFor('eth_protocolVersion')\nEthQuery.prototype.syncing =                             generateFnFor('eth_syncing')\nEthQuery.prototype.coinbase =                            generateFnFor('eth_coinbase')\nEthQuery.prototype.mining =                              generateFnFor('eth_mining')\nEthQuery.prototype.hashrate =                            generateFnFor('eth_hashrate')\nEthQuery.prototype.gasPrice =                            generateFnFor('eth_gasPrice')\nEthQuery.prototype.accounts =                            generateFnFor('eth_accounts')\nEthQuery.prototype.blockNumber =                         generateFnFor('eth_blockNumber')\nEthQuery.prototype.getBlockTransactionCountByHash =      generateFnFor('eth_getBlockTransactionCountByHash')\nEthQuery.prototype.getBlockTransactionCountByNumber =    generateFnFor('eth_getBlockTransactionCountByNumber')\nEthQuery.prototype.getUncleCountByBlockHash =            generateFnFor('eth_getUncleCountByBlockHash')\nEthQuery.prototype.getUncleCountByBlockNumber =          generateFnFor('eth_getUncleCountByBlockNumber')\nEthQuery.prototype.sign =                                generateFnFor('eth_sign')\nEthQuery.prototype.sendTransaction =                     generateFnFor('eth_sendTransaction')\nEthQuery.prototype.sendRawTransaction =                  generateFnFor('eth_sendRawTransaction')\nEthQuery.prototype.estimateGas =                         generateFnFor('eth_estimateGas')\nEthQuery.prototype.getBlockByHash =                      generateFnFor('eth_getBlockByHash')\nEthQuery.prototype.getBlockByNumber =                    generateFnFor('eth_getBlockByNumber')\nEthQuery.prototype.getTransactionByHash =                generateFnFor('eth_getTransactionByHash')\nEthQuery.prototype.getTransactionByBlockHashAndIndex =   generateFnFor('eth_getTransactionByBlockHashAndIndex')\nEthQuery.prototype.getTransactionByBlockNumberAndIndex = generateFnFor('eth_getTransactionByBlockNumberAndIndex')\nEthQuery.prototype.getTransactionReceipt =               generateFnFor('eth_getTransactionReceipt')\nEthQuery.prototype.getUncleByBlockHashAndIndex =         generateFnFor('eth_getUncleByBlockHashAndIndex')\nEthQuery.prototype.getUncleByBlockNumberAndIndex =       generateFnFor('eth_getUncleByBlockNumberAndIndex')\nEthQuery.prototype.getCompilers =                        generateFnFor('eth_getCompilers')\nEthQuery.prototype.compileLLL =                          generateFnFor('eth_compileLLL')\nEthQuery.prototype.compileSolidity =                     generateFnFor('eth_compileSolidity')\nEthQuery.prototype.compileSerpent =                      generateFnFor('eth_compileSerpent')\nEthQuery.prototype.newFilter =                           generateFnFor('eth_newFilter')\nEthQuery.prototype.newBlockFilter =                      generateFnFor('eth_newBlockFilter')\nEthQuery.prototype.newPendingTransactionFilter =         generateFnFor('eth_newPendingTransactionFilter')\nEthQuery.prototype.uninstallFilter =                     generateFnFor('eth_uninstallFilter')\nEthQuery.prototype.getFilterChanges =                    generateFnFor('eth_getFilterChanges')\nEthQuery.prototype.getFilterLogs =                       generateFnFor('eth_getFilterLogs')\nEthQuery.prototype.getLogs =                             generateFnFor('eth_getLogs')\nEthQuery.prototype.getWork =                             generateFnFor('eth_getWork')\nEthQuery.prototype.submitWork =                          generateFnFor('eth_submitWork')\nEthQuery.prototype.submitHashrate =                      generateFnFor('eth_submitHashrate')\n\n// network level\n\nEthQuery.prototype.sendAsync = function(opts, cb){\n  const self = this\n  self.currentProvider.sendAsync(createPayload(opts), function(err, response){\n    if (!err && response.error) err = new Error('EthQuery - RPC Error - '+response.error.message)\n    if (err) return cb(err)\n    cb(null, response.result)\n  })\n}\n\n// util\n\nfunction generateFnFor(methodName){\n  return function(){\n    const self = this\n    var args = [].slice.call(arguments)\n    var cb = args.pop()\n    self.sendAsync({\n      method: methodName,\n      params: args,\n    }, cb)\n  }\n}\n\nfunction generateFnWithDefaultBlockFor(argCount, methodName){\n  return function(){\n    const self = this\n    var args = [].slice.call(arguments)\n    var cb = args.pop()\n    // set optional default block param\n    if (args.length < argCount) args.push('latest')\n    self.sendAsync({\n      method: methodName,\n      params: args,\n    }, cb)\n  }\n}\n\nfunction createPayload(data){\n  return extend({\n    // defaults\n    id: createRandomId(),\n    jsonrpc: '2.0',\n    params: [],\n    // user-specified\n  }, data)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/eth-query/index.js\n");

/***/ }),

/***/ "../../node_modules/ethjs-util/lib/index.js":
/*!***********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/ethjs-util/lib/index.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"../../node_modules/is-hex-prefixed/src/index.js\");\nvar stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ \"../../node_modules/strip-hex-prefix/src/index.js\");\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/ethjs-util/lib/index.js\n");

/***/ }),

/***/ "../../node_modules/events/events.js":
/*!****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/events/events.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/events/events.js\n");

/***/ }),

/***/ "../../node_modules/fast-safe-stringify/index.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/fast-safe-stringify/index.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/fast-safe-stringify/index.js\n");

/***/ }),

/***/ "../../node_modules/inherits/inherits.js":
/*!********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/inherits/inherits.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("try {\n  var util = __webpack_require__(/*! util */ \"util\");\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = __webpack_require__(/*! ./inherits_browser.js */ \"../../node_modules/inherits/inherits_browser.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzLmpzPzcxYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxhQUFhLG1CQUFPLENBQUMsa0JBQU07QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsOEVBQXVCO0FBQ2xEIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInRyeSB7XG4gIHZhciB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBpZiAodHlwZW9mIHV0aWwuaW5oZXJpdHMgIT09ICdmdW5jdGlvbicpIHRocm93ICcnO1xuICBtb2R1bGUuZXhwb3J0cyA9IHV0aWwuaW5oZXJpdHM7XG59IGNhdGNoIChlKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9pbmhlcml0c19icm93c2VyLmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/inherits/inherits.js\n");

/***/ }),

/***/ "../../node_modules/inherits/inherits_browser.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/inherits/inherits_browser.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanM/NDJkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgaWYgKHN1cGVyQ3Rvcikge1xuICAgICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9O1xufSBlbHNlIHtcbiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBpZiAoc3VwZXJDdG9yKSB7XG4gICAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKClcbiAgICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/inherits/inherits_browser.js\n");

/***/ }),

/***/ "../../node_modules/is-fn/index.js":
/*!**************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/is-fn/index.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n\treturn toString.call(x) === '[object Function]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2lzLWZuL2luZGV4LmpzP2ZlZGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2lzLWZuL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoeCkge1xuXHRyZXR1cm4gdG9TdHJpbmcuY2FsbCh4KSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/is-fn/index.js\n");

/***/ }),

/***/ "../../node_modules/is-hex-prefixed/src/index.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/is-hex-prefixed/src/index.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2lzLWhleC1wcmVmaXhlZC9zcmMvaW5kZXguanM/ZDZlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvaXMtaGV4LXByZWZpeGVkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyBhIGBCb29sZWFuYCBvbiB3aGV0aGVyIG9yIG5vdCB0aGUgYSBgU3RyaW5nYCBzdGFydHMgd2l0aCAnMHgnXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyIHRoZSBzdHJpbmcgaW5wdXQgdmFsdWVcbiAqIEByZXR1cm4ge0Jvb2xlYW59IGEgYm9vbGVhbiBpZiBpdCBpcyBvciBpcyBub3QgaGV4IHByZWZpeGVkXG4gKiBAdGhyb3dzIGlmIHRoZSBzdHIgaW5wdXQgaXMgbm90IGEgc3RyaW5nXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNIZXhQcmVmaXhlZChzdHIpIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiW2lzLWhleC1wcmVmaXhlZF0gdmFsdWUgbXVzdCBiZSB0eXBlICdzdHJpbmcnLCBpcyBjdXJyZW50bHkgdHlwZSBcIiArICh0eXBlb2Ygc3RyKSArIFwiLCB3aGlsZSBjaGVja2luZyBpc0hleFByZWZpeGVkLlwiKTtcbiAgfVxuXG4gIHJldHVybiBzdHIuc2xpY2UoMCwgMikgPT09ICcweCc7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/is-hex-prefixed/src/index.js\n");

/***/ }),

/***/ "../../node_modules/json-rpc-engine/src/createAsyncMiddleware.js":
/*!********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/json-rpc-engine/src/createAsyncMiddleware.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n */\n\nmodule.exports = function createAsyncMiddleware (asyncMiddleware) {\n  return (req, res, next, end) => {\n\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise\n    const nextPromise = new Promise((resolve) => {\n      resolveNextPromise = resolve\n    })\n\n    let returnHandlerCallback, nextWasCalled\n\n    const asyncNext = async () => {\n\n      nextWasCalled = true\n\n      next((callback) => { // eslint-disable-line callback-return\n        returnHandlerCallback = callback\n        resolveNextPromise()\n      })\n      await nextPromise\n    }\n\n    asyncMiddleware(req, res, asyncNext)\n      .then(async () => {\n        if (nextWasCalled) {\n          await nextPromise // we must wait until the return handler is called\n          returnHandlerCallback(null)\n        } else {\n          end(null)\n        }\n      })\n      .catch((error) => {\n        if (returnHandlerCallback) {\n          returnHandlerCallback(error)\n        } else {\n          end(error)\n        }\n      })\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVuZ2luZS9zcmMvY3JlYXRlQXN5bmNNaWRkbGV3YXJlLmpzP2NjYzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7O0FBRUE7O0FBRUEsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvanNvbi1ycGMtZW5naW5lL3NyYy9jcmVhdGVBc3luY01pZGRsZXdhcmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEpzb25ScGNFbmdpbmUgb25seSBhY2NlcHRzIGNhbGxiYWNrLWJhc2VkIG1pZGRsZXdhcmUgZGlyZWN0bHkuXG4gKiBjcmVhdGVBc3luY01pZGRsZXdhcmUgZXhpc3RzIHRvIGVuYWJsZSBjb25zdW1lcnMgdG8gcGFzcyBpbiBhc3luYyBtaWRkbGV3YXJlXG4gKiBmdW5jdGlvbnMuXG4gKlxuICogQXN5bmMgbWlkZGxld2FyZSBoYXZlIG5vIFwiZW5kXCIgZnVuY3Rpb24uIEluc3RlYWQsIHRoZXkgXCJlbmRcIiBpZiB0aGV5IHJldHVyblxuICogd2l0aG91dCBjYWxsaW5nIFwibmV4dFwiLiBSYXRoZXIgdGhhbiBwYXNzaW5nIGluIGV4cGxpY2l0IHJldHVybiBoYW5kbGVycyxcbiAqIGFzeW5jIG1pZGRsZXdhcmUgY2FuIHNpbXBseSBhd2FpdCBcIm5leHRcIiwgYW5kIHBlcmZvcm0gb3BlcmF0aW9ucyBvbiB0aGVcbiAqIHJlc3BvbnNlIG9iamVjdCB3aGVuIGV4ZWN1dGlvbiByZXN1bWVzLlxuICpcbiAqIFRvIGFjY29tcGxpc2ggdGhpcywgY3JlYXRlQXN5bmNNaWRkbGV3YXJlIHBhc3NlcyB0aGUgYXN5bmMgbWlkZGxld2FyZSBhXG4gKiB3cmFwcGVkIFwibmV4dFwiIGZ1bmN0aW9uLiBUaGF0IGZ1bmN0aW9uIGNhbGxzIHRoZSBpbnRlcm5hbCBKc29uUnBjRW5naW5lXG4gKiBcIm5leHRcIiBmdW5jdGlvbiB3aXRoIGEgcmV0dXJuIGhhbmRsZXIgdGhhdCByZXNvbHZlcyBhIHByb21pc2Ugd2hlbiBjYWxsZWQuXG4gKlxuICogVGhlIHJldHVybiBoYW5kbGVyIHdpbGwgYWx3YXlzIGJlIGNhbGxlZC4gSXRzIHJlc29sdXRpb24gb2YgdGhlIHByb21pc2VcbiAqIGVuYWJsZXMgdGhlIGNvbnRyb2wgZmxvdyBkZXNjcmliZWQgYWJvdmUuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVBc3luY01pZGRsZXdhcmUgKGFzeW5jTWlkZGxld2FyZSkge1xuICByZXR1cm4gKHJlcSwgcmVzLCBuZXh0LCBlbmQpID0+IHtcblxuICAgIC8vIG5leHRQcm9taXNlIGlzIHRoZSBrZXkgdG8gdGhlIGltcGxlbWVudGF0aW9uXG4gICAgLy8gaXQgaXMgcmVzb2x2ZWQgYnkgdGhlIHJldHVybiBoYW5kbGVyIHBhc3NlZCB0byB0aGVcbiAgICAvLyBcIm5leHRcIiBmdW5jdGlvblxuICAgIGxldCByZXNvbHZlTmV4dFByb21pc2VcbiAgICBjb25zdCBuZXh0UHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICByZXNvbHZlTmV4dFByb21pc2UgPSByZXNvbHZlXG4gICAgfSlcblxuICAgIGxldCByZXR1cm5IYW5kbGVyQ2FsbGJhY2ssIG5leHRXYXNDYWxsZWRcblxuICAgIGNvbnN0IGFzeW5jTmV4dCA9IGFzeW5jICgpID0+IHtcblxuICAgICAgbmV4dFdhc0NhbGxlZCA9IHRydWVcblxuICAgICAgbmV4dCgoY2FsbGJhY2spID0+IHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjYWxsYmFjay1yZXR1cm5cbiAgICAgICAgcmV0dXJuSGFuZGxlckNhbGxiYWNrID0gY2FsbGJhY2tcbiAgICAgICAgcmVzb2x2ZU5leHRQcm9taXNlKClcbiAgICAgIH0pXG4gICAgICBhd2FpdCBuZXh0UHJvbWlzZVxuICAgIH1cblxuICAgIGFzeW5jTWlkZGxld2FyZShyZXEsIHJlcywgYXN5bmNOZXh0KVxuICAgICAgLnRoZW4oYXN5bmMgKCkgPT4ge1xuICAgICAgICBpZiAobmV4dFdhc0NhbGxlZCkge1xuICAgICAgICAgIGF3YWl0IG5leHRQcm9taXNlIC8vIHdlIG11c3Qgd2FpdCB1bnRpbCB0aGUgcmV0dXJuIGhhbmRsZXIgaXMgY2FsbGVkXG4gICAgICAgICAgcmV0dXJuSGFuZGxlckNhbGxiYWNrKG51bGwpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZW5kKG51bGwpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIGlmIChyZXR1cm5IYW5kbGVyQ2FsbGJhY2spIHtcbiAgICAgICAgICByZXR1cm5IYW5kbGVyQ2FsbGJhY2soZXJyb3IpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZW5kKGVycm9yKVxuICAgICAgICB9XG4gICAgICB9KVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/json-rpc-engine/src/createAsyncMiddleware.js\n");

/***/ }),

/***/ "../../node_modules/json-rpc-engine/src/createScaffoldMiddleware.js":
/*!***********************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/json-rpc-engine/src/createScaffoldMiddleware.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function createScaffoldMiddleware (handlers) {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method]\n    // if no handler, return\n    if (handler === undefined) {\n      return next()\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === 'function') {\n      return handler(req, res, next, end)\n    }\n    // if handler is some other value, use as result\n    res.result = handler\n    return end()\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVuZ2luZS9zcmMvY3JlYXRlU2NhZmZvbGRNaWRkbGV3YXJlLmpzP2ZjMGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVuZ2luZS9zcmMvY3JlYXRlU2NhZmZvbGRNaWRkbGV3YXJlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVTY2FmZm9sZE1pZGRsZXdhcmUgKGhhbmRsZXJzKSB7XG4gIHJldHVybiAocmVxLCByZXMsIG5leHQsIGVuZCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZXIgPSBoYW5kbGVyc1tyZXEubWV0aG9kXVxuICAgIC8vIGlmIG5vIGhhbmRsZXIsIHJldHVyblxuICAgIGlmIChoYW5kbGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBuZXh0KClcbiAgICB9XG4gICAgLy8gaWYgaGFuZGxlciBpcyBmbiwgY2FsbCBhcyBtaWRkbGV3YXJlXG4gICAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gaGFuZGxlcihyZXEsIHJlcywgbmV4dCwgZW5kKVxuICAgIH1cbiAgICAvLyBpZiBoYW5kbGVyIGlzIHNvbWUgb3RoZXIgdmFsdWUsIHVzZSBhcyByZXN1bHRcbiAgICByZXMucmVzdWx0ID0gaGFuZGxlclxuICAgIHJldHVybiBlbmQoKVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/json-rpc-engine/src/createScaffoldMiddleware.js\n");

/***/ }),

/***/ "../../node_modules/json-rpc-error/index.js":
/*!***********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/json-rpc-error/index.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/errors */ \"../../node_modules/json-rpc-error/lib/errors.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVycm9yL2luZGV4LmpzP2EwMDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMscUVBQWMiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVycm9yL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9lcnJvcnMnKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/json-rpc-error/index.js\n");

/***/ }),

/***/ "../../node_modules/json-rpc-error/lib/errors.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/json-rpc-error/lib/errors.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var inherits = __webpack_require__(/*! inherits */ \"../../node_modules/inherits/inherits.js\");\n\nvar JsonRpcError = function(message, code, data) {\n  if (!(this instanceof JsonRpcError)) {\n    return new JsonRpcError(message, code, data);\n  }\n\n  this.message = message;\n  this.code = code;\n\n  if (typeof data !== 'undefined') {\n    this.data = data;\n  }\n};\n\ninherits(JsonRpcError, Error);\n\nvar ParseError = function() {\n  if (!(this instanceof ParseError)) {\n    return new ParseError();\n  }\n\n  JsonRpcError.call(this, 'Parse error', -32700);\n};\n\ninherits(ParseError, JsonRpcError);\n\nvar InvalidRequest = function() {\n  if (!(this instanceof InvalidRequest)) {\n    return new InvalidRequest();\n  }\n\n  JsonRpcError.call(this, 'Invalid Request', -32600);\n};\n\ninherits(InvalidRequest, JsonRpcError);\n\nvar MethodNotFound = function() {\n  if (!(this instanceof MethodNotFound)) {\n    return new MethodNotFound();\n  }\n\n  JsonRpcError.call(this, 'Method not found', -32601);\n};\n\ninherits(MethodNotFound, JsonRpcError);\n\nvar InvalidParams = function() {\n  if (!(this instanceof InvalidParams)) {\n    return new InvalidParams();\n  }\n\n  JsonRpcError.call(this, 'Invalid params', -32602);\n};\n\ninherits(InvalidParams, JsonRpcError);\n\nvar InternalError = function(err) {\n  var message;\n\n  if (!(this instanceof InternalError)) {\n    return new InternalError(err);\n  }\n\n  if (err && err.message) {\n    message = err.message;\n  } else {\n    message = 'Internal error';\n  }\n\n  JsonRpcError.call(this, message, -32603);\n};\n\ninherits(InternalError, JsonRpcError);\n\nvar ServerError = function(code) {\n  if (code < -32099 || code > -32000) {\n    throw new Error('Invalid error code');\n  }\n\n  if (!(this instanceof ServerError)) {\n    return new ServerError(code);\n  }\n\n  JsonRpcError.call(this, 'Server error', code);\n};\n\ninherits(ServerError, JsonRpcError);\n\nJsonRpcError.ParseError = ParseError;\nJsonRpcError.InvalidRequest = InvalidRequest;\nJsonRpcError.MethodNotFound = MethodNotFound;\nJsonRpcError.InvalidParams = InvalidParams;\nJsonRpcError.InternalError = InternalError;\nJsonRpcError.ServerError = ServerError;\n\nmodule.exports = JsonRpcError;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVycm9yL2xpYi9lcnJvcnMuanM/MWU5ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMseURBQVU7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2pzb24tcnBjLWVycm9yL2xpYi9lcnJvcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuXG52YXIgSnNvblJwY0Vycm9yID0gZnVuY3Rpb24obWVzc2FnZSwgY29kZSwgZGF0YSkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgSnNvblJwY0Vycm9yKSkge1xuICAgIHJldHVybiBuZXcgSnNvblJwY0Vycm9yKG1lc3NhZ2UsIGNvZGUsIGRhdGEpO1xuICB9XG5cbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgdGhpcy5jb2RlID0gY29kZTtcblxuICBpZiAodHlwZW9mIGRhdGEgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufTtcblxuaW5oZXJpdHMoSnNvblJwY0Vycm9yLCBFcnJvcik7XG5cbnZhciBQYXJzZUVycm9yID0gZnVuY3Rpb24oKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBQYXJzZUVycm9yKSkge1xuICAgIHJldHVybiBuZXcgUGFyc2VFcnJvcigpO1xuICB9XG5cbiAgSnNvblJwY0Vycm9yLmNhbGwodGhpcywgJ1BhcnNlIGVycm9yJywgLTMyNzAwKTtcbn07XG5cbmluaGVyaXRzKFBhcnNlRXJyb3IsIEpzb25ScGNFcnJvcik7XG5cbnZhciBJbnZhbGlkUmVxdWVzdCA9IGZ1bmN0aW9uKCkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgSW52YWxpZFJlcXVlc3QpKSB7XG4gICAgcmV0dXJuIG5ldyBJbnZhbGlkUmVxdWVzdCgpO1xuICB9XG5cbiAgSnNvblJwY0Vycm9yLmNhbGwodGhpcywgJ0ludmFsaWQgUmVxdWVzdCcsIC0zMjYwMCk7XG59O1xuXG5pbmhlcml0cyhJbnZhbGlkUmVxdWVzdCwgSnNvblJwY0Vycm9yKTtcblxudmFyIE1ldGhvZE5vdEZvdW5kID0gZnVuY3Rpb24oKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBNZXRob2ROb3RGb3VuZCkpIHtcbiAgICByZXR1cm4gbmV3IE1ldGhvZE5vdEZvdW5kKCk7XG4gIH1cblxuICBKc29uUnBjRXJyb3IuY2FsbCh0aGlzLCAnTWV0aG9kIG5vdCBmb3VuZCcsIC0zMjYwMSk7XG59O1xuXG5pbmhlcml0cyhNZXRob2ROb3RGb3VuZCwgSnNvblJwY0Vycm9yKTtcblxudmFyIEludmFsaWRQYXJhbXMgPSBmdW5jdGlvbigpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEludmFsaWRQYXJhbXMpKSB7XG4gICAgcmV0dXJuIG5ldyBJbnZhbGlkUGFyYW1zKCk7XG4gIH1cblxuICBKc29uUnBjRXJyb3IuY2FsbCh0aGlzLCAnSW52YWxpZCBwYXJhbXMnLCAtMzI2MDIpO1xufTtcblxuaW5oZXJpdHMoSW52YWxpZFBhcmFtcywgSnNvblJwY0Vycm9yKTtcblxudmFyIEludGVybmFsRXJyb3IgPSBmdW5jdGlvbihlcnIpIHtcbiAgdmFyIG1lc3NhZ2U7XG5cbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEludGVybmFsRXJyb3IpKSB7XG4gICAgcmV0dXJuIG5ldyBJbnRlcm5hbEVycm9yKGVycik7XG4gIH1cblxuICBpZiAoZXJyICYmIGVyci5tZXNzYWdlKSB7XG4gICAgbWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICB9IGVsc2Uge1xuICAgIG1lc3NhZ2UgPSAnSW50ZXJuYWwgZXJyb3InO1xuICB9XG5cbiAgSnNvblJwY0Vycm9yLmNhbGwodGhpcywgbWVzc2FnZSwgLTMyNjAzKTtcbn07XG5cbmluaGVyaXRzKEludGVybmFsRXJyb3IsIEpzb25ScGNFcnJvcik7XG5cbnZhciBTZXJ2ZXJFcnJvciA9IGZ1bmN0aW9uKGNvZGUpIHtcbiAgaWYgKGNvZGUgPCAtMzIwOTkgfHwgY29kZSA+IC0zMjAwMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBlcnJvciBjb2RlJyk7XG4gIH1cblxuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgU2VydmVyRXJyb3IpKSB7XG4gICAgcmV0dXJuIG5ldyBTZXJ2ZXJFcnJvcihjb2RlKTtcbiAgfVxuXG4gIEpzb25ScGNFcnJvci5jYWxsKHRoaXMsICdTZXJ2ZXIgZXJyb3InLCBjb2RlKTtcbn07XG5cbmluaGVyaXRzKFNlcnZlckVycm9yLCBKc29uUnBjRXJyb3IpO1xuXG5Kc29uUnBjRXJyb3IuUGFyc2VFcnJvciA9IFBhcnNlRXJyb3I7XG5Kc29uUnBjRXJyb3IuSW52YWxpZFJlcXVlc3QgPSBJbnZhbGlkUmVxdWVzdDtcbkpzb25ScGNFcnJvci5NZXRob2ROb3RGb3VuZCA9IE1ldGhvZE5vdEZvdW5kO1xuSnNvblJwY0Vycm9yLkludmFsaWRQYXJhbXMgPSBJbnZhbGlkUGFyYW1zO1xuSnNvblJwY0Vycm9yLkludGVybmFsRXJyb3IgPSBJbnRlcm5hbEVycm9yO1xuSnNvblJwY0Vycm9yLlNlcnZlckVycm9yID0gU2VydmVyRXJyb3I7XG5cbm1vZHVsZS5leHBvcnRzID0gSnNvblJwY0Vycm9yO1xuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/json-rpc-error/lib/errors.js\n");

/***/ }),

/***/ "../../node_modules/json-rpc-random-id/index.js":
/*!***************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/json-rpc-random-id/index.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = IdIterator\n\nfunction IdIterator(opts){\n  opts = opts || {}\n  var max = opts.max || Number.MAX_SAFE_INTEGER\n  var idCounter = typeof opts.start !== 'undefined' ? opts.start : Math.floor(Math.random() * max)\n\n  return function createRandomId () {\n    idCounter = idCounter % max\n    return idCounter++\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2pzb24tcnBjLXJhbmRvbS1pZC9pbmRleC5qcz9kMDliIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9qc29uLXJwYy1yYW5kb20taWQvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IElkSXRlcmF0b3JcblxuZnVuY3Rpb24gSWRJdGVyYXRvcihvcHRzKXtcbiAgb3B0cyA9IG9wdHMgfHwge31cbiAgdmFyIG1heCA9IG9wdHMubWF4IHx8IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXG4gIHZhciBpZENvdW50ZXIgPSB0eXBlb2Ygb3B0cy5zdGFydCAhPT0gJ3VuZGVmaW5lZCcgPyBvcHRzLnN0YXJ0IDogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbWF4KVxuXG4gIHJldHVybiBmdW5jdGlvbiBjcmVhdGVSYW5kb21JZCAoKSB7XG4gICAgaWRDb3VudGVyID0gaWRDb3VudGVyICUgbWF4XG4gICAgcmV0dXJuIGlkQ291bnRlcisrXG4gIH1cblxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/json-rpc-random-id/index.js\n");

/***/ }),

/***/ "../../node_modules/json-stable-stringify/index.js":
/*!******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/json-stable-stringify/index.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var json = typeof JSON !== 'undefined' ? JSON : __webpack_require__(/*! jsonify */ \"../../node_modules/jsonify/index.js\");\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2pzb24tc3RhYmxlLXN0cmluZ2lmeS9pbmRleC5qcz81YzdhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdEQUFnRCxtQkFBTyxDQUFDLG9EQUFTOztBQUVqRTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxjQUFjOztBQUV4RTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaUJBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwrQkFBK0I7QUFDcEQ7QUFDQSxLQUFLLEdBQUcsVUFBVTtBQUNsQjs7QUFFQTtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBLDhEQUE4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2pzb24tc3RhYmxlLXN0cmluZ2lmeS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBqc29uID0gdHlwZW9mIEpTT04gIT09ICd1bmRlZmluZWQnID8gSlNPTiA6IHJlcXVpcmUoJ2pzb25pZnknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgaWYgKCFvcHRzKSBvcHRzID0ge307XG4gICAgaWYgKHR5cGVvZiBvcHRzID09PSAnZnVuY3Rpb24nKSBvcHRzID0geyBjbXA6IG9wdHMgfTtcbiAgICB2YXIgc3BhY2UgPSBvcHRzLnNwYWNlIHx8ICcnO1xuICAgIGlmICh0eXBlb2Ygc3BhY2UgPT09ICdudW1iZXInKSBzcGFjZSA9IEFycmF5KHNwYWNlKzEpLmpvaW4oJyAnKTtcbiAgICB2YXIgY3ljbGVzID0gKHR5cGVvZiBvcHRzLmN5Y2xlcyA9PT0gJ2Jvb2xlYW4nKSA/IG9wdHMuY3ljbGVzIDogZmFsc2U7XG4gICAgdmFyIHJlcGxhY2VyID0gb3B0cy5yZXBsYWNlciB8fCBmdW5jdGlvbihrZXksIHZhbHVlKSB7IHJldHVybiB2YWx1ZTsgfTtcblxuICAgIHZhciBjbXAgPSBvcHRzLmNtcCAmJiAoZnVuY3Rpb24gKGYpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgICAgICB2YXIgYW9iaiA9IHsga2V5OiBhLCB2YWx1ZTogbm9kZVthXSB9O1xuICAgICAgICAgICAgICAgIHZhciBib2JqID0geyBrZXk6IGIsIHZhbHVlOiBub2RlW2JdIH07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGYoYW9iaiwgYm9iaik7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgIH0pKG9wdHMuY21wKTtcblxuICAgIHZhciBzZWVuID0gW107XG4gICAgcmV0dXJuIChmdW5jdGlvbiBzdHJpbmdpZnkgKHBhcmVudCwga2V5LCBub2RlLCBsZXZlbCkge1xuICAgICAgICB2YXIgaW5kZW50ID0gc3BhY2UgPyAoJ1xcbicgKyBuZXcgQXJyYXkobGV2ZWwgKyAxKS5qb2luKHNwYWNlKSkgOiAnJztcbiAgICAgICAgdmFyIGNvbG9uU2VwYXJhdG9yID0gc3BhY2UgPyAnOiAnIDogJzonO1xuXG4gICAgICAgIGlmIChub2RlICYmIG5vZGUudG9KU09OICYmIHR5cGVvZiBub2RlLnRvSlNPTiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUudG9KU09OKCk7XG4gICAgICAgIH1cblxuICAgICAgICBub2RlID0gcmVwbGFjZXIuY2FsbChwYXJlbnQsIGtleSwgbm9kZSk7XG5cbiAgICAgICAgaWYgKG5vZGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygbm9kZSAhPT0gJ29iamVjdCcgfHwgbm9kZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGpzb24uc3RyaW5naWZ5KG5vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0FycmF5KG5vZGUpKSB7XG4gICAgICAgICAgICB2YXIgb3V0ID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHN0cmluZ2lmeShub2RlLCBpLCBub2RlW2ldLCBsZXZlbCsxKSB8fCBqc29uLnN0cmluZ2lmeShudWxsKTtcbiAgICAgICAgICAgICAgICBvdXQucHVzaChpbmRlbnQgKyBzcGFjZSArIGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICdbJyArIG91dC5qb2luKCcsJykgKyBpbmRlbnQgKyAnXSc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoc2Vlbi5pbmRleE9mKG5vZGUpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgIGlmIChjeWNsZXMpIHJldHVybiBqc29uLnN0cmluZ2lmeSgnX19jeWNsZV9fJyk7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ29udmVydGluZyBjaXJjdWxhciBzdHJ1Y3R1cmUgdG8gSlNPTicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBzZWVuLnB1c2gobm9kZSk7XG5cbiAgICAgICAgICAgIHZhciBrZXlzID0gb2JqZWN0S2V5cyhub2RlKS5zb3J0KGNtcCAmJiBjbXAobm9kZSkpO1xuICAgICAgICAgICAgdmFyIG91dCA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gc3RyaW5naWZ5KG5vZGUsIGtleSwgbm9kZVtrZXldLCBsZXZlbCsxKTtcblxuICAgICAgICAgICAgICAgIGlmKCF2YWx1ZSkgY29udGludWU7XG5cbiAgICAgICAgICAgICAgICB2YXIga2V5VmFsdWUgPSBqc29uLnN0cmluZ2lmeShrZXkpXG4gICAgICAgICAgICAgICAgICAgICsgY29sb25TZXBhcmF0b3JcbiAgICAgICAgICAgICAgICAgICAgKyB2YWx1ZTtcbiAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgb3V0LnB1c2goaW5kZW50ICsgc3BhY2UgKyBrZXlWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWVuLnNwbGljZShzZWVuLmluZGV4T2Yobm9kZSksIDEpO1xuICAgICAgICAgICAgcmV0dXJuICd7JyArIG91dC5qb2luKCcsJykgKyBpbmRlbnQgKyAnfSc7XG4gICAgICAgIH1cbiAgICB9KSh7ICcnOiBvYmogfSwgJycsIG9iaiwgMCk7XG59O1xuXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHgpIHtcbiAgICByZXR1cm4ge30udG9TdHJpbmcuY2FsbCh4KSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICAgIHZhciBoYXMgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5IHx8IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRydWUgfTtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKGhhcy5jYWxsKG9iaiwga2V5KSkga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIHJldHVybiBrZXlzO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/json-stable-stringify/index.js\n");

/***/ }),

/***/ "../../node_modules/jsonify/index.js":
/*!****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/jsonify/index.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.parse = __webpack_require__(/*! ./lib/parse */ \"../../node_modules/jsonify/lib/parse.js\");\nexports.stringify = __webpack_require__(/*! ./lib/stringify */ \"../../node_modules/jsonify/lib/stringify.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL2pzb25pZnkvaW5kZXguanM/NmViMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyw0REFBYTtBQUNyQyxvQkFBb0IsbUJBQU8sQ0FBQyxvRUFBaUIiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2pzb25pZnkvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnBhcnNlID0gcmVxdWlyZSgnLi9saWIvcGFyc2UnKTtcbmV4cG9ydHMuc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9saWIvc3RyaW5naWZ5Jyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/jsonify/index.js\n");

/***/ }),

/***/ "../../node_modules/jsonify/lib/parse.js":
/*!********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/jsonify/lib/parse.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/jsonify/lib/parse.js\n");

/***/ }),

/***/ "../../node_modules/jsonify/lib/stringify.js":
/*!************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/jsonify/lib/stringify.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/jsonify/lib/stringify.js\n");

/***/ }),

/***/ "../../node_modules/node-fetch/lib/index.js":
/*!***********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/node-fetch/lib/index.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(__webpack_require__(/*! stream */ \"stream\"));\nvar http = _interopDefault(__webpack_require__(/*! http */ \"http\"));\nvar Url = _interopDefault(__webpack_require__(/*! url */ \"url\"));\nvar whatwgUrl = _interopDefault(__webpack_require__(/*! whatwg-url */ \"../../node_modules/whatwg-url/lib/public-api.js\"));\nvar https = _interopDefault(__webpack_require__(/*! https */ \"https\"));\nvar zlib = _interopDefault(__webpack_require__(/*! zlib */ \"zlib\"));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'encoding'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())).convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/node-fetch/lib/index.js\n");

/***/ }),

/***/ "../../node_modules/pify/index.js":
/*!*************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/pify/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst processFn = (fn, opts) => function () {\n\tconst P = opts.promiseModule;\n\tconst args = new Array(arguments.length);\n\n\tfor (let i = 0; i < arguments.length; i++) {\n\t\targs[i] = arguments[i];\n\t}\n\n\treturn new P((resolve, reject) => {\n\t\tif (opts.errorFirst) {\n\t\t\targs.push(function (err, result) {\n\t\t\t\tif (opts.multiArgs) {\n\t\t\t\t\tconst results = new Array(arguments.length - 1);\n\n\t\t\t\t\tfor (let i = 1; i < arguments.length; i++) {\n\t\t\t\t\t\tresults[i - 1] = arguments[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresults.unshift(err);\n\t\t\t\t\t\treject(results);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(results);\n\t\t\t\t\t}\n\t\t\t\t} else if (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\targs.push(function (result) {\n\t\t\t\tif (opts.multiArgs) {\n\t\t\t\t\tconst results = new Array(arguments.length - 1);\n\n\t\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\t\tresults[i] = arguments[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(results);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfn.apply(this, args);\n\t});\n};\n\nmodule.exports = (obj, opts) => {\n\topts = Object.assign({\n\t\texclude: [/.+(Sync|Stream)$/],\n\t\terrorFirst: true,\n\t\tpromiseModule: Promise\n\t}, opts);\n\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\t\treturn opts.include ? opts.include.some(match) : !opts.exclude.some(match);\n\t};\n\n\tlet ret;\n\tif (typeof obj === 'function') {\n\t\tret = function () {\n\t\t\tif (opts.excludeMain) {\n\t\t\t\treturn obj.apply(this, arguments);\n\t\t\t}\n\n\t\t\treturn processFn(obj, opts).apply(this, arguments);\n\t\t};\n\t} else {\n\t\tret = Object.create(Object.getPrototypeOf(obj));\n\t}\n\n\tfor (const key in obj) { // eslint-disable-line guard-for-in\n\t\tconst x = obj[key];\n\t\tret[key] = typeof x === 'function' && filter(key) ? processFn(x, opts) : x;\n\t}\n\n\treturn ret;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3BpZnkvaW5kZXguanM/MmQxNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCLHNCQUFzQjtBQUN0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxJQUFJO0FBQ0osR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBLEVBQUU7QUFDRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvcGlmeS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgcHJvY2Vzc0ZuID0gKGZuLCBvcHRzKSA9PiBmdW5jdGlvbiAoKSB7XG5cdGNvbnN0IFAgPSBvcHRzLnByb21pc2VNb2R1bGU7XG5cdGNvbnN0IGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG5cblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuXHR9XG5cblx0cmV0dXJuIG5ldyBQKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0XHRpZiAob3B0cy5lcnJvckZpcnN0KSB7XG5cdFx0XHRhcmdzLnB1c2goZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG5cdFx0XHRcdGlmIChvcHRzLm11bHRpQXJncykge1xuXHRcdFx0XHRcdGNvbnN0IHJlc3VsdHMgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuXG5cdFx0XHRcdFx0Zm9yIChsZXQgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRcdHJlc3VsdHNbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmIChlcnIpIHtcblx0XHRcdFx0XHRcdHJlc3VsdHMudW5zaGlmdChlcnIpO1xuXHRcdFx0XHRcdFx0cmVqZWN0KHJlc3VsdHMpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXNvbHZlKHJlc3VsdHMpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIGlmIChlcnIpIHtcblx0XHRcdFx0XHRyZWplY3QoZXJyKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZXNvbHZlKHJlc3VsdCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRhcmdzLnB1c2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdFx0XHRpZiAob3B0cy5tdWx0aUFyZ3MpIHtcblx0XHRcdFx0XHRjb25zdCByZXN1bHRzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcblxuXHRcdFx0XHRcdGZvciAobGV0IGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdFx0XHRyZXN1bHRzW2ldID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJlc29sdmUocmVzdWx0cyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cmVzb2x2ZShyZXN1bHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHRmbi5hcHBseSh0aGlzLCBhcmdzKTtcblx0fSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChvYmosIG9wdHMpID0+IHtcblx0b3B0cyA9IE9iamVjdC5hc3NpZ24oe1xuXHRcdGV4Y2x1ZGU6IFsvLisoU3luY3xTdHJlYW0pJC9dLFxuXHRcdGVycm9yRmlyc3Q6IHRydWUsXG5cdFx0cHJvbWlzZU1vZHVsZTogUHJvbWlzZVxuXHR9LCBvcHRzKTtcblxuXHRjb25zdCBmaWx0ZXIgPSBrZXkgPT4ge1xuXHRcdGNvbnN0IG1hdGNoID0gcGF0dGVybiA9PiB0eXBlb2YgcGF0dGVybiA9PT0gJ3N0cmluZycgPyBrZXkgPT09IHBhdHRlcm4gOiBwYXR0ZXJuLnRlc3Qoa2V5KTtcblx0XHRyZXR1cm4gb3B0cy5pbmNsdWRlID8gb3B0cy5pbmNsdWRlLnNvbWUobWF0Y2gpIDogIW9wdHMuZXhjbHVkZS5zb21lKG1hdGNoKTtcblx0fTtcblxuXHRsZXQgcmV0O1xuXHRpZiAodHlwZW9mIG9iaiA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHJldCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmIChvcHRzLmV4Y2x1ZGVNYWluKSB7XG5cdFx0XHRcdHJldHVybiBvYmouYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHByb2Nlc3NGbihvYmosIG9wdHMpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRyZXQgPSBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopKTtcblx0fVxuXG5cdGZvciAoY29uc3Qga2V5IGluIG9iaikgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGd1YXJkLWZvci1pblxuXHRcdGNvbnN0IHggPSBvYmpba2V5XTtcblx0XHRyZXRba2V5XSA9IHR5cGVvZiB4ID09PSAnZnVuY3Rpb24nICYmIGZpbHRlcihrZXkpID8gcHJvY2Vzc0ZuKHgsIG9wdHMpIDogeDtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/pify/index.js\n");

/***/ }),

/***/ "../../node_modules/promise-to-callback/index.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/promise-to-callback/index.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar isFn = __webpack_require__(/*! is-fn */ \"../../node_modules/is-fn/index.js\");\nvar setImmediate = __webpack_require__(/*! set-immediate-shim */ \"../../node_modules/set-immediate-shim/index.js\");\n\nmodule.exports = function (promise) {\n\tif (!isFn(promise.then)) {\n\t\tthrow new TypeError('Expected a promise');\n\t}\n\n\treturn function (cb) {\n\t\tpromise.then(function (data) {\n\t\t\tsetImmediate(cb, null, data);\n\t\t}, function (err) {\n\t\t\tsetImmediate(cb, err);\n\t\t});\n\t};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3Byb21pc2UtdG8tY2FsbGJhY2svaW5kZXguanM/OTBjZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLFdBQVcsbUJBQU8sQ0FBQyxnREFBTztBQUMxQixtQkFBbUIsbUJBQU8sQ0FBQywwRUFBb0I7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9wcm9taXNlLXRvLWNhbGxiYWNrL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGlzRm4gPSByZXF1aXJlKCdpcy1mbicpO1xudmFyIHNldEltbWVkaWF0ZSA9IHJlcXVpcmUoJ3NldC1pbW1lZGlhdGUtc2hpbScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG5cdGlmICghaXNGbihwcm9taXNlLnRoZW4pKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYSBwcm9taXNlJyk7XG5cdH1cblxuXHRyZXR1cm4gZnVuY3Rpb24gKGNiKSB7XG5cdFx0cHJvbWlzZS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG5cdFx0XHRzZXRJbW1lZGlhdGUoY2IsIG51bGwsIGRhdGEpO1xuXHRcdH0sIGZ1bmN0aW9uIChlcnIpIHtcblx0XHRcdHNldEltbWVkaWF0ZShjYiwgZXJyKTtcblx0XHR9KTtcblx0fTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/promise-to-callback/index.js\n");

/***/ }),

/***/ "../../node_modules/safe-event-emitter/index.js":
/*!***************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/safe-event-emitter/index.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const util = __webpack_require__(/*! util */ \"util\")\nconst EventEmitter = __webpack_require__(/*! events/ */ \"../../node_modules/events/events.js\")\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n}\n\nmodule.exports = SafeEventEmitter\n\n\nfunction SafeEventEmitter() {\n  EventEmitter.call(this)\n}\n\nutil.inherits(SafeEventEmitter, EventEmitter)\n\nSafeEventEmitter.prototype.emit = function (type) {\n  // copied from https://github.com/Gozala/events/blob/master/events.js\n  // modified lines are commented with \"edited:\"\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    // edited: using safeApply\n    safeApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      // edited: using safeApply\n      safeApply(listeners[i], this, args);\n  }\n\n  return true;\n}\n\nfunction safeApply(handler, context, args) {\n  try {\n    ReflectApply(handler, context, args)\n  } catch (err) {\n    // throw error after timeout so as not to interupt the stack\n    setTimeout(() => {\n      throw err\n    })\n  }\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3NhZmUtZXZlbnQtZW1pdHRlci9pbmRleC5qcz8xZGEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQixxQkFBcUIsbUJBQU8sQ0FBQyxvREFBUzs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsbUJBQW1CLFNBQVM7QUFDNUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3NhZmUtZXZlbnQtZW1pdHRlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWwgPSByZXF1aXJlKCd1dGlsJylcbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cy8nKVxuXG52YXIgUiA9IHR5cGVvZiBSZWZsZWN0ID09PSAnb2JqZWN0JyA/IFJlZmxlY3QgOiBudWxsXG52YXIgUmVmbGVjdEFwcGx5ID0gUiAmJiB0eXBlb2YgUi5hcHBseSA9PT0gJ2Z1bmN0aW9uJ1xuICA/IFIuYXBwbHlcbiAgOiBmdW5jdGlvbiBSZWZsZWN0QXBwbHkodGFyZ2V0LCByZWNlaXZlciwgYXJncykge1xuICAgIHJldHVybiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbCh0YXJnZXQsIHJlY2VpdmVyLCBhcmdzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTYWZlRXZlbnRFbWl0dGVyXG5cblxuZnVuY3Rpb24gU2FmZUV2ZW50RW1pdHRlcigpIHtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcylcbn1cblxudXRpbC5pbmhlcml0cyhTYWZlRXZlbnRFbWl0dGVyLCBFdmVudEVtaXR0ZXIpXG5cblNhZmVFdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiAodHlwZSkge1xuICAvLyBjb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vR296YWxhL2V2ZW50cy9ibG9iL21hc3Rlci9ldmVudHMuanNcbiAgLy8gbW9kaWZpZWQgbGluZXMgYXJlIGNvbW1lbnRlZCB3aXRoIFwiZWRpdGVkOlwiXG4gIHZhciBhcmdzID0gW107XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSBhcmdzLnB1c2goYXJndW1lbnRzW2ldKTtcbiAgdmFyIGRvRXJyb3IgPSAodHlwZSA9PT0gJ2Vycm9yJyk7XG5cbiAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcbiAgaWYgKGV2ZW50cyAhPT0gdW5kZWZpbmVkKVxuICAgIGRvRXJyb3IgPSAoZG9FcnJvciAmJiBldmVudHMuZXJyb3IgPT09IHVuZGVmaW5lZCk7XG4gIGVsc2UgaWYgKCFkb0Vycm9yKVxuICAgIHJldHVybiBmYWxzZTtcblxuICAvLyBJZiB0aGVyZSBpcyBubyAnZXJyb3InIGV2ZW50IGxpc3RlbmVyIHRoZW4gdGhyb3cuXG4gIGlmIChkb0Vycm9yKSB7XG4gICAgdmFyIGVyO1xuICAgIGlmIChhcmdzLmxlbmd0aCA+IDApXG4gICAgICBlciA9IGFyZ3NbMF07XG4gICAgaWYgKGVyIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIC8vIE5vdGU6IFRoZSBjb21tZW50cyBvbiB0aGUgYHRocm93YCBsaW5lcyBhcmUgaW50ZW50aW9uYWwsIHRoZXkgc2hvd1xuICAgICAgLy8gdXAgaW4gTm9kZSdzIG91dHB1dCBpZiB0aGlzIHJlc3VsdHMgaW4gYW4gdW5oYW5kbGVkIGV4Y2VwdGlvbi5cbiAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgJ2Vycm9yJyBldmVudFxuICAgIH1cbiAgICAvLyBBdCBsZWFzdCBnaXZlIHNvbWUga2luZCBvZiBjb250ZXh0IHRvIHRoZSB1c2VyXG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcignVW5oYW5kbGVkIGVycm9yLicgKyAoZXIgPyAnICgnICsgZXIubWVzc2FnZSArICcpJyA6ICcnKSk7XG4gICAgZXJyLmNvbnRleHQgPSBlcjtcbiAgICB0aHJvdyBlcnI7IC8vIFVuaGFuZGxlZCAnZXJyb3InIGV2ZW50XG4gIH1cblxuICB2YXIgaGFuZGxlciA9IGV2ZW50c1t0eXBlXTtcblxuICBpZiAoaGFuZGxlciA9PT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiBmYWxzZTtcblxuICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBlZGl0ZWQ6IHVzaW5nIHNhZmVBcHBseVxuICAgIHNhZmVBcHBseShoYW5kbGVyLCB0aGlzLCBhcmdzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbGVuID0gaGFuZGxlci5sZW5ndGg7XG4gICAgdmFyIGxpc3RlbmVycyA9IGFycmF5Q2xvbmUoaGFuZGxlciwgbGVuKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKVxuICAgICAgLy8gZWRpdGVkOiB1c2luZyBzYWZlQXBwbHlcbiAgICAgIHNhZmVBcHBseShsaXN0ZW5lcnNbaV0sIHRoaXMsIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHNhZmVBcHBseShoYW5kbGVyLCBjb250ZXh0LCBhcmdzKSB7XG4gIHRyeSB7XG4gICAgUmVmbGVjdEFwcGx5KGhhbmRsZXIsIGNvbnRleHQsIGFyZ3MpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIHRocm93IGVycm9yIGFmdGVyIHRpbWVvdXQgc28gYXMgbm90IHRvIGludGVydXB0IHRoZSBzdGFja1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhyb3cgZXJyXG4gICAgfSlcbiAgfVxufVxuXG5mdW5jdGlvbiBhcnJheUNsb25lKGFyciwgbikge1xuICB2YXIgY29weSA9IG5ldyBBcnJheShuKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyArK2kpXG4gICAgY29weVtpXSA9IGFycltpXTtcbiAgcmV0dXJuIGNvcHk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/safe-event-emitter/index.js\n");

/***/ }),

/***/ "../../node_modules/set-immediate-shim/index.js":
/*!***************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/set-immediate-shim/index.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = typeof setImmediate === 'function' ? setImmediate :\n\tfunction setImmediate() {\n\t\tvar args = [].slice.apply(arguments);\n\t\targs.splice(1, 0, 0);\n\t\tsetTimeout.apply(null, args);\n\t};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3NldC1pbW1lZGlhdGUtc2hpbS9pbmRleC5qcz9kZmU2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy9zZXQtaW1tZWRpYXRlLXNoaW0vaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBzZXRJbW1lZGlhdGUgPT09ICdmdW5jdGlvbicgPyBzZXRJbW1lZGlhdGUgOlxuXHRmdW5jdGlvbiBzZXRJbW1lZGlhdGUoKSB7XG5cdFx0dmFyIGFyZ3MgPSBbXS5zbGljZS5hcHBseShhcmd1bWVudHMpO1xuXHRcdGFyZ3Muc3BsaWNlKDEsIDAsIDApO1xuXHRcdHNldFRpbWVvdXQuYXBwbHkobnVsbCwgYXJncyk7XG5cdH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/set-immediate-shim/index.js\n");

/***/ }),

/***/ "../../node_modules/strip-hex-prefix/src/index.js":
/*!*****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/strip-hex-prefix/src/index.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"../../node_modules/is-hex-prefixed/src/index.js\");\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3N0cmlwLWhleC1wcmVmaXgvc3JjL2luZGV4LmpzPzBjMGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CLG1CQUFPLENBQUMsd0VBQWlCOztBQUU3QztBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvc3RyaXAtaGV4LXByZWZpeC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNIZXhQcmVmaXhlZCA9IHJlcXVpcmUoJ2lzLWhleC1wcmVmaXhlZCcpO1xuXG4vKipcbiAqIFJlbW92ZXMgJzB4JyBmcm9tIGEgZ2l2ZW4gYFN0cmluZ2AgaXMgcHJlc2VudFxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciB0aGUgc3RyaW5nIHZhbHVlXG4gKiBAcmV0dXJuIHtTdHJpbmd8T3B0aW9uYWx9IGEgc3RyaW5nIGJ5IHBhc3MgaWYgbmVjZXNzYXJ5XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyaXBIZXhQcmVmaXgoc3RyKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICByZXR1cm4gaXNIZXhQcmVmaXhlZChzdHIpID8gc3RyLnNsaWNlKDIpIDogc3RyO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/strip-hex-prefix/src/index.js\n");

/***/ }),

/***/ "../../node_modules/tiny-invariant/dist/tiny-invariant.cjs.js":
/*!*****************************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/tiny-invariant/dist/tiny-invariant.cjs.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isProduction = \"development\" === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuY2pzLmpzPzY5MGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsbUJBQW1CLGFBQW9CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5janMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdmFyIHByb3ZpZGVkID0gdHlwZW9mIG1lc3NhZ2UgPT09ICdmdW5jdGlvbicgPyBtZXNzYWdlKCkgOiBtZXNzYWdlO1xuICAgIHZhciB2YWx1ZSA9IHByb3ZpZGVkID8gcHJlZml4ICsgXCI6IFwiICsgcHJvdmlkZWQgOiBwcmVmaXg7XG4gICAgdGhyb3cgbmV3IEVycm9yKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\n");

/***/ }),

/***/ "../../node_modules/tr46/index.js":
/*!*************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/tr46/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar punycode = __webpack_require__(/*! punycode */ \"punycode\");\nvar mappingTable = __webpack_require__(/*! ./lib/mappingTable.json */ \"../../node_modules/tr46/lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/tr46/index.js\n");

/***/ }),

/***/ "../../node_modules/tr46/lib/mappingTable.json":
/*!**************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/tr46/lib/mappingTable.json ***!
  \**************************************************************************************************/
/*! exports provideddefault */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"[[[0,44],\\\"disallowed_STD3_valid\\\"],[[45,46],\\\"valid\\\"],[[47,47],\\\"disallowed_STD3_valid\\\"],[[48,57],\\\"valid\\\"],[[58,64],\\\"disallowed_STD3_valid\\\"],[[65,65],\\\"mapped\\\",[97]],[[66,66],\\\"mapped\\\",[98]],[[67,67],\\\"mapped\\\",[99]],[[68,68],\\\"mapped\\\",[100]],[[69,69],\\\"mapped\\\",[101]],[[70,70],\\\"mapped\\\",[102]],[[71,71],\\\"mapped\\\",[103]],[[72,72],\\\"mapped\\\",[104]],[[73,73],\\\"mapped\\\",[105]],[[74,74],\\\"mapped\\\",[106]],[[75,75],\\\"mapped\\\",[107]],[[76,76],\\\"mapped\\\",[108]],[[77,77],\\\"mapped\\\",[109]],[[78,78],\\\"mapped\\\",[110]],[[79,79],\\\"mapped\\\",[111]],[[80,80],\\\"mapped\\\",[112]],[[81,81],\\\"mapped\\\",[113]],[[82,82],\\\"mapped\\\",[114]],[[83,83],\\\"mapped\\\",[115]],[[84,84],\\\"mapped\\\",[116]],[[85,85],\\\"mapped\\\",[117]],[[86,86],\\\"mapped\\\",[118]],[[87,87],\\\"mapped\\\",[119]],[[88,88],\\\"mapped\\\",[120]],[[89,89],\\\"mapped\\\",[121]],[[90,90],\\\"mapped\\\",[122]],[[91,96],\\\"disallowed_STD3_valid\\\"],[[97,122],\\\"valid\\\"],[[123,127],\\\"disallowed_STD3_valid\\\"],[[128,159],\\\"disallowed\\\"],[[160,160],\\\"disallowed_STD3_mapped\\\",[32]],[[161,167],\\\"valid\\\",[],\\\"NV8\\\"],[[168,168],\\\"disallowed_STD3_mapped\\\",[32,776]],[[169,169],\\\"valid\\\",[],\\\"NV8\\\"],[[170,170],\\\"mapped\\\",[97]],[[171,172],\\\"valid\\\",[],\\\"NV8\\\"],[[173,173],\\\"ignored\\\"],[[174,174],\\\"valid\\\",[],\\\"NV8\\\"],[[175,175],\\\"disallowed_STD3_mapped\\\",[32,772]],[[176,177],\\\"valid\\\",[],\\\"NV8\\\"],[[178,178],\\\"mapped\\\",[50]],[[179,179],\\\"mapped\\\",[51]],[[180,180],\\\"disallowed_STD3_mapped\\\",[32,769]],[[181,181],\\\"mapped\\\",[956]],[[182,182],\\\"valid\\\",[],\\\"NV8\\\"],[[183,183],\\\"valid\\\"],[[184,184],\\\"disallowed_STD3_mapped\\\",[32,807]],[[185,185],\\\"mapped\\\",[49]],[[186,186],\\\"mapped\\\",[111]],[[187,187],\\\"valid\\\",[],\\\"NV8\\\"],[[188,188],\\\"mapped\\\",[49,8260,52]],[[189,189],\\\"mapped\\\",[49,8260,50]],[[190,190],\\\"mapped\\\",[51,8260,52]],[[191,191],\\\"valid\\\",[],\\\"NV8\\\"],[[192,192],\\\"mapped\\\",[224]],[[193,193],\\\"mapped\\\",[225]],[[194,194],\\\"mapped\\\",[226]],[[195,195],\\\"mapped\\\",[227]],[[196,196],\\\"mapped\\\",[228]],[[197,197],\\\"mapped\\\",[229]],[[198,198],\\\"mapped\\\",[230]],[[199,199],\\\"mapped\\\",[231]],[[200,200],\\\"mapped\\\",[232]],[[201,201],\\\"mapped\\\",[233]],[[202,202],\\\"mapped\\\",[234]],[[203,203],\\\"mapped\\\",[235]],[[204,204],\\\"mapped\\\",[236]],[[205,205],\\\"mapped\\\",[237]],[[206,206],\\\"mapped\\\",[238]],[[207,207],\\\"mapped\\\",[239]],[[208,208],\\\"mapped\\\",[240]],[[209,209],\\\"mapped\\\",[241]],[[210,210],\\\"mapped\\\",[242]],[[211,211],\\\"mapped\\\",[243]],[[212,212],\\\"mapped\\\",[244]],[[213,213],\\\"mapped\\\",[245]],[[214,214],\\\"mapped\\\",[246]],[[215,215],\\\"valid\\\",[],\\\"NV8\\\"],[[216,216],\\\"mapped\\\",[248]],[[217,217],\\\"mapped\\\",[249]],[[218,218],\\\"mapped\\\",[250]],[[219,219],\\\"mapped\\\",[251]],[[220,220],\\\"mapped\\\",[252]],[[221,221],\\\"mapped\\\",[253]],[[222,222],\\\"mapped\\\",[254]],[[223,223],\\\"deviation\\\",[115,115]],[[224,246],\\\"valid\\\"],[[247,247],\\\"valid\\\",[],\\\"NV8\\\"],[[248,255],\\\"valid\\\"],[[256,256],\\\"mapped\\\",[257]],[[257,257],\\\"valid\\\"],[[258,258],\\\"mapped\\\",[259]],[[259,259],\\\"valid\\\"],[[260,260],\\\"mapped\\\",[261]],[[261,261],\\\"valid\\\"],[[262,262],\\\"mapped\\\",[263]],[[263,263],\\\"valid\\\"],[[264,264],\\\"mapped\\\",[265]],[[265,265],\\\"valid\\\"],[[266,266],\\\"mapped\\\",[267]],[[267,267],\\\"valid\\\"],[[268,268],\\\"mapped\\\",[269]],[[269,269],\\\"valid\\\"],[[270,270],\\\"mapped\\\",[271]],[[271,271],\\\"valid\\\"],[[272,272],\\\"mapped\\\",[273]],[[273,273],\\\"valid\\\"],[[274,274],\\\"mapped\\\",[275]],[[275,275],\\\"valid\\\"],[[276,276],\\\"mapped\\\",[277]],[[277,277],\\\"valid\\\"],[[278,278],\\\"mapped\\\",[279]],[[279,279],\\\"valid\\\"],[[280,280],\\\"mapped\\\",[281]],[[281,281],\\\"valid\\\"],[[282,282],\\\"mapped\\\",[283]],[[283,283],\\\"valid\\\"],[[284,284],\\\"mapped\\\",[285]],[[285,285],\\\"valid\\\"],[[286,286],\\\"mapped\\\",[287]],[[287,287],\\\"valid\\\"],[[288,288],\\\"mapped\\\",[289]],[[289,289],\\\"valid\\\"],[[290,290],\\\"mapped\\\",[291]],[[291,291],\\\"valid\\\"],[[292,292],\\\"mapped\\\",[293]],[[293,293],\\\"valid\\\"],[[294,294],\\\"mapped\\\",[295]],[[295,295],\\\"valid\\\"],[[296,296],\\\"mapped\\\",[297]],[[297,297],\\\"valid\\\"],[[298,298],\\\"mapped\\\",[299]],[[299,299],\\\"valid\\\"],[[300,300],\\\"mapped\\\",[301]],[[301,301],\\\"valid\\\"],[[302,302],\\\"mapped\\\",[303]],[[303,303],\\\"valid\\\"],[[304,304],\\\"mapped\\\",[105,775]],[[305,305],\\\"valid\\\"],[[306,307],\\\"mapped\\\",[105,106]],[[308,308],\\\"mapped\\\",[309]],[[309,309],\\\"valid\\\"],[[310,310],\\\"mapped\\\",[311]],[[311,312],\\\"valid\\\"],[[313,313],\\\"mapped\\\",[314]],[[314,314],\\\"valid\\\"],[[315,315],\\\"mapped\\\",[316]],[[316,316],\\\"valid\\\"],[[317,317],\\\"mapped\\\",[318]],[[318,318],\\\"valid\\\"],[[319,320],\\\"mapped\\\",[108,183]],[[321,321],\\\"mapped\\\",[322]],[[322,322],\\\"valid\\\"],[[323,323],\\\"mapped\\\",[324]],[[324,324],\\\"valid\\\"],[[325,325],\\\"mapped\\\",[326]],[[326,326],\\\"valid\\\"],[[327,327],\\\"mapped\\\",[328]],[[328,328],\\\"valid\\\"],[[329,329],\\\"mapped\\\",[700,110]],[[330,330],\\\"mapped\\\",[331]],[[331,331],\\\"valid\\\"],[[332,332],\\\"mapped\\\",[333]],[[333,333],\\\"valid\\\"],[[334,334],\\\"mapped\\\",[335]],[[335,335],\\\"valid\\\"],[[336,336],\\\"mapped\\\",[337]],[[337,337],\\\"valid\\\"],[[338,338],\\\"mapped\\\",[339]],[[339,339],\\\"valid\\\"],[[340,340],\\\"mapped\\\",[341]],[[341,341],\\\"valid\\\"],[[342,342],\\\"mapped\\\",[343]],[[343,343],\\\"valid\\\"],[[344,344],\\\"mapped\\\",[345]],[[345,345],\\\"valid\\\"],[[346,346],\\\"mapped\\\",[347]],[[347,347],\\\"valid\\\"],[[348,348],\\\"mapped\\\",[349]],[[349,349],\\\"valid\\\"],[[350,350],\\\"mapped\\\",[351]],[[351,351],\\\"valid\\\"],[[352,352],\\\"mapped\\\",[353]],[[353,353],\\\"valid\\\"],[[354,354],\\\"mapped\\\",[355]],[[355,355],\\\"valid\\\"],[[356,356],\\\"mapped\\\",[357]],[[357,357],\\\"valid\\\"],[[358,358],\\\"mapped\\\",[359]],[[359,359],\\\"valid\\\"],[[360,360],\\\"mapped\\\",[361]],[[361,361],\\\"valid\\\"],[[362,362],\\\"mapped\\\",[363]],[[363,363],\\\"valid\\\"],[[364,364],\\\"mapped\\\",[365]],[[365,365],\\\"valid\\\"],[[366,366],\\\"mapped\\\",[367]],[[367,367],\\\"valid\\\"],[[368,368],\\\"mapped\\\",[369]],[[369,369],\\\"valid\\\"],[[370,370],\\\"mapped\\\",[371]],[[371,371],\\\"valid\\\"],[[372,372],\\\"mapped\\\",[373]],[[373,373],\\\"valid\\\"],[[374,374],\\\"mapped\\\",[375]],[[375,375],\\\"valid\\\"],[[376,376],\\\"mapped\\\",[255]],[[377,377],\\\"mapped\\\",[378]],[[378,378],\\\"valid\\\"],[[379,379],\\\"mapped\\\",[380]],[[380,380],\\\"valid\\\"],[[381,381],\\\"mapped\\\",[382]],[[382,382],\\\"valid\\\"],[[383,383],\\\"mapped\\\",[115]],[[384,384],\\\"valid\\\"],[[385,385],\\\"mapped\\\",[595]],[[386,386],\\\"mapped\\\",[387]],[[387,387],\\\"valid\\\"],[[388,388],\\\"mapped\\\",[389]],[[389,389],\\\"valid\\\"],[[390,390],\\\"mapped\\\",[596]],[[391,391],\\\"mapped\\\",[392]],[[392,392],\\\"valid\\\"],[[393,393],\\\"mapped\\\",[598]],[[394,394],\\\"mapped\\\",[599]],[[395,395],\\\"mapped\\\",[396]],[[396,397],\\\"valid\\\"],[[398,398],\\\"mapped\\\",[477]],[[399,399],\\\"mapped\\\",[601]],[[400,400],\\\"mapped\\\",[603]],[[401,401],\\\"mapped\\\",[402]],[[402,402],\\\"valid\\\"],[[403,403],\\\"mapped\\\",[608]],[[404,404],\\\"mapped\\\",[611]],[[405,405],\\\"valid\\\"],[[406,406],\\\"mapped\\\",[617]],[[407,407],\\\"mapped\\\",[616]],[[408,408],\\\"mapped\\\",[409]],[[409,411],\\\"valid\\\"],[[412,412],\\\"mapped\\\",[623]],[[413,413],\\\"mapped\\\",[626]],[[414,414],\\\"valid\\\"],[[415,415],\\\"mapped\\\",[629]],[[416,416],\\\"mapped\\\",[417]],[[417,417],\\\"valid\\\"],[[418,418],\\\"mapped\\\",[419]],[[419,419],\\\"valid\\\"],[[420,420],\\\"mapped\\\",[421]],[[421,421],\\\"valid\\\"],[[422,422],\\\"mapped\\\",[640]],[[423,423],\\\"mapped\\\",[424]],[[424,424],\\\"valid\\\"],[[425,425],\\\"mapped\\\",[643]],[[426,427],\\\"valid\\\"],[[428,428],\\\"mapped\\\",[429]],[[429,429],\\\"valid\\\"],[[430,430],\\\"mapped\\\",[648]],[[431,431],\\\"mapped\\\",[432]],[[432,432],\\\"valid\\\"],[[433,433],\\\"mapped\\\",[650]],[[434,434],\\\"mapped\\\",[651]],[[435,435],\\\"mapped\\\",[436]],[[436,436],\\\"valid\\\"],[[437,437],\\\"mapped\\\",[438]],[[438,438],\\\"valid\\\"],[[439,439],\\\"mapped\\\",[658]],[[440,440],\\\"mapped\\\",[441]],[[441,443],\\\"valid\\\"],[[444,444],\\\"mapped\\\",[445]],[[445,451],\\\"valid\\\"],[[452,454],\\\"mapped\\\",[100,382]],[[455,457],\\\"mapped\\\",[108,106]],[[458,460],\\\"mapped\\\",[110,106]],[[461,461],\\\"mapped\\\",[462]],[[462,462],\\\"valid\\\"],[[463,463],\\\"mapped\\\",[464]],[[464,464],\\\"valid\\\"],[[465,465],\\\"mapped\\\",[466]],[[466,466],\\\"valid\\\"],[[467,467],\\\"mapped\\\",[468]],[[468,468],\\\"valid\\\"],[[469,469],\\\"mapped\\\",[470]],[[470,470],\\\"valid\\\"],[[471,471],\\\"mapped\\\",[472]],[[472,472],\\\"valid\\\"],[[473,473],\\\"mapped\\\",[474]],[[474,474],\\\"valid\\\"],[[475,475],\\\"mapped\\\",[476]],[[476,477],\\\"valid\\\"],[[478,478],\\\"mapped\\\",[479]],[[479,479],\\\"valid\\\"],[[480,480],\\\"mapped\\\",[481]],[[481,481],\\\"valid\\\"],[[482,482],\\\"mapped\\\",[483]],[[483,483],\\\"valid\\\"],[[484,484],\\\"mapped\\\",[485]],[[485,485],\\\"valid\\\"],[[486,486],\\\"mapped\\\",[487]],[[487,487],\\\"valid\\\"],[[488,488],\\\"mapped\\\",[489]],[[489,489],\\\"valid\\\"],[[490,490],\\\"mapped\\\",[491]],[[491,491],\\\"valid\\\"],[[492,492],\\\"mapped\\\",[493]],[[493,493],\\\"valid\\\"],[[494,494],\\\"mapped\\\",[495]],[[495,496],\\\"valid\\\"],[[497,499],\\\"mapped\\\",[100,122]],[[500,500],\\\"mapped\\\",[501]],[[501,501],\\\"valid\\\"],[[502,502],\\\"mapped\\\",[405]],[[503,503],\\\"mapped\\\",[447]],[[504,504],\\\"mapped\\\",[505]],[[505,505],\\\"valid\\\"],[[506,506],\\\"mapped\\\",[507]],[[507,507],\\\"valid\\\"],[[508,508],\\\"mapped\\\",[509]],[[509,509],\\\"valid\\\"],[[510,510],\\\"mapped\\\",[511]],[[511,511],\\\"valid\\\"],[[512,512],\\\"mapped\\\",[513]],[[513,513],\\\"valid\\\"],[[514,514],\\\"mapped\\\",[515]],[[515,515],\\\"valid\\\"],[[516,516],\\\"mapped\\\",[517]],[[517,517],\\\"valid\\\"],[[518,518],\\\"mapped\\\",[519]],[[519,519],\\\"valid\\\"],[[520,520],\\\"mapped\\\",[521]],[[521,521],\\\"valid\\\"],[[522,522],\\\"mapped\\\",[523]],[[523,523],\\\"valid\\\"],[[524,524],\\\"mapped\\\",[525]],[[525,525],\\\"valid\\\"],[[526,526],\\\"mapped\\\",[527]],[[527,527],\\\"valid\\\"],[[528,528],\\\"mapped\\\",[529]],[[529,529],\\\"valid\\\"],[[530,530],\\\"mapped\\\",[531]],[[531,531],\\\"valid\\\"],[[532,532],\\\"mapped\\\",[533]],[[533,533],\\\"valid\\\"],[[534,534],\\\"mapped\\\",[535]],[[535,535],\\\"valid\\\"],[[536,536],\\\"mapped\\\",[537]],[[537,537],\\\"valid\\\"],[[538,538],\\\"mapped\\\",[539]],[[539,539],\\\"valid\\\"],[[540,540],\\\"mapped\\\",[541]],[[541,541],\\\"valid\\\"],[[542,542],\\\"mapped\\\",[543]],[[543,543],\\\"valid\\\"],[[544,544],\\\"mapped\\\",[414]],[[545,545],\\\"valid\\\"],[[546,546],\\\"mapped\\\",[547]],[[547,547],\\\"valid\\\"],[[548,548],\\\"mapped\\\",[549]],[[549,549],\\\"valid\\\"],[[550,550],\\\"mapped\\\",[551]],[[551,551],\\\"valid\\\"],[[552,552],\\\"mapped\\\",[553]],[[553,553],\\\"valid\\\"],[[554,554],\\\"mapped\\\",[555]],[[555,555],\\\"valid\\\"],[[556,556],\\\"mapped\\\",[557]],[[557,557],\\\"valid\\\"],[[558,558],\\\"mapped\\\",[559]],[[559,559],\\\"valid\\\"],[[560,560],\\\"mapped\\\",[561]],[[561,561],\\\"valid\\\"],[[562,562],\\\"mapped\\\",[563]],[[563,563],\\\"valid\\\"],[[564,566],\\\"valid\\\"],[[567,569],\\\"valid\\\"],[[570,570],\\\"mapped\\\",[11365]],[[571,571],\\\"mapped\\\",[572]],[[572,572],\\\"valid\\\"],[[573,573],\\\"mapped\\\",[410]],[[574,574],\\\"mapped\\\",[11366]],[[575,576],\\\"valid\\\"],[[577,577],\\\"mapped\\\",[578]],[[578,578],\\\"valid\\\"],[[579,579],\\\"mapped\\\",[384]],[[580,580],\\\"mapped\\\",[649]],[[581,581],\\\"mapped\\\",[652]],[[582,582],\\\"mapped\\\",[583]],[[583,583],\\\"valid\\\"],[[584,584],\\\"mapped\\\",[585]],[[585,585],\\\"valid\\\"],[[586,586],\\\"mapped\\\",[587]],[[587,587],\\\"valid\\\"],[[588,588],\\\"mapped\\\",[589]],[[589,589],\\\"valid\\\"],[[590,590],\\\"mapped\\\",[591]],[[591,591],\\\"valid\\\"],[[592,680],\\\"valid\\\"],[[681,685],\\\"valid\\\"],[[686,687],\\\"valid\\\"],[[688,688],\\\"mapped\\\",[104]],[[689,689],\\\"mapped\\\",[614]],[[690,690],\\\"mapped\\\",[106]],[[691,691],\\\"mapped\\\",[114]],[[692,692],\\\"mapped\\\",[633]],[[693,693],\\\"mapped\\\",[635]],[[694,694],\\\"mapped\\\",[641]],[[695,695],\\\"mapped\\\",[119]],[[696,696],\\\"mapped\\\",[121]],[[697,705],\\\"valid\\\"],[[706,709],\\\"valid\\\",[],\\\"NV8\\\"],[[710,721],\\\"valid\\\"],[[722,727],\\\"valid\\\",[],\\\"NV8\\\"],[[728,728],\\\"disallowed_STD3_mapped\\\",[32,774]],[[729,729],\\\"disallowed_STD3_mapped\\\",[32,775]],[[730,730],\\\"disallowed_STD3_mapped\\\",[32,778]],[[731,731],\\\"disallowed_STD3_mapped\\\",[32,808]],[[732,732],\\\"disallowed_STD3_mapped\\\",[32,771]],[[733,733],\\\"disallowed_STD3_mapped\\\",[32,779]],[[734,734],\\\"valid\\\",[],\\\"NV8\\\"],[[735,735],\\\"valid\\\",[],\\\"NV8\\\"],[[736,736],\\\"mapped\\\",[611]],[[737,737],\\\"mapped\\\",[108]],[[738,738],\\\"mapped\\\",[115]],[[739,739],\\\"mapped\\\",[120]],[[740,740],\\\"mapped\\\",[661]],[[741,745],\\\"valid\\\",[],\\\"NV8\\\"],[[746,747],\\\"valid\\\",[],\\\"NV8\\\"],[[748,748],\\\"valid\\\"],[[749,749],\\\"valid\\\",[],\\\"NV8\\\"],[[750,750],\\\"valid\\\"],[[751,767],\\\"valid\\\",[],\\\"NV8\\\"],[[768,831],\\\"valid\\\"],[[832,832],\\\"mapped\\\",[768]],[[833,833],\\\"mapped\\\",[769]],[[834,834],\\\"valid\\\"],[[835,835],\\\"mapped\\\",[787]],[[836,836],\\\"mapped\\\",[776,769]],[[837,837],\\\"mapped\\\",[953]],[[838,846],\\\"valid\\\"],[[847,847],\\\"ignored\\\"],[[848,855],\\\"valid\\\"],[[856,860],\\\"valid\\\"],[[861,863],\\\"valid\\\"],[[864,865],\\\"valid\\\"],[[866,866],\\\"valid\\\"],[[867,879],\\\"valid\\\"],[[880,880],\\\"mapped\\\",[881]],[[881,881],\\\"valid\\\"],[[882,882],\\\"mapped\\\",[883]],[[883,883],\\\"valid\\\"],[[884,884],\\\"mapped\\\",[697]],[[885,885],\\\"valid\\\"],[[886,886],\\\"mapped\\\",[887]],[[887,887],\\\"valid\\\"],[[888,889],\\\"disallowed\\\"],[[890,890],\\\"disallowed_STD3_mapped\\\",[32,953]],[[891,893],\\\"valid\\\"],[[894,894],\\\"disallowed_STD3_mapped\\\",[59]],[[895,895],\\\"mapped\\\",[1011]],[[896,899],\\\"disallowed\\\"],[[900,900],\\\"disallowed_STD3_mapped\\\",[32,769]],[[901,901],\\\"disallowed_STD3_mapped\\\",[32,776,769]],[[902,902],\\\"mapped\\\",[940]],[[903,903],\\\"mapped\\\",[183]],[[904,904],\\\"mapped\\\",[941]],[[905,905],\\\"mapped\\\",[942]],[[906,906],\\\"mapped\\\",[943]],[[907,907],\\\"disallowed\\\"],[[908,908],\\\"mapped\\\",[972]],[[909,909],\\\"disallowed\\\"],[[910,910],\\\"mapped\\\",[973]],[[911,911],\\\"mapped\\\",[974]],[[912,912],\\\"valid\\\"],[[913,913],\\\"mapped\\\",[945]],[[914,914],\\\"mapped\\\",[946]],[[915,915],\\\"mapped\\\",[947]],[[916,916],\\\"mapped\\\",[948]],[[917,917],\\\"mapped\\\",[949]],[[918,918],\\\"mapped\\\",[950]],[[919,919],\\\"mapped\\\",[951]],[[920,920],\\\"mapped\\\",[952]],[[921,921],\\\"mapped\\\",[953]],[[922,922],\\\"mapped\\\",[954]],[[923,923],\\\"mapped\\\",[955]],[[924,924],\\\"mapped\\\",[956]],[[925,925],\\\"mapped\\\",[957]],[[926,926],\\\"mapped\\\",[958]],[[927,927],\\\"mapped\\\",[959]],[[928,928],\\\"mapped\\\",[960]],[[929,929],\\\"mapped\\\",[961]],[[930,930],\\\"disallowed\\\"],[[931,931],\\\"mapped\\\",[963]],[[932,932],\\\"mapped\\\",[964]],[[933,933],\\\"mapped\\\",[965]],[[934,934],\\\"mapped\\\",[966]],[[935,935],\\\"mapped\\\",[967]],[[936,936],\\\"mapped\\\",[968]],[[937,937],\\\"mapped\\\",[969]],[[938,938],\\\"mapped\\\",[970]],[[939,939],\\\"mapped\\\",[971]],[[940,961],\\\"valid\\\"],[[962,962],\\\"deviation\\\",[963]],[[963,974],\\\"valid\\\"],[[975,975],\\\"mapped\\\",[983]],[[976,976],\\\"mapped\\\",[946]],[[977,977],\\\"mapped\\\",[952]],[[978,978],\\\"mapped\\\",[965]],[[979,979],\\\"mapped\\\",[973]],[[980,980],\\\"mapped\\\",[971]],[[981,981],\\\"mapped\\\",[966]],[[982,982],\\\"mapped\\\",[960]],[[983,983],\\\"valid\\\"],[[984,984],\\\"mapped\\\",[985]],[[985,985],\\\"valid\\\"],[[986,986],\\\"mapped\\\",[987]],[[987,987],\\\"valid\\\"],[[988,988],\\\"mapped\\\",[989]],[[989,989],\\\"valid\\\"],[[990,990],\\\"mapped\\\",[991]],[[991,991],\\\"valid\\\"],[[992,992],\\\"mapped\\\",[993]],[[993,993],\\\"valid\\\"],[[994,994],\\\"mapped\\\",[995]],[[995,995],\\\"valid\\\"],[[996,996],\\\"mapped\\\",[997]],[[997,997],\\\"valid\\\"],[[998,998],\\\"mapped\\\",[999]],[[999,999],\\\"valid\\\"],[[1000,1000],\\\"mapped\\\",[1001]],[[1001,1001],\\\"valid\\\"],[[1002,1002],\\\"mapped\\\",[1003]],[[1003,1003],\\\"valid\\\"],[[1004,1004],\\\"mapped\\\",[1005]],[[1005,1005],\\\"valid\\\"],[[1006,1006],\\\"mapped\\\",[1007]],[[1007,1007],\\\"valid\\\"],[[1008,1008],\\\"mapped\\\",[954]],[[1009,1009],\\\"mapped\\\",[961]],[[1010,1010],\\\"mapped\\\",[963]],[[1011,1011],\\\"valid\\\"],[[1012,1012],\\\"mapped\\\",[952]],[[1013,1013],\\\"mapped\\\",[949]],[[1014,1014],\\\"valid\\\",[],\\\"NV8\\\"],[[1015,1015],\\\"mapped\\\",[1016]],[[1016,1016],\\\"valid\\\"],[[1017,1017],\\\"mapped\\\",[963]],[[1018,1018],\\\"mapped\\\",[1019]],[[1019,1019],\\\"valid\\\"],[[1020,1020],\\\"valid\\\"],[[1021,1021],\\\"mapped\\\",[891]],[[1022,1022],\\\"mapped\\\",[892]],[[1023,1023],\\\"mapped\\\",[893]],[[1024,1024],\\\"mapped\\\",[1104]],[[1025,1025],\\\"mapped\\\",[1105]],[[1026,1026],\\\"mapped\\\",[1106]],[[1027,1027],\\\"mapped\\\",[1107]],[[1028,1028],\\\"mapped\\\",[1108]],[[1029,1029],\\\"mapped\\\",[1109]],[[1030,1030],\\\"mapped\\\",[1110]],[[1031,1031],\\\"mapped\\\",[1111]],[[1032,1032],\\\"mapped\\\",[1112]],[[1033,1033],\\\"mapped\\\",[1113]],[[1034,1034],\\\"mapped\\\",[1114]],[[1035,1035],\\\"mapped\\\",[1115]],[[1036,1036],\\\"mapped\\\",[1116]],[[1037,1037],\\\"mapped\\\",[1117]],[[1038,1038],\\\"mapped\\\",[1118]],[[1039,1039],\\\"mapped\\\",[1119]],[[1040,1040],\\\"mapped\\\",[1072]],[[1041,1041],\\\"mapped\\\",[1073]],[[1042,1042],\\\"mapped\\\",[1074]],[[1043,1043],\\\"mapped\\\",[1075]],[[1044,1044],\\\"mapped\\\",[1076]],[[1045,1045],\\\"mapped\\\",[1077]],[[1046,1046],\\\"mapped\\\",[1078]],[[1047,1047],\\\"mapped\\\",[1079]],[[1048,1048],\\\"mapped\\\",[1080]],[[1049,1049],\\\"mapped\\\",[1081]],[[1050,1050],\\\"mapped\\\",[1082]],[[1051,1051],\\\"mapped\\\",[1083]],[[1052,1052],\\\"mapped\\\",[1084]],[[1053,1053],\\\"mapped\\\",[1085]],[[1054,1054],\\\"mapped\\\",[1086]],[[1055,1055],\\\"mapped\\\",[1087]],[[1056,1056],\\\"mapped\\\",[1088]],[[1057,1057],\\\"mapped\\\",[1089]],[[1058,1058],\\\"mapped\\\",[1090]],[[1059,1059],\\\"mapped\\\",[1091]],[[1060,1060],\\\"mapped\\\",[1092]],[[1061,1061],\\\"mapped\\\",[1093]],[[1062,1062],\\\"mapped\\\",[1094]],[[1063,1063],\\\"mapped\\\",[1095]],[[1064,1064],\\\"mapped\\\",[1096]],[[1065,1065],\\\"mapped\\\",[1097]],[[1066,1066],\\\"mapped\\\",[1098]],[[1067,1067],\\\"mapped\\\",[1099]],[[1068,1068],\\\"mapped\\\",[1100]],[[1069,1069],\\\"mapped\\\",[1101]],[[1070,1070],\\\"mapped\\\",[1102]],[[1071,1071],\\\"mapped\\\",[1103]],[[1072,1103],\\\"valid\\\"],[[1104,1104],\\\"valid\\\"],[[1105,1116],\\\"valid\\\"],[[1117,1117],\\\"valid\\\"],[[1118,1119],\\\"valid\\\"],[[1120,1120],\\\"mapped\\\",[1121]],[[1121,1121],\\\"valid\\\"],[[1122,1122],\\\"mapped\\\",[1123]],[[1123,1123],\\\"valid\\\"],[[1124,1124],\\\"mapped\\\",[1125]],[[1125,1125],\\\"valid\\\"],[[1126,1126],\\\"mapped\\\",[1127]],[[1127,1127],\\\"valid\\\"],[[1128,1128],\\\"mapped\\\",[1129]],[[1129,1129],\\\"valid\\\"],[[1130,1130],\\\"mapped\\\",[1131]],[[1131,1131],\\\"valid\\\"],[[1132,1132],\\\"mapped\\\",[1133]],[[1133,1133],\\\"valid\\\"],[[1134,1134],\\\"mapped\\\",[1135]],[[1135,1135],\\\"valid\\\"],[[1136,1136],\\\"mapped\\\",[1137]],[[1137,1137],\\\"valid\\\"],[[1138,1138],\\\"mapped\\\",[1139]],[[1139,1139],\\\"valid\\\"],[[1140,1140],\\\"mapped\\\",[1141]],[[1141,1141],\\\"valid\\\"],[[1142,1142],\\\"mapped\\\",[1143]],[[1143,1143],\\\"valid\\\"],[[1144,1144],\\\"mapped\\\",[1145]],[[1145,1145],\\\"valid\\\"],[[1146,1146],\\\"mapped\\\",[1147]],[[1147,1147],\\\"valid\\\"],[[1148,1148],\\\"mapped\\\",[1149]],[[1149,1149],\\\"valid\\\"],[[1150,1150],\\\"mapped\\\",[1151]],[[1151,1151],\\\"valid\\\"],[[1152,1152],\\\"mapped\\\",[1153]],[[1153,1153],\\\"valid\\\"],[[1154,1154],\\\"valid\\\",[],\\\"NV8\\\"],[[1155,1158],\\\"valid\\\"],[[1159,1159],\\\"valid\\\"],[[1160,1161],\\\"valid\\\",[],\\\"NV8\\\"],[[1162,1162],\\\"mapped\\\",[1163]],[[1163,1163],\\\"valid\\\"],[[1164,1164],\\\"mapped\\\",[1165]],[[1165,1165],\\\"valid\\\"],[[1166,1166],\\\"mapped\\\",[1167]],[[1167,1167],\\\"valid\\\"],[[1168,1168],\\\"mapped\\\",[1169]],[[1169,1169],\\\"valid\\\"],[[1170,1170],\\\"mapped\\\",[1171]],[[1171,1171],\\\"valid\\\"],[[1172,1172],\\\"mapped\\\",[1173]],[[1173,1173],\\\"valid\\\"],[[1174,1174],\\\"mapped\\\",[1175]],[[1175,1175],\\\"valid\\\"],[[1176,1176],\\\"mapped\\\",[1177]],[[1177,1177],\\\"valid\\\"],[[1178,1178],\\\"mapped\\\",[1179]],[[1179,1179],\\\"valid\\\"],[[1180,1180],\\\"mapped\\\",[1181]],[[1181,1181],\\\"valid\\\"],[[1182,1182],\\\"mapped\\\",[1183]],[[1183,1183],\\\"valid\\\"],[[1184,1184],\\\"mapped\\\",[1185]],[[1185,1185],\\\"valid\\\"],[[1186,1186],\\\"mapped\\\",[1187]],[[1187,1187],\\\"valid\\\"],[[1188,1188],\\\"mapped\\\",[1189]],[[1189,1189],\\\"valid\\\"],[[1190,1190],\\\"mapped\\\",[1191]],[[1191,1191],\\\"valid\\\"],[[1192,1192],\\\"mapped\\\",[1193]],[[1193,1193],\\\"valid\\\"],[[1194,1194],\\\"mapped\\\",[1195]],[[1195,1195],\\\"valid\\\"],[[1196,1196],\\\"mapped\\\",[1197]],[[1197,1197],\\\"valid\\\"],[[1198,1198],\\\"mapped\\\",[1199]],[[1199,1199],\\\"valid\\\"],[[1200,1200],\\\"mapped\\\",[1201]],[[1201,1201],\\\"valid\\\"],[[1202,1202],\\\"mapped\\\",[1203]],[[1203,1203],\\\"valid\\\"],[[1204,1204],\\\"mapped\\\",[1205]],[[1205,1205],\\\"valid\\\"],[[1206,1206],\\\"mapped\\\",[1207]],[[1207,1207],\\\"valid\\\"],[[1208,1208],\\\"mapped\\\",[1209]],[[1209,1209],\\\"valid\\\"],[[1210,1210],\\\"mapped\\\",[1211]],[[1211,1211],\\\"valid\\\"],[[1212,1212],\\\"mapped\\\",[1213]],[[1213,1213],\\\"valid\\\"],[[1214,1214],\\\"mapped\\\",[1215]],[[1215,1215],\\\"valid\\\"],[[1216,1216],\\\"disallowed\\\"],[[1217,1217],\\\"mapped\\\",[1218]],[[1218,1218],\\\"valid\\\"],[[1219,1219],\\\"mapped\\\",[1220]],[[1220,1220],\\\"valid\\\"],[[1221,1221],\\\"mapped\\\",[1222]],[[1222,1222],\\\"valid\\\"],[[1223,1223],\\\"mapped\\\",[1224]],[[1224,1224],\\\"valid\\\"],[[1225,1225],\\\"mapped\\\",[1226]],[[1226,1226],\\\"valid\\\"],[[1227,1227],\\\"mapped\\\",[1228]],[[1228,1228],\\\"valid\\\"],[[1229,1229],\\\"mapped\\\",[1230]],[[1230,1230],\\\"valid\\\"],[[1231,1231],\\\"valid\\\"],[[1232,1232],\\\"mapped\\\",[1233]],[[1233,1233],\\\"valid\\\"],[[1234,1234],\\\"mapped\\\",[1235]],[[1235,1235],\\\"valid\\\"],[[1236,1236],\\\"mapped\\\",[1237]],[[1237,1237],\\\"valid\\\"],[[1238,1238],\\\"mapped\\\",[1239]],[[1239,1239],\\\"valid\\\"],[[1240,1240],\\\"mapped\\\",[1241]],[[1241,1241],\\\"valid\\\"],[[1242,1242],\\\"mapped\\\",[1243]],[[1243,1243],\\\"valid\\\"],[[1244,1244],\\\"mapped\\\",[1245]],[[1245,1245],\\\"valid\\\"],[[1246,1246],\\\"mapped\\\",[1247]],[[1247,1247],\\\"valid\\\"],[[1248,1248],\\\"mapped\\\",[1249]],[[1249,1249],\\\"valid\\\"],[[1250,1250],\\\"mapped\\\",[1251]],[[1251,1251],\\\"valid\\\"],[[1252,1252],\\\"mapped\\\",[1253]],[[1253,1253],\\\"valid\\\"],[[1254,1254],\\\"mapped\\\",[1255]],[[1255,1255],\\\"valid\\\"],[[1256,1256],\\\"mapped\\\",[1257]],[[1257,1257],\\\"valid\\\"],[[1258,1258],\\\"mapped\\\",[1259]],[[1259,1259],\\\"valid\\\"],[[1260,1260],\\\"mapped\\\",[1261]],[[1261,1261],\\\"valid\\\"],[[1262,1262],\\\"mapped\\\",[1263]],[[1263,1263],\\\"valid\\\"],[[1264,1264],\\\"mapped\\\",[1265]],[[1265,1265],\\\"valid\\\"],[[1266,1266],\\\"mapped\\\",[1267]],[[1267,1267],\\\"valid\\\"],[[1268,1268],\\\"mapped\\\",[1269]],[[1269,1269],\\\"valid\\\"],[[1270,1270],\\\"mapped\\\",[1271]],[[1271,1271],\\\"valid\\\"],[[1272,1272],\\\"mapped\\\",[1273]],[[1273,1273],\\\"valid\\\"],[[1274,1274],\\\"mapped\\\",[1275]],[[1275,1275],\\\"valid\\\"],[[1276,1276],\\\"mapped\\\",[1277]],[[1277,1277],\\\"valid\\\"],[[1278,1278],\\\"mapped\\\",[1279]],[[1279,1279],\\\"valid\\\"],[[1280,1280],\\\"mapped\\\",[1281]],[[1281,1281],\\\"valid\\\"],[[1282,1282],\\\"mapped\\\",[1283]],[[1283,1283],\\\"valid\\\"],[[1284,1284],\\\"mapped\\\",[1285]],[[1285,1285],\\\"valid\\\"],[[1286,1286],\\\"mapped\\\",[1287]],[[1287,1287],\\\"valid\\\"],[[1288,1288],\\\"mapped\\\",[1289]],[[1289,1289],\\\"valid\\\"],[[1290,1290],\\\"mapped\\\",[1291]],[[1291,1291],\\\"valid\\\"],[[1292,1292],\\\"mapped\\\",[1293]],[[1293,1293],\\\"valid\\\"],[[1294,1294],\\\"mapped\\\",[1295]],[[1295,1295],\\\"valid\\\"],[[1296,1296],\\\"mapped\\\",[1297]],[[1297,1297],\\\"valid\\\"],[[1298,1298],\\\"mapped\\\",[1299]],[[1299,1299],\\\"valid\\\"],[[1300,1300],\\\"mapped\\\",[1301]],[[1301,1301],\\\"valid\\\"],[[1302,1302],\\\"mapped\\\",[1303]],[[1303,1303],\\\"valid\\\"],[[1304,1304],\\\"mapped\\\",[1305]],[[1305,1305],\\\"valid\\\"],[[1306,1306],\\\"mapped\\\",[1307]],[[1307,1307],\\\"valid\\\"],[[1308,1308],\\\"mapped\\\",[1309]],[[1309,1309],\\\"valid\\\"],[[1310,1310],\\\"mapped\\\",[1311]],[[1311,1311],\\\"valid\\\"],[[1312,1312],\\\"mapped\\\",[1313]],[[1313,1313],\\\"valid\\\"],[[1314,1314],\\\"mapped\\\",[1315]],[[1315,1315],\\\"valid\\\"],[[1316,1316],\\\"mapped\\\",[1317]],[[1317,1317],\\\"valid\\\"],[[1318,1318],\\\"mapped\\\",[1319]],[[1319,1319],\\\"valid\\\"],[[1320,1320],\\\"mapped\\\",[1321]],[[1321,1321],\\\"valid\\\"],[[1322,1322],\\\"mapped\\\",[1323]],[[1323,1323],\\\"valid\\\"],[[1324,1324],\\\"mapped\\\",[1325]],[[1325,1325],\\\"valid\\\"],[[1326,1326],\\\"mapped\\\",[1327]],[[1327,1327],\\\"valid\\\"],[[1328,1328],\\\"disallowed\\\"],[[1329,1329],\\\"mapped\\\",[1377]],[[1330,1330],\\\"mapped\\\",[1378]],[[1331,1331],\\\"mapped\\\",[1379]],[[1332,1332],\\\"mapped\\\",[1380]],[[1333,1333],\\\"mapped\\\",[1381]],[[1334,1334],\\\"mapped\\\",[1382]],[[1335,1335],\\\"mapped\\\",[1383]],[[1336,1336],\\\"mapped\\\",[1384]],[[1337,1337],\\\"mapped\\\",[1385]],[[1338,1338],\\\"mapped\\\",[1386]],[[1339,1339],\\\"mapped\\\",[1387]],[[1340,1340],\\\"mapped\\\",[1388]],[[1341,1341],\\\"mapped\\\",[1389]],[[1342,1342],\\\"mapped\\\",[1390]],[[1343,1343],\\\"mapped\\\",[1391]],[[1344,1344],\\\"mapped\\\",[1392]],[[1345,1345],\\\"mapped\\\",[1393]],[[1346,1346],\\\"mapped\\\",[1394]],[[1347,1347],\\\"mapped\\\",[1395]],[[1348,1348],\\\"mapped\\\",[1396]],[[1349,1349],\\\"mapped\\\",[1397]],[[1350,1350],\\\"mapped\\\",[1398]],[[1351,1351],\\\"mapped\\\",[1399]],[[1352,1352],\\\"mapped\\\",[1400]],[[1353,1353],\\\"mapped\\\",[1401]],[[1354,1354],\\\"mapped\\\",[1402]],[[1355,1355],\\\"mapped\\\",[1403]],[[1356,1356],\\\"mapped\\\",[1404]],[[1357,1357],\\\"mapped\\\",[1405]],[[1358,1358],\\\"mapped\\\",[1406]],[[1359,1359],\\\"mapped\\\",[1407]],[[1360,1360],\\\"mapped\\\",[1408]],[[1361,1361],\\\"mapped\\\",[1409]],[[1362,1362],\\\"mapped\\\",[1410]],[[1363,1363],\\\"mapped\\\",[1411]],[[1364,1364],\\\"mapped\\\",[1412]],[[1365,1365],\\\"mapped\\\",[1413]],[[1366,1366],\\\"mapped\\\",[1414]],[[1367,1368],\\\"disallowed\\\"],[[1369,1369],\\\"valid\\\"],[[1370,1375],\\\"valid\\\",[],\\\"NV8\\\"],[[1376,1376],\\\"disallowed\\\"],[[1377,1414],\\\"valid\\\"],[[1415,1415],\\\"mapped\\\",[1381,1410]],[[1416,1416],\\\"disallowed\\\"],[[1417,1417],\\\"valid\\\",[],\\\"NV8\\\"],[[1418,1418],\\\"valid\\\",[],\\\"NV8\\\"],[[1419,1420],\\\"disallowed\\\"],[[1421,1422],\\\"valid\\\",[],\\\"NV8\\\"],[[1423,1423],\\\"valid\\\",[],\\\"NV8\\\"],[[1424,1424],\\\"disallowed\\\"],[[1425,1441],\\\"valid\\\"],[[1442,1442],\\\"valid\\\"],[[1443,1455],\\\"valid\\\"],[[1456,1465],\\\"valid\\\"],[[1466,1466],\\\"valid\\\"],[[1467,1469],\\\"valid\\\"],[[1470,1470],\\\"valid\\\",[],\\\"NV8\\\"],[[1471,1471],\\\"valid\\\"],[[1472,1472],\\\"valid\\\",[],\\\"NV8\\\"],[[1473,1474],\\\"valid\\\"],[[1475,1475],\\\"valid\\\",[],\\\"NV8\\\"],[[1476,1476],\\\"valid\\\"],[[1477,1477],\\\"valid\\\"],[[1478,1478],\\\"valid\\\",[],\\\"NV8\\\"],[[1479,1479],\\\"valid\\\"],[[1480,1487],\\\"disallowed\\\"],[[1488,1514],\\\"valid\\\"],[[1515,1519],\\\"disallowed\\\"],[[1520,1524],\\\"valid\\\"],[[1525,1535],\\\"disallowed\\\"],[[1536,1539],\\\"disallowed\\\"],[[1540,1540],\\\"disallowed\\\"],[[1541,1541],\\\"disallowed\\\"],[[1542,1546],\\\"valid\\\",[],\\\"NV8\\\"],[[1547,1547],\\\"valid\\\",[],\\\"NV8\\\"],[[1548,1548],\\\"valid\\\",[],\\\"NV8\\\"],[[1549,1551],\\\"valid\\\",[],\\\"NV8\\\"],[[1552,1557],\\\"valid\\\"],[[1558,1562],\\\"valid\\\"],[[1563,1563],\\\"valid\\\",[],\\\"NV8\\\"],[[1564,1564],\\\"disallowed\\\"],[[1565,1565],\\\"disallowed\\\"],[[1566,1566],\\\"valid\\\",[],\\\"NV8\\\"],[[1567,1567],\\\"valid\\\",[],\\\"NV8\\\"],[[1568,1568],\\\"valid\\\"],[[1569,1594],\\\"valid\\\"],[[1595,1599],\\\"valid\\\"],[[1600,1600],\\\"valid\\\",[],\\\"NV8\\\"],[[1601,1618],\\\"valid\\\"],[[1619,1621],\\\"valid\\\"],[[1622,1624],\\\"valid\\\"],[[1625,1630],\\\"valid\\\"],[[1631,1631],\\\"valid\\\"],[[1632,1641],\\\"valid\\\"],[[1642,1645],\\\"valid\\\",[],\\\"NV8\\\"],[[1646,1647],\\\"valid\\\"],[[1648,1652],\\\"valid\\\"],[[1653,1653],\\\"mapped\\\",[1575,1652]],[[1654,1654],\\\"mapped\\\",[1608,1652]],[[1655,1655],\\\"mapped\\\",[1735,1652]],[[1656,1656],\\\"mapped\\\",[1610,1652]],[[1657,1719],\\\"valid\\\"],[[1720,1721],\\\"valid\\\"],[[1722,1726],\\\"valid\\\"],[[1727,1727],\\\"valid\\\"],[[1728,1742],\\\"valid\\\"],[[1743,1743],\\\"valid\\\"],[[1744,1747],\\\"valid\\\"],[[1748,1748],\\\"valid\\\",[],\\\"NV8\\\"],[[1749,1756],\\\"valid\\\"],[[1757,1757],\\\"disallowed\\\"],[[1758,1758],\\\"valid\\\",[],\\\"NV8\\\"],[[1759,1768],\\\"valid\\\"],[[1769,1769],\\\"valid\\\",[],\\\"NV8\\\"],[[1770,1773],\\\"valid\\\"],[[1774,1775],\\\"valid\\\"],[[1776,1785],\\\"valid\\\"],[[1786,1790],\\\"valid\\\"],[[1791,1791],\\\"valid\\\"],[[1792,1805],\\\"valid\\\",[],\\\"NV8\\\"],[[1806,1806],\\\"disallowed\\\"],[[1807,1807],\\\"disallowed\\\"],[[1808,1836],\\\"valid\\\"],[[1837,1839],\\\"valid\\\"],[[1840,1866],\\\"valid\\\"],[[1867,1868],\\\"disallowed\\\"],[[1869,1871],\\\"valid\\\"],[[1872,1901],\\\"valid\\\"],[[1902,1919],\\\"valid\\\"],[[1920,1968],\\\"valid\\\"],[[1969,1969],\\\"valid\\\"],[[1970,1983],\\\"disallowed\\\"],[[1984,2037],\\\"valid\\\"],[[2038,2042],\\\"valid\\\",[],\\\"NV8\\\"],[[2043,2047],\\\"disallowed\\\"],[[2048,2093],\\\"valid\\\"],[[2094,2095],\\\"disallowed\\\"],[[2096,2110],\\\"valid\\\",[],\\\"NV8\\\"],[[2111,2111],\\\"disallowed\\\"],[[2112,2139],\\\"valid\\\"],[[2140,2141],\\\"disallowed\\\"],[[2142,2142],\\\"valid\\\",[],\\\"NV8\\\"],[[2143,2207],\\\"disallowed\\\"],[[2208,2208],\\\"valid\\\"],[[2209,2209],\\\"valid\\\"],[[2210,2220],\\\"valid\\\"],[[2221,2226],\\\"valid\\\"],[[2227,2228],\\\"valid\\\"],[[2229,2274],\\\"disallowed\\\"],[[2275,2275],\\\"valid\\\"],[[2276,2302],\\\"valid\\\"],[[2303,2303],\\\"valid\\\"],[[2304,2304],\\\"valid\\\"],[[2305,2307],\\\"valid\\\"],[[2308,2308],\\\"valid\\\"],[[2309,2361],\\\"valid\\\"],[[2362,2363],\\\"valid\\\"],[[2364,2381],\\\"valid\\\"],[[2382,2382],\\\"valid\\\"],[[2383,2383],\\\"valid\\\"],[[2384,2388],\\\"valid\\\"],[[2389,2389],\\\"valid\\\"],[[2390,2391],\\\"valid\\\"],[[2392,2392],\\\"mapped\\\",[2325,2364]],[[2393,2393],\\\"mapped\\\",[2326,2364]],[[2394,2394],\\\"mapped\\\",[2327,2364]],[[2395,2395],\\\"mapped\\\",[2332,2364]],[[2396,2396],\\\"mapped\\\",[2337,2364]],[[2397,2397],\\\"mapped\\\",[2338,2364]],[[2398,2398],\\\"mapped\\\",[2347,2364]],[[2399,2399],\\\"mapped\\\",[2351,2364]],[[2400,2403],\\\"valid\\\"],[[2404,2405],\\\"valid\\\",[],\\\"NV8\\\"],[[2406,2415],\\\"valid\\\"],[[2416,2416],\\\"valid\\\",[],\\\"NV8\\\"],[[2417,2418],\\\"valid\\\"],[[2419,2423],\\\"valid\\\"],[[2424,2424],\\\"valid\\\"],[[2425,2426],\\\"valid\\\"],[[2427,2428],\\\"valid\\\"],[[2429,2429],\\\"valid\\\"],[[2430,2431],\\\"valid\\\"],[[2432,2432],\\\"valid\\\"],[[2433,2435],\\\"valid\\\"],[[2436,2436],\\\"disallowed\\\"],[[2437,2444],\\\"valid\\\"],[[2445,2446],\\\"disallowed\\\"],[[2447,2448],\\\"valid\\\"],[[2449,2450],\\\"disallowed\\\"],[[2451,2472],\\\"valid\\\"],[[2473,2473],\\\"disallowed\\\"],[[2474,2480],\\\"valid\\\"],[[2481,2481],\\\"disallowed\\\"],[[2482,2482],\\\"valid\\\"],[[2483,2485],\\\"disallowed\\\"],[[2486,2489],\\\"valid\\\"],[[2490,2491],\\\"disallowed\\\"],[[2492,2492],\\\"valid\\\"],[[2493,2493],\\\"valid\\\"],[[2494,2500],\\\"valid\\\"],[[2501,2502],\\\"disallowed\\\"],[[2503,2504],\\\"valid\\\"],[[2505,2506],\\\"disallowed\\\"],[[2507,2509],\\\"valid\\\"],[[2510,2510],\\\"valid\\\"],[[2511,2518],\\\"disallowed\\\"],[[2519,2519],\\\"valid\\\"],[[2520,2523],\\\"disallowed\\\"],[[2524,2524],\\\"mapped\\\",[2465,2492]],[[2525,2525],\\\"mapped\\\",[2466,2492]],[[2526,2526],\\\"disallowed\\\"],[[2527,2527],\\\"mapped\\\",[2479,2492]],[[2528,2531],\\\"valid\\\"],[[2532,2533],\\\"disallowed\\\"],[[2534,2545],\\\"valid\\\"],[[2546,2554],\\\"valid\\\",[],\\\"NV8\\\"],[[2555,2555],\\\"valid\\\",[],\\\"NV8\\\"],[[2556,2560],\\\"disallowed\\\"],[[2561,2561],\\\"valid\\\"],[[2562,2562],\\\"valid\\\"],[[2563,2563],\\\"valid\\\"],[[2564,2564],\\\"disallowed\\\"],[[2565,2570],\\\"valid\\\"],[[2571,2574],\\\"disallowed\\\"],[[2575,2576],\\\"valid\\\"],[[2577,2578],\\\"disallowed\\\"],[[2579,2600],\\\"valid\\\"],[[2601,2601],\\\"disallowed\\\"],[[2602,2608],\\\"valid\\\"],[[2609,2609],\\\"disallowed\\\"],[[2610,2610],\\\"valid\\\"],[[2611,2611],\\\"mapped\\\",[2610,2620]],[[2612,2612],\\\"disallowed\\\"],[[2613,2613],\\\"valid\\\"],[[2614,2614],\\\"mapped\\\",[2616,2620]],[[2615,2615],\\\"disallowed\\\"],[[2616,2617],\\\"valid\\\"],[[2618,2619],\\\"disallowed\\\"],[[2620,2620],\\\"valid\\\"],[[2621,2621],\\\"disallowed\\\"],[[2622,2626],\\\"valid\\\"],[[2627,2630],\\\"disallowed\\\"],[[2631,2632],\\\"valid\\\"],[[2633,2634],\\\"disallowed\\\"],[[2635,2637],\\\"valid\\\"],[[2638,2640],\\\"disallowed\\\"],[[2641,2641],\\\"valid\\\"],[[2642,2648],\\\"disallowed\\\"],[[2649,2649],\\\"mapped\\\",[2582,2620]],[[2650,2650],\\\"mapped\\\",[2583,2620]],[[2651,2651],\\\"mapped\\\",[2588,2620]],[[2652,2652],\\\"valid\\\"],[[2653,2653],\\\"disallowed\\\"],[[2654,2654],\\\"mapped\\\",[2603,2620]],[[2655,2661],\\\"disallowed\\\"],[[2662,2676],\\\"valid\\\"],[[2677,2677],\\\"valid\\\"],[[2678,2688],\\\"disallowed\\\"],[[2689,2691],\\\"valid\\\"],[[2692,2692],\\\"disallowed\\\"],[[2693,2699],\\\"valid\\\"],[[2700,2700],\\\"valid\\\"],[[2701,2701],\\\"valid\\\"],[[2702,2702],\\\"disallowed\\\"],[[2703,2705],\\\"valid\\\"],[[2706,2706],\\\"disallowed\\\"],[[2707,2728],\\\"valid\\\"],[[2729,2729],\\\"disallowed\\\"],[[2730,2736],\\\"valid\\\"],[[2737,2737],\\\"disallowed\\\"],[[2738,2739],\\\"valid\\\"],[[2740,2740],\\\"disallowed\\\"],[[2741,2745],\\\"valid\\\"],[[2746,2747],\\\"disallowed\\\"],[[2748,2757],\\\"valid\\\"],[[2758,2758],\\\"disallowed\\\"],[[2759,2761],\\\"valid\\\"],[[2762,2762],\\\"disallowed\\\"],[[2763,2765],\\\"valid\\\"],[[2766,2767],\\\"disallowed\\\"],[[2768,2768],\\\"valid\\\"],[[2769,2783],\\\"disallowed\\\"],[[2784,2784],\\\"valid\\\"],[[2785,2787],\\\"valid\\\"],[[2788,2789],\\\"disallowed\\\"],[[2790,2799],\\\"valid\\\"],[[2800,2800],\\\"valid\\\",[],\\\"NV8\\\"],[[2801,2801],\\\"valid\\\",[],\\\"NV8\\\"],[[2802,2808],\\\"disallowed\\\"],[[2809,2809],\\\"valid\\\"],[[2810,2816],\\\"disallowed\\\"],[[2817,2819],\\\"valid\\\"],[[2820,2820],\\\"disallowed\\\"],[[2821,2828],\\\"valid\\\"],[[2829,2830],\\\"disallowed\\\"],[[2831,2832],\\\"valid\\\"],[[2833,2834],\\\"disallowed\\\"],[[2835,2856],\\\"valid\\\"],[[2857,2857],\\\"disallowed\\\"],[[2858,2864],\\\"valid\\\"],[[2865,2865],\\\"disallowed\\\"],[[2866,2867],\\\"valid\\\"],[[2868,2868],\\\"disallowed\\\"],[[2869,2869],\\\"valid\\\"],[[2870,2873],\\\"valid\\\"],[[2874,2875],\\\"disallowed\\\"],[[2876,2883],\\\"valid\\\"],[[2884,2884],\\\"valid\\\"],[[2885,2886],\\\"disallowed\\\"],[[2887,2888],\\\"valid\\\"],[[2889,2890],\\\"disallowed\\\"],[[2891,2893],\\\"valid\\\"],[[2894,2901],\\\"disallowed\\\"],[[2902,2903],\\\"valid\\\"],[[2904,2907],\\\"disallowed\\\"],[[2908,2908],\\\"mapped\\\",[2849,2876]],[[2909,2909],\\\"mapped\\\",[2850,2876]],[[2910,2910],\\\"disallowed\\\"],[[2911,2913],\\\"valid\\\"],[[2914,2915],\\\"valid\\\"],[[2916,2917],\\\"disallowed\\\"],[[2918,2927],\\\"valid\\\"],[[2928,2928],\\\"valid\\\",[],\\\"NV8\\\"],[[2929,2929],\\\"valid\\\"],[[2930,2935],\\\"valid\\\",[],\\\"NV8\\\"],[[2936,2945],\\\"disallowed\\\"],[[2946,2947],\\\"valid\\\"],[[2948,2948],\\\"disallowed\\\"],[[2949,2954],\\\"valid\\\"],[[2955,2957],\\\"disallowed\\\"],[[2958,2960],\\\"valid\\\"],[[2961,2961],\\\"disallowed\\\"],[[2962,2965],\\\"valid\\\"],[[2966,2968],\\\"disallowed\\\"],[[2969,2970],\\\"valid\\\"],[[2971,2971],\\\"disallowed\\\"],[[2972,2972],\\\"valid\\\"],[[2973,2973],\\\"disallowed\\\"],[[2974,2975],\\\"valid\\\"],[[2976,2978],\\\"disallowed\\\"],[[2979,2980],\\\"valid\\\"],[[2981,2983],\\\"disallowed\\\"],[[2984,2986],\\\"valid\\\"],[[2987,2989],\\\"disallowed\\\"],[[2990,2997],\\\"valid\\\"],[[2998,2998],\\\"valid\\\"],[[2999,3001],\\\"valid\\\"],[[3002,3005],\\\"disallowed\\\"],[[3006,3010],\\\"valid\\\"],[[3011,3013],\\\"disallowed\\\"],[[3014,3016],\\\"valid\\\"],[[3017,3017],\\\"disallowed\\\"],[[3018,3021],\\\"valid\\\"],[[3022,3023],\\\"disallowed\\\"],[[3024,3024],\\\"valid\\\"],[[3025,3030],\\\"disallowed\\\"],[[3031,3031],\\\"valid\\\"],[[3032,3045],\\\"disallowed\\\"],[[3046,3046],\\\"valid\\\"],[[3047,3055],\\\"valid\\\"],[[3056,3058],\\\"valid\\\",[],\\\"NV8\\\"],[[3059,3066],\\\"valid\\\",[],\\\"NV8\\\"],[[3067,3071],\\\"disallowed\\\"],[[3072,3072],\\\"valid\\\"],[[3073,3075],\\\"valid\\\"],[[3076,3076],\\\"disallowed\\\"],[[3077,3084],\\\"valid\\\"],[[3085,3085],\\\"disallowed\\\"],[[3086,3088],\\\"valid\\\"],[[3089,3089],\\\"disallowed\\\"],[[3090,3112],\\\"valid\\\"],[[3113,3113],\\\"disallowed\\\"],[[3114,3123],\\\"valid\\\"],[[3124,3124],\\\"valid\\\"],[[3125,3129],\\\"valid\\\"],[[3130,3132],\\\"disallowed\\\"],[[3133,3133],\\\"valid\\\"],[[3134,3140],\\\"valid\\\"],[[3141,3141],\\\"disallowed\\\"],[[3142,3144],\\\"valid\\\"],[[3145,3145],\\\"disallowed\\\"],[[3146,3149],\\\"valid\\\"],[[3150,3156],\\\"disallowed\\\"],[[3157,3158],\\\"valid\\\"],[[3159,3159],\\\"disallowed\\\"],[[3160,3161],\\\"valid\\\"],[[3162,3162],\\\"valid\\\"],[[3163,3167],\\\"disallowed\\\"],[[3168,3169],\\\"valid\\\"],[[3170,3171],\\\"valid\\\"],[[3172,3173],\\\"disallowed\\\"],[[3174,3183],\\\"valid\\\"],[[3184,3191],\\\"disallowed\\\"],[[3192,3199],\\\"valid\\\",[],\\\"NV8\\\"],[[3200,3200],\\\"disallowed\\\"],[[3201,3201],\\\"valid\\\"],[[3202,3203],\\\"valid\\\"],[[3204,3204],\\\"disallowed\\\"],[[3205,3212],\\\"valid\\\"],[[3213,3213],\\\"disallowed\\\"],[[3214,3216],\\\"valid\\\"],[[3217,3217],\\\"disallowed\\\"],[[3218,3240],\\\"valid\\\"],[[3241,3241],\\\"disallowed\\\"],[[3242,3251],\\\"valid\\\"],[[3252,3252],\\\"disallowed\\\"],[[3253,3257],\\\"valid\\\"],[[3258,3259],\\\"disallowed\\\"],[[3260,3261],\\\"valid\\\"],[[3262,3268],\\\"valid\\\"],[[3269,3269],\\\"disallowed\\\"],[[3270,3272],\\\"valid\\\"],[[3273,3273],\\\"disallowed\\\"],[[3274,3277],\\\"valid\\\"],[[3278,3284],\\\"disallowed\\\"],[[3285,3286],\\\"valid\\\"],[[3287,3293],\\\"disallowed\\\"],[[3294,3294],\\\"valid\\\"],[[3295,3295],\\\"disallowed\\\"],[[3296,3297],\\\"valid\\\"],[[3298,3299],\\\"valid\\\"],[[3300,3301],\\\"disallowed\\\"],[[3302,3311],\\\"valid\\\"],[[3312,3312],\\\"disallowed\\\"],[[3313,3314],\\\"valid\\\"],[[3315,3328],\\\"disallowed\\\"],[[3329,3329],\\\"valid\\\"],[[3330,3331],\\\"valid\\\"],[[3332,3332],\\\"disallowed\\\"],[[3333,3340],\\\"valid\\\"],[[3341,3341],\\\"disallowed\\\"],[[3342,3344],\\\"valid\\\"],[[3345,3345],\\\"disallowed\\\"],[[3346,3368],\\\"valid\\\"],[[3369,3369],\\\"valid\\\"],[[3370,3385],\\\"valid\\\"],[[3386,3386],\\\"valid\\\"],[[3387,3388],\\\"disallowed\\\"],[[3389,3389],\\\"valid\\\"],[[3390,3395],\\\"valid\\\"],[[3396,3396],\\\"valid\\\"],[[3397,3397],\\\"disallowed\\\"],[[3398,3400],\\\"valid\\\"],[[3401,3401],\\\"disallowed\\\"],[[3402,3405],\\\"valid\\\"],[[3406,3406],\\\"valid\\\"],[[3407,3414],\\\"disallowed\\\"],[[3415,3415],\\\"valid\\\"],[[3416,3422],\\\"disallowed\\\"],[[3423,3423],\\\"valid\\\"],[[3424,3425],\\\"valid\\\"],[[3426,3427],\\\"valid\\\"],[[3428,3429],\\\"disallowed\\\"],[[3430,3439],\\\"valid\\\"],[[3440,3445],\\\"valid\\\",[],\\\"NV8\\\"],[[3446,3448],\\\"disallowed\\\"],[[3449,3449],\\\"valid\\\",[],\\\"NV8\\\"],[[3450,3455],\\\"valid\\\"],[[3456,3457],\\\"disallowed\\\"],[[3458,3459],\\\"valid\\\"],[[3460,3460],\\\"disallowed\\\"],[[3461,3478],\\\"valid\\\"],[[3479,3481],\\\"disallowed\\\"],[[3482,3505],\\\"valid\\\"],[[3506,3506],\\\"disallowed\\\"],[[3507,3515],\\\"valid\\\"],[[3516,3516],\\\"disallowed\\\"],[[3517,3517],\\\"valid\\\"],[[3518,3519],\\\"disallowed\\\"],[[3520,3526],\\\"valid\\\"],[[3527,3529],\\\"disallowed\\\"],[[3530,3530],\\\"valid\\\"],[[3531,3534],\\\"disallowed\\\"],[[3535,3540],\\\"valid\\\"],[[3541,3541],\\\"disallowed\\\"],[[3542,3542],\\\"valid\\\"],[[3543,3543],\\\"disallowed\\\"],[[3544,3551],\\\"valid\\\"],[[3552,3557],\\\"disallowed\\\"],[[3558,3567],\\\"valid\\\"],[[3568,3569],\\\"disallowed\\\"],[[3570,3571],\\\"valid\\\"],[[3572,3572],\\\"valid\\\",[],\\\"NV8\\\"],[[3573,3584],\\\"disallowed\\\"],[[3585,3634],\\\"valid\\\"],[[3635,3635],\\\"mapped\\\",[3661,3634]],[[3636,3642],\\\"valid\\\"],[[3643,3646],\\\"disallowed\\\"],[[3647,3647],\\\"valid\\\",[],\\\"NV8\\\"],[[3648,3662],\\\"valid\\\"],[[3663,3663],\\\"valid\\\",[],\\\"NV8\\\"],[[3664,3673],\\\"valid\\\"],[[3674,3675],\\\"valid\\\",[],\\\"NV8\\\"],[[3676,3712],\\\"disallowed\\\"],[[3713,3714],\\\"valid\\\"],[[3715,3715],\\\"disallowed\\\"],[[3716,3716],\\\"valid\\\"],[[3717,3718],\\\"disallowed\\\"],[[3719,3720],\\\"valid\\\"],[[3721,3721],\\\"disallowed\\\"],[[3722,3722],\\\"valid\\\"],[[3723,3724],\\\"disallowed\\\"],[[3725,3725],\\\"valid\\\"],[[3726,3731],\\\"disallowed\\\"],[[3732,3735],\\\"valid\\\"],[[3736,3736],\\\"disallowed\\\"],[[3737,3743],\\\"valid\\\"],[[3744,3744],\\\"disallowed\\\"],[[3745,3747],\\\"valid\\\"],[[3748,3748],\\\"disallowed\\\"],[[3749,3749],\\\"valid\\\"],[[3750,3750],\\\"disallowed\\\"],[[3751,3751],\\\"valid\\\"],[[3752,3753],\\\"disallowed\\\"],[[3754,3755],\\\"valid\\\"],[[3756,3756],\\\"disallowed\\\"],[[3757,3762],\\\"valid\\\"],[[3763,3763],\\\"mapped\\\",[3789,3762]],[[3764,3769],\\\"valid\\\"],[[3770,3770],\\\"disallowed\\\"],[[3771,3773],\\\"valid\\\"],[[3774,3775],\\\"disallowed\\\"],[[3776,3780],\\\"valid\\\"],[[3781,3781],\\\"disallowed\\\"],[[3782,3782],\\\"valid\\\"],[[3783,3783],\\\"disallowed\\\"],[[3784,3789],\\\"valid\\\"],[[3790,3791],\\\"disallowed\\\"],[[3792,3801],\\\"valid\\\"],[[3802,3803],\\\"disallowed\\\"],[[3804,3804],\\\"mapped\\\",[3755,3737]],[[3805,3805],\\\"mapped\\\",[3755,3745]],[[3806,3807],\\\"valid\\\"],[[3808,3839],\\\"disallowed\\\"],[[3840,3840],\\\"valid\\\"],[[3841,3850],\\\"valid\\\",[],\\\"NV8\\\"],[[3851,3851],\\\"valid\\\"],[[3852,3852],\\\"mapped\\\",[3851]],[[3853,3863],\\\"valid\\\",[],\\\"NV8\\\"],[[3864,3865],\\\"valid\\\"],[[3866,3871],\\\"valid\\\",[],\\\"NV8\\\"],[[3872,3881],\\\"valid\\\"],[[3882,3892],\\\"valid\\\",[],\\\"NV8\\\"],[[3893,3893],\\\"valid\\\"],[[3894,3894],\\\"valid\\\",[],\\\"NV8\\\"],[[3895,3895],\\\"valid\\\"],[[3896,3896],\\\"valid\\\",[],\\\"NV8\\\"],[[3897,3897],\\\"valid\\\"],[[3898,3901],\\\"valid\\\",[],\\\"NV8\\\"],[[3902,3906],\\\"valid\\\"],[[3907,3907],\\\"mapped\\\",[3906,4023]],[[3908,3911],\\\"valid\\\"],[[3912,3912],\\\"disallowed\\\"],[[3913,3916],\\\"valid\\\"],[[3917,3917],\\\"mapped\\\",[3916,4023]],[[3918,3921],\\\"valid\\\"],[[3922,3922],\\\"mapped\\\",[3921,4023]],[[3923,3926],\\\"valid\\\"],[[3927,3927],\\\"mapped\\\",[3926,4023]],[[3928,3931],\\\"valid\\\"],[[3932,3932],\\\"mapped\\\",[3931,4023]],[[3933,3944],\\\"valid\\\"],[[3945,3945],\\\"mapped\\\",[3904,4021]],[[3946,3946],\\\"valid\\\"],[[3947,3948],\\\"valid\\\"],[[3949,3952],\\\"disallowed\\\"],[[3953,3954],\\\"valid\\\"],[[3955,3955],\\\"mapped\\\",[3953,3954]],[[3956,3956],\\\"valid\\\"],[[3957,3957],\\\"mapped\\\",[3953,3956]],[[3958,3958],\\\"mapped\\\",[4018,3968]],[[3959,3959],\\\"mapped\\\",[4018,3953,3968]],[[3960,3960],\\\"mapped\\\",[4019,3968]],[[3961,3961],\\\"mapped\\\",[4019,3953,3968]],[[3962,3968],\\\"valid\\\"],[[3969,3969],\\\"mapped\\\",[3953,3968]],[[3970,3972],\\\"valid\\\"],[[3973,3973],\\\"valid\\\",[],\\\"NV8\\\"],[[3974,3979],\\\"valid\\\"],[[3980,3983],\\\"valid\\\"],[[3984,3986],\\\"valid\\\"],[[3987,3987],\\\"mapped\\\",[3986,4023]],[[3988,3989],\\\"valid\\\"],[[3990,3990],\\\"valid\\\"],[[3991,3991],\\\"valid\\\"],[[3992,3992],\\\"disallowed\\\"],[[3993,3996],\\\"valid\\\"],[[3997,3997],\\\"mapped\\\",[3996,4023]],[[3998,4001],\\\"valid\\\"],[[4002,4002],\\\"mapped\\\",[4001,4023]],[[4003,4006],\\\"valid\\\"],[[4007,4007],\\\"mapped\\\",[4006,4023]],[[4008,4011],\\\"valid\\\"],[[4012,4012],\\\"mapped\\\",[4011,4023]],[[4013,4013],\\\"valid\\\"],[[4014,4016],\\\"valid\\\"],[[4017,4023],\\\"valid\\\"],[[4024,4024],\\\"valid\\\"],[[4025,4025],\\\"mapped\\\",[3984,4021]],[[4026,4028],\\\"valid\\\"],[[4029,4029],\\\"disallowed\\\"],[[4030,4037],\\\"valid\\\",[],\\\"NV8\\\"],[[4038,4038],\\\"valid\\\"],[[4039,4044],\\\"valid\\\",[],\\\"NV8\\\"],[[4045,4045],\\\"disallowed\\\"],[[4046,4046],\\\"valid\\\",[],\\\"NV8\\\"],[[4047,4047],\\\"valid\\\",[],\\\"NV8\\\"],[[4048,4049],\\\"valid\\\",[],\\\"NV8\\\"],[[4050,4052],\\\"valid\\\",[],\\\"NV8\\\"],[[4053,4056],\\\"valid\\\",[],\\\"NV8\\\"],[[4057,4058],\\\"valid\\\",[],\\\"NV8\\\"],[[4059,4095],\\\"disallowed\\\"],[[4096,4129],\\\"valid\\\"],[[4130,4130],\\\"valid\\\"],[[4131,4135],\\\"valid\\\"],[[4136,4136],\\\"valid\\\"],[[4137,4138],\\\"valid\\\"],[[4139,4139],\\\"valid\\\"],[[4140,4146],\\\"valid\\\"],[[4147,4149],\\\"valid\\\"],[[4150,4153],\\\"valid\\\"],[[4154,4159],\\\"valid\\\"],[[4160,4169],\\\"valid\\\"],[[4170,4175],\\\"valid\\\",[],\\\"NV8\\\"],[[4176,4185],\\\"valid\\\"],[[4186,4249],\\\"valid\\\"],[[4250,4253],\\\"valid\\\"],[[4254,4255],\\\"valid\\\",[],\\\"NV8\\\"],[[4256,4293],\\\"disallowed\\\"],[[4294,4294],\\\"disallowed\\\"],[[4295,4295],\\\"mapped\\\",[11559]],[[4296,4300],\\\"disallowed\\\"],[[4301,4301],\\\"mapped\\\",[11565]],[[4302,4303],\\\"disallowed\\\"],[[4304,4342],\\\"valid\\\"],[[4343,4344],\\\"valid\\\"],[[4345,4346],\\\"valid\\\"],[[4347,4347],\\\"valid\\\",[],\\\"NV8\\\"],[[4348,4348],\\\"mapped\\\",[4316]],[[4349,4351],\\\"valid\\\"],[[4352,4441],\\\"valid\\\",[],\\\"NV8\\\"],[[4442,4446],\\\"valid\\\",[],\\\"NV8\\\"],[[4447,4448],\\\"disallowed\\\"],[[4449,4514],\\\"valid\\\",[],\\\"NV8\\\"],[[4515,4519],\\\"valid\\\",[],\\\"NV8\\\"],[[4520,4601],\\\"valid\\\",[],\\\"NV8\\\"],[[4602,4607],\\\"valid\\\",[],\\\"NV8\\\"],[[4608,4614],\\\"valid\\\"],[[4615,4615],\\\"valid\\\"],[[4616,4678],\\\"valid\\\"],[[4679,4679],\\\"valid\\\"],[[4680,4680],\\\"valid\\\"],[[4681,4681],\\\"disallowed\\\"],[[4682,4685],\\\"valid\\\"],[[4686,4687],\\\"disallowed\\\"],[[4688,4694],\\\"valid\\\"],[[4695,4695],\\\"disallowed\\\"],[[4696,4696],\\\"valid\\\"],[[4697,4697],\\\"disallowed\\\"],[[4698,4701],\\\"valid\\\"],[[4702,4703],\\\"disallowed\\\"],[[4704,4742],\\\"valid\\\"],[[4743,4743],\\\"valid\\\"],[[4744,4744],\\\"valid\\\"],[[4745,4745],\\\"disallowed\\\"],[[4746,4749],\\\"valid\\\"],[[4750,4751],\\\"disallowed\\\"],[[4752,4782],\\\"valid\\\"],[[4783,4783],\\\"valid\\\"],[[4784,4784],\\\"valid\\\"],[[4785,4785],\\\"disallowed\\\"],[[4786,4789],\\\"valid\\\"],[[4790,4791],\\\"disallowed\\\"],[[4792,4798],\\\"valid\\\"],[[4799,4799],\\\"disallowed\\\"],[[4800,4800],\\\"valid\\\"],[[4801,4801],\\\"disallowed\\\"],[[4802,4805],\\\"valid\\\"],[[4806,4807],\\\"disallowed\\\"],[[4808,4814],\\\"valid\\\"],[[4815,4815],\\\"valid\\\"],[[4816,4822],\\\"valid\\\"],[[4823,4823],\\\"disallowed\\\"],[[4824,4846],\\\"valid\\\"],[[4847,4847],\\\"valid\\\"],[[4848,4878],\\\"valid\\\"],[[4879,4879],\\\"valid\\\"],[[4880,4880],\\\"valid\\\"],[[4881,4881],\\\"disallowed\\\"],[[4882,4885],\\\"valid\\\"],[[4886,4887],\\\"disallowed\\\"],[[4888,4894],\\\"valid\\\"],[[4895,4895],\\\"valid\\\"],[[4896,4934],\\\"valid\\\"],[[4935,4935],\\\"valid\\\"],[[4936,4954],\\\"valid\\\"],[[4955,4956],\\\"disallowed\\\"],[[4957,4958],\\\"valid\\\"],[[4959,4959],\\\"valid\\\"],[[4960,4960],\\\"valid\\\",[],\\\"NV8\\\"],[[4961,4988],\\\"valid\\\",[],\\\"NV8\\\"],[[4989,4991],\\\"disallowed\\\"],[[4992,5007],\\\"valid\\\"],[[5008,5017],\\\"valid\\\",[],\\\"NV8\\\"],[[5018,5023],\\\"disallowed\\\"],[[5024,5108],\\\"valid\\\"],[[5109,5109],\\\"valid\\\"],[[5110,5111],\\\"disallowed\\\"],[[5112,5112],\\\"mapped\\\",[5104]],[[5113,5113],\\\"mapped\\\",[5105]],[[5114,5114],\\\"mapped\\\",[5106]],[[5115,5115],\\\"mapped\\\",[5107]],[[5116,5116],\\\"mapped\\\",[5108]],[[5117,5117],\\\"mapped\\\",[5109]],[[5118,5119],\\\"disallowed\\\"],[[5120,5120],\\\"valid\\\",[],\\\"NV8\\\"],[[5121,5740],\\\"valid\\\"],[[5741,5742],\\\"valid\\\",[],\\\"NV8\\\"],[[5743,5750],\\\"valid\\\"],[[5751,5759],\\\"valid\\\"],[[5760,5760],\\\"disallowed\\\"],[[5761,5786],\\\"valid\\\"],[[5787,5788],\\\"valid\\\",[],\\\"NV8\\\"],[[5789,5791],\\\"disallowed\\\"],[[5792,5866],\\\"valid\\\"],[[5867,5872],\\\"valid\\\",[],\\\"NV8\\\"],[[5873,5880],\\\"valid\\\"],[[5881,5887],\\\"disallowed\\\"],[[5888,5900],\\\"valid\\\"],[[5901,5901],\\\"disallowed\\\"],[[5902,5908],\\\"valid\\\"],[[5909,5919],\\\"disallowed\\\"],[[5920,5940],\\\"valid\\\"],[[5941,5942],\\\"valid\\\",[],\\\"NV8\\\"],[[5943,5951],\\\"disallowed\\\"],[[5952,5971],\\\"valid\\\"],[[5972,5983],\\\"disallowed\\\"],[[5984,5996],\\\"valid\\\"],[[5997,5997],\\\"disallowed\\\"],[[5998,6000],\\\"valid\\\"],[[6001,6001],\\\"disallowed\\\"],[[6002,6003],\\\"valid\\\"],[[6004,6015],\\\"disallowed\\\"],[[6016,6067],\\\"valid\\\"],[[6068,6069],\\\"disallowed\\\"],[[6070,6099],\\\"valid\\\"],[[6100,6102],\\\"valid\\\",[],\\\"NV8\\\"],[[6103,6103],\\\"valid\\\"],[[6104,6107],\\\"valid\\\",[],\\\"NV8\\\"],[[6108,6108],\\\"valid\\\"],[[6109,6109],\\\"valid\\\"],[[6110,6111],\\\"disallowed\\\"],[[6112,6121],\\\"valid\\\"],[[6122,6127],\\\"disallowed\\\"],[[6128,6137],\\\"valid\\\",[],\\\"NV8\\\"],[[6138,6143],\\\"disallowed\\\"],[[6144,6149],\\\"valid\\\",[],\\\"NV8\\\"],[[6150,6150],\\\"disallowed\\\"],[[6151,6154],\\\"valid\\\",[],\\\"NV8\\\"],[[6155,6157],\\\"ignored\\\"],[[6158,6158],\\\"disallowed\\\"],[[6159,6159],\\\"disallowed\\\"],[[6160,6169],\\\"valid\\\"],[[6170,6175],\\\"disallowed\\\"],[[6176,6263],\\\"valid\\\"],[[6264,6271],\\\"disallowed\\\"],[[6272,6313],\\\"valid\\\"],[[6314,6314],\\\"valid\\\"],[[6315,6319],\\\"disallowed\\\"],[[6320,6389],\\\"valid\\\"],[[6390,6399],\\\"disallowed\\\"],[[6400,6428],\\\"valid\\\"],[[6429,6430],\\\"valid\\\"],[[6431,6431],\\\"disallowed\\\"],[[6432,6443],\\\"valid\\\"],[[6444,6447],\\\"disallowed\\\"],[[6448,6459],\\\"valid\\\"],[[6460,6463],\\\"disallowed\\\"],[[6464,6464],\\\"valid\\\",[],\\\"NV8\\\"],[[6465,6467],\\\"disallowed\\\"],[[6468,6469],\\\"valid\\\",[],\\\"NV8\\\"],[[6470,6509],\\\"valid\\\"],[[6510,6511],\\\"disallowed\\\"],[[6512,6516],\\\"valid\\\"],[[6517,6527],\\\"disallowed\\\"],[[6528,6569],\\\"valid\\\"],[[6570,6571],\\\"valid\\\"],[[6572,6575],\\\"disallowed\\\"],[[6576,6601],\\\"valid\\\"],[[6602,6607],\\\"disallowed\\\"],[[6608,6617],\\\"valid\\\"],[[6618,6618],\\\"valid\\\",[],\\\"XV8\\\"],[[6619,6621],\\\"disallowed\\\"],[[6622,6623],\\\"valid\\\",[],\\\"NV8\\\"],[[6624,6655],\\\"valid\\\",[],\\\"NV8\\\"],[[6656,6683],\\\"valid\\\"],[[6684,6685],\\\"disallowed\\\"],[[6686,6687],\\\"valid\\\",[],\\\"NV8\\\"],[[6688,6750],\\\"valid\\\"],[[6751,6751],\\\"disallowed\\\"],[[6752,6780],\\\"valid\\\"],[[6781,6782],\\\"disallowed\\\"],[[6783,6793],\\\"valid\\\"],[[6794,6799],\\\"disallowed\\\"],[[6800,6809],\\\"valid\\\"],[[6810,6815],\\\"disallowed\\\"],[[6816,6822],\\\"valid\\\",[],\\\"NV8\\\"],[[6823,6823],\\\"valid\\\"],[[6824,6829],\\\"valid\\\",[],\\\"NV8\\\"],[[6830,6831],\\\"disallowed\\\"],[[6832,6845],\\\"valid\\\"],[[6846,6846],\\\"valid\\\",[],\\\"NV8\\\"],[[6847,6911],\\\"disallowed\\\"],[[6912,6987],\\\"valid\\\"],[[6988,6991],\\\"disallowed\\\"],[[6992,7001],\\\"valid\\\"],[[7002,7018],\\\"valid\\\",[],\\\"NV8\\\"],[[7019,7027],\\\"valid\\\"],[[7028,7036],\\\"valid\\\",[],\\\"NV8\\\"],[[7037,7039],\\\"disallowed\\\"],[[7040,7082],\\\"valid\\\"],[[7083,7085],\\\"valid\\\"],[[7086,7097],\\\"valid\\\"],[[7098,7103],\\\"valid\\\"],[[7104,7155],\\\"valid\\\"],[[7156,7163],\\\"disallowed\\\"],[[7164,7167],\\\"valid\\\",[],\\\"NV8\\\"],[[7168,7223],\\\"valid\\\"],[[7224,7226],\\\"disallowed\\\"],[[7227,7231],\\\"valid\\\",[],\\\"NV8\\\"],[[7232,7241],\\\"valid\\\"],[[7242,7244],\\\"disallowed\\\"],[[7245,7293],\\\"valid\\\"],[[7294,7295],\\\"valid\\\",[],\\\"NV8\\\"],[[7296,7359],\\\"disallowed\\\"],[[7360,7367],\\\"valid\\\",[],\\\"NV8\\\"],[[7368,7375],\\\"disallowed\\\"],[[7376,7378],\\\"valid\\\"],[[7379,7379],\\\"valid\\\",[],\\\"NV8\\\"],[[7380,7410],\\\"valid\\\"],[[7411,7414],\\\"valid\\\"],[[7415,7415],\\\"disallowed\\\"],[[7416,7417],\\\"valid\\\"],[[7418,7423],\\\"disallowed\\\"],[[7424,7467],\\\"valid\\\"],[[7468,7468],\\\"mapped\\\",[97]],[[7469,7469],\\\"mapped\\\",[230]],[[7470,7470],\\\"mapped\\\",[98]],[[7471,7471],\\\"valid\\\"],[[7472,7472],\\\"mapped\\\",[100]],[[7473,7473],\\\"mapped\\\",[101]],[[7474,7474],\\\"mapped\\\",[477]],[[7475,7475],\\\"mapped\\\",[103]],[[7476,7476],\\\"mapped\\\",[104]],[[7477,7477],\\\"mapped\\\",[105]],[[7478,7478],\\\"mapped\\\",[106]],[[7479,7479],\\\"mapped\\\",[107]],[[7480,7480],\\\"mapped\\\",[108]],[[7481,7481],\\\"mapped\\\",[109]],[[7482,7482],\\\"mapped\\\",[110]],[[7483,7483],\\\"valid\\\"],[[7484,7484],\\\"mapped\\\",[111]],[[7485,7485],\\\"mapped\\\",[547]],[[7486,7486],\\\"mapped\\\",[112]],[[7487,7487],\\\"mapped\\\",[114]],[[7488,7488],\\\"mapped\\\",[116]],[[7489,7489],\\\"mapped\\\",[117]],[[7490,7490],\\\"mapped\\\",[119]],[[7491,7491],\\\"mapped\\\",[97]],[[7492,7492],\\\"mapped\\\",[592]],[[7493,7493],\\\"mapped\\\",[593]],[[7494,7494],\\\"mapped\\\",[7426]],[[7495,7495],\\\"mapped\\\",[98]],[[7496,7496],\\\"mapped\\\",[100]],[[7497,7497],\\\"mapped\\\",[101]],[[7498,7498],\\\"mapped\\\",[601]],[[7499,7499],\\\"mapped\\\",[603]],[[7500,7500],\\\"mapped\\\",[604]],[[7501,7501],\\\"mapped\\\",[103]],[[7502,7502],\\\"valid\\\"],[[7503,7503],\\\"mapped\\\",[107]],[[7504,7504],\\\"mapped\\\",[109]],[[7505,7505],\\\"mapped\\\",[331]],[[7506,7506],\\\"mapped\\\",[111]],[[7507,7507],\\\"mapped\\\",[596]],[[7508,7508],\\\"mapped\\\",[7446]],[[7509,7509],\\\"mapped\\\",[7447]],[[7510,7510],\\\"mapped\\\",[112]],[[7511,7511],\\\"mapped\\\",[116]],[[7512,7512],\\\"mapped\\\",[117]],[[7513,7513],\\\"mapped\\\",[7453]],[[7514,7514],\\\"mapped\\\",[623]],[[7515,7515],\\\"mapped\\\",[118]],[[7516,7516],\\\"mapped\\\",[7461]],[[7517,7517],\\\"mapped\\\",[946]],[[7518,7518],\\\"mapped\\\",[947]],[[7519,7519],\\\"mapped\\\",[948]],[[7520,7520],\\\"mapped\\\",[966]],[[7521,7521],\\\"mapped\\\",[967]],[[7522,7522],\\\"mapped\\\",[105]],[[7523,7523],\\\"mapped\\\",[114]],[[7524,7524],\\\"mapped\\\",[117]],[[7525,7525],\\\"mapped\\\",[118]],[[7526,7526],\\\"mapped\\\",[946]],[[7527,7527],\\\"mapped\\\",[947]],[[7528,7528],\\\"mapped\\\",[961]],[[7529,7529],\\\"mapped\\\",[966]],[[7530,7530],\\\"mapped\\\",[967]],[[7531,7531],\\\"valid\\\"],[[7532,7543],\\\"valid\\\"],[[7544,7544],\\\"mapped\\\",[1085]],[[7545,7578],\\\"valid\\\"],[[7579,7579],\\\"mapped\\\",[594]],[[7580,7580],\\\"mapped\\\",[99]],[[7581,7581],\\\"mapped\\\",[597]],[[7582,7582],\\\"mapped\\\",[240]],[[7583,7583],\\\"mapped\\\",[604]],[[7584,7584],\\\"mapped\\\",[102]],[[7585,7585],\\\"mapped\\\",[607]],[[7586,7586],\\\"mapped\\\",[609]],[[7587,7587],\\\"mapped\\\",[613]],[[7588,7588],\\\"mapped\\\",[616]],[[7589,7589],\\\"mapped\\\",[617]],[[7590,7590],\\\"mapped\\\",[618]],[[7591,7591],\\\"mapped\\\",[7547]],[[7592,7592],\\\"mapped\\\",[669]],[[7593,7593],\\\"mapped\\\",[621]],[[7594,7594],\\\"mapped\\\",[7557]],[[7595,7595],\\\"mapped\\\",[671]],[[7596,7596],\\\"mapped\\\",[625]],[[7597,7597],\\\"mapped\\\",[624]],[[7598,7598],\\\"mapped\\\",[626]],[[7599,7599],\\\"mapped\\\",[627]],[[7600,7600],\\\"mapped\\\",[628]],[[7601,7601],\\\"mapped\\\",[629]],[[7602,7602],\\\"mapped\\\",[632]],[[7603,7603],\\\"mapped\\\",[642]],[[7604,7604],\\\"mapped\\\",[643]],[[7605,7605],\\\"mapped\\\",[427]],[[7606,7606],\\\"mapped\\\",[649]],[[7607,7607],\\\"mapped\\\",[650]],[[7608,7608],\\\"mapped\\\",[7452]],[[7609,7609],\\\"mapped\\\",[651]],[[7610,7610],\\\"mapped\\\",[652]],[[7611,7611],\\\"mapped\\\",[122]],[[7612,7612],\\\"mapped\\\",[656]],[[7613,7613],\\\"mapped\\\",[657]],[[7614,7614],\\\"mapped\\\",[658]],[[7615,7615],\\\"mapped\\\",[952]],[[7616,7619],\\\"valid\\\"],[[7620,7626],\\\"valid\\\"],[[7627,7654],\\\"valid\\\"],[[7655,7669],\\\"valid\\\"],[[7670,7675],\\\"disallowed\\\"],[[7676,7676],\\\"valid\\\"],[[7677,7677],\\\"valid\\\"],[[7678,7679],\\\"valid\\\"],[[7680,7680],\\\"mapped\\\",[7681]],[[7681,7681],\\\"valid\\\"],[[7682,7682],\\\"mapped\\\",[7683]],[[7683,7683],\\\"valid\\\"],[[7684,7684],\\\"mapped\\\",[7685]],[[7685,7685],\\\"valid\\\"],[[7686,7686],\\\"mapped\\\",[7687]],[[7687,7687],\\\"valid\\\"],[[7688,7688],\\\"mapped\\\",[7689]],[[7689,7689],\\\"valid\\\"],[[7690,7690],\\\"mapped\\\",[7691]],[[7691,7691],\\\"valid\\\"],[[7692,7692],\\\"mapped\\\",[7693]],[[7693,7693],\\\"valid\\\"],[[7694,7694],\\\"mapped\\\",[7695]],[[7695,7695],\\\"valid\\\"],[[7696,7696],\\\"mapped\\\",[7697]],[[7697,7697],\\\"valid\\\"],[[7698,7698],\\\"mapped\\\",[7699]],[[7699,7699],\\\"valid\\\"],[[7700,7700],\\\"mapped\\\",[7701]],[[7701,7701],\\\"valid\\\"],[[7702,7702],\\\"mapped\\\",[7703]],[[7703,7703],\\\"valid\\\"],[[7704,7704],\\\"mapped\\\",[7705]],[[7705,7705],\\\"valid\\\"],[[7706,7706],\\\"mapped\\\",[7707]],[[7707,7707],\\\"valid\\\"],[[7708,7708],\\\"mapped\\\",[7709]],[[7709,7709],\\\"valid\\\"],[[7710,7710],\\\"mapped\\\",[7711]],[[7711,7711],\\\"valid\\\"],[[7712,7712],\\\"mapped\\\",[7713]],[[7713,7713],\\\"valid\\\"],[[7714,7714],\\\"mapped\\\",[7715]],[[7715,7715],\\\"valid\\\"],[[7716,7716],\\\"mapped\\\",[7717]],[[7717,7717],\\\"valid\\\"],[[7718,7718],\\\"mapped\\\",[7719]],[[7719,7719],\\\"valid\\\"],[[7720,7720],\\\"mapped\\\",[7721]],[[7721,7721],\\\"valid\\\"],[[7722,7722],\\\"mapped\\\",[7723]],[[7723,7723],\\\"valid\\\"],[[7724,7724],\\\"mapped\\\",[7725]],[[7725,7725],\\\"valid\\\"],[[7726,7726],\\\"mapped\\\",[7727]],[[7727,7727],\\\"valid\\\"],[[7728,7728],\\\"mapped\\\",[7729]],[[7729,7729],\\\"valid\\\"],[[7730,7730],\\\"mapped\\\",[7731]],[[7731,7731],\\\"valid\\\"],[[7732,7732],\\\"mapped\\\",[7733]],[[7733,7733],\\\"valid\\\"],[[7734,7734],\\\"mapped\\\",[7735]],[[7735,7735],\\\"valid\\\"],[[7736,7736],\\\"mapped\\\",[7737]],[[7737,7737],\\\"valid\\\"],[[7738,7738],\\\"mapped\\\",[7739]],[[7739,7739],\\\"valid\\\"],[[7740,7740],\\\"mapped\\\",[7741]],[[7741,7741],\\\"valid\\\"],[[7742,7742],\\\"mapped\\\",[7743]],[[7743,7743],\\\"valid\\\"],[[7744,7744],\\\"mapped\\\",[7745]],[[7745,7745],\\\"valid\\\"],[[7746,7746],\\\"mapped\\\",[7747]],[[7747,7747],\\\"valid\\\"],[[7748,7748],\\\"mapped\\\",[7749]],[[7749,7749],\\\"valid\\\"],[[7750,7750],\\\"mapped\\\",[7751]],[[7751,7751],\\\"valid\\\"],[[7752,7752],\\\"mapped\\\",[7753]],[[7753,7753],\\\"valid\\\"],[[7754,7754],\\\"mapped\\\",[7755]],[[7755,7755],\\\"valid\\\"],[[7756,7756],\\\"mapped\\\",[7757]],[[7757,7757],\\\"valid\\\"],[[7758,7758],\\\"mapped\\\",[7759]],[[7759,7759],\\\"valid\\\"],[[7760,7760],\\\"mapped\\\",[7761]],[[7761,7761],\\\"valid\\\"],[[7762,7762],\\\"mapped\\\",[7763]],[[7763,7763],\\\"valid\\\"],[[7764,7764],\\\"mapped\\\",[7765]],[[7765,7765],\\\"valid\\\"],[[7766,7766],\\\"mapped\\\",[7767]],[[7767,7767],\\\"valid\\\"],[[7768,7768],\\\"mapped\\\",[7769]],[[7769,7769],\\\"valid\\\"],[[7770,7770],\\\"mapped\\\",[7771]],[[7771,7771],\\\"valid\\\"],[[7772,7772],\\\"mapped\\\",[7773]],[[7773,7773],\\\"valid\\\"],[[7774,7774],\\\"mapped\\\",[7775]],[[7775,7775],\\\"valid\\\"],[[7776,7776],\\\"mapped\\\",[7777]],[[7777,7777],\\\"valid\\\"],[[7778,7778],\\\"mapped\\\",[7779]],[[7779,7779],\\\"valid\\\"],[[7780,7780],\\\"mapped\\\",[7781]],[[7781,7781],\\\"valid\\\"],[[7782,7782],\\\"mapped\\\",[7783]],[[7783,7783],\\\"valid\\\"],[[7784,7784],\\\"mapped\\\",[7785]],[[7785,7785],\\\"valid\\\"],[[7786,7786],\\\"mapped\\\",[7787]],[[7787,7787],\\\"valid\\\"],[[7788,7788],\\\"mapped\\\",[7789]],[[7789,7789],\\\"valid\\\"],[[7790,7790],\\\"mapped\\\",[7791]],[[7791,7791],\\\"valid\\\"],[[7792,7792],\\\"mapped\\\",[7793]],[[7793,7793],\\\"valid\\\"],[[7794,7794],\\\"mapped\\\",[7795]],[[7795,7795],\\\"valid\\\"],[[7796,7796],\\\"mapped\\\",[7797]],[[7797,7797],\\\"valid\\\"],[[7798,7798],\\\"mapped\\\",[7799]],[[7799,7799],\\\"valid\\\"],[[7800,7800],\\\"mapped\\\",[7801]],[[7801,7801],\\\"valid\\\"],[[7802,7802],\\\"mapped\\\",[7803]],[[7803,7803],\\\"valid\\\"],[[7804,7804],\\\"mapped\\\",[7805]],[[7805,7805],\\\"valid\\\"],[[7806,7806],\\\"mapped\\\",[7807]],[[7807,7807],\\\"valid\\\"],[[7808,7808],\\\"mapped\\\",[7809]],[[7809,7809],\\\"valid\\\"],[[7810,7810],\\\"mapped\\\",[7811]],[[7811,7811],\\\"valid\\\"],[[7812,7812],\\\"mapped\\\",[7813]],[[7813,7813],\\\"valid\\\"],[[7814,7814],\\\"mapped\\\",[7815]],[[7815,7815],\\\"valid\\\"],[[7816,7816],\\\"mapped\\\",[7817]],[[7817,7817],\\\"valid\\\"],[[7818,7818],\\\"mapped\\\",[7819]],[[7819,7819],\\\"valid\\\"],[[7820,7820],\\\"mapped\\\",[7821]],[[7821,7821],\\\"valid\\\"],[[7822,7822],\\\"mapped\\\",[7823]],[[7823,7823],\\\"valid\\\"],[[7824,7824],\\\"mapped\\\",[7825]],[[7825,7825],\\\"valid\\\"],[[7826,7826],\\\"mapped\\\",[7827]],[[7827,7827],\\\"valid\\\"],[[7828,7828],\\\"mapped\\\",[7829]],[[7829,7833],\\\"valid\\\"],[[7834,7834],\\\"mapped\\\",[97,702]],[[7835,7835],\\\"mapped\\\",[7777]],[[7836,7837],\\\"valid\\\"],[[7838,7838],\\\"mapped\\\",[115,115]],[[7839,7839],\\\"valid\\\"],[[7840,7840],\\\"mapped\\\",[7841]],[[7841,7841],\\\"valid\\\"],[[7842,7842],\\\"mapped\\\",[7843]],[[7843,7843],\\\"valid\\\"],[[7844,7844],\\\"mapped\\\",[7845]],[[7845,7845],\\\"valid\\\"],[[7846,7846],\\\"mapped\\\",[7847]],[[7847,7847],\\\"valid\\\"],[[7848,7848],\\\"mapped\\\",[7849]],[[7849,7849],\\\"valid\\\"],[[7850,7850],\\\"mapped\\\",[7851]],[[7851,7851],\\\"valid\\\"],[[7852,7852],\\\"mapped\\\",[7853]],[[7853,7853],\\\"valid\\\"],[[7854,7854],\\\"mapped\\\",[7855]],[[7855,7855],\\\"valid\\\"],[[7856,7856],\\\"mapped\\\",[7857]],[[7857,7857],\\\"valid\\\"],[[7858,7858],\\\"mapped\\\",[7859]],[[7859,7859],\\\"valid\\\"],[[7860,7860],\\\"mapped\\\",[7861]],[[7861,7861],\\\"valid\\\"],[[7862,7862],\\\"mapped\\\",[7863]],[[7863,7863],\\\"valid\\\"],[[7864,7864],\\\"mapped\\\",[7865]],[[7865,7865],\\\"valid\\\"],[[7866,7866],\\\"mapped\\\",[7867]],[[7867,7867],\\\"valid\\\"],[[7868,7868],\\\"mapped\\\",[7869]],[[7869,7869],\\\"valid\\\"],[[7870,7870],\\\"mapped\\\",[7871]],[[7871,7871],\\\"valid\\\"],[[7872,7872],\\\"mapped\\\",[7873]],[[7873,7873],\\\"valid\\\"],[[7874,7874],\\\"mapped\\\",[7875]],[[7875,7875],\\\"valid\\\"],[[7876,7876],\\\"mapped\\\",[7877]],[[7877,7877],\\\"valid\\\"],[[7878,7878],\\\"mapped\\\",[7879]],[[7879,7879],\\\"valid\\\"],[[7880,7880],\\\"mapped\\\",[7881]],[[7881,7881],\\\"valid\\\"],[[7882,7882],\\\"mapped\\\",[7883]],[[7883,7883],\\\"valid\\\"],[[7884,7884],\\\"mapped\\\",[7885]],[[7885,7885],\\\"valid\\\"],[[7886,7886],\\\"mapped\\\",[7887]],[[7887,7887],\\\"valid\\\"],[[7888,7888],\\\"mapped\\\",[7889]],[[7889,7889],\\\"valid\\\"],[[7890,7890],\\\"mapped\\\",[7891]],[[7891,7891],\\\"valid\\\"],[[7892,7892],\\\"mapped\\\",[7893]],[[7893,7893],\\\"valid\\\"],[[7894,7894],\\\"mapped\\\",[7895]],[[7895,7895],\\\"valid\\\"],[[7896,7896],\\\"mapped\\\",[7897]],[[7897,7897],\\\"valid\\\"],[[7898,7898],\\\"mapped\\\",[7899]],[[7899,7899],\\\"valid\\\"],[[7900,7900],\\\"mapped\\\",[7901]],[[7901,7901],\\\"valid\\\"],[[7902,7902],\\\"mapped\\\",[7903]],[[7903,7903],\\\"valid\\\"],[[7904,7904],\\\"mapped\\\",[7905]],[[7905,7905],\\\"valid\\\"],[[7906,7906],\\\"mapped\\\",[7907]],[[7907,7907],\\\"valid\\\"],[[7908,7908],\\\"mapped\\\",[7909]],[[7909,7909],\\\"valid\\\"],[[7910,7910],\\\"mapped\\\",[7911]],[[7911,7911],\\\"valid\\\"],[[7912,7912],\\\"mapped\\\",[7913]],[[7913,7913],\\\"valid\\\"],[[7914,7914],\\\"mapped\\\",[7915]],[[7915,7915],\\\"valid\\\"],[[7916,7916],\\\"mapped\\\",[7917]],[[7917,7917],\\\"valid\\\"],[[7918,7918],\\\"mapped\\\",[7919]],[[7919,7919],\\\"valid\\\"],[[7920,7920],\\\"mapped\\\",[7921]],[[7921,7921],\\\"valid\\\"],[[7922,7922],\\\"mapped\\\",[7923]],[[7923,7923],\\\"valid\\\"],[[7924,7924],\\\"mapped\\\",[7925]],[[7925,7925],\\\"valid\\\"],[[7926,7926],\\\"mapped\\\",[7927]],[[7927,7927],\\\"valid\\\"],[[7928,7928],\\\"mapped\\\",[7929]],[[7929,7929],\\\"valid\\\"],[[7930,7930],\\\"mapped\\\",[7931]],[[7931,7931],\\\"valid\\\"],[[7932,7932],\\\"mapped\\\",[7933]],[[7933,7933],\\\"valid\\\"],[[7934,7934],\\\"mapped\\\",[7935]],[[7935,7935],\\\"valid\\\"],[[7936,7943],\\\"valid\\\"],[[7944,7944],\\\"mapped\\\",[7936]],[[7945,7945],\\\"mapped\\\",[7937]],[[7946,7946],\\\"mapped\\\",[7938]],[[7947,7947],\\\"mapped\\\",[7939]],[[7948,7948],\\\"mapped\\\",[7940]],[[7949,7949],\\\"mapped\\\",[7941]],[[7950,7950],\\\"mapped\\\",[7942]],[[7951,7951],\\\"mapped\\\",[7943]],[[7952,7957],\\\"valid\\\"],[[7958,7959],\\\"disallowed\\\"],[[7960,7960],\\\"mapped\\\",[7952]],[[7961,7961],\\\"mapped\\\",[7953]],[[7962,7962],\\\"mapped\\\",[7954]],[[7963,7963],\\\"mapped\\\",[7955]],[[7964,7964],\\\"mapped\\\",[7956]],[[7965,7965],\\\"mapped\\\",[7957]],[[7966,7967],\\\"disallowed\\\"],[[7968,7975],\\\"valid\\\"],[[7976,7976],\\\"mapped\\\",[7968]],[[7977,7977],\\\"mapped\\\",[7969]],[[7978,7978],\\\"mapped\\\",[7970]],[[7979,7979],\\\"mapped\\\",[7971]],[[7980,7980],\\\"mapped\\\",[7972]],[[7981,7981],\\\"mapped\\\",[7973]],[[7982,7982],\\\"mapped\\\",[7974]],[[7983,7983],\\\"mapped\\\",[7975]],[[7984,7991],\\\"valid\\\"],[[7992,7992],\\\"mapped\\\",[7984]],[[7993,7993],\\\"mapped\\\",[7985]],[[7994,7994],\\\"mapped\\\",[7986]],[[7995,7995],\\\"mapped\\\",[7987]],[[7996,7996],\\\"mapped\\\",[7988]],[[7997,7997],\\\"mapped\\\",[7989]],[[7998,7998],\\\"mapped\\\",[7990]],[[7999,7999],\\\"mapped\\\",[7991]],[[8000,8005],\\\"valid\\\"],[[8006,8007],\\\"disallowed\\\"],[[8008,8008],\\\"mapped\\\",[8000]],[[8009,8009],\\\"mapped\\\",[8001]],[[8010,8010],\\\"mapped\\\",[8002]],[[8011,8011],\\\"mapped\\\",[8003]],[[8012,8012],\\\"mapped\\\",[8004]],[[8013,8013],\\\"mapped\\\",[8005]],[[8014,8015],\\\"disallowed\\\"],[[8016,8023],\\\"valid\\\"],[[8024,8024],\\\"disallowed\\\"],[[8025,8025],\\\"mapped\\\",[8017]],[[8026,8026],\\\"disallowed\\\"],[[8027,8027],\\\"mapped\\\",[8019]],[[8028,8028],\\\"disallowed\\\"],[[8029,8029],\\\"mapped\\\",[8021]],[[8030,8030],\\\"disallowed\\\"],[[8031,8031],\\\"mapped\\\",[8023]],[[8032,8039],\\\"valid\\\"],[[8040,8040],\\\"mapped\\\",[8032]],[[8041,8041],\\\"mapped\\\",[8033]],[[8042,8042],\\\"mapped\\\",[8034]],[[8043,8043],\\\"mapped\\\",[8035]],[[8044,8044],\\\"mapped\\\",[8036]],[[8045,8045],\\\"mapped\\\",[8037]],[[8046,8046],\\\"mapped\\\",[8038]],[[8047,8047],\\\"mapped\\\",[8039]],[[8048,8048],\\\"valid\\\"],[[8049,8049],\\\"mapped\\\",[940]],[[8050,8050],\\\"valid\\\"],[[8051,8051],\\\"mapped\\\",[941]],[[8052,8052],\\\"valid\\\"],[[8053,8053],\\\"mapped\\\",[942]],[[8054,8054],\\\"valid\\\"],[[8055,8055],\\\"mapped\\\",[943]],[[8056,8056],\\\"valid\\\"],[[8057,8057],\\\"mapped\\\",[972]],[[8058,8058],\\\"valid\\\"],[[8059,8059],\\\"mapped\\\",[973]],[[8060,8060],\\\"valid\\\"],[[8061,8061],\\\"mapped\\\",[974]],[[8062,8063],\\\"disallowed\\\"],[[8064,8064],\\\"mapped\\\",[7936,953]],[[8065,8065],\\\"mapped\\\",[7937,953]],[[8066,8066],\\\"mapped\\\",[7938,953]],[[8067,8067],\\\"mapped\\\",[7939,953]],[[8068,8068],\\\"mapped\\\",[7940,953]],[[8069,8069],\\\"mapped\\\",[7941,953]],[[8070,8070],\\\"mapped\\\",[7942,953]],[[8071,8071],\\\"mapped\\\",[7943,953]],[[8072,8072],\\\"mapped\\\",[7936,953]],[[8073,8073],\\\"mapped\\\",[7937,953]],[[8074,8074],\\\"mapped\\\",[7938,953]],[[8075,8075],\\\"mapped\\\",[7939,953]],[[8076,8076],\\\"mapped\\\",[7940,953]],[[8077,8077],\\\"mapped\\\",[7941,953]],[[8078,8078],\\\"mapped\\\",[7942,953]],[[8079,8079],\\\"mapped\\\",[7943,953]],[[8080,8080],\\\"mapped\\\",[7968,953]],[[8081,8081],\\\"mapped\\\",[7969,953]],[[8082,8082],\\\"mapped\\\",[7970,953]],[[8083,8083],\\\"mapped\\\",[7971,953]],[[8084,8084],\\\"mapped\\\",[7972,953]],[[8085,8085],\\\"mapped\\\",[7973,953]],[[8086,8086],\\\"mapped\\\",[7974,953]],[[8087,8087],\\\"mapped\\\",[7975,953]],[[8088,8088],\\\"mapped\\\",[7968,953]],[[8089,8089],\\\"mapped\\\",[7969,953]],[[8090,8090],\\\"mapped\\\",[7970,953]],[[8091,8091],\\\"mapped\\\",[7971,953]],[[8092,8092],\\\"mapped\\\",[7972,953]],[[8093,8093],\\\"mapped\\\",[7973,953]],[[8094,8094],\\\"mapped\\\",[7974,953]],[[8095,8095],\\\"mapped\\\",[7975,953]],[[8096,8096],\\\"mapped\\\",[8032,953]],[[8097,8097],\\\"mapped\\\",[8033,953]],[[8098,8098],\\\"mapped\\\",[8034,953]],[[8099,8099],\\\"mapped\\\",[8035,953]],[[8100,8100],\\\"mapped\\\",[8036,953]],[[8101,8101],\\\"mapped\\\",[8037,953]],[[8102,8102],\\\"mapped\\\",[8038,953]],[[8103,8103],\\\"mapped\\\",[8039,953]],[[8104,8104],\\\"mapped\\\",[8032,953]],[[8105,8105],\\\"mapped\\\",[8033,953]],[[8106,8106],\\\"mapped\\\",[8034,953]],[[8107,8107],\\\"mapped\\\",[8035,953]],[[8108,8108],\\\"mapped\\\",[8036,953]],[[8109,8109],\\\"mapped\\\",[8037,953]],[[8110,8110],\\\"mapped\\\",[8038,953]],[[8111,8111],\\\"mapped\\\",[8039,953]],[[8112,8113],\\\"valid\\\"],[[8114,8114],\\\"mapped\\\",[8048,953]],[[8115,8115],\\\"mapped\\\",[945,953]],[[8116,8116],\\\"mapped\\\",[940,953]],[[8117,8117],\\\"disallowed\\\"],[[8118,8118],\\\"valid\\\"],[[8119,8119],\\\"mapped\\\",[8118,953]],[[8120,8120],\\\"mapped\\\",[8112]],[[8121,8121],\\\"mapped\\\",[8113]],[[8122,8122],\\\"mapped\\\",[8048]],[[8123,8123],\\\"mapped\\\",[940]],[[8124,8124],\\\"mapped\\\",[945,953]],[[8125,8125],\\\"disallowed_STD3_mapped\\\",[32,787]],[[8126,8126],\\\"mapped\\\",[953]],[[8127,8127],\\\"disallowed_STD3_mapped\\\",[32,787]],[[8128,8128],\\\"disallowed_STD3_mapped\\\",[32,834]],[[8129,8129],\\\"disallowed_STD3_mapped\\\",[32,776,834]],[[8130,8130],\\\"mapped\\\",[8052,953]],[[8131,8131],\\\"mapped\\\",[951,953]],[[8132,8132],\\\"mapped\\\",[942,953]],[[8133,8133],\\\"disallowed\\\"],[[8134,8134],\\\"valid\\\"],[[8135,8135],\\\"mapped\\\",[8134,953]],[[8136,8136],\\\"mapped\\\",[8050]],[[8137,8137],\\\"mapped\\\",[941]],[[8138,8138],\\\"mapped\\\",[8052]],[[8139,8139],\\\"mapped\\\",[942]],[[8140,8140],\\\"mapped\\\",[951,953]],[[8141,8141],\\\"disallowed_STD3_mapped\\\",[32,787,768]],[[8142,8142],\\\"disallowed_STD3_mapped\\\",[32,787,769]],[[8143,8143],\\\"disallowed_STD3_mapped\\\",[32,787,834]],[[8144,8146],\\\"valid\\\"],[[8147,8147],\\\"mapped\\\",[912]],[[8148,8149],\\\"disallowed\\\"],[[8150,8151],\\\"valid\\\"],[[8152,8152],\\\"mapped\\\",[8144]],[[8153,8153],\\\"mapped\\\",[8145]],[[8154,8154],\\\"mapped\\\",[8054]],[[8155,8155],\\\"mapped\\\",[943]],[[8156,8156],\\\"disallowed\\\"],[[8157,8157],\\\"disallowed_STD3_mapped\\\",[32,788,768]],[[8158,8158],\\\"disallowed_STD3_mapped\\\",[32,788,769]],[[8159,8159],\\\"disallowed_STD3_mapped\\\",[32,788,834]],[[8160,8162],\\\"valid\\\"],[[8163,8163],\\\"mapped\\\",[944]],[[8164,8167],\\\"valid\\\"],[[8168,8168],\\\"mapped\\\",[8160]],[[8169,8169],\\\"mapped\\\",[8161]],[[8170,8170],\\\"mapped\\\",[8058]],[[8171,8171],\\\"mapped\\\",[973]],[[8172,8172],\\\"mapped\\\",[8165]],[[8173,8173],\\\"disallowed_STD3_mapped\\\",[32,776,768]],[[8174,8174],\\\"disallowed_STD3_mapped\\\",[32,776,769]],[[8175,8175],\\\"disallowed_STD3_mapped\\\",[96]],[[8176,8177],\\\"disallowed\\\"],[[8178,8178],\\\"mapped\\\",[8060,953]],[[8179,8179],\\\"mapped\\\",[969,953]],[[8180,8180],\\\"mapped\\\",[974,953]],[[8181,8181],\\\"disallowed\\\"],[[8182,8182],\\\"valid\\\"],[[8183,8183],\\\"mapped\\\",[8182,953]],[[8184,8184],\\\"mapped\\\",[8056]],[[8185,8185],\\\"mapped\\\",[972]],[[8186,8186],\\\"mapped\\\",[8060]],[[8187,8187],\\\"mapped\\\",[974]],[[8188,8188],\\\"mapped\\\",[969,953]],[[8189,8189],\\\"disallowed_STD3_mapped\\\",[32,769]],[[8190,8190],\\\"disallowed_STD3_mapped\\\",[32,788]],[[8191,8191],\\\"disallowed\\\"],[[8192,8202],\\\"disallowed_STD3_mapped\\\",[32]],[[8203,8203],\\\"ignored\\\"],[[8204,8205],\\\"deviation\\\",[]],[[8206,8207],\\\"disallowed\\\"],[[8208,8208],\\\"valid\\\",[],\\\"NV8\\\"],[[8209,8209],\\\"mapped\\\",[8208]],[[8210,8214],\\\"valid\\\",[],\\\"NV8\\\"],[[8215,8215],\\\"disallowed_STD3_mapped\\\",[32,819]],[[8216,8227],\\\"valid\\\",[],\\\"NV8\\\"],[[8228,8230],\\\"disallowed\\\"],[[8231,8231],\\\"valid\\\",[],\\\"NV8\\\"],[[8232,8238],\\\"disallowed\\\"],[[8239,8239],\\\"disallowed_STD3_mapped\\\",[32]],[[8240,8242],\\\"valid\\\",[],\\\"NV8\\\"],[[8243,8243],\\\"mapped\\\",[8242,8242]],[[8244,8244],\\\"mapped\\\",[8242,8242,8242]],[[8245,8245],\\\"valid\\\",[],\\\"NV8\\\"],[[8246,8246],\\\"mapped\\\",[8245,8245]],[[8247,8247],\\\"mapped\\\",[8245,8245,8245]],[[8248,8251],\\\"valid\\\",[],\\\"NV8\\\"],[[8252,8252],\\\"disallowed_STD3_mapped\\\",[33,33]],[[8253,8253],\\\"valid\\\",[],\\\"NV8\\\"],[[8254,8254],\\\"disallowed_STD3_mapped\\\",[32,773]],[[8255,8262],\\\"valid\\\",[],\\\"NV8\\\"],[[8263,8263],\\\"disallowed_STD3_mapped\\\",[63,63]],[[8264,8264],\\\"disallowed_STD3_mapped\\\",[63,33]],[[8265,8265],\\\"disallowed_STD3_mapped\\\",[33,63]],[[8266,8269],\\\"valid\\\",[],\\\"NV8\\\"],[[8270,8274],\\\"valid\\\",[],\\\"NV8\\\"],[[8275,8276],\\\"valid\\\",[],\\\"NV8\\\"],[[8277,8278],\\\"valid\\\",[],\\\"NV8\\\"],[[8279,8279],\\\"mapped\\\",[8242,8242,8242,8242]],[[8280,8286],\\\"valid\\\",[],\\\"NV8\\\"],[[8287,8287],\\\"disallowed_STD3_mapped\\\",[32]],[[8288,8288],\\\"ignored\\\"],[[8289,8291],\\\"disallowed\\\"],[[8292,8292],\\\"ignored\\\"],[[8293,8293],\\\"disallowed\\\"],[[8294,8297],\\\"disallowed\\\"],[[8298,8303],\\\"disallowed\\\"],[[8304,8304],\\\"mapped\\\",[48]],[[8305,8305],\\\"mapped\\\",[105]],[[8306,8307],\\\"disallowed\\\"],[[8308,8308],\\\"mapped\\\",[52]],[[8309,8309],\\\"mapped\\\",[53]],[[8310,8310],\\\"mapped\\\",[54]],[[8311,8311],\\\"mapped\\\",[55]],[[8312,8312],\\\"mapped\\\",[56]],[[8313,8313],\\\"mapped\\\",[57]],[[8314,8314],\\\"disallowed_STD3_mapped\\\",[43]],[[8315,8315],\\\"mapped\\\",[8722]],[[8316,8316],\\\"disallowed_STD3_mapped\\\",[61]],[[8317,8317],\\\"disallowed_STD3_mapped\\\",[40]],[[8318,8318],\\\"disallowed_STD3_mapped\\\",[41]],[[8319,8319],\\\"mapped\\\",[110]],[[8320,8320],\\\"mapped\\\",[48]],[[8321,8321],\\\"mapped\\\",[49]],[[8322,8322],\\\"mapped\\\",[50]],[[8323,8323],\\\"mapped\\\",[51]],[[8324,8324],\\\"mapped\\\",[52]],[[8325,8325],\\\"mapped\\\",[53]],[[8326,8326],\\\"mapped\\\",[54]],[[8327,8327],\\\"mapped\\\",[55]],[[8328,8328],\\\"mapped\\\",[56]],[[8329,8329],\\\"mapped\\\",[57]],[[8330,8330],\\\"disallowed_STD3_mapped\\\",[43]],[[8331,8331],\\\"mapped\\\",[8722]],[[8332,8332],\\\"disallowed_STD3_mapped\\\",[61]],[[8333,8333],\\\"disallowed_STD3_mapped\\\",[40]],[[8334,8334],\\\"disallowed_STD3_mapped\\\",[41]],[[8335,8335],\\\"disallowed\\\"],[[8336,8336],\\\"mapped\\\",[97]],[[8337,8337],\\\"mapped\\\",[101]],[[8338,8338],\\\"mapped\\\",[111]],[[8339,8339],\\\"mapped\\\",[120]],[[8340,8340],\\\"mapped\\\",[601]],[[8341,8341],\\\"mapped\\\",[104]],[[8342,8342],\\\"mapped\\\",[107]],[[8343,8343],\\\"mapped\\\",[108]],[[8344,8344],\\\"mapped\\\",[109]],[[8345,8345],\\\"mapped\\\",[110]],[[8346,8346],\\\"mapped\\\",[112]],[[8347,8347],\\\"mapped\\\",[115]],[[8348,8348],\\\"mapped\\\",[116]],[[8349,8351],\\\"disallowed\\\"],[[8352,8359],\\\"valid\\\",[],\\\"NV8\\\"],[[8360,8360],\\\"mapped\\\",[114,115]],[[8361,8362],\\\"valid\\\",[],\\\"NV8\\\"],[[8363,8363],\\\"valid\\\",[],\\\"NV8\\\"],[[8364,8364],\\\"valid\\\",[],\\\"NV8\\\"],[[8365,8367],\\\"valid\\\",[],\\\"NV8\\\"],[[8368,8369],\\\"valid\\\",[],\\\"NV8\\\"],[[8370,8373],\\\"valid\\\",[],\\\"NV8\\\"],[[8374,8376],\\\"valid\\\",[],\\\"NV8\\\"],[[8377,8377],\\\"valid\\\",[],\\\"NV8\\\"],[[8378,8378],\\\"valid\\\",[],\\\"NV8\\\"],[[8379,8381],\\\"valid\\\",[],\\\"NV8\\\"],[[8382,8382],\\\"valid\\\",[],\\\"NV8\\\"],[[8383,8399],\\\"disallowed\\\"],[[8400,8417],\\\"valid\\\",[],\\\"NV8\\\"],[[8418,8419],\\\"valid\\\",[],\\\"NV8\\\"],[[8420,8426],\\\"valid\\\",[],\\\"NV8\\\"],[[8427,8427],\\\"valid\\\",[],\\\"NV8\\\"],[[8428,8431],\\\"valid\\\",[],\\\"NV8\\\"],[[8432,8432],\\\"valid\\\",[],\\\"NV8\\\"],[[8433,8447],\\\"disallowed\\\"],[[8448,8448],\\\"disallowed_STD3_mapped\\\",[97,47,99]],[[8449,8449],\\\"disallowed_STD3_mapped\\\",[97,47,115]],[[8450,8450],\\\"mapped\\\",[99]],[[8451,8451],\\\"mapped\\\",[176,99]],[[8452,8452],\\\"valid\\\",[],\\\"NV8\\\"],[[8453,8453],\\\"disallowed_STD3_mapped\\\",[99,47,111]],[[8454,8454],\\\"disallowed_STD3_mapped\\\",[99,47,117]],[[8455,8455],\\\"mapped\\\",[603]],[[8456,8456],\\\"valid\\\",[],\\\"NV8\\\"],[[8457,8457],\\\"mapped\\\",[176,102]],[[8458,8458],\\\"mapped\\\",[103]],[[8459,8462],\\\"mapped\\\",[104]],[[8463,8463],\\\"mapped\\\",[295]],[[8464,8465],\\\"mapped\\\",[105]],[[8466,8467],\\\"mapped\\\",[108]],[[8468,8468],\\\"valid\\\",[],\\\"NV8\\\"],[[8469,8469],\\\"mapped\\\",[110]],[[8470,8470],\\\"mapped\\\",[110,111]],[[8471,8472],\\\"valid\\\",[],\\\"NV8\\\"],[[8473,8473],\\\"mapped\\\",[112]],[[8474,8474],\\\"mapped\\\",[113]],[[8475,8477],\\\"mapped\\\",[114]],[[8478,8479],\\\"valid\\\",[],\\\"NV8\\\"],[[8480,8480],\\\"mapped\\\",[115,109]],[[8481,8481],\\\"mapped\\\",[116,101,108]],[[8482,8482],\\\"mapped\\\",[116,109]],[[8483,8483],\\\"valid\\\",[],\\\"NV8\\\"],[[8484,8484],\\\"mapped\\\",[122]],[[8485,8485],\\\"valid\\\",[],\\\"NV8\\\"],[[8486,8486],\\\"mapped\\\",[969]],[[8487,8487],\\\"valid\\\",[],\\\"NV8\\\"],[[8488,8488],\\\"mapped\\\",[122]],[[8489,8489],\\\"valid\\\",[],\\\"NV8\\\"],[[8490,8490],\\\"mapped\\\",[107]],[[8491,8491],\\\"mapped\\\",[229]],[[8492,8492],\\\"mapped\\\",[98]],[[8493,8493],\\\"mapped\\\",[99]],[[8494,8494],\\\"valid\\\",[],\\\"NV8\\\"],[[8495,8496],\\\"mapped\\\",[101]],[[8497,8497],\\\"mapped\\\",[102]],[[8498,8498],\\\"disallowed\\\"],[[8499,8499],\\\"mapped\\\",[109]],[[8500,8500],\\\"mapped\\\",[111]],[[8501,8501],\\\"mapped\\\",[1488]],[[8502,8502],\\\"mapped\\\",[1489]],[[8503,8503],\\\"mapped\\\",[1490]],[[8504,8504],\\\"mapped\\\",[1491]],[[8505,8505],\\\"mapped\\\",[105]],[[8506,8506],\\\"valid\\\",[],\\\"NV8\\\"],[[8507,8507],\\\"mapped\\\",[102,97,120]],[[8508,8508],\\\"mapped\\\",[960]],[[8509,8510],\\\"mapped\\\",[947]],[[8511,8511],\\\"mapped\\\",[960]],[[8512,8512],\\\"mapped\\\",[8721]],[[8513,8516],\\\"valid\\\",[],\\\"NV8\\\"],[[8517,8518],\\\"mapped\\\",[100]],[[8519,8519],\\\"mapped\\\",[101]],[[8520,8520],\\\"mapped\\\",[105]],[[8521,8521],\\\"mapped\\\",[106]],[[8522,8523],\\\"valid\\\",[],\\\"NV8\\\"],[[8524,8524],\\\"valid\\\",[],\\\"NV8\\\"],[[8525,8525],\\\"valid\\\",[],\\\"NV8\\\"],[[8526,8526],\\\"valid\\\"],[[8527,8527],\\\"valid\\\",[],\\\"NV8\\\"],[[8528,8528],\\\"mapped\\\",[49,8260,55]],[[8529,8529],\\\"mapped\\\",[49,8260,57]],[[8530,8530],\\\"mapped\\\",[49,8260,49,48]],[[8531,8531],\\\"mapped\\\",[49,8260,51]],[[8532,8532],\\\"mapped\\\",[50,8260,51]],[[8533,8533],\\\"mapped\\\",[49,8260,53]],[[8534,8534],\\\"mapped\\\",[50,8260,53]],[[8535,8535],\\\"mapped\\\",[51,8260,53]],[[8536,8536],\\\"mapped\\\",[52,8260,53]],[[8537,8537],\\\"mapped\\\",[49,8260,54]],[[8538,8538],\\\"mapped\\\",[53,8260,54]],[[8539,8539],\\\"mapped\\\",[49,8260,56]],[[8540,8540],\\\"mapped\\\",[51,8260,56]],[[8541,8541],\\\"mapped\\\",[53,8260,56]],[[8542,8542],\\\"mapped\\\",[55,8260,56]],[[8543,8543],\\\"mapped\\\",[49,8260]],[[8544,8544],\\\"mapped\\\",[105]],[[8545,8545],\\\"mapped\\\",[105,105]],[[8546,8546],\\\"mapped\\\",[105,105,105]],[[8547,8547],\\\"mapped\\\",[105,118]],[[8548,8548],\\\"mapped\\\",[118]],[[8549,8549],\\\"mapped\\\",[118,105]],[[8550,8550],\\\"mapped\\\",[118,105,105]],[[8551,8551],\\\"mapped\\\",[118,105,105,105]],[[8552,8552],\\\"mapped\\\",[105,120]],[[8553,8553],\\\"mapped\\\",[120]],[[8554,8554],\\\"mapped\\\",[120,105]],[[8555,8555],\\\"mapped\\\",[120,105,105]],[[8556,8556],\\\"mapped\\\",[108]],[[8557,8557],\\\"mapped\\\",[99]],[[8558,8558],\\\"mapped\\\",[100]],[[8559,8559],\\\"mapped\\\",[109]],[[8560,8560],\\\"mapped\\\",[105]],[[8561,8561],\\\"mapped\\\",[105,105]],[[8562,8562],\\\"mapped\\\",[105,105,105]],[[8563,8563],\\\"mapped\\\",[105,118]],[[8564,8564],\\\"mapped\\\",[118]],[[8565,8565],\\\"mapped\\\",[118,105]],[[8566,8566],\\\"mapped\\\",[118,105,105]],[[8567,8567],\\\"mapped\\\",[118,105,105,105]],[[8568,8568],\\\"mapped\\\",[105,120]],[[8569,8569],\\\"mapped\\\",[120]],[[8570,8570],\\\"mapped\\\",[120,105]],[[8571,8571],\\\"mapped\\\",[120,105,105]],[[8572,8572],\\\"mapped\\\",[108]],[[8573,8573],\\\"mapped\\\",[99]],[[8574,8574],\\\"mapped\\\",[100]],[[8575,8575],\\\"mapped\\\",[109]],[[8576,8578],\\\"valid\\\",[],\\\"NV8\\\"],[[8579,8579],\\\"disallowed\\\"],[[8580,8580],\\\"valid\\\"],[[8581,8584],\\\"valid\\\",[],\\\"NV8\\\"],[[8585,8585],\\\"mapped\\\",[48,8260,51]],[[8586,8587],\\\"valid\\\",[],\\\"NV8\\\"],[[8588,8591],\\\"disallowed\\\"],[[8592,8682],\\\"valid\\\",[],\\\"NV8\\\"],[[8683,8691],\\\"valid\\\",[],\\\"NV8\\\"],[[8692,8703],\\\"valid\\\",[],\\\"NV8\\\"],[[8704,8747],\\\"valid\\\",[],\\\"NV8\\\"],[[8748,8748],\\\"mapped\\\",[8747,8747]],[[8749,8749],\\\"mapped\\\",[8747,8747,8747]],[[8750,8750],\\\"valid\\\",[],\\\"NV8\\\"],[[8751,8751],\\\"mapped\\\",[8750,8750]],[[8752,8752],\\\"mapped\\\",[8750,8750,8750]],[[8753,8799],\\\"valid\\\",[],\\\"NV8\\\"],[[8800,8800],\\\"disallowed_STD3_valid\\\"],[[8801,8813],\\\"valid\\\",[],\\\"NV8\\\"],[[8814,8815],\\\"disallowed_STD3_valid\\\"],[[8816,8945],\\\"valid\\\",[],\\\"NV8\\\"],[[8946,8959],\\\"valid\\\",[],\\\"NV8\\\"],[[8960,8960],\\\"valid\\\",[],\\\"NV8\\\"],[[8961,8961],\\\"valid\\\",[],\\\"NV8\\\"],[[8962,9000],\\\"valid\\\",[],\\\"NV8\\\"],[[9001,9001],\\\"mapped\\\",[12296]],[[9002,9002],\\\"mapped\\\",[12297]],[[9003,9082],\\\"valid\\\",[],\\\"NV8\\\"],[[9083,9083],\\\"valid\\\",[],\\\"NV8\\\"],[[9084,9084],\\\"valid\\\",[],\\\"NV8\\\"],[[9085,9114],\\\"valid\\\",[],\\\"NV8\\\"],[[9115,9166],\\\"valid\\\",[],\\\"NV8\\\"],[[9167,9168],\\\"valid\\\",[],\\\"NV8\\\"],[[9169,9179],\\\"valid\\\",[],\\\"NV8\\\"],[[9180,9191],\\\"valid\\\",[],\\\"NV8\\\"],[[9192,9192],\\\"valid\\\",[],\\\"NV8\\\"],[[9193,9203],\\\"valid\\\",[],\\\"NV8\\\"],[[9204,9210],\\\"valid\\\",[],\\\"NV8\\\"],[[9211,9215],\\\"disallowed\\\"],[[9216,9252],\\\"valid\\\",[],\\\"NV8\\\"],[[9253,9254],\\\"valid\\\",[],\\\"NV8\\\"],[[9255,9279],\\\"disallowed\\\"],[[9280,9290],\\\"valid\\\",[],\\\"NV8\\\"],[[9291,9311],\\\"disallowed\\\"],[[9312,9312],\\\"mapped\\\",[49]],[[9313,9313],\\\"mapped\\\",[50]],[[9314,9314],\\\"mapped\\\",[51]],[[9315,9315],\\\"mapped\\\",[52]],[[9316,9316],\\\"mapped\\\",[53]],[[9317,9317],\\\"mapped\\\",[54]],[[9318,9318],\\\"mapped\\\",[55]],[[9319,9319],\\\"mapped\\\",[56]],[[9320,9320],\\\"mapped\\\",[57]],[[9321,9321],\\\"mapped\\\",[49,48]],[[9322,9322],\\\"mapped\\\",[49,49]],[[9323,9323],\\\"mapped\\\",[49,50]],[[9324,9324],\\\"mapped\\\",[49,51]],[[9325,9325],\\\"mapped\\\",[49,52]],[[9326,9326],\\\"mapped\\\",[49,53]],[[9327,9327],\\\"mapped\\\",[49,54]],[[9328,9328],\\\"mapped\\\",[49,55]],[[9329,9329],\\\"mapped\\\",[49,56]],[[9330,9330],\\\"mapped\\\",[49,57]],[[9331,9331],\\\"mapped\\\",[50,48]],[[9332,9332],\\\"disallowed_STD3_mapped\\\",[40,49,41]],[[9333,9333],\\\"disallowed_STD3_mapped\\\",[40,50,41]],[[9334,9334],\\\"disallowed_STD3_mapped\\\",[40,51,41]],[[9335,9335],\\\"disallowed_STD3_mapped\\\",[40,52,41]],[[9336,9336],\\\"disallowed_STD3_mapped\\\",[40,53,41]],[[9337,9337],\\\"disallowed_STD3_mapped\\\",[40,54,41]],[[9338,9338],\\\"disallowed_STD3_mapped\\\",[40,55,41]],[[9339,9339],\\\"disallowed_STD3_mapped\\\",[40,56,41]],[[9340,9340],\\\"disallowed_STD3_mapped\\\",[40,57,41]],[[9341,9341],\\\"disallowed_STD3_mapped\\\",[40,49,48,41]],[[9342,9342],\\\"disallowed_STD3_mapped\\\",[40,49,49,41]],[[9343,9343],\\\"disallowed_STD3_mapped\\\",[40,49,50,41]],[[9344,9344],\\\"disallowed_STD3_mapped\\\",[40,49,51,41]],[[9345,9345],\\\"disallowed_STD3_mapped\\\",[40,49,52,41]],[[9346,9346],\\\"disallowed_STD3_mapped\\\",[40,49,53,41]],[[9347,9347],\\\"disallowed_STD3_mapped\\\",[40,49,54,41]],[[9348,9348],\\\"disallowed_STD3_mapped\\\",[40,49,55,41]],[[9349,9349],\\\"disallowed_STD3_mapped\\\",[40,49,56,41]],[[9350,9350],\\\"disallowed_STD3_mapped\\\",[40,49,57,41]],[[9351,9351],\\\"disallowed_STD3_mapped\\\",[40,50,48,41]],[[9352,9371],\\\"disallowed\\\"],[[9372,9372],\\\"disallowed_STD3_mapped\\\",[40,97,41]],[[9373,9373],\\\"disallowed_STD3_mapped\\\",[40,98,41]],[[9374,9374],\\\"disallowed_STD3_mapped\\\",[40,99,41]],[[9375,9375],\\\"disallowed_STD3_mapped\\\",[40,100,41]],[[9376,9376],\\\"disallowed_STD3_mapped\\\",[40,101,41]],[[9377,9377],\\\"disallowed_STD3_mapped\\\",[40,102,41]],[[9378,9378],\\\"disallowed_STD3_mapped\\\",[40,103,41]],[[9379,9379],\\\"disallowed_STD3_mapped\\\",[40,104,41]],[[9380,9380],\\\"disallowed_STD3_mapped\\\",[40,105,41]],[[9381,9381],\\\"disallowed_STD3_mapped\\\",[40,106,41]],[[9382,9382],\\\"disallowed_STD3_mapped\\\",[40,107,41]],[[9383,9383],\\\"disallowed_STD3_mapped\\\",[40,108,41]],[[9384,9384],\\\"disallowed_STD3_mapped\\\",[40,109,41]],[[9385,9385],\\\"disallowed_STD3_mapped\\\",[40,110,41]],[[9386,9386],\\\"disallowed_STD3_mapped\\\",[40,111,41]],[[9387,9387],\\\"disallowed_STD3_mapped\\\",[40,112,41]],[[9388,9388],\\\"disallowed_STD3_mapped\\\",[40,113,41]],[[9389,9389],\\\"disallowed_STD3_mapped\\\",[40,114,41]],[[9390,9390],\\\"disallowed_STD3_mapped\\\",[40,115,41]],[[9391,9391],\\\"disallowed_STD3_mapped\\\",[40,116,41]],[[9392,9392],\\\"disallowed_STD3_mapped\\\",[40,117,41]],[[9393,9393],\\\"disallowed_STD3_mapped\\\",[40,118,41]],[[9394,9394],\\\"disallowed_STD3_mapped\\\",[40,119,41]],[[9395,9395],\\\"disallowed_STD3_mapped\\\",[40,120,41]],[[9396,9396],\\\"disallowed_STD3_mapped\\\",[40,121,41]],[[9397,9397],\\\"disallowed_STD3_mapped\\\",[40,122,41]],[[9398,9398],\\\"mapped\\\",[97]],[[9399,9399],\\\"mapped\\\",[98]],[[9400,9400],\\\"mapped\\\",[99]],[[9401,9401],\\\"mapped\\\",[100]],[[9402,9402],\\\"mapped\\\",[101]],[[9403,9403],\\\"mapped\\\",[102]],[[9404,9404],\\\"mapped\\\",[103]],[[9405,9405],\\\"mapped\\\",[104]],[[9406,9406],\\\"mapped\\\",[105]],[[9407,9407],\\\"mapped\\\",[106]],[[9408,9408],\\\"mapped\\\",[107]],[[9409,9409],\\\"mapped\\\",[108]],[[9410,9410],\\\"mapped\\\",[109]],[[9411,9411],\\\"mapped\\\",[110]],[[9412,9412],\\\"mapped\\\",[111]],[[9413,9413],\\\"mapped\\\",[112]],[[9414,9414],\\\"mapped\\\",[113]],[[9415,9415],\\\"mapped\\\",[114]],[[9416,9416],\\\"mapped\\\",[115]],[[9417,9417],\\\"mapped\\\",[116]],[[9418,9418],\\\"mapped\\\",[117]],[[9419,9419],\\\"mapped\\\",[118]],[[9420,9420],\\\"mapped\\\",[119]],[[9421,9421],\\\"mapped\\\",[120]],[[9422,9422],\\\"mapped\\\",[121]],[[9423,9423],\\\"mapped\\\",[122]],[[9424,9424],\\\"mapped\\\",[97]],[[9425,9425],\\\"mapped\\\",[98]],[[9426,9426],\\\"mapped\\\",[99]],[[9427,9427],\\\"mapped\\\",[100]],[[9428,9428],\\\"mapped\\\",[101]],[[9429,9429],\\\"mapped\\\",[102]],[[9430,9430],\\\"mapped\\\",[103]],[[9431,9431],\\\"mapped\\\",[104]],[[9432,9432],\\\"mapped\\\",[105]],[[9433,9433],\\\"mapped\\\",[106]],[[9434,9434],\\\"mapped\\\",[107]],[[9435,9435],\\\"mapped\\\",[108]],[[9436,9436],\\\"mapped\\\",[109]],[[9437,9437],\\\"mapped\\\",[110]],[[9438,9438],\\\"mapped\\\",[111]],[[9439,9439],\\\"mapped\\\",[112]],[[9440,9440],\\\"mapped\\\",[113]],[[9441,9441],\\\"mapped\\\",[114]],[[9442,9442],\\\"mapped\\\",[115]],[[9443,9443],\\\"mapped\\\",[116]],[[9444,9444],\\\"mapped\\\",[117]],[[9445,9445],\\\"mapped\\\",[118]],[[9446,9446],\\\"mapped\\\",[119]],[[9447,9447],\\\"mapped\\\",[120]],[[9448,9448],\\\"mapped\\\",[121]],[[9449,9449],\\\"mapped\\\",[122]],[[9450,9450],\\\"mapped\\\",[48]],[[9451,9470],\\\"valid\\\",[],\\\"NV8\\\"],[[9471,9471],\\\"valid\\\",[],\\\"NV8\\\"],[[9472,9621],\\\"valid\\\",[],\\\"NV8\\\"],[[9622,9631],\\\"valid\\\",[],\\\"NV8\\\"],[[9632,9711],\\\"valid\\\",[],\\\"NV8\\\"],[[9712,9719],\\\"valid\\\",[],\\\"NV8\\\"],[[9720,9727],\\\"valid\\\",[],\\\"NV8\\\"],[[9728,9747],\\\"valid\\\",[],\\\"NV8\\\"],[[9748,9749],\\\"valid\\\",[],\\\"NV8\\\"],[[9750,9751],\\\"valid\\\",[],\\\"NV8\\\"],[[9752,9752],\\\"valid\\\",[],\\\"NV8\\\"],[[9753,9753],\\\"valid\\\",[],\\\"NV8\\\"],[[9754,9839],\\\"valid\\\",[],\\\"NV8\\\"],[[9840,9841],\\\"valid\\\",[],\\\"NV8\\\"],[[9842,9853],\\\"valid\\\",[],\\\"NV8\\\"],[[9854,9855],\\\"valid\\\",[],\\\"NV8\\\"],[[9856,9865],\\\"valid\\\",[],\\\"NV8\\\"],[[9866,9873],\\\"valid\\\",[],\\\"NV8\\\"],[[9874,9884],\\\"valid\\\",[],\\\"NV8\\\"],[[9885,9885],\\\"valid\\\",[],\\\"NV8\\\"],[[9886,9887],\\\"valid\\\",[],\\\"NV8\\\"],[[9888,9889],\\\"valid\\\",[],\\\"NV8\\\"],[[9890,9905],\\\"valid\\\",[],\\\"NV8\\\"],[[9906,9906],\\\"valid\\\",[],\\\"NV8\\\"],[[9907,9916],\\\"valid\\\",[],\\\"NV8\\\"],[[9917,9919],\\\"valid\\\",[],\\\"NV8\\\"],[[9920,9923],\\\"valid\\\",[],\\\"NV8\\\"],[[9924,9933],\\\"valid\\\",[],\\\"NV8\\\"],[[9934,9934],\\\"valid\\\",[],\\\"NV8\\\"],[[9935,9953],\\\"valid\\\",[],\\\"NV8\\\"],[[9954,9954],\\\"valid\\\",[],\\\"NV8\\\"],[[9955,9955],\\\"valid\\\",[],\\\"NV8\\\"],[[9956,9959],\\\"valid\\\",[],\\\"NV8\\\"],[[9960,9983],\\\"valid\\\",[],\\\"NV8\\\"],[[9984,9984],\\\"valid\\\",[],\\\"NV8\\\"],[[9985,9988],\\\"valid\\\",[],\\\"NV8\\\"],[[9989,9989],\\\"valid\\\",[],\\\"NV8\\\"],[[9990,9993],\\\"valid\\\",[],\\\"NV8\\\"],[[9994,9995],\\\"valid\\\",[],\\\"NV8\\\"],[[9996,10023],\\\"valid\\\",[],\\\"NV8\\\"],[[10024,10024],\\\"valid\\\",[],\\\"NV8\\\"],[[10025,10059],\\\"valid\\\",[],\\\"NV8\\\"],[[10060,10060],\\\"valid\\\",[],\\\"NV8\\\"],[[10061,10061],\\\"valid\\\",[],\\\"NV8\\\"],[[10062,10062],\\\"valid\\\",[],\\\"NV8\\\"],[[10063,10066],\\\"valid\\\",[],\\\"NV8\\\"],[[10067,10069],\\\"valid\\\",[],\\\"NV8\\\"],[[10070,10070],\\\"valid\\\",[],\\\"NV8\\\"],[[10071,10071],\\\"valid\\\",[],\\\"NV8\\\"],[[10072,10078],\\\"valid\\\",[],\\\"NV8\\\"],[[10079,10080],\\\"valid\\\",[],\\\"NV8\\\"],[[10081,10087],\\\"valid\\\",[],\\\"NV8\\\"],[[10088,10101],\\\"valid\\\",[],\\\"NV8\\\"],[[10102,10132],\\\"valid\\\",[],\\\"NV8\\\"],[[10133,10135],\\\"valid\\\",[],\\\"NV8\\\"],[[10136,10159],\\\"valid\\\",[],\\\"NV8\\\"],[[10160,10160],\\\"valid\\\",[],\\\"NV8\\\"],[[10161,10174],\\\"valid\\\",[],\\\"NV8\\\"],[[10175,10175],\\\"valid\\\",[],\\\"NV8\\\"],[[10176,10182],\\\"valid\\\",[],\\\"NV8\\\"],[[10183,10186],\\\"valid\\\",[],\\\"NV8\\\"],[[10187,10187],\\\"valid\\\",[],\\\"NV8\\\"],[[10188,10188],\\\"valid\\\",[],\\\"NV8\\\"],[[10189,10189],\\\"valid\\\",[],\\\"NV8\\\"],[[10190,10191],\\\"valid\\\",[],\\\"NV8\\\"],[[10192,10219],\\\"valid\\\",[],\\\"NV8\\\"],[[10220,10223],\\\"valid\\\",[],\\\"NV8\\\"],[[10224,10239],\\\"valid\\\",[],\\\"NV8\\\"],[[10240,10495],\\\"valid\\\",[],\\\"NV8\\\"],[[10496,10763],\\\"valid\\\",[],\\\"NV8\\\"],[[10764,10764],\\\"mapped\\\",[8747,8747,8747,8747]],[[10765,10867],\\\"valid\\\",[],\\\"NV8\\\"],[[10868,10868],\\\"disallowed_STD3_mapped\\\",[58,58,61]],[[10869,10869],\\\"disallowed_STD3_mapped\\\",[61,61]],[[10870,10870],\\\"disallowed_STD3_mapped\\\",[61,61,61]],[[10871,10971],\\\"valid\\\",[],\\\"NV8\\\"],[[10972,10972],\\\"mapped\\\",[10973,824]],[[10973,11007],\\\"valid\\\",[],\\\"NV8\\\"],[[11008,11021],\\\"valid\\\",[],\\\"NV8\\\"],[[11022,11027],\\\"valid\\\",[],\\\"NV8\\\"],[[11028,11034],\\\"valid\\\",[],\\\"NV8\\\"],[[11035,11039],\\\"valid\\\",[],\\\"NV8\\\"],[[11040,11043],\\\"valid\\\",[],\\\"NV8\\\"],[[11044,11084],\\\"valid\\\",[],\\\"NV8\\\"],[[11085,11087],\\\"valid\\\",[],\\\"NV8\\\"],[[11088,11092],\\\"valid\\\",[],\\\"NV8\\\"],[[11093,11097],\\\"valid\\\",[],\\\"NV8\\\"],[[11098,11123],\\\"valid\\\",[],\\\"NV8\\\"],[[11124,11125],\\\"disallowed\\\"],[[11126,11157],\\\"valid\\\",[],\\\"NV8\\\"],[[11158,11159],\\\"disallowed\\\"],[[11160,11193],\\\"valid\\\",[],\\\"NV8\\\"],[[11194,11196],\\\"disallowed\\\"],[[11197,11208],\\\"valid\\\",[],\\\"NV8\\\"],[[11209,11209],\\\"disallowed\\\"],[[11210,11217],\\\"valid\\\",[],\\\"NV8\\\"],[[11218,11243],\\\"disallowed\\\"],[[11244,11247],\\\"valid\\\",[],\\\"NV8\\\"],[[11248,11263],\\\"disallowed\\\"],[[11264,11264],\\\"mapped\\\",[11312]],[[11265,11265],\\\"mapped\\\",[11313]],[[11266,11266],\\\"mapped\\\",[11314]],[[11267,11267],\\\"mapped\\\",[11315]],[[11268,11268],\\\"mapped\\\",[11316]],[[11269,11269],\\\"mapped\\\",[11317]],[[11270,11270],\\\"mapped\\\",[11318]],[[11271,11271],\\\"mapped\\\",[11319]],[[11272,11272],\\\"mapped\\\",[11320]],[[11273,11273],\\\"mapped\\\",[11321]],[[11274,11274],\\\"mapped\\\",[11322]],[[11275,11275],\\\"mapped\\\",[11323]],[[11276,11276],\\\"mapped\\\",[11324]],[[11277,11277],\\\"mapped\\\",[11325]],[[11278,11278],\\\"mapped\\\",[11326]],[[11279,11279],\\\"mapped\\\",[11327]],[[11280,11280],\\\"mapped\\\",[11328]],[[11281,11281],\\\"mapped\\\",[11329]],[[11282,11282],\\\"mapped\\\",[11330]],[[11283,11283],\\\"mapped\\\",[11331]],[[11284,11284],\\\"mapped\\\",[11332]],[[11285,11285],\\\"mapped\\\",[11333]],[[11286,11286],\\\"mapped\\\",[11334]],[[11287,11287],\\\"mapped\\\",[11335]],[[11288,11288],\\\"mapped\\\",[11336]],[[11289,11289],\\\"mapped\\\",[11337]],[[11290,11290],\\\"mapped\\\",[11338]],[[11291,11291],\\\"mapped\\\",[11339]],[[11292,11292],\\\"mapped\\\",[11340]],[[11293,11293],\\\"mapped\\\",[11341]],[[11294,11294],\\\"mapped\\\",[11342]],[[11295,11295],\\\"mapped\\\",[11343]],[[11296,11296],\\\"mapped\\\",[11344]],[[11297,11297],\\\"mapped\\\",[11345]],[[11298,11298],\\\"mapped\\\",[11346]],[[11299,11299],\\\"mapped\\\",[11347]],[[11300,11300],\\\"mapped\\\",[11348]],[[11301,11301],\\\"mapped\\\",[11349]],[[11302,11302],\\\"mapped\\\",[11350]],[[11303,11303],\\\"mapped\\\",[11351]],[[11304,11304],\\\"mapped\\\",[11352]],[[11305,11305],\\\"mapped\\\",[11353]],[[11306,11306],\\\"mapped\\\",[11354]],[[11307,11307],\\\"mapped\\\",[11355]],[[11308,11308],\\\"mapped\\\",[11356]],[[11309,11309],\\\"mapped\\\",[11357]],[[11310,11310],\\\"mapped\\\",[11358]],[[11311,11311],\\\"disallowed\\\"],[[11312,11358],\\\"valid\\\"],[[11359,11359],\\\"disallowed\\\"],[[11360,11360],\\\"mapped\\\",[11361]],[[11361,11361],\\\"valid\\\"],[[11362,11362],\\\"mapped\\\",[619]],[[11363,11363],\\\"mapped\\\",[7549]],[[11364,11364],\\\"mapped\\\",[637]],[[11365,11366],\\\"valid\\\"],[[11367,11367],\\\"mapped\\\",[11368]],[[11368,11368],\\\"valid\\\"],[[11369,11369],\\\"mapped\\\",[11370]],[[11370,11370],\\\"valid\\\"],[[11371,11371],\\\"mapped\\\",[11372]],[[11372,11372],\\\"valid\\\"],[[11373,11373],\\\"mapped\\\",[593]],[[11374,11374],\\\"mapped\\\",[625]],[[11375,11375],\\\"mapped\\\",[592]],[[11376,11376],\\\"mapped\\\",[594]],[[11377,11377],\\\"valid\\\"],[[11378,11378],\\\"mapped\\\",[11379]],[[11379,11379],\\\"valid\\\"],[[11380,11380],\\\"valid\\\"],[[11381,11381],\\\"mapped\\\",[11382]],[[11382,11383],\\\"valid\\\"],[[11384,11387],\\\"valid\\\"],[[11388,11388],\\\"mapped\\\",[106]],[[11389,11389],\\\"mapped\\\",[118]],[[11390,11390],\\\"mapped\\\",[575]],[[11391,11391],\\\"mapped\\\",[576]],[[11392,11392],\\\"mapped\\\",[11393]],[[11393,11393],\\\"valid\\\"],[[11394,11394],\\\"mapped\\\",[11395]],[[11395,11395],\\\"valid\\\"],[[11396,11396],\\\"mapped\\\",[11397]],[[11397,11397],\\\"valid\\\"],[[11398,11398],\\\"mapped\\\",[11399]],[[11399,11399],\\\"valid\\\"],[[11400,11400],\\\"mapped\\\",[11401]],[[11401,11401],\\\"valid\\\"],[[11402,11402],\\\"mapped\\\",[11403]],[[11403,11403],\\\"valid\\\"],[[11404,11404],\\\"mapped\\\",[11405]],[[11405,11405],\\\"valid\\\"],[[11406,11406],\\\"mapped\\\",[11407]],[[11407,11407],\\\"valid\\\"],[[11408,11408],\\\"mapped\\\",[11409]],[[11409,11409],\\\"valid\\\"],[[11410,11410],\\\"mapped\\\",[11411]],[[11411,11411],\\\"valid\\\"],[[11412,11412],\\\"mapped\\\",[11413]],[[11413,11413],\\\"valid\\\"],[[11414,11414],\\\"mapped\\\",[11415]],[[11415,11415],\\\"valid\\\"],[[11416,11416],\\\"mapped\\\",[11417]],[[11417,11417],\\\"valid\\\"],[[11418,11418],\\\"mapped\\\",[11419]],[[11419,11419],\\\"valid\\\"],[[11420,11420],\\\"mapped\\\",[11421]],[[11421,11421],\\\"valid\\\"],[[11422,11422],\\\"mapped\\\",[11423]],[[11423,11423],\\\"valid\\\"],[[11424,11424],\\\"mapped\\\",[11425]],[[11425,11425],\\\"valid\\\"],[[11426,11426],\\\"mapped\\\",[11427]],[[11427,11427],\\\"valid\\\"],[[11428,11428],\\\"mapped\\\",[11429]],[[11429,11429],\\\"valid\\\"],[[11430,11430],\\\"mapped\\\",[11431]],[[11431,11431],\\\"valid\\\"],[[11432,11432],\\\"mapped\\\",[11433]],[[11433,11433],\\\"valid\\\"],[[11434,11434],\\\"mapped\\\",[11435]],[[11435,11435],\\\"valid\\\"],[[11436,11436],\\\"mapped\\\",[11437]],[[11437,11437],\\\"valid\\\"],[[11438,11438],\\\"mapped\\\",[11439]],[[11439,11439],\\\"valid\\\"],[[11440,11440],\\\"mapped\\\",[11441]],[[11441,11441],\\\"valid\\\"],[[11442,11442],\\\"mapped\\\",[11443]],[[11443,11443],\\\"valid\\\"],[[11444,11444],\\\"mapped\\\",[11445]],[[11445,11445],\\\"valid\\\"],[[11446,11446],\\\"mapped\\\",[11447]],[[11447,11447],\\\"valid\\\"],[[11448,11448],\\\"mapped\\\",[11449]],[[11449,11449],\\\"valid\\\"],[[11450,11450],\\\"mapped\\\",[11451]],[[11451,11451],\\\"valid\\\"],[[11452,11452],\\\"mapped\\\",[11453]],[[11453,11453],\\\"valid\\\"],[[11454,11454],\\\"mapped\\\",[11455]],[[11455,11455],\\\"valid\\\"],[[11456,11456],\\\"mapped\\\",[11457]],[[11457,11457],\\\"valid\\\"],[[11458,11458],\\\"mapped\\\",[11459]],[[11459,11459],\\\"valid\\\"],[[11460,11460],\\\"mapped\\\",[11461]],[[11461,11461],\\\"valid\\\"],[[11462,11462],\\\"mapped\\\",[11463]],[[11463,11463],\\\"valid\\\"],[[11464,11464],\\\"mapped\\\",[11465]],[[11465,11465],\\\"valid\\\"],[[11466,11466],\\\"mapped\\\",[11467]],[[11467,11467],\\\"valid\\\"],[[11468,11468],\\\"mapped\\\",[11469]],[[11469,11469],\\\"valid\\\"],[[11470,11470],\\\"mapped\\\",[11471]],[[11471,11471],\\\"valid\\\"],[[11472,11472],\\\"mapped\\\",[11473]],[[11473,11473],\\\"valid\\\"],[[11474,11474],\\\"mapped\\\",[11475]],[[11475,11475],\\\"valid\\\"],[[11476,11476],\\\"mapped\\\",[11477]],[[11477,11477],\\\"valid\\\"],[[11478,11478],\\\"mapped\\\",[11479]],[[11479,11479],\\\"valid\\\"],[[11480,11480],\\\"mapped\\\",[11481]],[[11481,11481],\\\"valid\\\"],[[11482,11482],\\\"mapped\\\",[11483]],[[11483,11483],\\\"valid\\\"],[[11484,11484],\\\"mapped\\\",[11485]],[[11485,11485],\\\"valid\\\"],[[11486,11486],\\\"mapped\\\",[11487]],[[11487,11487],\\\"valid\\\"],[[11488,11488],\\\"mapped\\\",[11489]],[[11489,11489],\\\"valid\\\"],[[11490,11490],\\\"mapped\\\",[11491]],[[11491,11492],\\\"valid\\\"],[[11493,11498],\\\"valid\\\",[],\\\"NV8\\\"],[[11499,11499],\\\"mapped\\\",[11500]],[[11500,11500],\\\"valid\\\"],[[11501,11501],\\\"mapped\\\",[11502]],[[11502,11505],\\\"valid\\\"],[[11506,11506],\\\"mapped\\\",[11507]],[[11507,11507],\\\"valid\\\"],[[11508,11512],\\\"disallowed\\\"],[[11513,11519],\\\"valid\\\",[],\\\"NV8\\\"],[[11520,11557],\\\"valid\\\"],[[11558,11558],\\\"disallowed\\\"],[[11559,11559],\\\"valid\\\"],[[11560,11564],\\\"disallowed\\\"],[[11565,11565],\\\"valid\\\"],[[11566,11567],\\\"disallowed\\\"],[[11568,11621],\\\"valid\\\"],[[11622,11623],\\\"valid\\\"],[[11624,11630],\\\"disallowed\\\"],[[11631,11631],\\\"mapped\\\",[11617]],[[11632,11632],\\\"valid\\\",[],\\\"NV8\\\"],[[11633,11646],\\\"disallowed\\\"],[[11647,11647],\\\"valid\\\"],[[11648,11670],\\\"valid\\\"],[[11671,11679],\\\"disallowed\\\"],[[11680,11686],\\\"valid\\\"],[[11687,11687],\\\"disallowed\\\"],[[11688,11694],\\\"valid\\\"],[[11695,11695],\\\"disallowed\\\"],[[11696,11702],\\\"valid\\\"],[[11703,11703],\\\"disallowed\\\"],[[11704,11710],\\\"valid\\\"],[[11711,11711],\\\"disallowed\\\"],[[11712,11718],\\\"valid\\\"],[[11719,11719],\\\"disallowed\\\"],[[11720,11726],\\\"valid\\\"],[[11727,11727],\\\"disallowed\\\"],[[11728,11734],\\\"valid\\\"],[[11735,11735],\\\"disallowed\\\"],[[11736,11742],\\\"valid\\\"],[[11743,11743],\\\"disallowed\\\"],[[11744,11775],\\\"valid\\\"],[[11776,11799],\\\"valid\\\",[],\\\"NV8\\\"],[[11800,11803],\\\"valid\\\",[],\\\"NV8\\\"],[[11804,11805],\\\"valid\\\",[],\\\"NV8\\\"],[[11806,11822],\\\"valid\\\",[],\\\"NV8\\\"],[[11823,11823],\\\"valid\\\"],[[11824,11824],\\\"valid\\\",[],\\\"NV8\\\"],[[11825,11825],\\\"valid\\\",[],\\\"NV8\\\"],[[11826,11835],\\\"valid\\\",[],\\\"NV8\\\"],[[11836,11842],\\\"valid\\\",[],\\\"NV8\\\"],[[11843,11903],\\\"disallowed\\\"],[[11904,11929],\\\"valid\\\",[],\\\"NV8\\\"],[[11930,11930],\\\"disallowed\\\"],[[11931,11934],\\\"valid\\\",[],\\\"NV8\\\"],[[11935,11935],\\\"mapped\\\",[27597]],[[11936,12018],\\\"valid\\\",[],\\\"NV8\\\"],[[12019,12019],\\\"mapped\\\",[40863]],[[12020,12031],\\\"disallowed\\\"],[[12032,12032],\\\"mapped\\\",[19968]],[[12033,12033],\\\"mapped\\\",[20008]],[[12034,12034],\\\"mapped\\\",[20022]],[[12035,12035],\\\"mapped\\\",[20031]],[[12036,12036],\\\"mapped\\\",[20057]],[[12037,12037],\\\"mapped\\\",[20101]],[[12038,12038],\\\"mapped\\\",[20108]],[[12039,12039],\\\"mapped\\\",[20128]],[[12040,12040],\\\"mapped\\\",[20154]],[[12041,12041],\\\"mapped\\\",[20799]],[[12042,12042],\\\"mapped\\\",[20837]],[[12043,12043],\\\"mapped\\\",[20843]],[[12044,12044],\\\"mapped\\\",[20866]],[[12045,12045],\\\"mapped\\\",[20886]],[[12046,12046],\\\"mapped\\\",[20907]],[[12047,12047],\\\"mapped\\\",[20960]],[[12048,12048],\\\"mapped\\\",[20981]],[[12049,12049],\\\"mapped\\\",[20992]],[[12050,12050],\\\"mapped\\\",[21147]],[[12051,12051],\\\"mapped\\\",[21241]],[[12052,12052],\\\"mapped\\\",[21269]],[[12053,12053],\\\"mapped\\\",[21274]],[[12054,12054],\\\"mapped\\\",[21304]],[[12055,12055],\\\"mapped\\\",[21313]],[[12056,12056],\\\"mapped\\\",[21340]],[[12057,12057],\\\"mapped\\\",[21353]],[[12058,12058],\\\"mapped\\\",[21378]],[[12059,12059],\\\"mapped\\\",[21430]],[[12060,12060],\\\"mapped\\\",[21448]],[[12061,12061],\\\"mapped\\\",[21475]],[[12062,12062],\\\"mapped\\\",[22231]],[[12063,12063],\\\"mapped\\\",[22303]],[[12064,12064],\\\"mapped\\\",[22763]],[[12065,12065],\\\"mapped\\\",[22786]],[[12066,12066],\\\"mapped\\\",[22794]],[[12067,12067],\\\"mapped\\\",[22805]],[[12068,12068],\\\"mapped\\\",[22823]],[[12069,12069],\\\"mapped\\\",[22899]],[[12070,12070],\\\"mapped\\\",[23376]],[[12071,12071],\\\"mapped\\\",[23424]],[[12072,12072],\\\"mapped\\\",[23544]],[[12073,12073],\\\"mapped\\\",[23567]],[[12074,12074],\\\"mapped\\\",[23586]],[[12075,12075],\\\"mapped\\\",[23608]],[[12076,12076],\\\"mapped\\\",[23662]],[[12077,12077],\\\"mapped\\\",[23665]],[[12078,12078],\\\"mapped\\\",[24027]],[[12079,12079],\\\"mapped\\\",[24037]],[[12080,12080],\\\"mapped\\\",[24049]],[[12081,12081],\\\"mapped\\\",[24062]],[[12082,12082],\\\"mapped\\\",[24178]],[[12083,12083],\\\"mapped\\\",[24186]],[[12084,12084],\\\"mapped\\\",[24191]],[[12085,12085],\\\"mapped\\\",[24308]],[[12086,12086],\\\"mapped\\\",[24318]],[[12087,12087],\\\"mapped\\\",[24331]],[[12088,12088],\\\"mapped\\\",[24339]],[[12089,12089],\\\"mapped\\\",[24400]],[[12090,12090],\\\"mapped\\\",[24417]],[[12091,12091],\\\"mapped\\\",[24435]],[[12092,12092],\\\"mapped\\\",[24515]],[[12093,12093],\\\"mapped\\\",[25096]],[[12094,12094],\\\"mapped\\\",[25142]],[[12095,12095],\\\"mapped\\\",[25163]],[[12096,12096],\\\"mapped\\\",[25903]],[[12097,12097],\\\"mapped\\\",[25908]],[[12098,12098],\\\"mapped\\\",[25991]],[[12099,12099],\\\"mapped\\\",[26007]],[[12100,12100],\\\"mapped\\\",[26020]],[[12101,12101],\\\"mapped\\\",[26041]],[[12102,12102],\\\"mapped\\\",[26080]],[[12103,12103],\\\"mapped\\\",[26085]],[[12104,12104],\\\"mapped\\\",[26352]],[[12105,12105],\\\"mapped\\\",[26376]],[[12106,12106],\\\"mapped\\\",[26408]],[[12107,12107],\\\"mapped\\\",[27424]],[[12108,12108],\\\"mapped\\\",[27490]],[[12109,12109],\\\"mapped\\\",[27513]],[[12110,12110],\\\"mapped\\\",[27571]],[[12111,12111],\\\"mapped\\\",[27595]],[[12112,12112],\\\"mapped\\\",[27604]],[[12113,12113],\\\"mapped\\\",[27611]],[[12114,12114],\\\"mapped\\\",[27663]],[[12115,12115],\\\"mapped\\\",[27668]],[[12116,12116],\\\"mapped\\\",[27700]],[[12117,12117],\\\"mapped\\\",[28779]],[[12118,12118],\\\"mapped\\\",[29226]],[[12119,12119],\\\"mapped\\\",[29238]],[[12120,12120],\\\"mapped\\\",[29243]],[[12121,12121],\\\"mapped\\\",[29247]],[[12122,12122],\\\"mapped\\\",[29255]],[[12123,12123],\\\"mapped\\\",[29273]],[[12124,12124],\\\"mapped\\\",[29275]],[[12125,12125],\\\"mapped\\\",[29356]],[[12126,12126],\\\"mapped\\\",[29572]],[[12127,12127],\\\"mapped\\\",[29577]],[[12128,12128],\\\"mapped\\\",[29916]],[[12129,12129],\\\"mapped\\\",[29926]],[[12130,12130],\\\"mapped\\\",[29976]],[[12131,12131],\\\"mapped\\\",[29983]],[[12132,12132],\\\"mapped\\\",[29992]],[[12133,12133],\\\"mapped\\\",[30000]],[[12134,12134],\\\"mapped\\\",[30091]],[[12135,12135],\\\"mapped\\\",[30098]],[[12136,12136],\\\"mapped\\\",[30326]],[[12137,12137],\\\"mapped\\\",[30333]],[[12138,12138],\\\"mapped\\\",[30382]],[[12139,12139],\\\"mapped\\\",[30399]],[[12140,12140],\\\"mapped\\\",[30446]],[[12141,12141],\\\"mapped\\\",[30683]],[[12142,12142],\\\"mapped\\\",[30690]],[[12143,12143],\\\"mapped\\\",[30707]],[[12144,12144],\\\"mapped\\\",[31034]],[[12145,12145],\\\"mapped\\\",[31160]],[[12146,12146],\\\"mapped\\\",[31166]],[[12147,12147],\\\"mapped\\\",[31348]],[[12148,12148],\\\"mapped\\\",[31435]],[[12149,12149],\\\"mapped\\\",[31481]],[[12150,12150],\\\"mapped\\\",[31859]],[[12151,12151],\\\"mapped\\\",[31992]],[[12152,12152],\\\"mapped\\\",[32566]],[[12153,12153],\\\"mapped\\\",[32593]],[[12154,12154],\\\"mapped\\\",[32650]],[[12155,12155],\\\"mapped\\\",[32701]],[[12156,12156],\\\"mapped\\\",[32769]],[[12157,12157],\\\"mapped\\\",[32780]],[[12158,12158],\\\"mapped\\\",[32786]],[[12159,12159],\\\"mapped\\\",[32819]],[[12160,12160],\\\"mapped\\\",[32895]],[[12161,12161],\\\"mapped\\\",[32905]],[[12162,12162],\\\"mapped\\\",[33251]],[[12163,12163],\\\"mapped\\\",[33258]],[[12164,12164],\\\"mapped\\\",[33267]],[[12165,12165],\\\"mapped\\\",[33276]],[[12166,12166],\\\"mapped\\\",[33292]],[[12167,12167],\\\"mapped\\\",[33307]],[[12168,12168],\\\"mapped\\\",[33311]],[[12169,12169],\\\"mapped\\\",[33390]],[[12170,12170],\\\"mapped\\\",[33394]],[[12171,12171],\\\"mapped\\\",[33400]],[[12172,12172],\\\"mapped\\\",[34381]],[[12173,12173],\\\"mapped\\\",[34411]],[[12174,12174],\\\"mapped\\\",[34880]],[[12175,12175],\\\"mapped\\\",[34892]],[[12176,12176],\\\"mapped\\\",[34915]],[[12177,12177],\\\"mapped\\\",[35198]],[[12178,12178],\\\"mapped\\\",[35211]],[[12179,12179],\\\"mapped\\\",[35282]],[[12180,12180],\\\"mapped\\\",[35328]],[[12181,12181],\\\"mapped\\\",[35895]],[[12182,12182],\\\"mapped\\\",[35910]],[[12183,12183],\\\"mapped\\\",[35925]],[[12184,12184],\\\"mapped\\\",[35960]],[[12185,12185],\\\"mapped\\\",[35997]],[[12186,12186],\\\"mapped\\\",[36196]],[[12187,12187],\\\"mapped\\\",[36208]],[[12188,12188],\\\"mapped\\\",[36275]],[[12189,12189],\\\"mapped\\\",[36523]],[[12190,12190],\\\"mapped\\\",[36554]],[[12191,12191],\\\"mapped\\\",[36763]],[[12192,12192],\\\"mapped\\\",[36784]],[[12193,12193],\\\"mapped\\\",[36789]],[[12194,12194],\\\"mapped\\\",[37009]],[[12195,12195],\\\"mapped\\\",[37193]],[[12196,12196],\\\"mapped\\\",[37318]],[[12197,12197],\\\"mapped\\\",[37324]],[[12198,12198],\\\"mapped\\\",[37329]],[[12199,12199],\\\"mapped\\\",[38263]],[[12200,12200],\\\"mapped\\\",[38272]],[[12201,12201],\\\"mapped\\\",[38428]],[[12202,12202],\\\"mapped\\\",[38582]],[[12203,12203],\\\"mapped\\\",[38585]],[[12204,12204],\\\"mapped\\\",[38632]],[[12205,12205],\\\"mapped\\\",[38737]],[[12206,12206],\\\"mapped\\\",[38750]],[[12207,12207],\\\"mapped\\\",[38754]],[[12208,12208],\\\"mapped\\\",[38761]],[[12209,12209],\\\"mapped\\\",[38859]],[[12210,12210],\\\"mapped\\\",[38893]],[[12211,12211],\\\"mapped\\\",[38899]],[[12212,12212],\\\"mapped\\\",[38913]],[[12213,12213],\\\"mapped\\\",[39080]],[[12214,12214],\\\"mapped\\\",[39131]],[[12215,12215],\\\"mapped\\\",[39135]],[[12216,12216],\\\"mapped\\\",[39318]],[[12217,12217],\\\"mapped\\\",[39321]],[[12218,12218],\\\"mapped\\\",[39340]],[[12219,12219],\\\"mapped\\\",[39592]],[[12220,12220],\\\"mapped\\\",[39640]],[[12221,12221],\\\"mapped\\\",[39647]],[[12222,12222],\\\"mapped\\\",[39717]],[[12223,12223],\\\"mapped\\\",[39727]],[[12224,12224],\\\"mapped\\\",[39730]],[[12225,12225],\\\"mapped\\\",[39740]],[[12226,12226],\\\"mapped\\\",[39770]],[[12227,12227],\\\"mapped\\\",[40165]],[[12228,12228],\\\"mapped\\\",[40565]],[[12229,12229],\\\"mapped\\\",[40575]],[[12230,12230],\\\"mapped\\\",[40613]],[[12231,12231],\\\"mapped\\\",[40635]],[[12232,12232],\\\"mapped\\\",[40643]],[[12233,12233],\\\"mapped\\\",[40653]],[[12234,12234],\\\"mapped\\\",[40657]],[[12235,12235],\\\"mapped\\\",[40697]],[[12236,12236],\\\"mapped\\\",[40701]],[[12237,12237],\\\"mapped\\\",[40718]],[[12238,12238],\\\"mapped\\\",[40723]],[[12239,12239],\\\"mapped\\\",[40736]],[[12240,12240],\\\"mapped\\\",[40763]],[[12241,12241],\\\"mapped\\\",[40778]],[[12242,12242],\\\"mapped\\\",[40786]],[[12243,12243],\\\"mapped\\\",[40845]],[[12244,12244],\\\"mapped\\\",[40860]],[[12245,12245],\\\"mapped\\\",[40864]],[[12246,12271],\\\"disallowed\\\"],[[12272,12283],\\\"disallowed\\\"],[[12284,12287],\\\"disallowed\\\"],[[12288,12288],\\\"disallowed_STD3_mapped\\\",[32]],[[12289,12289],\\\"valid\\\",[],\\\"NV8\\\"],[[12290,12290],\\\"mapped\\\",[46]],[[12291,12292],\\\"valid\\\",[],\\\"NV8\\\"],[[12293,12295],\\\"valid\\\"],[[12296,12329],\\\"valid\\\",[],\\\"NV8\\\"],[[12330,12333],\\\"valid\\\"],[[12334,12341],\\\"valid\\\",[],\\\"NV8\\\"],[[12342,12342],\\\"mapped\\\",[12306]],[[12343,12343],\\\"valid\\\",[],\\\"NV8\\\"],[[12344,12344],\\\"mapped\\\",[21313]],[[12345,12345],\\\"mapped\\\",[21316]],[[12346,12346],\\\"mapped\\\",[21317]],[[12347,12347],\\\"valid\\\",[],\\\"NV8\\\"],[[12348,12348],\\\"valid\\\"],[[12349,12349],\\\"valid\\\",[],\\\"NV8\\\"],[[12350,12350],\\\"valid\\\",[],\\\"NV8\\\"],[[12351,12351],\\\"valid\\\",[],\\\"NV8\\\"],[[12352,12352],\\\"disallowed\\\"],[[12353,12436],\\\"valid\\\"],[[12437,12438],\\\"valid\\\"],[[12439,12440],\\\"disallowed\\\"],[[12441,12442],\\\"valid\\\"],[[12443,12443],\\\"disallowed_STD3_mapped\\\",[32,12441]],[[12444,12444],\\\"disallowed_STD3_mapped\\\",[32,12442]],[[12445,12446],\\\"valid\\\"],[[12447,12447],\\\"mapped\\\",[12424,12426]],[[12448,12448],\\\"valid\\\",[],\\\"NV8\\\"],[[12449,12542],\\\"valid\\\"],[[12543,12543],\\\"mapped\\\",[12467,12488]],[[12544,12548],\\\"disallowed\\\"],[[12549,12588],\\\"valid\\\"],[[12589,12589],\\\"valid\\\"],[[12590,12592],\\\"disallowed\\\"],[[12593,12593],\\\"mapped\\\",[4352]],[[12594,12594],\\\"mapped\\\",[4353]],[[12595,12595],\\\"mapped\\\",[4522]],[[12596,12596],\\\"mapped\\\",[4354]],[[12597,12597],\\\"mapped\\\",[4524]],[[12598,12598],\\\"mapped\\\",[4525]],[[12599,12599],\\\"mapped\\\",[4355]],[[12600,12600],\\\"mapped\\\",[4356]],[[12601,12601],\\\"mapped\\\",[4357]],[[12602,12602],\\\"mapped\\\",[4528]],[[12603,12603],\\\"mapped\\\",[4529]],[[12604,12604],\\\"mapped\\\",[4530]],[[12605,12605],\\\"mapped\\\",[4531]],[[12606,12606],\\\"mapped\\\",[4532]],[[12607,12607],\\\"mapped\\\",[4533]],[[12608,12608],\\\"mapped\\\",[4378]],[[12609,12609],\\\"mapped\\\",[4358]],[[12610,12610],\\\"mapped\\\",[4359]],[[12611,12611],\\\"mapped\\\",[4360]],[[12612,12612],\\\"mapped\\\",[4385]],[[12613,12613],\\\"mapped\\\",[4361]],[[12614,12614],\\\"mapped\\\",[4362]],[[12615,12615],\\\"mapped\\\",[4363]],[[12616,12616],\\\"mapped\\\",[4364]],[[12617,12617],\\\"mapped\\\",[4365]],[[12618,12618],\\\"mapped\\\",[4366]],[[12619,12619],\\\"mapped\\\",[4367]],[[12620,12620],\\\"mapped\\\",[4368]],[[12621,12621],\\\"mapped\\\",[4369]],[[12622,12622],\\\"mapped\\\",[4370]],[[12623,12623],\\\"mapped\\\",[4449]],[[12624,12624],\\\"mapped\\\",[4450]],[[12625,12625],\\\"mapped\\\",[4451]],[[12626,12626],\\\"mapped\\\",[4452]],[[12627,12627],\\\"mapped\\\",[4453]],[[12628,12628],\\\"mapped\\\",[4454]],[[12629,12629],\\\"mapped\\\",[4455]],[[12630,12630],\\\"mapped\\\",[4456]],[[12631,12631],\\\"mapped\\\",[4457]],[[12632,12632],\\\"mapped\\\",[4458]],[[12633,12633],\\\"mapped\\\",[4459]],[[12634,12634],\\\"mapped\\\",[4460]],[[12635,12635],\\\"mapped\\\",[4461]],[[12636,12636],\\\"mapped\\\",[4462]],[[12637,12637],\\\"mapped\\\",[4463]],[[12638,12638],\\\"mapped\\\",[4464]],[[12639,12639],\\\"mapped\\\",[4465]],[[12640,12640],\\\"mapped\\\",[4466]],[[12641,12641],\\\"mapped\\\",[4467]],[[12642,12642],\\\"mapped\\\",[4468]],[[12643,12643],\\\"mapped\\\",[4469]],[[12644,12644],\\\"disallowed\\\"],[[12645,12645],\\\"mapped\\\",[4372]],[[12646,12646],\\\"mapped\\\",[4373]],[[12647,12647],\\\"mapped\\\",[4551]],[[12648,12648],\\\"mapped\\\",[4552]],[[12649,12649],\\\"mapped\\\",[4556]],[[12650,12650],\\\"mapped\\\",[4558]],[[12651,12651],\\\"mapped\\\",[4563]],[[12652,12652],\\\"mapped\\\",[4567]],[[12653,12653],\\\"mapped\\\",[4569]],[[12654,12654],\\\"mapped\\\",[4380]],[[12655,12655],\\\"mapped\\\",[4573]],[[12656,12656],\\\"mapped\\\",[4575]],[[12657,12657],\\\"mapped\\\",[4381]],[[12658,12658],\\\"mapped\\\",[4382]],[[12659,12659],\\\"mapped\\\",[4384]],[[12660,12660],\\\"mapped\\\",[4386]],[[12661,12661],\\\"mapped\\\",[4387]],[[12662,12662],\\\"mapped\\\",[4391]],[[12663,12663],\\\"mapped\\\",[4393]],[[12664,12664],\\\"mapped\\\",[4395]],[[12665,12665],\\\"mapped\\\",[4396]],[[12666,12666],\\\"mapped\\\",[4397]],[[12667,12667],\\\"mapped\\\",[4398]],[[12668,12668],\\\"mapped\\\",[4399]],[[12669,12669],\\\"mapped\\\",[4402]],[[12670,12670],\\\"mapped\\\",[4406]],[[12671,12671],\\\"mapped\\\",[4416]],[[12672,12672],\\\"mapped\\\",[4423]],[[12673,12673],\\\"mapped\\\",[4428]],[[12674,12674],\\\"mapped\\\",[4593]],[[12675,12675],\\\"mapped\\\",[4594]],[[12676,12676],\\\"mapped\\\",[4439]],[[12677,12677],\\\"mapped\\\",[4440]],[[12678,12678],\\\"mapped\\\",[4441]],[[12679,12679],\\\"mapped\\\",[4484]],[[12680,12680],\\\"mapped\\\",[4485]],[[12681,12681],\\\"mapped\\\",[4488]],[[12682,12682],\\\"mapped\\\",[4497]],[[12683,12683],\\\"mapped\\\",[4498]],[[12684,12684],\\\"mapped\\\",[4500]],[[12685,12685],\\\"mapped\\\",[4510]],[[12686,12686],\\\"mapped\\\",[4513]],[[12687,12687],\\\"disallowed\\\"],[[12688,12689],\\\"valid\\\",[],\\\"NV8\\\"],[[12690,12690],\\\"mapped\\\",[19968]],[[12691,12691],\\\"mapped\\\",[20108]],[[12692,12692],\\\"mapped\\\",[19977]],[[12693,12693],\\\"mapped\\\",[22235]],[[12694,12694],\\\"mapped\\\",[19978]],[[12695,12695],\\\"mapped\\\",[20013]],[[12696,12696],\\\"mapped\\\",[19979]],[[12697,12697],\\\"mapped\\\",[30002]],[[12698,12698],\\\"mapped\\\",[20057]],[[12699,12699],\\\"mapped\\\",[19993]],[[12700,12700],\\\"mapped\\\",[19969]],[[12701,12701],\\\"mapped\\\",[22825]],[[12702,12702],\\\"mapped\\\",[22320]],[[12703,12703],\\\"mapped\\\",[20154]],[[12704,12727],\\\"valid\\\"],[[12728,12730],\\\"valid\\\"],[[12731,12735],\\\"disallowed\\\"],[[12736,12751],\\\"valid\\\",[],\\\"NV8\\\"],[[12752,12771],\\\"valid\\\",[],\\\"NV8\\\"],[[12772,12783],\\\"disallowed\\\"],[[12784,12799],\\\"valid\\\"],[[12800,12800],\\\"disallowed_STD3_mapped\\\",[40,4352,41]],[[12801,12801],\\\"disallowed_STD3_mapped\\\",[40,4354,41]],[[12802,12802],\\\"disallowed_STD3_mapped\\\",[40,4355,41]],[[12803,12803],\\\"disallowed_STD3_mapped\\\",[40,4357,41]],[[12804,12804],\\\"disallowed_STD3_mapped\\\",[40,4358,41]],[[12805,12805],\\\"disallowed_STD3_mapped\\\",[40,4359,41]],[[12806,12806],\\\"disallowed_STD3_mapped\\\",[40,4361,41]],[[12807,12807],\\\"disallowed_STD3_mapped\\\",[40,4363,41]],[[12808,12808],\\\"disallowed_STD3_mapped\\\",[40,4364,41]],[[12809,12809],\\\"disallowed_STD3_mapped\\\",[40,4366,41]],[[12810,12810],\\\"disallowed_STD3_mapped\\\",[40,4367,41]],[[12811,12811],\\\"disallowed_STD3_mapped\\\",[40,4368,41]],[[12812,12812],\\\"disallowed_STD3_mapped\\\",[40,4369,41]],[[12813,12813],\\\"disallowed_STD3_mapped\\\",[40,4370,41]],[[12814,12814],\\\"disallowed_STD3_mapped\\\",[40,44032,41]],[[12815,12815],\\\"disallowed_STD3_mapped\\\",[40,45208,41]],[[12816,12816],\\\"disallowed_STD3_mapped\\\",[40,45796,41]],[[12817,12817],\\\"disallowed_STD3_mapped\\\",[40,46972,41]],[[12818,12818],\\\"disallowed_STD3_mapped\\\",[40,47560,41]],[[12819,12819],\\\"disallowed_STD3_mapped\\\",[40,48148,41]],[[12820,12820],\\\"disallowed_STD3_mapped\\\",[40,49324,41]],[[12821,12821],\\\"disallowed_STD3_mapped\\\",[40,50500,41]],[[12822,12822],\\\"disallowed_STD3_mapped\\\",[40,51088,41]],[[12823,12823],\\\"disallowed_STD3_mapped\\\",[40,52264,41]],[[12824,12824],\\\"disallowed_STD3_mapped\\\",[40,52852,41]],[[12825,12825],\\\"disallowed_STD3_mapped\\\",[40,53440,41]],[[12826,12826],\\\"disallowed_STD3_mapped\\\",[40,54028,41]],[[12827,12827],\\\"disallowed_STD3_mapped\\\",[40,54616,41]],[[12828,12828],\\\"disallowed_STD3_mapped\\\",[40,51452,41]],[[12829,12829],\\\"disallowed_STD3_mapped\\\",[40,50724,51204,41]],[[12830,12830],\\\"disallowed_STD3_mapped\\\",[40,50724,54980,41]],[[12831,12831],\\\"disallowed\\\"],[[12832,12832],\\\"disallowed_STD3_mapped\\\",[40,19968,41]],[[12833,12833],\\\"disallowed_STD3_mapped\\\",[40,20108,41]],[[12834,12834],\\\"disallowed_STD3_mapped\\\",[40,19977,41]],[[12835,12835],\\\"disallowed_STD3_mapped\\\",[40,22235,41]],[[12836,12836],\\\"disallowed_STD3_mapped\\\",[40,20116,41]],[[12837,12837],\\\"disallowed_STD3_mapped\\\",[40,20845,41]],[[12838,12838],\\\"disallowed_STD3_mapped\\\",[40,19971,41]],[[12839,12839],\\\"disallowed_STD3_mapped\\\",[40,20843,41]],[[12840,12840],\\\"disallowed_STD3_mapped\\\",[40,20061,41]],[[12841,12841],\\\"disallowed_STD3_mapped\\\",[40,21313,41]],[[12842,12842],\\\"disallowed_STD3_mapped\\\",[40,26376,41]],[[12843,12843],\\\"disallowed_STD3_mapped\\\",[40,28779,41]],[[12844,12844],\\\"disallowed_STD3_mapped\\\",[40,27700,41]],[[12845,12845],\\\"disallowed_STD3_mapped\\\",[40,26408,41]],[[12846,12846],\\\"disallowed_STD3_mapped\\\",[40,37329,41]],[[12847,12847],\\\"disallowed_STD3_mapped\\\",[40,22303,41]],[[12848,12848],\\\"disallowed_STD3_mapped\\\",[40,26085,41]],[[12849,12849],\\\"disallowed_STD3_mapped\\\",[40,26666,41]],[[12850,12850],\\\"disallowed_STD3_mapped\\\",[40,26377,41]],[[12851,12851],\\\"disallowed_STD3_mapped\\\",[40,31038,41]],[[12852,12852],\\\"disallowed_STD3_mapped\\\",[40,21517,41]],[[12853,12853],\\\"disallowed_STD3_mapped\\\",[40,29305,41]],[[12854,12854],\\\"disallowed_STD3_mapped\\\",[40,36001,41]],[[12855,12855],\\\"disallowed_STD3_mapped\\\",[40,31069,41]],[[12856,12856],\\\"disallowed_STD3_mapped\\\",[40,21172,41]],[[12857,12857],\\\"disallowed_STD3_mapped\\\",[40,20195,41]],[[12858,12858],\\\"disallowed_STD3_mapped\\\",[40,21628,41]],[[12859,12859],\\\"disallowed_STD3_mapped\\\",[40,23398,41]],[[12860,12860],\\\"disallowed_STD3_mapped\\\",[40,30435,41]],[[12861,12861],\\\"disallowed_STD3_mapped\\\",[40,20225,41]],[[12862,12862],\\\"disallowed_STD3_mapped\\\",[40,36039,41]],[[12863,12863],\\\"disallowed_STD3_mapped\\\",[40,21332,41]],[[12864,12864],\\\"disallowed_STD3_mapped\\\",[40,31085,41]],[[12865,12865],\\\"disallowed_STD3_mapped\\\",[40,20241,41]],[[12866,12866],\\\"disallowed_STD3_mapped\\\",[40,33258,41]],[[12867,12867],\\\"disallowed_STD3_mapped\\\",[40,33267,41]],[[12868,12868],\\\"mapped\\\",[21839]],[[12869,12869],\\\"mapped\\\",[24188]],[[12870,12870],\\\"mapped\\\",[25991]],[[12871,12871],\\\"mapped\\\",[31631]],[[12872,12879],\\\"valid\\\",[],\\\"NV8\\\"],[[12880,12880],\\\"mapped\\\",[112,116,101]],[[12881,12881],\\\"mapped\\\",[50,49]],[[12882,12882],\\\"mapped\\\",[50,50]],[[12883,12883],\\\"mapped\\\",[50,51]],[[12884,12884],\\\"mapped\\\",[50,52]],[[12885,12885],\\\"mapped\\\",[50,53]],[[12886,12886],\\\"mapped\\\",[50,54]],[[12887,12887],\\\"mapped\\\",[50,55]],[[12888,12888],\\\"mapped\\\",[50,56]],[[12889,12889],\\\"mapped\\\",[50,57]],[[12890,12890],\\\"mapped\\\",[51,48]],[[12891,12891],\\\"mapped\\\",[51,49]],[[12892,12892],\\\"mapped\\\",[51,50]],[[12893,12893],\\\"mapped\\\",[51,51]],[[12894,12894],\\\"mapped\\\",[51,52]],[[12895,12895],\\\"mapped\\\",[51,53]],[[12896,12896],\\\"mapped\\\",[4352]],[[12897,12897],\\\"mapped\\\",[4354]],[[12898,12898],\\\"mapped\\\",[4355]],[[12899,12899],\\\"mapped\\\",[4357]],[[12900,12900],\\\"mapped\\\",[4358]],[[12901,12901],\\\"mapped\\\",[4359]],[[12902,12902],\\\"mapped\\\",[4361]],[[12903,12903],\\\"mapped\\\",[4363]],[[12904,12904],\\\"mapped\\\",[4364]],[[12905,12905],\\\"mapped\\\",[4366]],[[12906,12906],\\\"mapped\\\",[4367]],[[12907,12907],\\\"mapped\\\",[4368]],[[12908,12908],\\\"mapped\\\",[4369]],[[12909,12909],\\\"mapped\\\",[4370]],[[12910,12910],\\\"mapped\\\",[44032]],[[12911,12911],\\\"mapped\\\",[45208]],[[12912,12912],\\\"mapped\\\",[45796]],[[12913,12913],\\\"mapped\\\",[46972]],[[12914,12914],\\\"mapped\\\",[47560]],[[12915,12915],\\\"mapped\\\",[48148]],[[12916,12916],\\\"mapped\\\",[49324]],[[12917,12917],\\\"mapped\\\",[50500]],[[12918,12918],\\\"mapped\\\",[51088]],[[12919,12919],\\\"mapped\\\",[52264]],[[12920,12920],\\\"mapped\\\",[52852]],[[12921,12921],\\\"mapped\\\",[53440]],[[12922,12922],\\\"mapped\\\",[54028]],[[12923,12923],\\\"mapped\\\",[54616]],[[12924,12924],\\\"mapped\\\",[52280,44256]],[[12925,12925],\\\"mapped\\\",[51452,51032]],[[12926,12926],\\\"mapped\\\",[50864]],[[12927,12927],\\\"valid\\\",[],\\\"NV8\\\"],[[12928,12928],\\\"mapped\\\",[19968]],[[12929,12929],\\\"mapped\\\",[20108]],[[12930,12930],\\\"mapped\\\",[19977]],[[12931,12931],\\\"mapped\\\",[22235]],[[12932,12932],\\\"mapped\\\",[20116]],[[12933,12933],\\\"mapped\\\",[20845]],[[12934,12934],\\\"mapped\\\",[19971]],[[12935,12935],\\\"mapped\\\",[20843]],[[12936,12936],\\\"mapped\\\",[20061]],[[12937,12937],\\\"mapped\\\",[21313]],[[12938,12938],\\\"mapped\\\",[26376]],[[12939,12939],\\\"mapped\\\",[28779]],[[12940,12940],\\\"mapped\\\",[27700]],[[12941,12941],\\\"mapped\\\",[26408]],[[12942,12942],\\\"mapped\\\",[37329]],[[12943,12943],\\\"mapped\\\",[22303]],[[12944,12944],\\\"mapped\\\",[26085]],[[12945,12945],\\\"mapped\\\",[26666]],[[12946,12946],\\\"mapped\\\",[26377]],[[12947,12947],\\\"mapped\\\",[31038]],[[12948,12948],\\\"mapped\\\",[21517]],[[12949,12949],\\\"mapped\\\",[29305]],[[12950,12950],\\\"mapped\\\",[36001]],[[12951,12951],\\\"mapped\\\",[31069]],[[12952,12952],\\\"mapped\\\",[21172]],[[12953,12953],\\\"mapped\\\",[31192]],[[12954,12954],\\\"mapped\\\",[30007]],[[12955,12955],\\\"mapped\\\",[22899]],[[12956,12956],\\\"mapped\\\",[36969]],[[12957,12957],\\\"mapped\\\",[20778]],[[12958,12958],\\\"mapped\\\",[21360]],[[12959,12959],\\\"mapped\\\",[27880]],[[12960,12960],\\\"mapped\\\",[38917]],[[12961,12961],\\\"mapped\\\",[20241]],[[12962,12962],\\\"mapped\\\",[20889]],[[12963,12963],\\\"mapped\\\",[27491]],[[12964,12964],\\\"mapped\\\",[19978]],[[12965,12965],\\\"mapped\\\",[20013]],[[12966,12966],\\\"mapped\\\",[19979]],[[12967,12967],\\\"mapped\\\",[24038]],[[12968,12968],\\\"mapped\\\",[21491]],[[12969,12969],\\\"mapped\\\",[21307]],[[12970,12970],\\\"mapped\\\",[23447]],[[12971,12971],\\\"mapped\\\",[23398]],[[12972,12972],\\\"mapped\\\",[30435]],[[12973,12973],\\\"mapped\\\",[20225]],[[12974,12974],\\\"mapped\\\",[36039]],[[12975,12975],\\\"mapped\\\",[21332]],[[12976,12976],\\\"mapped\\\",[22812]],[[12977,12977],\\\"mapped\\\",[51,54]],[[12978,12978],\\\"mapped\\\",[51,55]],[[12979,12979],\\\"mapped\\\",[51,56]],[[12980,12980],\\\"mapped\\\",[51,57]],[[12981,12981],\\\"mapped\\\",[52,48]],[[12982,12982],\\\"mapped\\\",[52,49]],[[12983,12983],\\\"mapped\\\",[52,50]],[[12984,12984],\\\"mapped\\\",[52,51]],[[12985,12985],\\\"mapped\\\",[52,52]],[[12986,12986],\\\"mapped\\\",[52,53]],[[12987,12987],\\\"mapped\\\",[52,54]],[[12988,12988],\\\"mapped\\\",[52,55]],[[12989,12989],\\\"mapped\\\",[52,56]],[[12990,12990],\\\"mapped\\\",[52,57]],[[12991,12991],\\\"mapped\\\",[53,48]],[[12992,12992],\\\"mapped\\\",[49,26376]],[[12993,12993],\\\"mapped\\\",[50,26376]],[[12994,12994],\\\"mapped\\\",[51,26376]],[[12995,12995],\\\"mapped\\\",[52,26376]],[[12996,12996],\\\"mapped\\\",[53,26376]],[[12997,12997],\\\"mapped\\\",[54,26376]],[[12998,12998],\\\"mapped\\\",[55,26376]],[[12999,12999],\\\"mapped\\\",[56,26376]],[[13000,13000],\\\"mapped\\\",[57,26376]],[[13001,13001],\\\"mapped\\\",[49,48,26376]],[[13002,13002],\\\"mapped\\\",[49,49,26376]],[[13003,13003],\\\"mapped\\\",[49,50,26376]],[[13004,13004],\\\"mapped\\\",[104,103]],[[13005,13005],\\\"mapped\\\",[101,114,103]],[[13006,13006],\\\"mapped\\\",[101,118]],[[13007,13007],\\\"mapped\\\",[108,116,100]],[[13008,13008],\\\"mapped\\\",[12450]],[[13009,13009],\\\"mapped\\\",[12452]],[[13010,13010],\\\"mapped\\\",[12454]],[[13011,13011],\\\"mapped\\\",[12456]],[[13012,13012],\\\"mapped\\\",[12458]],[[13013,13013],\\\"mapped\\\",[12459]],[[13014,13014],\\\"mapped\\\",[12461]],[[13015,13015],\\\"mapped\\\",[12463]],[[13016,13016],\\\"mapped\\\",[12465]],[[13017,13017],\\\"mapped\\\",[12467]],[[13018,13018],\\\"mapped\\\",[12469]],[[13019,13019],\\\"mapped\\\",[12471]],[[13020,13020],\\\"mapped\\\",[12473]],[[13021,13021],\\\"mapped\\\",[12475]],[[13022,13022],\\\"mapped\\\",[12477]],[[13023,13023],\\\"mapped\\\",[12479]],[[13024,13024],\\\"mapped\\\",[12481]],[[13025,13025],\\\"mapped\\\",[12484]],[[13026,13026],\\\"mapped\\\",[12486]],[[13027,13027],\\\"mapped\\\",[12488]],[[13028,13028],\\\"mapped\\\",[12490]],[[13029,13029],\\\"mapped\\\",[12491]],[[13030,13030],\\\"mapped\\\",[12492]],[[13031,13031],\\\"mapped\\\",[12493]],[[13032,13032],\\\"mapped\\\",[12494]],[[13033,13033],\\\"mapped\\\",[12495]],[[13034,13034],\\\"mapped\\\",[12498]],[[13035,13035],\\\"mapped\\\",[12501]],[[13036,13036],\\\"mapped\\\",[12504]],[[13037,13037],\\\"mapped\\\",[12507]],[[13038,13038],\\\"mapped\\\",[12510]],[[13039,13039],\\\"mapped\\\",[12511]],[[13040,13040],\\\"mapped\\\",[12512]],[[13041,13041],\\\"mapped\\\",[12513]],[[13042,13042],\\\"mapped\\\",[12514]],[[13043,13043],\\\"mapped\\\",[12516]],[[13044,13044],\\\"mapped\\\",[12518]],[[13045,13045],\\\"mapped\\\",[12520]],[[13046,13046],\\\"mapped\\\",[12521]],[[13047,13047],\\\"mapped\\\",[12522]],[[13048,13048],\\\"mapped\\\",[12523]],[[13049,13049],\\\"mapped\\\",[12524]],[[13050,13050],\\\"mapped\\\",[12525]],[[13051,13051],\\\"mapped\\\",[12527]],[[13052,13052],\\\"mapped\\\",[12528]],[[13053,13053],\\\"mapped\\\",[12529]],[[13054,13054],\\\"mapped\\\",[12530]],[[13055,13055],\\\"disallowed\\\"],[[13056,13056],\\\"mapped\\\",[12450,12497,12540,12488]],[[13057,13057],\\\"mapped\\\",[12450,12523,12501,12449]],[[13058,13058],\\\"mapped\\\",[12450,12531,12506,12450]],[[13059,13059],\\\"mapped\\\",[12450,12540,12523]],[[13060,13060],\\\"mapped\\\",[12452,12491,12531,12464]],[[13061,13061],\\\"mapped\\\",[12452,12531,12481]],[[13062,13062],\\\"mapped\\\",[12454,12457,12531]],[[13063,13063],\\\"mapped\\\",[12456,12473,12463,12540,12489]],[[13064,13064],\\\"mapped\\\",[12456,12540,12459,12540]],[[13065,13065],\\\"mapped\\\",[12458,12531,12473]],[[13066,13066],\\\"mapped\\\",[12458,12540,12512]],[[13067,13067],\\\"mapped\\\",[12459,12452,12522]],[[13068,13068],\\\"mapped\\\",[12459,12521,12483,12488]],[[13069,13069],\\\"mapped\\\",[12459,12525,12522,12540]],[[13070,13070],\\\"mapped\\\",[12460,12525,12531]],[[13071,13071],\\\"mapped\\\",[12460,12531,12510]],[[13072,13072],\\\"mapped\\\",[12462,12460]],[[13073,13073],\\\"mapped\\\",[12462,12491,12540]],[[13074,13074],\\\"mapped\\\",[12461,12517,12522,12540]],[[13075,13075],\\\"mapped\\\",[12462,12523,12480,12540]],[[13076,13076],\\\"mapped\\\",[12461,12525]],[[13077,13077],\\\"mapped\\\",[12461,12525,12464,12521,12512]],[[13078,13078],\\\"mapped\\\",[12461,12525,12513,12540,12488,12523]],[[13079,13079],\\\"mapped\\\",[12461,12525,12527,12483,12488]],[[13080,13080],\\\"mapped\\\",[12464,12521,12512]],[[13081,13081],\\\"mapped\\\",[12464,12521,12512,12488,12531]],[[13082,13082],\\\"mapped\\\",[12463,12523,12476,12452,12525]],[[13083,13083],\\\"mapped\\\",[12463,12525,12540,12493]],[[13084,13084],\\\"mapped\\\",[12465,12540,12473]],[[13085,13085],\\\"mapped\\\",[12467,12523,12490]],[[13086,13086],\\\"mapped\\\",[12467,12540,12509]],[[13087,13087],\\\"mapped\\\",[12469,12452,12463,12523]],[[13088,13088],\\\"mapped\\\",[12469,12531,12481,12540,12512]],[[13089,13089],\\\"mapped\\\",[12471,12522,12531,12464]],[[13090,13090],\\\"mapped\\\",[12475,12531,12481]],[[13091,13091],\\\"mapped\\\",[12475,12531,12488]],[[13092,13092],\\\"mapped\\\",[12480,12540,12473]],[[13093,13093],\\\"mapped\\\",[12487,12471]],[[13094,13094],\\\"mapped\\\",[12489,12523]],[[13095,13095],\\\"mapped\\\",[12488,12531]],[[13096,13096],\\\"mapped\\\",[12490,12494]],[[13097,13097],\\\"mapped\\\",[12494,12483,12488]],[[13098,13098],\\\"mapped\\\",[12495,12452,12484]],[[13099,13099],\\\"mapped\\\",[12497,12540,12475,12531,12488]],[[13100,13100],\\\"mapped\\\",[12497,12540,12484]],[[13101,13101],\\\"mapped\\\",[12496,12540,12524,12523]],[[13102,13102],\\\"mapped\\\",[12500,12450,12473,12488,12523]],[[13103,13103],\\\"mapped\\\",[12500,12463,12523]],[[13104,13104],\\\"mapped\\\",[12500,12467]],[[13105,13105],\\\"mapped\\\",[12499,12523]],[[13106,13106],\\\"mapped\\\",[12501,12449,12521,12483,12489]],[[13107,13107],\\\"mapped\\\",[12501,12451,12540,12488]],[[13108,13108],\\\"mapped\\\",[12502,12483,12471,12455,12523]],[[13109,13109],\\\"mapped\\\",[12501,12521,12531]],[[13110,13110],\\\"mapped\\\",[12504,12463,12479,12540,12523]],[[13111,13111],\\\"mapped\\\",[12506,12477]],[[13112,13112],\\\"mapped\\\",[12506,12491,12498]],[[13113,13113],\\\"mapped\\\",[12504,12523,12484]],[[13114,13114],\\\"mapped\\\",[12506,12531,12473]],[[13115,13115],\\\"mapped\\\",[12506,12540,12472]],[[13116,13116],\\\"mapped\\\",[12505,12540,12479]],[[13117,13117],\\\"mapped\\\",[12509,12452,12531,12488]],[[13118,13118],\\\"mapped\\\",[12508,12523,12488]],[[13119,13119],\\\"mapped\\\",[12507,12531]],[[13120,13120],\\\"mapped\\\",[12509,12531,12489]],[[13121,13121],\\\"mapped\\\",[12507,12540,12523]],[[13122,13122],\\\"mapped\\\",[12507,12540,12531]],[[13123,13123],\\\"mapped\\\",[12510,12452,12463,12525]],[[13124,13124],\\\"mapped\\\",[12510,12452,12523]],[[13125,13125],\\\"mapped\\\",[12510,12483,12495]],[[13126,13126],\\\"mapped\\\",[12510,12523,12463]],[[13127,13127],\\\"mapped\\\",[12510,12531,12471,12519,12531]],[[13128,13128],\\\"mapped\\\",[12511,12463,12525,12531]],[[13129,13129],\\\"mapped\\\",[12511,12522]],[[13130,13130],\\\"mapped\\\",[12511,12522,12496,12540,12523]],[[13131,13131],\\\"mapped\\\",[12513,12460]],[[13132,13132],\\\"mapped\\\",[12513,12460,12488,12531]],[[13133,13133],\\\"mapped\\\",[12513,12540,12488,12523]],[[13134,13134],\\\"mapped\\\",[12516,12540,12489]],[[13135,13135],\\\"mapped\\\",[12516,12540,12523]],[[13136,13136],\\\"mapped\\\",[12518,12450,12531]],[[13137,13137],\\\"mapped\\\",[12522,12483,12488,12523]],[[13138,13138],\\\"mapped\\\",[12522,12521]],[[13139,13139],\\\"mapped\\\",[12523,12500,12540]],[[13140,13140],\\\"mapped\\\",[12523,12540,12502,12523]],[[13141,13141],\\\"mapped\\\",[12524,12512]],[[13142,13142],\\\"mapped\\\",[12524,12531,12488,12466,12531]],[[13143,13143],\\\"mapped\\\",[12527,12483,12488]],[[13144,13144],\\\"mapped\\\",[48,28857]],[[13145,13145],\\\"mapped\\\",[49,28857]],[[13146,13146],\\\"mapped\\\",[50,28857]],[[13147,13147],\\\"mapped\\\",[51,28857]],[[13148,13148],\\\"mapped\\\",[52,28857]],[[13149,13149],\\\"mapped\\\",[53,28857]],[[13150,13150],\\\"mapped\\\",[54,28857]],[[13151,13151],\\\"mapped\\\",[55,28857]],[[13152,13152],\\\"mapped\\\",[56,28857]],[[13153,13153],\\\"mapped\\\",[57,28857]],[[13154,13154],\\\"mapped\\\",[49,48,28857]],[[13155,13155],\\\"mapped\\\",[49,49,28857]],[[13156,13156],\\\"mapped\\\",[49,50,28857]],[[13157,13157],\\\"mapped\\\",[49,51,28857]],[[13158,13158],\\\"mapped\\\",[49,52,28857]],[[13159,13159],\\\"mapped\\\",[49,53,28857]],[[13160,13160],\\\"mapped\\\",[49,54,28857]],[[13161,13161],\\\"mapped\\\",[49,55,28857]],[[13162,13162],\\\"mapped\\\",[49,56,28857]],[[13163,13163],\\\"mapped\\\",[49,57,28857]],[[13164,13164],\\\"mapped\\\",[50,48,28857]],[[13165,13165],\\\"mapped\\\",[50,49,28857]],[[13166,13166],\\\"mapped\\\",[50,50,28857]],[[13167,13167],\\\"mapped\\\",[50,51,28857]],[[13168,13168],\\\"mapped\\\",[50,52,28857]],[[13169,13169],\\\"mapped\\\",[104,112,97]],[[13170,13170],\\\"mapped\\\",[100,97]],[[13171,13171],\\\"mapped\\\",[97,117]],[[13172,13172],\\\"mapped\\\",[98,97,114]],[[13173,13173],\\\"mapped\\\",[111,118]],[[13174,13174],\\\"mapped\\\",[112,99]],[[13175,13175],\\\"mapped\\\",[100,109]],[[13176,13176],\\\"mapped\\\",[100,109,50]],[[13177,13177],\\\"mapped\\\",[100,109,51]],[[13178,13178],\\\"mapped\\\",[105,117]],[[13179,13179],\\\"mapped\\\",[24179,25104]],[[13180,13180],\\\"mapped\\\",[26157,21644]],[[13181,13181],\\\"mapped\\\",[22823,27491]],[[13182,13182],\\\"mapped\\\",[26126,27835]],[[13183,13183],\\\"mapped\\\",[26666,24335,20250,31038]],[[13184,13184],\\\"mapped\\\",[112,97]],[[13185,13185],\\\"mapped\\\",[110,97]],[[13186,13186],\\\"mapped\\\",[956,97]],[[13187,13187],\\\"mapped\\\",[109,97]],[[13188,13188],\\\"mapped\\\",[107,97]],[[13189,13189],\\\"mapped\\\",[107,98]],[[13190,13190],\\\"mapped\\\",[109,98]],[[13191,13191],\\\"mapped\\\",[103,98]],[[13192,13192],\\\"mapped\\\",[99,97,108]],[[13193,13193],\\\"mapped\\\",[107,99,97,108]],[[13194,13194],\\\"mapped\\\",[112,102]],[[13195,13195],\\\"mapped\\\",[110,102]],[[13196,13196],\\\"mapped\\\",[956,102]],[[13197,13197],\\\"mapped\\\",[956,103]],[[13198,13198],\\\"mapped\\\",[109,103]],[[13199,13199],\\\"mapped\\\",[107,103]],[[13200,13200],\\\"mapped\\\",[104,122]],[[13201,13201],\\\"mapped\\\",[107,104,122]],[[13202,13202],\\\"mapped\\\",[109,104,122]],[[13203,13203],\\\"mapped\\\",[103,104,122]],[[13204,13204],\\\"mapped\\\",[116,104,122]],[[13205,13205],\\\"mapped\\\",[956,108]],[[13206,13206],\\\"mapped\\\",[109,108]],[[13207,13207],\\\"mapped\\\",[100,108]],[[13208,13208],\\\"mapped\\\",[107,108]],[[13209,13209],\\\"mapped\\\",[102,109]],[[13210,13210],\\\"mapped\\\",[110,109]],[[13211,13211],\\\"mapped\\\",[956,109]],[[13212,13212],\\\"mapped\\\",[109,109]],[[13213,13213],\\\"mapped\\\",[99,109]],[[13214,13214],\\\"mapped\\\",[107,109]],[[13215,13215],\\\"mapped\\\",[109,109,50]],[[13216,13216],\\\"mapped\\\",[99,109,50]],[[13217,13217],\\\"mapped\\\",[109,50]],[[13218,13218],\\\"mapped\\\",[107,109,50]],[[13219,13219],\\\"mapped\\\",[109,109,51]],[[13220,13220],\\\"mapped\\\",[99,109,51]],[[13221,13221],\\\"mapped\\\",[109,51]],[[13222,13222],\\\"mapped\\\",[107,109,51]],[[13223,13223],\\\"mapped\\\",[109,8725,115]],[[13224,13224],\\\"mapped\\\",[109,8725,115,50]],[[13225,13225],\\\"mapped\\\",[112,97]],[[13226,13226],\\\"mapped\\\",[107,112,97]],[[13227,13227],\\\"mapped\\\",[109,112,97]],[[13228,13228],\\\"mapped\\\",[103,112,97]],[[13229,13229],\\\"mapped\\\",[114,97,100]],[[13230,13230],\\\"mapped\\\",[114,97,100,8725,115]],[[13231,13231],\\\"mapped\\\",[114,97,100,8725,115,50]],[[13232,13232],\\\"mapped\\\",[112,115]],[[13233,13233],\\\"mapped\\\",[110,115]],[[13234,13234],\\\"mapped\\\",[956,115]],[[13235,13235],\\\"mapped\\\",[109,115]],[[13236,13236],\\\"mapped\\\",[112,118]],[[13237,13237],\\\"mapped\\\",[110,118]],[[13238,13238],\\\"mapped\\\",[956,118]],[[13239,13239],\\\"mapped\\\",[109,118]],[[13240,13240],\\\"mapped\\\",[107,118]],[[13241,13241],\\\"mapped\\\",[109,118]],[[13242,13242],\\\"mapped\\\",[112,119]],[[13243,13243],\\\"mapped\\\",[110,119]],[[13244,13244],\\\"mapped\\\",[956,119]],[[13245,13245],\\\"mapped\\\",[109,119]],[[13246,13246],\\\"mapped\\\",[107,119]],[[13247,13247],\\\"mapped\\\",[109,119]],[[13248,13248],\\\"mapped\\\",[107,969]],[[13249,13249],\\\"mapped\\\",[109,969]],[[13250,13250],\\\"disallowed\\\"],[[13251,13251],\\\"mapped\\\",[98,113]],[[13252,13252],\\\"mapped\\\",[99,99]],[[13253,13253],\\\"mapped\\\",[99,100]],[[13254,13254],\\\"mapped\\\",[99,8725,107,103]],[[13255,13255],\\\"disallowed\\\"],[[13256,13256],\\\"mapped\\\",[100,98]],[[13257,13257],\\\"mapped\\\",[103,121]],[[13258,13258],\\\"mapped\\\",[104,97]],[[13259,13259],\\\"mapped\\\",[104,112]],[[13260,13260],\\\"mapped\\\",[105,110]],[[13261,13261],\\\"mapped\\\",[107,107]],[[13262,13262],\\\"mapped\\\",[107,109]],[[13263,13263],\\\"mapped\\\",[107,116]],[[13264,13264],\\\"mapped\\\",[108,109]],[[13265,13265],\\\"mapped\\\",[108,110]],[[13266,13266],\\\"mapped\\\",[108,111,103]],[[13267,13267],\\\"mapped\\\",[108,120]],[[13268,13268],\\\"mapped\\\",[109,98]],[[13269,13269],\\\"mapped\\\",[109,105,108]],[[13270,13270],\\\"mapped\\\",[109,111,108]],[[13271,13271],\\\"mapped\\\",[112,104]],[[13272,13272],\\\"disallowed\\\"],[[13273,13273],\\\"mapped\\\",[112,112,109]],[[13274,13274],\\\"mapped\\\",[112,114]],[[13275,13275],\\\"mapped\\\",[115,114]],[[13276,13276],\\\"mapped\\\",[115,118]],[[13277,13277],\\\"mapped\\\",[119,98]],[[13278,13278],\\\"mapped\\\",[118,8725,109]],[[13279,13279],\\\"mapped\\\",[97,8725,109]],[[13280,13280],\\\"mapped\\\",[49,26085]],[[13281,13281],\\\"mapped\\\",[50,26085]],[[13282,13282],\\\"mapped\\\",[51,26085]],[[13283,13283],\\\"mapped\\\",[52,26085]],[[13284,13284],\\\"mapped\\\",[53,26085]],[[13285,13285],\\\"mapped\\\",[54,26085]],[[13286,13286],\\\"mapped\\\",[55,26085]],[[13287,13287],\\\"mapped\\\",[56,26085]],[[13288,13288],\\\"mapped\\\",[57,26085]],[[13289,13289],\\\"mapped\\\",[49,48,26085]],[[13290,13290],\\\"mapped\\\",[49,49,26085]],[[13291,13291],\\\"mapped\\\",[49,50,26085]],[[13292,13292],\\\"mapped\\\",[49,51,26085]],[[13293,13293],\\\"mapped\\\",[49,52,26085]],[[13294,13294],\\\"mapped\\\",[49,53,26085]],[[13295,13295],\\\"mapped\\\",[49,54,26085]],[[13296,13296],\\\"mapped\\\",[49,55,26085]],[[13297,13297],\\\"mapped\\\",[49,56,26085]],[[13298,13298],\\\"mapped\\\",[49,57,26085]],[[13299,13299],\\\"mapped\\\",[50,48,26085]],[[13300,13300],\\\"mapped\\\",[50,49,26085]],[[13301,13301],\\\"mapped\\\",[50,50,26085]],[[13302,13302],\\\"mapped\\\",[50,51,26085]],[[13303,13303],\\\"mapped\\\",[50,52,26085]],[[13304,13304],\\\"mapped\\\",[50,53,26085]],[[13305,13305],\\\"mapped\\\",[50,54,26085]],[[13306,13306],\\\"mapped\\\",[50,55,26085]],[[13307,13307],\\\"mapped\\\",[50,56,26085]],[[13308,13308],\\\"mapped\\\",[50,57,26085]],[[13309,13309],\\\"mapped\\\",[51,48,26085]],[[13310,13310],\\\"mapped\\\",[51,49,26085]],[[13311,13311],\\\"mapped\\\",[103,97,108]],[[13312,19893],\\\"valid\\\"],[[19894,19903],\\\"disallowed\\\"],[[19904,19967],\\\"valid\\\",[],\\\"NV8\\\"],[[19968,40869],\\\"valid\\\"],[[40870,40891],\\\"valid\\\"],[[40892,40899],\\\"valid\\\"],[[40900,40907],\\\"valid\\\"],[[40908,40908],\\\"valid\\\"],[[40909,40917],\\\"valid\\\"],[[40918,40959],\\\"disallowed\\\"],[[40960,42124],\\\"valid\\\"],[[42125,42127],\\\"disallowed\\\"],[[42128,42145],\\\"valid\\\",[],\\\"NV8\\\"],[[42146,42147],\\\"valid\\\",[],\\\"NV8\\\"],[[42148,42163],\\\"valid\\\",[],\\\"NV8\\\"],[[42164,42164],\\\"valid\\\",[],\\\"NV8\\\"],[[42165,42176],\\\"valid\\\",[],\\\"NV8\\\"],[[42177,42177],\\\"valid\\\",[],\\\"NV8\\\"],[[42178,42180],\\\"valid\\\",[],\\\"NV8\\\"],[[42181,42181],\\\"valid\\\",[],\\\"NV8\\\"],[[42182,42182],\\\"valid\\\",[],\\\"NV8\\\"],[[42183,42191],\\\"disallowed\\\"],[[42192,42237],\\\"valid\\\"],[[42238,42239],\\\"valid\\\",[],\\\"NV8\\\"],[[42240,42508],\\\"valid\\\"],[[42509,42511],\\\"valid\\\",[],\\\"NV8\\\"],[[42512,42539],\\\"valid\\\"],[[42540,42559],\\\"disallowed\\\"],[[42560,42560],\\\"mapped\\\",[42561]],[[42561,42561],\\\"valid\\\"],[[42562,42562],\\\"mapped\\\",[42563]],[[42563,42563],\\\"valid\\\"],[[42564,42564],\\\"mapped\\\",[42565]],[[42565,42565],\\\"valid\\\"],[[42566,42566],\\\"mapped\\\",[42567]],[[42567,42567],\\\"valid\\\"],[[42568,42568],\\\"mapped\\\",[42569]],[[42569,42569],\\\"valid\\\"],[[42570,42570],\\\"mapped\\\",[42571]],[[42571,42571],\\\"valid\\\"],[[42572,42572],\\\"mapped\\\",[42573]],[[42573,42573],\\\"valid\\\"],[[42574,42574],\\\"mapped\\\",[42575]],[[42575,42575],\\\"valid\\\"],[[42576,42576],\\\"mapped\\\",[42577]],[[42577,42577],\\\"valid\\\"],[[42578,42578],\\\"mapped\\\",[42579]],[[42579,42579],\\\"valid\\\"],[[42580,42580],\\\"mapped\\\",[42581]],[[42581,42581],\\\"valid\\\"],[[42582,42582],\\\"mapped\\\",[42583]],[[42583,42583],\\\"valid\\\"],[[42584,42584],\\\"mapped\\\",[42585]],[[42585,42585],\\\"valid\\\"],[[42586,42586],\\\"mapped\\\",[42587]],[[42587,42587],\\\"valid\\\"],[[42588,42588],\\\"mapped\\\",[42589]],[[42589,42589],\\\"valid\\\"],[[42590,42590],\\\"mapped\\\",[42591]],[[42591,42591],\\\"valid\\\"],[[42592,42592],\\\"mapped\\\",[42593]],[[42593,42593],\\\"valid\\\"],[[42594,42594],\\\"mapped\\\",[42595]],[[42595,42595],\\\"valid\\\"],[[42596,42596],\\\"mapped\\\",[42597]],[[42597,42597],\\\"valid\\\"],[[42598,42598],\\\"mapped\\\",[42599]],[[42599,42599],\\\"valid\\\"],[[42600,42600],\\\"mapped\\\",[42601]],[[42601,42601],\\\"valid\\\"],[[42602,42602],\\\"mapped\\\",[42603]],[[42603,42603],\\\"valid\\\"],[[42604,42604],\\\"mapped\\\",[42605]],[[42605,42607],\\\"valid\\\"],[[42608,42611],\\\"valid\\\",[],\\\"NV8\\\"],[[42612,42619],\\\"valid\\\"],[[42620,42621],\\\"valid\\\"],[[42622,42622],\\\"valid\\\",[],\\\"NV8\\\"],[[42623,42623],\\\"valid\\\"],[[42624,42624],\\\"mapped\\\",[42625]],[[42625,42625],\\\"valid\\\"],[[42626,42626],\\\"mapped\\\",[42627]],[[42627,42627],\\\"valid\\\"],[[42628,42628],\\\"mapped\\\",[42629]],[[42629,42629],\\\"valid\\\"],[[42630,42630],\\\"mapped\\\",[42631]],[[42631,42631],\\\"valid\\\"],[[42632,42632],\\\"mapped\\\",[42633]],[[42633,42633],\\\"valid\\\"],[[42634,42634],\\\"mapped\\\",[42635]],[[42635,42635],\\\"valid\\\"],[[42636,42636],\\\"mapped\\\",[42637]],[[42637,42637],\\\"valid\\\"],[[42638,42638],\\\"mapped\\\",[42639]],[[42639,42639],\\\"valid\\\"],[[42640,42640],\\\"mapped\\\",[42641]],[[42641,42641],\\\"valid\\\"],[[42642,42642],\\\"mapped\\\",[42643]],[[42643,42643],\\\"valid\\\"],[[42644,42644],\\\"mapped\\\",[42645]],[[42645,42645],\\\"valid\\\"],[[42646,42646],\\\"mapped\\\",[42647]],[[42647,42647],\\\"valid\\\"],[[42648,42648],\\\"mapped\\\",[42649]],[[42649,42649],\\\"valid\\\"],[[42650,42650],\\\"mapped\\\",[42651]],[[42651,42651],\\\"valid\\\"],[[42652,42652],\\\"mapped\\\",[1098]],[[42653,42653],\\\"mapped\\\",[1100]],[[42654,42654],\\\"valid\\\"],[[42655,42655],\\\"valid\\\"],[[42656,42725],\\\"valid\\\"],[[42726,42735],\\\"valid\\\",[],\\\"NV8\\\"],[[42736,42737],\\\"valid\\\"],[[42738,42743],\\\"valid\\\",[],\\\"NV8\\\"],[[42744,42751],\\\"disallowed\\\"],[[42752,42774],\\\"valid\\\",[],\\\"NV8\\\"],[[42775,42778],\\\"valid\\\"],[[42779,42783],\\\"valid\\\"],[[42784,42785],\\\"valid\\\",[],\\\"NV8\\\"],[[42786,42786],\\\"mapped\\\",[42787]],[[42787,42787],\\\"valid\\\"],[[42788,42788],\\\"mapped\\\",[42789]],[[42789,42789],\\\"valid\\\"],[[42790,42790],\\\"mapped\\\",[42791]],[[42791,42791],\\\"valid\\\"],[[42792,42792],\\\"mapped\\\",[42793]],[[42793,42793],\\\"valid\\\"],[[42794,42794],\\\"mapped\\\",[42795]],[[42795,42795],\\\"valid\\\"],[[42796,42796],\\\"mapped\\\",[42797]],[[42797,42797],\\\"valid\\\"],[[42798,42798],\\\"mapped\\\",[42799]],[[42799,42801],\\\"valid\\\"],[[42802,42802],\\\"mapped\\\",[42803]],[[42803,42803],\\\"valid\\\"],[[42804,42804],\\\"mapped\\\",[42805]],[[42805,42805],\\\"valid\\\"],[[42806,42806],\\\"mapped\\\",[42807]],[[42807,42807],\\\"valid\\\"],[[42808,42808],\\\"mapped\\\",[42809]],[[42809,42809],\\\"valid\\\"],[[42810,42810],\\\"mapped\\\",[42811]],[[42811,42811],\\\"valid\\\"],[[42812,42812],\\\"mapped\\\",[42813]],[[42813,42813],\\\"valid\\\"],[[42814,42814],\\\"mapped\\\",[42815]],[[42815,42815],\\\"valid\\\"],[[42816,42816],\\\"mapped\\\",[42817]],[[42817,42817],\\\"valid\\\"],[[42818,42818],\\\"mapped\\\",[42819]],[[42819,42819],\\\"valid\\\"],[[42820,42820],\\\"mapped\\\",[42821]],[[42821,42821],\\\"valid\\\"],[[42822,42822],\\\"mapped\\\",[42823]],[[42823,42823],\\\"valid\\\"],[[42824,42824],\\\"mapped\\\",[42825]],[[42825,42825],\\\"valid\\\"],[[42826,42826],\\\"mapped\\\",[42827]],[[42827,42827],\\\"valid\\\"],[[42828,42828],\\\"mapped\\\",[42829]],[[42829,42829],\\\"valid\\\"],[[42830,42830],\\\"mapped\\\",[42831]],[[42831,42831],\\\"valid\\\"],[[42832,42832],\\\"mapped\\\",[42833]],[[42833,42833],\\\"valid\\\"],[[42834,42834],\\\"mapped\\\",[42835]],[[42835,42835],\\\"valid\\\"],[[42836,42836],\\\"mapped\\\",[42837]],[[42837,42837],\\\"valid\\\"],[[42838,42838],\\\"mapped\\\",[42839]],[[42839,42839],\\\"valid\\\"],[[42840,42840],\\\"mapped\\\",[42841]],[[42841,42841],\\\"valid\\\"],[[42842,42842],\\\"mapped\\\",[42843]],[[42843,42843],\\\"valid\\\"],[[42844,42844],\\\"mapped\\\",[42845]],[[42845,42845],\\\"valid\\\"],[[42846,42846],\\\"mapped\\\",[42847]],[[42847,42847],\\\"valid\\\"],[[42848,42848],\\\"mapped\\\",[42849]],[[42849,42849],\\\"valid\\\"],[[42850,42850],\\\"mapped\\\",[42851]],[[42851,42851],\\\"valid\\\"],[[42852,42852],\\\"mapped\\\",[42853]],[[42853,42853],\\\"valid\\\"],[[42854,42854],\\\"mapped\\\",[42855]],[[42855,42855],\\\"valid\\\"],[[42856,42856],\\\"mapped\\\",[42857]],[[42857,42857],\\\"valid\\\"],[[42858,42858],\\\"mapped\\\",[42859]],[[42859,42859],\\\"valid\\\"],[[42860,42860],\\\"mapped\\\",[42861]],[[42861,42861],\\\"valid\\\"],[[42862,42862],\\\"mapped\\\",[42863]],[[42863,42863],\\\"valid\\\"],[[42864,42864],\\\"mapped\\\",[42863]],[[42865,42872],\\\"valid\\\"],[[42873,42873],\\\"mapped\\\",[42874]],[[42874,42874],\\\"valid\\\"],[[42875,42875],\\\"mapped\\\",[42876]],[[42876,42876],\\\"valid\\\"],[[42877,42877],\\\"mapped\\\",[7545]],[[42878,42878],\\\"mapped\\\",[42879]],[[42879,42879],\\\"valid\\\"],[[42880,42880],\\\"mapped\\\",[42881]],[[42881,42881],\\\"valid\\\"],[[42882,42882],\\\"mapped\\\",[42883]],[[42883,42883],\\\"valid\\\"],[[42884,42884],\\\"mapped\\\",[42885]],[[42885,42885],\\\"valid\\\"],[[42886,42886],\\\"mapped\\\",[42887]],[[42887,42888],\\\"valid\\\"],[[42889,42890],\\\"valid\\\",[],\\\"NV8\\\"],[[42891,42891],\\\"mapped\\\",[42892]],[[42892,42892],\\\"valid\\\"],[[42893,42893],\\\"mapped\\\",[613]],[[42894,42894],\\\"valid\\\"],[[42895,42895],\\\"valid\\\"],[[42896,42896],\\\"mapped\\\",[42897]],[[42897,42897],\\\"valid\\\"],[[42898,42898],\\\"mapped\\\",[42899]],[[42899,42899],\\\"valid\\\"],[[42900,42901],\\\"valid\\\"],[[42902,42902],\\\"mapped\\\",[42903]],[[42903,42903],\\\"valid\\\"],[[42904,42904],\\\"mapped\\\",[42905]],[[42905,42905],\\\"valid\\\"],[[42906,42906],\\\"mapped\\\",[42907]],[[42907,42907],\\\"valid\\\"],[[42908,42908],\\\"mapped\\\",[42909]],[[42909,42909],\\\"valid\\\"],[[42910,42910],\\\"mapped\\\",[42911]],[[42911,42911],\\\"valid\\\"],[[42912,42912],\\\"mapped\\\",[42913]],[[42913,42913],\\\"valid\\\"],[[42914,42914],\\\"mapped\\\",[42915]],[[42915,42915],\\\"valid\\\"],[[42916,42916],\\\"mapped\\\",[42917]],[[42917,42917],\\\"valid\\\"],[[42918,42918],\\\"mapped\\\",[42919]],[[42919,42919],\\\"valid\\\"],[[42920,42920],\\\"mapped\\\",[42921]],[[42921,42921],\\\"valid\\\"],[[42922,42922],\\\"mapped\\\",[614]],[[42923,42923],\\\"mapped\\\",[604]],[[42924,42924],\\\"mapped\\\",[609]],[[42925,42925],\\\"mapped\\\",[620]],[[42926,42927],\\\"disallowed\\\"],[[42928,42928],\\\"mapped\\\",[670]],[[42929,42929],\\\"mapped\\\",[647]],[[42930,42930],\\\"mapped\\\",[669]],[[42931,42931],\\\"mapped\\\",[43859]],[[42932,42932],\\\"mapped\\\",[42933]],[[42933,42933],\\\"valid\\\"],[[42934,42934],\\\"mapped\\\",[42935]],[[42935,42935],\\\"valid\\\"],[[42936,42998],\\\"disallowed\\\"],[[42999,42999],\\\"valid\\\"],[[43000,43000],\\\"mapped\\\",[295]],[[43001,43001],\\\"mapped\\\",[339]],[[43002,43002],\\\"valid\\\"],[[43003,43007],\\\"valid\\\"],[[43008,43047],\\\"valid\\\"],[[43048,43051],\\\"valid\\\",[],\\\"NV8\\\"],[[43052,43055],\\\"disallowed\\\"],[[43056,43065],\\\"valid\\\",[],\\\"NV8\\\"],[[43066,43071],\\\"disallowed\\\"],[[43072,43123],\\\"valid\\\"],[[43124,43127],\\\"valid\\\",[],\\\"NV8\\\"],[[43128,43135],\\\"disallowed\\\"],[[43136,43204],\\\"valid\\\"],[[43205,43213],\\\"disallowed\\\"],[[43214,43215],\\\"valid\\\",[],\\\"NV8\\\"],[[43216,43225],\\\"valid\\\"],[[43226,43231],\\\"disallowed\\\"],[[43232,43255],\\\"valid\\\"],[[43256,43258],\\\"valid\\\",[],\\\"NV8\\\"],[[43259,43259],\\\"valid\\\"],[[43260,43260],\\\"valid\\\",[],\\\"NV8\\\"],[[43261,43261],\\\"valid\\\"],[[43262,43263],\\\"disallowed\\\"],[[43264,43309],\\\"valid\\\"],[[43310,43311],\\\"valid\\\",[],\\\"NV8\\\"],[[43312,43347],\\\"valid\\\"],[[43348,43358],\\\"disallowed\\\"],[[43359,43359],\\\"valid\\\",[],\\\"NV8\\\"],[[43360,43388],\\\"valid\\\",[],\\\"NV8\\\"],[[43389,43391],\\\"disallowed\\\"],[[43392,43456],\\\"valid\\\"],[[43457,43469],\\\"valid\\\",[],\\\"NV8\\\"],[[43470,43470],\\\"disallowed\\\"],[[43471,43481],\\\"valid\\\"],[[43482,43485],\\\"disallowed\\\"],[[43486,43487],\\\"valid\\\",[],\\\"NV8\\\"],[[43488,43518],\\\"valid\\\"],[[43519,43519],\\\"disallowed\\\"],[[43520,43574],\\\"valid\\\"],[[43575,43583],\\\"disallowed\\\"],[[43584,43597],\\\"valid\\\"],[[43598,43599],\\\"disallowed\\\"],[[43600,43609],\\\"valid\\\"],[[43610,43611],\\\"disallowed\\\"],[[43612,43615],\\\"valid\\\",[],\\\"NV8\\\"],[[43616,43638],\\\"valid\\\"],[[43639,43641],\\\"valid\\\",[],\\\"NV8\\\"],[[43642,43643],\\\"valid\\\"],[[43644,43647],\\\"valid\\\"],[[43648,43714],\\\"valid\\\"],[[43715,43738],\\\"disallowed\\\"],[[43739,43741],\\\"valid\\\"],[[43742,43743],\\\"valid\\\",[],\\\"NV8\\\"],[[43744,43759],\\\"valid\\\"],[[43760,43761],\\\"valid\\\",[],\\\"NV8\\\"],[[43762,43766],\\\"valid\\\"],[[43767,43776],\\\"disallowed\\\"],[[43777,43782],\\\"valid\\\"],[[43783,43784],\\\"disallowed\\\"],[[43785,43790],\\\"valid\\\"],[[43791,43792],\\\"disallowed\\\"],[[43793,43798],\\\"valid\\\"],[[43799,43807],\\\"disallowed\\\"],[[43808,43814],\\\"valid\\\"],[[43815,43815],\\\"disallowed\\\"],[[43816,43822],\\\"valid\\\"],[[43823,43823],\\\"disallowed\\\"],[[43824,43866],\\\"valid\\\"],[[43867,43867],\\\"valid\\\",[],\\\"NV8\\\"],[[43868,43868],\\\"mapped\\\",[42791]],[[43869,43869],\\\"mapped\\\",[43831]],[[43870,43870],\\\"mapped\\\",[619]],[[43871,43871],\\\"mapped\\\",[43858]],[[43872,43875],\\\"valid\\\"],[[43876,43877],\\\"valid\\\"],[[43878,43887],\\\"disallowed\\\"],[[43888,43888],\\\"mapped\\\",[5024]],[[43889,43889],\\\"mapped\\\",[5025]],[[43890,43890],\\\"mapped\\\",[5026]],[[43891,43891],\\\"mapped\\\",[5027]],[[43892,43892],\\\"mapped\\\",[5028]],[[43893,43893],\\\"mapped\\\",[5029]],[[43894,43894],\\\"mapped\\\",[5030]],[[43895,43895],\\\"mapped\\\",[5031]],[[43896,43896],\\\"mapped\\\",[5032]],[[43897,43897],\\\"mapped\\\",[5033]],[[43898,43898],\\\"mapped\\\",[5034]],[[43899,43899],\\\"mapped\\\",[5035]],[[43900,43900],\\\"mapped\\\",[5036]],[[43901,43901],\\\"mapped\\\",[5037]],[[43902,43902],\\\"mapped\\\",[5038]],[[43903,43903],\\\"mapped\\\",[5039]],[[43904,43904],\\\"mapped\\\",[5040]],[[43905,43905],\\\"mapped\\\",[5041]],[[43906,43906],\\\"mapped\\\",[5042]],[[43907,43907],\\\"mapped\\\",[5043]],[[43908,43908],\\\"mapped\\\",[5044]],[[43909,43909],\\\"mapped\\\",[5045]],[[43910,43910],\\\"mapped\\\",[5046]],[[43911,43911],\\\"mapped\\\",[5047]],[[43912,43912],\\\"mapped\\\",[5048]],[[43913,43913],\\\"mapped\\\",[5049]],[[43914,43914],\\\"mapped\\\",[5050]],[[43915,43915],\\\"mapped\\\",[5051]],[[43916,43916],\\\"mapped\\\",[5052]],[[43917,43917],\\\"mapped\\\",[5053]],[[43918,43918],\\\"mapped\\\",[5054]],[[43919,43919],\\\"mapped\\\",[5055]],[[43920,43920],\\\"mapped\\\",[5056]],[[43921,43921],\\\"mapped\\\",[5057]],[[43922,43922],\\\"mapped\\\",[5058]],[[43923,43923],\\\"mapped\\\",[5059]],[[43924,43924],\\\"mapped\\\",[5060]],[[43925,43925],\\\"mapped\\\",[5061]],[[43926,43926],\\\"mapped\\\",[5062]],[[43927,43927],\\\"mapped\\\",[5063]],[[43928,43928],\\\"mapped\\\",[5064]],[[43929,43929],\\\"mapped\\\",[5065]],[[43930,43930],\\\"mapped\\\",[5066]],[[43931,43931],\\\"mapped\\\",[5067]],[[43932,43932],\\\"mapped\\\",[5068]],[[43933,43933],\\\"mapped\\\",[5069]],[[43934,43934],\\\"mapped\\\",[5070]],[[43935,43935],\\\"mapped\\\",[5071]],[[43936,43936],\\\"mapped\\\",[5072]],[[43937,43937],\\\"mapped\\\",[5073]],[[43938,43938],\\\"mapped\\\",[5074]],[[43939,43939],\\\"mapped\\\",[5075]],[[43940,43940],\\\"mapped\\\",[5076]],[[43941,43941],\\\"mapped\\\",[5077]],[[43942,43942],\\\"mapped\\\",[5078]],[[43943,43943],\\\"mapped\\\",[5079]],[[43944,43944],\\\"mapped\\\",[5080]],[[43945,43945],\\\"mapped\\\",[5081]],[[43946,43946],\\\"mapped\\\",[5082]],[[43947,43947],\\\"mapped\\\",[5083]],[[43948,43948],\\\"mapped\\\",[5084]],[[43949,43949],\\\"mapped\\\",[5085]],[[43950,43950],\\\"mapped\\\",[5086]],[[43951,43951],\\\"mapped\\\",[5087]],[[43952,43952],\\\"mapped\\\",[5088]],[[43953,43953],\\\"mapped\\\",[5089]],[[43954,43954],\\\"mapped\\\",[5090]],[[43955,43955],\\\"mapped\\\",[5091]],[[43956,43956],\\\"mapped\\\",[5092]],[[43957,43957],\\\"mapped\\\",[5093]],[[43958,43958],\\\"mapped\\\",[5094]],[[43959,43959],\\\"mapped\\\",[5095]],[[43960,43960],\\\"mapped\\\",[5096]],[[43961,43961],\\\"mapped\\\",[5097]],[[43962,43962],\\\"mapped\\\",[5098]],[[43963,43963],\\\"mapped\\\",[5099]],[[43964,43964],\\\"mapped\\\",[5100]],[[43965,43965],\\\"mapped\\\",[5101]],[[43966,43966],\\\"mapped\\\",[5102]],[[43967,43967],\\\"mapped\\\",[5103]],[[43968,44010],\\\"valid\\\"],[[44011,44011],\\\"valid\\\",[],\\\"NV8\\\"],[[44012,44013],\\\"valid\\\"],[[44014,44015],\\\"disallowed\\\"],[[44016,44025],\\\"valid\\\"],[[44026,44031],\\\"disallowed\\\"],[[44032,55203],\\\"valid\\\"],[[55204,55215],\\\"disallowed\\\"],[[55216,55238],\\\"valid\\\",[],\\\"NV8\\\"],[[55239,55242],\\\"disallowed\\\"],[[55243,55291],\\\"valid\\\",[],\\\"NV8\\\"],[[55292,55295],\\\"disallowed\\\"],[[55296,57343],\\\"disallowed\\\"],[[57344,63743],\\\"disallowed\\\"],[[63744,63744],\\\"mapped\\\",[35912]],[[63745,63745],\\\"mapped\\\",[26356]],[[63746,63746],\\\"mapped\\\",[36554]],[[63747,63747],\\\"mapped\\\",[36040]],[[63748,63748],\\\"mapped\\\",[28369]],[[63749,63749],\\\"mapped\\\",[20018]],[[63750,63750],\\\"mapped\\\",[21477]],[[63751,63752],\\\"mapped\\\",[40860]],[[63753,63753],\\\"mapped\\\",[22865]],[[63754,63754],\\\"mapped\\\",[37329]],[[63755,63755],\\\"mapped\\\",[21895]],[[63756,63756],\\\"mapped\\\",[22856]],[[63757,63757],\\\"mapped\\\",[25078]],[[63758,63758],\\\"mapped\\\",[30313]],[[63759,63759],\\\"mapped\\\",[32645]],[[63760,63760],\\\"mapped\\\",[34367]],[[63761,63761],\\\"mapped\\\",[34746]],[[63762,63762],\\\"mapped\\\",[35064]],[[63763,63763],\\\"mapped\\\",[37007]],[[63764,63764],\\\"mapped\\\",[27138]],[[63765,63765],\\\"mapped\\\",[27931]],[[63766,63766],\\\"mapped\\\",[28889]],[[63767,63767],\\\"mapped\\\",[29662]],[[63768,63768],\\\"mapped\\\",[33853]],[[63769,63769],\\\"mapped\\\",[37226]],[[63770,63770],\\\"mapped\\\",[39409]],[[63771,63771],\\\"mapped\\\",[20098]],[[63772,63772],\\\"mapped\\\",[21365]],[[63773,63773],\\\"mapped\\\",[27396]],[[63774,63774],\\\"mapped\\\",[29211]],[[63775,63775],\\\"mapped\\\",[34349]],[[63776,63776],\\\"mapped\\\",[40478]],[[63777,63777],\\\"mapped\\\",[23888]],[[63778,63778],\\\"mapped\\\",[28651]],[[63779,63779],\\\"mapped\\\",[34253]],[[63780,63780],\\\"mapped\\\",[35172]],[[63781,63781],\\\"mapped\\\",[25289]],[[63782,63782],\\\"mapped\\\",[33240]],[[63783,63783],\\\"mapped\\\",[34847]],[[63784,63784],\\\"mapped\\\",[24266]],[[63785,63785],\\\"mapped\\\",[26391]],[[63786,63786],\\\"mapped\\\",[28010]],[[63787,63787],\\\"mapped\\\",[29436]],[[63788,63788],\\\"mapped\\\",[37070]],[[63789,63789],\\\"mapped\\\",[20358]],[[63790,63790],\\\"mapped\\\",[20919]],[[63791,63791],\\\"mapped\\\",[21214]],[[63792,63792],\\\"mapped\\\",[25796]],[[63793,63793],\\\"mapped\\\",[27347]],[[63794,63794],\\\"mapped\\\",[29200]],[[63795,63795],\\\"mapped\\\",[30439]],[[63796,63796],\\\"mapped\\\",[32769]],[[63797,63797],\\\"mapped\\\",[34310]],[[63798,63798],\\\"mapped\\\",[34396]],[[63799,63799],\\\"mapped\\\",[36335]],[[63800,63800],\\\"mapped\\\",[38706]],[[63801,63801],\\\"mapped\\\",[39791]],[[63802,63802],\\\"mapped\\\",[40442]],[[63803,63803],\\\"mapped\\\",[30860]],[[63804,63804],\\\"mapped\\\",[31103]],[[63805,63805],\\\"mapped\\\",[32160]],[[63806,63806],\\\"mapped\\\",[33737]],[[63807,63807],\\\"mapped\\\",[37636]],[[63808,63808],\\\"mapped\\\",[40575]],[[63809,63809],\\\"mapped\\\",[35542]],[[63810,63810],\\\"mapped\\\",[22751]],[[63811,63811],\\\"mapped\\\",[24324]],[[63812,63812],\\\"mapped\\\",[31840]],[[63813,63813],\\\"mapped\\\",[32894]],[[63814,63814],\\\"mapped\\\",[29282]],[[63815,63815],\\\"mapped\\\",[30922]],[[63816,63816],\\\"mapped\\\",[36034]],[[63817,63817],\\\"mapped\\\",[38647]],[[63818,63818],\\\"mapped\\\",[22744]],[[63819,63819],\\\"mapped\\\",[23650]],[[63820,63820],\\\"mapped\\\",[27155]],[[63821,63821],\\\"mapped\\\",[28122]],[[63822,63822],\\\"mapped\\\",[28431]],[[63823,63823],\\\"mapped\\\",[32047]],[[63824,63824],\\\"mapped\\\",[32311]],[[63825,63825],\\\"mapped\\\",[38475]],[[63826,63826],\\\"mapped\\\",[21202]],[[63827,63827],\\\"mapped\\\",[32907]],[[63828,63828],\\\"mapped\\\",[20956]],[[63829,63829],\\\"mapped\\\",[20940]],[[63830,63830],\\\"mapped\\\",[31260]],[[63831,63831],\\\"mapped\\\",[32190]],[[63832,63832],\\\"mapped\\\",[33777]],[[63833,63833],\\\"mapped\\\",[38517]],[[63834,63834],\\\"mapped\\\",[35712]],[[63835,63835],\\\"mapped\\\",[25295]],[[63836,63836],\\\"mapped\\\",[27138]],[[63837,63837],\\\"mapped\\\",[35582]],[[63838,63838],\\\"mapped\\\",[20025]],[[63839,63839],\\\"mapped\\\",[23527]],[[63840,63840],\\\"mapped\\\",[24594]],[[63841,63841],\\\"mapped\\\",[29575]],[[63842,63842],\\\"mapped\\\",[30064]],[[63843,63843],\\\"mapped\\\",[21271]],[[63844,63844],\\\"mapped\\\",[30971]],[[63845,63845],\\\"mapped\\\",[20415]],[[63846,63846],\\\"mapped\\\",[24489]],[[63847,63847],\\\"mapped\\\",[19981]],[[63848,63848],\\\"mapped\\\",[27852]],[[63849,63849],\\\"mapped\\\",[25976]],[[63850,63850],\\\"mapped\\\",[32034]],[[63851,63851],\\\"mapped\\\",[21443]],[[63852,63852],\\\"mapped\\\",[22622]],[[63853,63853],\\\"mapped\\\",[30465]],[[63854,63854],\\\"mapped\\\",[33865]],[[63855,63855],\\\"mapped\\\",[35498]],[[63856,63856],\\\"mapped\\\",[27578]],[[63857,63857],\\\"mapped\\\",[36784]],[[63858,63858],\\\"mapped\\\",[27784]],[[63859,63859],\\\"mapped\\\",[25342]],[[63860,63860],\\\"mapped\\\",[33509]],[[63861,63861],\\\"mapped\\\",[25504]],[[63862,63862],\\\"mapped\\\",[30053]],[[63863,63863],\\\"mapped\\\",[20142]],[[63864,63864],\\\"mapped\\\",[20841]],[[63865,63865],\\\"mapped\\\",[20937]],[[63866,63866],\\\"mapped\\\",[26753]],[[63867,63867],\\\"mapped\\\",[31975]],[[63868,63868],\\\"mapped\\\",[33391]],[[63869,63869],\\\"mapped\\\",[35538]],[[63870,63870],\\\"mapped\\\",[37327]],[[63871,63871],\\\"mapped\\\",[21237]],[[63872,63872],\\\"mapped\\\",[21570]],[[63873,63873],\\\"mapped\\\",[22899]],[[63874,63874],\\\"mapped\\\",[24300]],[[63875,63875],\\\"mapped\\\",[26053]],[[63876,63876],\\\"mapped\\\",[28670]],[[63877,63877],\\\"mapped\\\",[31018]],[[63878,63878],\\\"mapped\\\",[38317]],[[63879,63879],\\\"mapped\\\",[39530]],[[63880,63880],\\\"mapped\\\",[40599]],[[63881,63881],\\\"mapped\\\",[40654]],[[63882,63882],\\\"mapped\\\",[21147]],[[63883,63883],\\\"mapped\\\",[26310]],[[63884,63884],\\\"mapped\\\",[27511]],[[63885,63885],\\\"mapped\\\",[36706]],[[63886,63886],\\\"mapped\\\",[24180]],[[63887,63887],\\\"mapped\\\",[24976]],[[63888,63888],\\\"mapped\\\",[25088]],[[63889,63889],\\\"mapped\\\",[25754]],[[63890,63890],\\\"mapped\\\",[28451]],[[63891,63891],\\\"mapped\\\",[29001]],[[63892,63892],\\\"mapped\\\",[29833]],[[63893,63893],\\\"mapped\\\",[31178]],[[63894,63894],\\\"mapped\\\",[32244]],[[63895,63895],\\\"mapped\\\",[32879]],[[63896,63896],\\\"mapped\\\",[36646]],[[63897,63897],\\\"mapped\\\",[34030]],[[63898,63898],\\\"mapped\\\",[36899]],[[63899,63899],\\\"mapped\\\",[37706]],[[63900,63900],\\\"mapped\\\",[21015]],[[63901,63901],\\\"mapped\\\",[21155]],[[63902,63902],\\\"mapped\\\",[21693]],[[63903,63903],\\\"mapped\\\",[28872]],[[63904,63904],\\\"mapped\\\",[35010]],[[63905,63905],\\\"mapped\\\",[35498]],[[63906,63906],\\\"mapped\\\",[24265]],[[63907,63907],\\\"mapped\\\",[24565]],[[63908,63908],\\\"mapped\\\",[25467]],[[63909,63909],\\\"mapped\\\",[27566]],[[63910,63910],\\\"mapped\\\",[31806]],[[63911,63911],\\\"mapped\\\",[29557]],[[63912,63912],\\\"mapped\\\",[20196]],[[63913,63913],\\\"mapped\\\",[22265]],[[63914,63914],\\\"mapped\\\",[23527]],[[63915,63915],\\\"mapped\\\",[23994]],[[63916,63916],\\\"mapped\\\",[24604]],[[63917,63917],\\\"mapped\\\",[29618]],[[63918,63918],\\\"mapped\\\",[29801]],[[63919,63919],\\\"mapped\\\",[32666]],[[63920,63920],\\\"mapped\\\",[32838]],[[63921,63921],\\\"mapped\\\",[37428]],[[63922,63922],\\\"mapped\\\",[38646]],[[63923,63923],\\\"mapped\\\",[38728]],[[63924,63924],\\\"mapped\\\",[38936]],[[63925,63925],\\\"mapped\\\",[20363]],[[63926,63926],\\\"mapped\\\",[31150]],[[63927,63927],\\\"mapped\\\",[37300]],[[63928,63928],\\\"mapped\\\",[38584]],[[63929,63929],\\\"mapped\\\",[24801]],[[63930,63930],\\\"mapped\\\",[20102]],[[63931,63931],\\\"mapped\\\",[20698]],[[63932,63932],\\\"mapped\\\",[23534]],[[63933,63933],\\\"mapped\\\",[23615]],[[63934,63934],\\\"mapped\\\",[26009]],[[63935,63935],\\\"mapped\\\",[27138]],[[63936,63936],\\\"mapped\\\",[29134]],[[63937,63937],\\\"mapped\\\",[30274]],[[63938,63938],\\\"mapped\\\",[34044]],[[63939,63939],\\\"mapped\\\",[36988]],[[63940,63940],\\\"mapped\\\",[40845]],[[63941,63941],\\\"mapped\\\",[26248]],[[63942,63942],\\\"mapped\\\",[38446]],[[63943,63943],\\\"mapped\\\",[21129]],[[63944,63944],\\\"mapped\\\",[26491]],[[63945,63945],\\\"mapped\\\",[26611]],[[63946,63946],\\\"mapped\\\",[27969]],[[63947,63947],\\\"mapped\\\",[28316]],[[63948,63948],\\\"mapped\\\",[29705]],[[63949,63949],\\\"mapped\\\",[30041]],[[63950,63950],\\\"mapped\\\",[30827]],[[63951,63951],\\\"mapped\\\",[32016]],[[63952,63952],\\\"mapped\\\",[39006]],[[63953,63953],\\\"mapped\\\",[20845]],[[63954,63954],\\\"mapped\\\",[25134]],[[63955,63955],\\\"mapped\\\",[38520]],[[63956,63956],\\\"mapped\\\",[20523]],[[63957,63957],\\\"mapped\\\",[23833]],[[63958,63958],\\\"mapped\\\",[28138]],[[63959,63959],\\\"mapped\\\",[36650]],[[63960,63960],\\\"mapped\\\",[24459]],[[63961,63961],\\\"mapped\\\",[24900]],[[63962,63962],\\\"mapped\\\",[26647]],[[63963,63963],\\\"mapped\\\",[29575]],[[63964,63964],\\\"mapped\\\",[38534]],[[63965,63965],\\\"mapped\\\",[21033]],[[63966,63966],\\\"mapped\\\",[21519]],[[63967,63967],\\\"mapped\\\",[23653]],[[63968,63968],\\\"mapped\\\",[26131]],[[63969,63969],\\\"mapped\\\",[26446]],[[63970,63970],\\\"mapped\\\",[26792]],[[63971,63971],\\\"mapped\\\",[27877]],[[63972,63972],\\\"mapped\\\",[29702]],[[63973,63973],\\\"mapped\\\",[30178]],[[63974,63974],\\\"mapped\\\",[32633]],[[63975,63975],\\\"mapped\\\",[35023]],[[63976,63976],\\\"mapped\\\",[35041]],[[63977,63977],\\\"mapped\\\",[37324]],[[63978,63978],\\\"mapped\\\",[38626]],[[63979,63979],\\\"mapped\\\",[21311]],[[63980,63980],\\\"mapped\\\",[28346]],[[63981,63981],\\\"mapped\\\",[21533]],[[63982,63982],\\\"mapped\\\",[29136]],[[63983,63983],\\\"mapped\\\",[29848]],[[63984,63984],\\\"mapped\\\",[34298]],[[63985,63985],\\\"mapped\\\",[38563]],[[63986,63986],\\\"mapped\\\",[40023]],[[63987,63987],\\\"mapped\\\",[40607]],[[63988,63988],\\\"mapped\\\",[26519]],[[63989,63989],\\\"mapped\\\",[28107]],[[63990,63990],\\\"mapped\\\",[33256]],[[63991,63991],\\\"mapped\\\",[31435]],[[63992,63992],\\\"mapped\\\",[31520]],[[63993,63993],\\\"mapped\\\",[31890]],[[63994,63994],\\\"mapped\\\",[29376]],[[63995,63995],\\\"mapped\\\",[28825]],[[63996,63996],\\\"mapped\\\",[35672]],[[63997,63997],\\\"mapped\\\",[20160]],[[63998,63998],\\\"mapped\\\",[33590]],[[63999,63999],\\\"mapped\\\",[21050]],[[64000,64000],\\\"mapped\\\",[20999]],[[64001,64001],\\\"mapped\\\",[24230]],[[64002,64002],\\\"mapped\\\",[25299]],[[64003,64003],\\\"mapped\\\",[31958]],[[64004,64004],\\\"mapped\\\",[23429]],[[64005,64005],\\\"mapped\\\",[27934]],[[64006,64006],\\\"mapped\\\",[26292]],[[64007,64007],\\\"mapped\\\",[36667]],[[64008,64008],\\\"mapped\\\",[34892]],[[64009,64009],\\\"mapped\\\",[38477]],[[64010,64010],\\\"mapped\\\",[35211]],[[64011,64011],\\\"mapped\\\",[24275]],[[64012,64012],\\\"mapped\\\",[20800]],[[64013,64013],\\\"mapped\\\",[21952]],[[64014,64015],\\\"valid\\\"],[[64016,64016],\\\"mapped\\\",[22618]],[[64017,64017],\\\"valid\\\"],[[64018,64018],\\\"mapped\\\",[26228]],[[64019,64020],\\\"valid\\\"],[[64021,64021],\\\"mapped\\\",[20958]],[[64022,64022],\\\"mapped\\\",[29482]],[[64023,64023],\\\"mapped\\\",[30410]],[[64024,64024],\\\"mapped\\\",[31036]],[[64025,64025],\\\"mapped\\\",[31070]],[[64026,64026],\\\"mapped\\\",[31077]],[[64027,64027],\\\"mapped\\\",[31119]],[[64028,64028],\\\"mapped\\\",[38742]],[[64029,64029],\\\"mapped\\\",[31934]],[[64030,64030],\\\"mapped\\\",[32701]],[[64031,64031],\\\"valid\\\"],[[64032,64032],\\\"mapped\\\",[34322]],[[64033,64033],\\\"valid\\\"],[[64034,64034],\\\"mapped\\\",[35576]],[[64035,64036],\\\"valid\\\"],[[64037,64037],\\\"mapped\\\",[36920]],[[64038,64038],\\\"mapped\\\",[37117]],[[64039,64041],\\\"valid\\\"],[[64042,64042],\\\"mapped\\\",[39151]],[[64043,64043],\\\"mapped\\\",[39164]],[[64044,64044],\\\"mapped\\\",[39208]],[[64045,64045],\\\"mapped\\\",[40372]],[[64046,64046],\\\"mapped\\\",[37086]],[[64047,64047],\\\"mapped\\\",[38583]],[[64048,64048],\\\"mapped\\\",[20398]],[[64049,64049],\\\"mapped\\\",[20711]],[[64050,64050],\\\"mapped\\\",[20813]],[[64051,64051],\\\"mapped\\\",[21193]],[[64052,64052],\\\"mapped\\\",[21220]],[[64053,64053],\\\"mapped\\\",[21329]],[[64054,64054],\\\"mapped\\\",[21917]],[[64055,64055],\\\"mapped\\\",[22022]],[[64056,64056],\\\"mapped\\\",[22120]],[[64057,64057],\\\"mapped\\\",[22592]],[[64058,64058],\\\"mapped\\\",[22696]],[[64059,64059],\\\"mapped\\\",[23652]],[[64060,64060],\\\"mapped\\\",[23662]],[[64061,64061],\\\"mapped\\\",[24724]],[[64062,64062],\\\"mapped\\\",[24936]],[[64063,64063],\\\"mapped\\\",[24974]],[[64064,64064],\\\"mapped\\\",[25074]],[[64065,64065],\\\"mapped\\\",[25935]],[[64066,64066],\\\"mapped\\\",[26082]],[[64067,64067],\\\"mapped\\\",[26257]],[[64068,64068],\\\"mapped\\\",[26757]],[[64069,64069],\\\"mapped\\\",[28023]],[[64070,64070],\\\"mapped\\\",[28186]],[[64071,64071],\\\"mapped\\\",[28450]],[[64072,64072],\\\"mapped\\\",[29038]],[[64073,64073],\\\"mapped\\\",[29227]],[[64074,64074],\\\"mapped\\\",[29730]],[[64075,64075],\\\"mapped\\\",[30865]],[[64076,64076],\\\"mapped\\\",[31038]],[[64077,64077],\\\"mapped\\\",[31049]],[[64078,64078],\\\"mapped\\\",[31048]],[[64079,64079],\\\"mapped\\\",[31056]],[[64080,64080],\\\"mapped\\\",[31062]],[[64081,64081],\\\"mapped\\\",[31069]],[[64082,64082],\\\"mapped\\\",[31117]],[[64083,64083],\\\"mapped\\\",[31118]],[[64084,64084],\\\"mapped\\\",[31296]],[[64085,64085],\\\"mapped\\\",[31361]],[[64086,64086],\\\"mapped\\\",[31680]],[[64087,64087],\\\"mapped\\\",[32244]],[[64088,64088],\\\"mapped\\\",[32265]],[[64089,64089],\\\"mapped\\\",[32321]],[[64090,64090],\\\"mapped\\\",[32626]],[[64091,64091],\\\"mapped\\\",[32773]],[[64092,64092],\\\"mapped\\\",[33261]],[[64093,64094],\\\"mapped\\\",[33401]],[[64095,64095],\\\"mapped\\\",[33879]],[[64096,64096],\\\"mapped\\\",[35088]],[[64097,64097],\\\"mapped\\\",[35222]],[[64098,64098],\\\"mapped\\\",[35585]],[[64099,64099],\\\"mapped\\\",[35641]],[[64100,64100],\\\"mapped\\\",[36051]],[[64101,64101],\\\"mapped\\\",[36104]],[[64102,64102],\\\"mapped\\\",[36790]],[[64103,64103],\\\"mapped\\\",[36920]],[[64104,64104],\\\"mapped\\\",[38627]],[[64105,64105],\\\"mapped\\\",[38911]],[[64106,64106],\\\"mapped\\\",[38971]],[[64107,64107],\\\"mapped\\\",[24693]],[[64108,64108],\\\"mapped\\\",[148206]],[[64109,64109],\\\"mapped\\\",[33304]],[[64110,64111],\\\"disallowed\\\"],[[64112,64112],\\\"mapped\\\",[20006]],[[64113,64113],\\\"mapped\\\",[20917]],[[64114,64114],\\\"mapped\\\",[20840]],[[64115,64115],\\\"mapped\\\",[20352]],[[64116,64116],\\\"mapped\\\",[20805]],[[64117,64117],\\\"mapped\\\",[20864]],[[64118,64118],\\\"mapped\\\",[21191]],[[64119,64119],\\\"mapped\\\",[21242]],[[64120,64120],\\\"mapped\\\",[21917]],[[64121,64121],\\\"mapped\\\",[21845]],[[64122,64122],\\\"mapped\\\",[21913]],[[64123,64123],\\\"mapped\\\",[21986]],[[64124,64124],\\\"mapped\\\",[22618]],[[64125,64125],\\\"mapped\\\",[22707]],[[64126,64126],\\\"mapped\\\",[22852]],[[64127,64127],\\\"mapped\\\",[22868]],[[64128,64128],\\\"mapped\\\",[23138]],[[64129,64129],\\\"mapped\\\",[23336]],[[64130,64130],\\\"mapped\\\",[24274]],[[64131,64131],\\\"mapped\\\",[24281]],[[64132,64132],\\\"mapped\\\",[24425]],[[64133,64133],\\\"mapped\\\",[24493]],[[64134,64134],\\\"mapped\\\",[24792]],[[64135,64135],\\\"mapped\\\",[24910]],[[64136,64136],\\\"mapped\\\",[24840]],[[64137,64137],\\\"mapped\\\",[24974]],[[64138,64138],\\\"mapped\\\",[24928]],[[64139,64139],\\\"mapped\\\",[25074]],[[64140,64140],\\\"mapped\\\",[25140]],[[64141,64141],\\\"mapped\\\",[25540]],[[64142,64142],\\\"mapped\\\",[25628]],[[64143,64143],\\\"mapped\\\",[25682]],[[64144,64144],\\\"mapped\\\",[25942]],[[64145,64145],\\\"mapped\\\",[26228]],[[64146,64146],\\\"mapped\\\",[26391]],[[64147,64147],\\\"mapped\\\",[26395]],[[64148,64148],\\\"mapped\\\",[26454]],[[64149,64149],\\\"mapped\\\",[27513]],[[64150,64150],\\\"mapped\\\",[27578]],[[64151,64151],\\\"mapped\\\",[27969]],[[64152,64152],\\\"mapped\\\",[28379]],[[64153,64153],\\\"mapped\\\",[28363]],[[64154,64154],\\\"mapped\\\",[28450]],[[64155,64155],\\\"mapped\\\",[28702]],[[64156,64156],\\\"mapped\\\",[29038]],[[64157,64157],\\\"mapped\\\",[30631]],[[64158,64158],\\\"mapped\\\",[29237]],[[64159,64159],\\\"mapped\\\",[29359]],[[64160,64160],\\\"mapped\\\",[29482]],[[64161,64161],\\\"mapped\\\",[29809]],[[64162,64162],\\\"mapped\\\",[29958]],[[64163,64163],\\\"mapped\\\",[30011]],[[64164,64164],\\\"mapped\\\",[30237]],[[64165,64165],\\\"mapped\\\",[30239]],[[64166,64166],\\\"mapped\\\",[30410]],[[64167,64167],\\\"mapped\\\",[30427]],[[64168,64168],\\\"mapped\\\",[30452]],[[64169,64169],\\\"mapped\\\",[30538]],[[64170,64170],\\\"mapped\\\",[30528]],[[64171,64171],\\\"mapped\\\",[30924]],[[64172,64172],\\\"mapped\\\",[31409]],[[64173,64173],\\\"mapped\\\",[31680]],[[64174,64174],\\\"mapped\\\",[31867]],[[64175,64175],\\\"mapped\\\",[32091]],[[64176,64176],\\\"mapped\\\",[32244]],[[64177,64177],\\\"mapped\\\",[32574]],[[64178,64178],\\\"mapped\\\",[32773]],[[64179,64179],\\\"mapped\\\",[33618]],[[64180,64180],\\\"mapped\\\",[33775]],[[64181,64181],\\\"mapped\\\",[34681]],[[64182,64182],\\\"mapped\\\",[35137]],[[64183,64183],\\\"mapped\\\",[35206]],[[64184,64184],\\\"mapped\\\",[35222]],[[64185,64185],\\\"mapped\\\",[35519]],[[64186,64186],\\\"mapped\\\",[35576]],[[64187,64187],\\\"mapped\\\",[35531]],[[64188,64188],\\\"mapped\\\",[35585]],[[64189,64189],\\\"mapped\\\",[35582]],[[64190,64190],\\\"mapped\\\",[35565]],[[64191,64191],\\\"mapped\\\",[35641]],[[64192,64192],\\\"mapped\\\",[35722]],[[64193,64193],\\\"mapped\\\",[36104]],[[64194,64194],\\\"mapped\\\",[36664]],[[64195,64195],\\\"mapped\\\",[36978]],[[64196,64196],\\\"mapped\\\",[37273]],[[64197,64197],\\\"mapped\\\",[37494]],[[64198,64198],\\\"mapped\\\",[38524]],[[64199,64199],\\\"mapped\\\",[38627]],[[64200,64200],\\\"mapped\\\",[38742]],[[64201,64201],\\\"mapped\\\",[38875]],[[64202,64202],\\\"mapped\\\",[38911]],[[64203,64203],\\\"mapped\\\",[38923]],[[64204,64204],\\\"mapped\\\",[38971]],[[64205,64205],\\\"mapped\\\",[39698]],[[64206,64206],\\\"mapped\\\",[40860]],[[64207,64207],\\\"mapped\\\",[141386]],[[64208,64208],\\\"mapped\\\",[141380]],[[64209,64209],\\\"mapped\\\",[144341]],[[64210,64210],\\\"mapped\\\",[15261]],[[64211,64211],\\\"mapped\\\",[16408]],[[64212,64212],\\\"mapped\\\",[16441]],[[64213,64213],\\\"mapped\\\",[152137]],[[64214,64214],\\\"mapped\\\",[154832]],[[64215,64215],\\\"mapped\\\",[163539]],[[64216,64216],\\\"mapped\\\",[40771]],[[64217,64217],\\\"mapped\\\",[40846]],[[64218,64255],\\\"disallowed\\\"],[[64256,64256],\\\"mapped\\\",[102,102]],[[64257,64257],\\\"mapped\\\",[102,105]],[[64258,64258],\\\"mapped\\\",[102,108]],[[64259,64259],\\\"mapped\\\",[102,102,105]],[[64260,64260],\\\"mapped\\\",[102,102,108]],[[64261,64262],\\\"mapped\\\",[115,116]],[[64263,64274],\\\"disallowed\\\"],[[64275,64275],\\\"mapped\\\",[1396,1398]],[[64276,64276],\\\"mapped\\\",[1396,1381]],[[64277,64277],\\\"mapped\\\",[1396,1387]],[[64278,64278],\\\"mapped\\\",[1406,1398]],[[64279,64279],\\\"mapped\\\",[1396,1389]],[[64280,64284],\\\"disallowed\\\"],[[64285,64285],\\\"mapped\\\",[1497,1460]],[[64286,64286],\\\"valid\\\"],[[64287,64287],\\\"mapped\\\",[1522,1463]],[[64288,64288],\\\"mapped\\\",[1506]],[[64289,64289],\\\"mapped\\\",[1488]],[[64290,64290],\\\"mapped\\\",[1491]],[[64291,64291],\\\"mapped\\\",[1492]],[[64292,64292],\\\"mapped\\\",[1499]],[[64293,64293],\\\"mapped\\\",[1500]],[[64294,64294],\\\"mapped\\\",[1501]],[[64295,64295],\\\"mapped\\\",[1512]],[[64296,64296],\\\"mapped\\\",[1514]],[[64297,64297],\\\"disallowed_STD3_mapped\\\",[43]],[[64298,64298],\\\"mapped\\\",[1513,1473]],[[64299,64299],\\\"mapped\\\",[1513,1474]],[[64300,64300],\\\"mapped\\\",[1513,1468,1473]],[[64301,64301],\\\"mapped\\\",[1513,1468,1474]],[[64302,64302],\\\"mapped\\\",[1488,1463]],[[64303,64303],\\\"mapped\\\",[1488,1464]],[[64304,64304],\\\"mapped\\\",[1488,1468]],[[64305,64305],\\\"mapped\\\",[1489,1468]],[[64306,64306],\\\"mapped\\\",[1490,1468]],[[64307,64307],\\\"mapped\\\",[1491,1468]],[[64308,64308],\\\"mapped\\\",[1492,1468]],[[64309,64309],\\\"mapped\\\",[1493,1468]],[[64310,64310],\\\"mapped\\\",[1494,1468]],[[64311,64311],\\\"disallowed\\\"],[[64312,64312],\\\"mapped\\\",[1496,1468]],[[64313,64313],\\\"mapped\\\",[1497,1468]],[[64314,64314],\\\"mapped\\\",[1498,1468]],[[64315,64315],\\\"mapped\\\",[1499,1468]],[[64316,64316],\\\"mapped\\\",[1500,1468]],[[64317,64317],\\\"disallowed\\\"],[[64318,64318],\\\"mapped\\\",[1502,1468]],[[64319,64319],\\\"disallowed\\\"],[[64320,64320],\\\"mapped\\\",[1504,1468]],[[64321,64321],\\\"mapped\\\",[1505,1468]],[[64322,64322],\\\"disallowed\\\"],[[64323,64323],\\\"mapped\\\",[1507,1468]],[[64324,64324],\\\"mapped\\\",[1508,1468]],[[64325,64325],\\\"disallowed\\\"],[[64326,64326],\\\"mapped\\\",[1510,1468]],[[64327,64327],\\\"mapped\\\",[1511,1468]],[[64328,64328],\\\"mapped\\\",[1512,1468]],[[64329,64329],\\\"mapped\\\",[1513,1468]],[[64330,64330],\\\"mapped\\\",[1514,1468]],[[64331,64331],\\\"mapped\\\",[1493,1465]],[[64332,64332],\\\"mapped\\\",[1489,1471]],[[64333,64333],\\\"mapped\\\",[1499,1471]],[[64334,64334],\\\"mapped\\\",[1508,1471]],[[64335,64335],\\\"mapped\\\",[1488,1500]],[[64336,64337],\\\"mapped\\\",[1649]],[[64338,64341],\\\"mapped\\\",[1659]],[[64342,64345],\\\"mapped\\\",[1662]],[[64346,64349],\\\"mapped\\\",[1664]],[[64350,64353],\\\"mapped\\\",[1658]],[[64354,64357],\\\"mapped\\\",[1663]],[[64358,64361],\\\"mapped\\\",[1657]],[[64362,64365],\\\"mapped\\\",[1700]],[[64366,64369],\\\"mapped\\\",[1702]],[[64370,64373],\\\"mapped\\\",[1668]],[[64374,64377],\\\"mapped\\\",[1667]],[[64378,64381],\\\"mapped\\\",[1670]],[[64382,64385],\\\"mapped\\\",[1671]],[[64386,64387],\\\"mapped\\\",[1677]],[[64388,64389],\\\"mapped\\\",[1676]],[[64390,64391],\\\"mapped\\\",[1678]],[[64392,64393],\\\"mapped\\\",[1672]],[[64394,64395],\\\"mapped\\\",[1688]],[[64396,64397],\\\"mapped\\\",[1681]],[[64398,64401],\\\"mapped\\\",[1705]],[[64402,64405],\\\"mapped\\\",[1711]],[[64406,64409],\\\"mapped\\\",[1715]],[[64410,64413],\\\"mapped\\\",[1713]],[[64414,64415],\\\"mapped\\\",[1722]],[[64416,64419],\\\"mapped\\\",[1723]],[[64420,64421],\\\"mapped\\\",[1728]],[[64422,64425],\\\"mapped\\\",[1729]],[[64426,64429],\\\"mapped\\\",[1726]],[[64430,64431],\\\"mapped\\\",[1746]],[[64432,64433],\\\"mapped\\\",[1747]],[[64434,64449],\\\"valid\\\",[],\\\"NV8\\\"],[[64450,64466],\\\"disallowed\\\"],[[64467,64470],\\\"mapped\\\",[1709]],[[64471,64472],\\\"mapped\\\",[1735]],[[64473,64474],\\\"mapped\\\",[1734]],[[64475,64476],\\\"mapped\\\",[1736]],[[64477,64477],\\\"mapped\\\",[1735,1652]],[[64478,64479],\\\"mapped\\\",[1739]],[[64480,64481],\\\"mapped\\\",[1733]],[[64482,64483],\\\"mapped\\\",[1737]],[[64484,64487],\\\"mapped\\\",[1744]],[[64488,64489],\\\"mapped\\\",[1609]],[[64490,64491],\\\"mapped\\\",[1574,1575]],[[64492,64493],\\\"mapped\\\",[1574,1749]],[[64494,64495],\\\"mapped\\\",[1574,1608]],[[64496,64497],\\\"mapped\\\",[1574,1735]],[[64498,64499],\\\"mapped\\\",[1574,1734]],[[64500,64501],\\\"mapped\\\",[1574,1736]],[[64502,64504],\\\"mapped\\\",[1574,1744]],[[64505,64507],\\\"mapped\\\",[1574,1609]],[[64508,64511],\\\"mapped\\\",[1740]],[[64512,64512],\\\"mapped\\\",[1574,1580]],[[64513,64513],\\\"mapped\\\",[1574,1581]],[[64514,64514],\\\"mapped\\\",[1574,1605]],[[64515,64515],\\\"mapped\\\",[1574,1609]],[[64516,64516],\\\"mapped\\\",[1574,1610]],[[64517,64517],\\\"mapped\\\",[1576,1580]],[[64518,64518],\\\"mapped\\\",[1576,1581]],[[64519,64519],\\\"mapped\\\",[1576,1582]],[[64520,64520],\\\"mapped\\\",[1576,1605]],[[64521,64521],\\\"mapped\\\",[1576,1609]],[[64522,64522],\\\"mapped\\\",[1576,1610]],[[64523,64523],\\\"mapped\\\",[1578,1580]],[[64524,64524],\\\"mapped\\\",[1578,1581]],[[64525,64525],\\\"mapped\\\",[1578,1582]],[[64526,64526],\\\"mapped\\\",[1578,1605]],[[64527,64527],\\\"mapped\\\",[1578,1609]],[[64528,64528],\\\"mapped\\\",[1578,1610]],[[64529,64529],\\\"mapped\\\",[1579,1580]],[[64530,64530],\\\"mapped\\\",[1579,1605]],[[64531,64531],\\\"mapped\\\",[1579,1609]],[[64532,64532],\\\"mapped\\\",[1579,1610]],[[64533,64533],\\\"mapped\\\",[1580,1581]],[[64534,64534],\\\"mapped\\\",[1580,1605]],[[64535,64535],\\\"mapped\\\",[1581,1580]],[[64536,64536],\\\"mapped\\\",[1581,1605]],[[64537,64537],\\\"mapped\\\",[1582,1580]],[[64538,64538],\\\"mapped\\\",[1582,1581]],[[64539,64539],\\\"mapped\\\",[1582,1605]],[[64540,64540],\\\"mapped\\\",[1587,1580]],[[64541,64541],\\\"mapped\\\",[1587,1581]],[[64542,64542],\\\"mapped\\\",[1587,1582]],[[64543,64543],\\\"mapped\\\",[1587,1605]],[[64544,64544],\\\"mapped\\\",[1589,1581]],[[64545,64545],\\\"mapped\\\",[1589,1605]],[[64546,64546],\\\"mapped\\\",[1590,1580]],[[64547,64547],\\\"mapped\\\",[1590,1581]],[[64548,64548],\\\"mapped\\\",[1590,1582]],[[64549,64549],\\\"mapped\\\",[1590,1605]],[[64550,64550],\\\"mapped\\\",[1591,1581]],[[64551,64551],\\\"mapped\\\",[1591,1605]],[[64552,64552],\\\"mapped\\\",[1592,1605]],[[64553,64553],\\\"mapped\\\",[1593,1580]],[[64554,64554],\\\"mapped\\\",[1593,1605]],[[64555,64555],\\\"mapped\\\",[1594,1580]],[[64556,64556],\\\"mapped\\\",[1594,1605]],[[64557,64557],\\\"mapped\\\",[1601,1580]],[[64558,64558],\\\"mapped\\\",[1601,1581]],[[64559,64559],\\\"mapped\\\",[1601,1582]],[[64560,64560],\\\"mapped\\\",[1601,1605]],[[64561,64561],\\\"mapped\\\",[1601,1609]],[[64562,64562],\\\"mapped\\\",[1601,1610]],[[64563,64563],\\\"mapped\\\",[1602,1581]],[[64564,64564],\\\"mapped\\\",[1602,1605]],[[64565,64565],\\\"mapped\\\",[1602,1609]],[[64566,64566],\\\"mapped\\\",[1602,1610]],[[64567,64567],\\\"mapped\\\",[1603,1575]],[[64568,64568],\\\"mapped\\\",[1603,1580]],[[64569,64569],\\\"mapped\\\",[1603,1581]],[[64570,64570],\\\"mapped\\\",[1603,1582]],[[64571,64571],\\\"mapped\\\",[1603,1604]],[[64572,64572],\\\"mapped\\\",[1603,1605]],[[64573,64573],\\\"mapped\\\",[1603,1609]],[[64574,64574],\\\"mapped\\\",[1603,1610]],[[64575,64575],\\\"mapped\\\",[1604,1580]],[[64576,64576],\\\"mapped\\\",[1604,1581]],[[64577,64577],\\\"mapped\\\",[1604,1582]],[[64578,64578],\\\"mapped\\\",[1604,1605]],[[64579,64579],\\\"mapped\\\",[1604,1609]],[[64580,64580],\\\"mapped\\\",[1604,1610]],[[64581,64581],\\\"mapped\\\",[1605,1580]],[[64582,64582],\\\"mapped\\\",[1605,1581]],[[64583,64583],\\\"mapped\\\",[1605,1582]],[[64584,64584],\\\"mapped\\\",[1605,1605]],[[64585,64585],\\\"mapped\\\",[1605,1609]],[[64586,64586],\\\"mapped\\\",[1605,1610]],[[64587,64587],\\\"mapped\\\",[1606,1580]],[[64588,64588],\\\"mapped\\\",[1606,1581]],[[64589,64589],\\\"mapped\\\",[1606,1582]],[[64590,64590],\\\"mapped\\\",[1606,1605]],[[64591,64591],\\\"mapped\\\",[1606,1609]],[[64592,64592],\\\"mapped\\\",[1606,1610]],[[64593,64593],\\\"mapped\\\",[1607,1580]],[[64594,64594],\\\"mapped\\\",[1607,1605]],[[64595,64595],\\\"mapped\\\",[1607,1609]],[[64596,64596],\\\"mapped\\\",[1607,1610]],[[64597,64597],\\\"mapped\\\",[1610,1580]],[[64598,64598],\\\"mapped\\\",[1610,1581]],[[64599,64599],\\\"mapped\\\",[1610,1582]],[[64600,64600],\\\"mapped\\\",[1610,1605]],[[64601,64601],\\\"mapped\\\",[1610,1609]],[[64602,64602],\\\"mapped\\\",[1610,1610]],[[64603,64603],\\\"mapped\\\",[1584,1648]],[[64604,64604],\\\"mapped\\\",[1585,1648]],[[64605,64605],\\\"mapped\\\",[1609,1648]],[[64606,64606],\\\"disallowed_STD3_mapped\\\",[32,1612,1617]],[[64607,64607],\\\"disallowed_STD3_mapped\\\",[32,1613,1617]],[[64608,64608],\\\"disallowed_STD3_mapped\\\",[32,1614,1617]],[[64609,64609],\\\"disallowed_STD3_mapped\\\",[32,1615,1617]],[[64610,64610],\\\"disallowed_STD3_mapped\\\",[32,1616,1617]],[[64611,64611],\\\"disallowed_STD3_mapped\\\",[32,1617,1648]],[[64612,64612],\\\"mapped\\\",[1574,1585]],[[64613,64613],\\\"mapped\\\",[1574,1586]],[[64614,64614],\\\"mapped\\\",[1574,1605]],[[64615,64615],\\\"mapped\\\",[1574,1606]],[[64616,64616],\\\"mapped\\\",[1574,1609]],[[64617,64617],\\\"mapped\\\",[1574,1610]],[[64618,64618],\\\"mapped\\\",[1576,1585]],[[64619,64619],\\\"mapped\\\",[1576,1586]],[[64620,64620],\\\"mapped\\\",[1576,1605]],[[64621,64621],\\\"mapped\\\",[1576,1606]],[[64622,64622],\\\"mapped\\\",[1576,1609]],[[64623,64623],\\\"mapped\\\",[1576,1610]],[[64624,64624],\\\"mapped\\\",[1578,1585]],[[64625,64625],\\\"mapped\\\",[1578,1586]],[[64626,64626],\\\"mapped\\\",[1578,1605]],[[64627,64627],\\\"mapped\\\",[1578,1606]],[[64628,64628],\\\"mapped\\\",[1578,1609]],[[64629,64629],\\\"mapped\\\",[1578,1610]],[[64630,64630],\\\"mapped\\\",[1579,1585]],[[64631,64631],\\\"mapped\\\",[1579,1586]],[[64632,64632],\\\"mapped\\\",[1579,1605]],[[64633,64633],\\\"mapped\\\",[1579,1606]],[[64634,64634],\\\"mapped\\\",[1579,1609]],[[64635,64635],\\\"mapped\\\",[1579,1610]],[[64636,64636],\\\"mapped\\\",[1601,1609]],[[64637,64637],\\\"mapped\\\",[1601,1610]],[[64638,64638],\\\"mapped\\\",[1602,1609]],[[64639,64639],\\\"mapped\\\",[1602,1610]],[[64640,64640],\\\"mapped\\\",[1603,1575]],[[64641,64641],\\\"mapped\\\",[1603,1604]],[[64642,64642],\\\"mapped\\\",[1603,1605]],[[64643,64643],\\\"mapped\\\",[1603,1609]],[[64644,64644],\\\"mapped\\\",[1603,1610]],[[64645,64645],\\\"mapped\\\",[1604,1605]],[[64646,64646],\\\"mapped\\\",[1604,1609]],[[64647,64647],\\\"mapped\\\",[1604,1610]],[[64648,64648],\\\"mapped\\\",[1605,1575]],[[64649,64649],\\\"mapped\\\",[1605,1605]],[[64650,64650],\\\"mapped\\\",[1606,1585]],[[64651,64651],\\\"mapped\\\",[1606,1586]],[[64652,64652],\\\"mapped\\\",[1606,1605]],[[64653,64653],\\\"mapped\\\",[1606,1606]],[[64654,64654],\\\"mapped\\\",[1606,1609]],[[64655,64655],\\\"mapped\\\",[1606,1610]],[[64656,64656],\\\"mapped\\\",[1609,1648]],[[64657,64657],\\\"mapped\\\",[1610,1585]],[[64658,64658],\\\"mapped\\\",[1610,1586]],[[64659,64659],\\\"mapped\\\",[1610,1605]],[[64660,64660],\\\"mapped\\\",[1610,1606]],[[64661,64661],\\\"mapped\\\",[1610,1609]],[[64662,64662],\\\"mapped\\\",[1610,1610]],[[64663,64663],\\\"mapped\\\",[1574,1580]],[[64664,64664],\\\"mapped\\\",[1574,1581]],[[64665,64665],\\\"mapped\\\",[1574,1582]],[[64666,64666],\\\"mapped\\\",[1574,1605]],[[64667,64667],\\\"mapped\\\",[1574,1607]],[[64668,64668],\\\"mapped\\\",[1576,1580]],[[64669,64669],\\\"mapped\\\",[1576,1581]],[[64670,64670],\\\"mapped\\\",[1576,1582]],[[64671,64671],\\\"mapped\\\",[1576,1605]],[[64672,64672],\\\"mapped\\\",[1576,1607]],[[64673,64673],\\\"mapped\\\",[1578,1580]],[[64674,64674],\\\"mapped\\\",[1578,1581]],[[64675,64675],\\\"mapped\\\",[1578,1582]],[[64676,64676],\\\"mapped\\\",[1578,1605]],[[64677,64677],\\\"mapped\\\",[1578,1607]],[[64678,64678],\\\"mapped\\\",[1579,1605]],[[64679,64679],\\\"mapped\\\",[1580,1581]],[[64680,64680],\\\"mapped\\\",[1580,1605]],[[64681,64681],\\\"mapped\\\",[1581,1580]],[[64682,64682],\\\"mapped\\\",[1581,1605]],[[64683,64683],\\\"mapped\\\",[1582,1580]],[[64684,64684],\\\"mapped\\\",[1582,1605]],[[64685,64685],\\\"mapped\\\",[1587,1580]],[[64686,64686],\\\"mapped\\\",[1587,1581]],[[64687,64687],\\\"mapped\\\",[1587,1582]],[[64688,64688],\\\"mapped\\\",[1587,1605]],[[64689,64689],\\\"mapped\\\",[1589,1581]],[[64690,64690],\\\"mapped\\\",[1589,1582]],[[64691,64691],\\\"mapped\\\",[1589,1605]],[[64692,64692],\\\"mapped\\\",[1590,1580]],[[64693,64693],\\\"mapped\\\",[1590,1581]],[[64694,64694],\\\"mapped\\\",[1590,1582]],[[64695,64695],\\\"mapped\\\",[1590,1605]],[[64696,64696],\\\"mapped\\\",[1591,1581]],[[64697,64697],\\\"mapped\\\",[1592,1605]],[[64698,64698],\\\"mapped\\\",[1593,1580]],[[64699,64699],\\\"mapped\\\",[1593,1605]],[[64700,64700],\\\"mapped\\\",[1594,1580]],[[64701,64701],\\\"mapped\\\",[1594,1605]],[[64702,64702],\\\"mapped\\\",[1601,1580]],[[64703,64703],\\\"mapped\\\",[1601,1581]],[[64704,64704],\\\"mapped\\\",[1601,1582]],[[64705,64705],\\\"mapped\\\",[1601,1605]],[[64706,64706],\\\"mapped\\\",[1602,1581]],[[64707,64707],\\\"mapped\\\",[1602,1605]],[[64708,64708],\\\"mapped\\\",[1603,1580]],[[64709,64709],\\\"mapped\\\",[1603,1581]],[[64710,64710],\\\"mapped\\\",[1603,1582]],[[64711,64711],\\\"mapped\\\",[1603,1604]],[[64712,64712],\\\"mapped\\\",[1603,1605]],[[64713,64713],\\\"mapped\\\",[1604,1580]],[[64714,64714],\\\"mapped\\\",[1604,1581]],[[64715,64715],\\\"mapped\\\",[1604,1582]],[[64716,64716],\\\"mapped\\\",[1604,1605]],[[64717,64717],\\\"mapped\\\",[1604,1607]],[[64718,64718],\\\"mapped\\\",[1605,1580]],[[64719,64719],\\\"mapped\\\",[1605,1581]],[[64720,64720],\\\"mapped\\\",[1605,1582]],[[64721,64721],\\\"mapped\\\",[1605,1605]],[[64722,64722],\\\"mapped\\\",[1606,1580]],[[64723,64723],\\\"mapped\\\",[1606,1581]],[[64724,64724],\\\"mapped\\\",[1606,1582]],[[64725,64725],\\\"mapped\\\",[1606,1605]],[[64726,64726],\\\"mapped\\\",[1606,1607]],[[64727,64727],\\\"mapped\\\",[1607,1580]],[[64728,64728],\\\"mapped\\\",[1607,1605]],[[64729,64729],\\\"mapped\\\",[1607,1648]],[[64730,64730],\\\"mapped\\\",[1610,1580]],[[64731,64731],\\\"mapped\\\",[1610,1581]],[[64732,64732],\\\"mapped\\\",[1610,1582]],[[64733,64733],\\\"mapped\\\",[1610,1605]],[[64734,64734],\\\"mapped\\\",[1610,1607]],[[64735,64735],\\\"mapped\\\",[1574,1605]],[[64736,64736],\\\"mapped\\\",[1574,1607]],[[64737,64737],\\\"mapped\\\",[1576,1605]],[[64738,64738],\\\"mapped\\\",[1576,1607]],[[64739,64739],\\\"mapped\\\",[1578,1605]],[[64740,64740],\\\"mapped\\\",[1578,1607]],[[64741,64741],\\\"mapped\\\",[1579,1605]],[[64742,64742],\\\"mapped\\\",[1579,1607]],[[64743,64743],\\\"mapped\\\",[1587,1605]],[[64744,64744],\\\"mapped\\\",[1587,1607]],[[64745,64745],\\\"mapped\\\",[1588,1605]],[[64746,64746],\\\"mapped\\\",[1588,1607]],[[64747,64747],\\\"mapped\\\",[1603,1604]],[[64748,64748],\\\"mapped\\\",[1603,1605]],[[64749,64749],\\\"mapped\\\",[1604,1605]],[[64750,64750],\\\"mapped\\\",[1606,1605]],[[64751,64751],\\\"mapped\\\",[1606,1607]],[[64752,64752],\\\"mapped\\\",[1610,1605]],[[64753,64753],\\\"mapped\\\",[1610,1607]],[[64754,64754],\\\"mapped\\\",[1600,1614,1617]],[[64755,64755],\\\"mapped\\\",[1600,1615,1617]],[[64756,64756],\\\"mapped\\\",[1600,1616,1617]],[[64757,64757],\\\"mapped\\\",[1591,1609]],[[64758,64758],\\\"mapped\\\",[1591,1610]],[[64759,64759],\\\"mapped\\\",[1593,1609]],[[64760,64760],\\\"mapped\\\",[1593,1610]],[[64761,64761],\\\"mapped\\\",[1594,1609]],[[64762,64762],\\\"mapped\\\",[1594,1610]],[[64763,64763],\\\"mapped\\\",[1587,1609]],[[64764,64764],\\\"mapped\\\",[1587,1610]],[[64765,64765],\\\"mapped\\\",[1588,1609]],[[64766,64766],\\\"mapped\\\",[1588,1610]],[[64767,64767],\\\"mapped\\\",[1581,1609]],[[64768,64768],\\\"mapped\\\",[1581,1610]],[[64769,64769],\\\"mapped\\\",[1580,1609]],[[64770,64770],\\\"mapped\\\",[1580,1610]],[[64771,64771],\\\"mapped\\\",[1582,1609]],[[64772,64772],\\\"mapped\\\",[1582,1610]],[[64773,64773],\\\"mapped\\\",[1589,1609]],[[64774,64774],\\\"mapped\\\",[1589,1610]],[[64775,64775],\\\"mapped\\\",[1590,1609]],[[64776,64776],\\\"mapped\\\",[1590,1610]],[[64777,64777],\\\"mapped\\\",[1588,1580]],[[64778,64778],\\\"mapped\\\",[1588,1581]],[[64779,64779],\\\"mapped\\\",[1588,1582]],[[64780,64780],\\\"mapped\\\",[1588,1605]],[[64781,64781],\\\"mapped\\\",[1588,1585]],[[64782,64782],\\\"mapped\\\",[1587,1585]],[[64783,64783],\\\"mapped\\\",[1589,1585]],[[64784,64784],\\\"mapped\\\",[1590,1585]],[[64785,64785],\\\"mapped\\\",[1591,1609]],[[64786,64786],\\\"mapped\\\",[1591,1610]],[[64787,64787],\\\"mapped\\\",[1593,1609]],[[64788,64788],\\\"mapped\\\",[1593,1610]],[[64789,64789],\\\"mapped\\\",[1594,1609]],[[64790,64790],\\\"mapped\\\",[1594,1610]],[[64791,64791],\\\"mapped\\\",[1587,1609]],[[64792,64792],\\\"mapped\\\",[1587,1610]],[[64793,64793],\\\"mapped\\\",[1588,1609]],[[64794,64794],\\\"mapped\\\",[1588,1610]],[[64795,64795],\\\"mapped\\\",[1581,1609]],[[64796,64796],\\\"mapped\\\",[1581,1610]],[[64797,64797],\\\"mapped\\\",[1580,1609]],[[64798,64798],\\\"mapped\\\",[1580,1610]],[[64799,64799],\\\"mapped\\\",[1582,1609]],[[64800,64800],\\\"mapped\\\",[1582,1610]],[[64801,64801],\\\"mapped\\\",[1589,1609]],[[64802,64802],\\\"mapped\\\",[1589,1610]],[[64803,64803],\\\"mapped\\\",[1590,1609]],[[64804,64804],\\\"mapped\\\",[1590,1610]],[[64805,64805],\\\"mapped\\\",[1588,1580]],[[64806,64806],\\\"mapped\\\",[1588,1581]],[[64807,64807],\\\"mapped\\\",[1588,1582]],[[64808,64808],\\\"mapped\\\",[1588,1605]],[[64809,64809],\\\"mapped\\\",[1588,1585]],[[64810,64810],\\\"mapped\\\",[1587,1585]],[[64811,64811],\\\"mapped\\\",[1589,1585]],[[64812,64812],\\\"mapped\\\",[1590,1585]],[[64813,64813],\\\"mapped\\\",[1588,1580]],[[64814,64814],\\\"mapped\\\",[1588,1581]],[[64815,64815],\\\"mapped\\\",[1588,1582]],[[64816,64816],\\\"mapped\\\",[1588,1605]],[[64817,64817],\\\"mapped\\\",[1587,1607]],[[64818,64818],\\\"mapped\\\",[1588,1607]],[[64819,64819],\\\"mapped\\\",[1591,1605]],[[64820,64820],\\\"mapped\\\",[1587,1580]],[[64821,64821],\\\"mapped\\\",[1587,1581]],[[64822,64822],\\\"mapped\\\",[1587,1582]],[[64823,64823],\\\"mapped\\\",[1588,1580]],[[64824,64824],\\\"mapped\\\",[1588,1581]],[[64825,64825],\\\"mapped\\\",[1588,1582]],[[64826,64826],\\\"mapped\\\",[1591,1605]],[[64827,64827],\\\"mapped\\\",[1592,1605]],[[64828,64829],\\\"mapped\\\",[1575,1611]],[[64830,64831],\\\"valid\\\",[],\\\"NV8\\\"],[[64832,64847],\\\"disallowed\\\"],[[64848,64848],\\\"mapped\\\",[1578,1580,1605]],[[64849,64850],\\\"mapped\\\",[1578,1581,1580]],[[64851,64851],\\\"mapped\\\",[1578,1581,1605]],[[64852,64852],\\\"mapped\\\",[1578,1582,1605]],[[64853,64853],\\\"mapped\\\",[1578,1605,1580]],[[64854,64854],\\\"mapped\\\",[1578,1605,1581]],[[64855,64855],\\\"mapped\\\",[1578,1605,1582]],[[64856,64857],\\\"mapped\\\",[1580,1605,1581]],[[64858,64858],\\\"mapped\\\",[1581,1605,1610]],[[64859,64859],\\\"mapped\\\",[1581,1605,1609]],[[64860,64860],\\\"mapped\\\",[1587,1581,1580]],[[64861,64861],\\\"mapped\\\",[1587,1580,1581]],[[64862,64862],\\\"mapped\\\",[1587,1580,1609]],[[64863,64864],\\\"mapped\\\",[1587,1605,1581]],[[64865,64865],\\\"mapped\\\",[1587,1605,1580]],[[64866,64867],\\\"mapped\\\",[1587,1605,1605]],[[64868,64869],\\\"mapped\\\",[1589,1581,1581]],[[64870,64870],\\\"mapped\\\",[1589,1605,1605]],[[64871,64872],\\\"mapped\\\",[1588,1581,1605]],[[64873,64873],\\\"mapped\\\",[1588,1580,1610]],[[64874,64875],\\\"mapped\\\",[1588,1605,1582]],[[64876,64877],\\\"mapped\\\",[1588,1605,1605]],[[64878,64878],\\\"mapped\\\",[1590,1581,1609]],[[64879,64880],\\\"mapped\\\",[1590,1582,1605]],[[64881,64882],\\\"mapped\\\",[1591,1605,1581]],[[64883,64883],\\\"mapped\\\",[1591,1605,1605]],[[64884,64884],\\\"mapped\\\",[1591,1605,1610]],[[64885,64885],\\\"mapped\\\",[1593,1580,1605]],[[64886,64887],\\\"mapped\\\",[1593,1605,1605]],[[64888,64888],\\\"mapped\\\",[1593,1605,1609]],[[64889,64889],\\\"mapped\\\",[1594,1605,1605]],[[64890,64890],\\\"mapped\\\",[1594,1605,1610]],[[64891,64891],\\\"mapped\\\",[1594,1605,1609]],[[64892,64893],\\\"mapped\\\",[1601,1582,1605]],[[64894,64894],\\\"mapped\\\",[1602,1605,1581]],[[64895,64895],\\\"mapped\\\",[1602,1605,1605]],[[64896,64896],\\\"mapped\\\",[1604,1581,1605]],[[64897,64897],\\\"mapped\\\",[1604,1581,1610]],[[64898,64898],\\\"mapped\\\",[1604,1581,1609]],[[64899,64900],\\\"mapped\\\",[1604,1580,1580]],[[64901,64902],\\\"mapped\\\",[1604,1582,1605]],[[64903,64904],\\\"mapped\\\",[1604,1605,1581]],[[64905,64905],\\\"mapped\\\",[1605,1581,1580]],[[64906,64906],\\\"mapped\\\",[1605,1581,1605]],[[64907,64907],\\\"mapped\\\",[1605,1581,1610]],[[64908,64908],\\\"mapped\\\",[1605,1580,1581]],[[64909,64909],\\\"mapped\\\",[1605,1580,1605]],[[64910,64910],\\\"mapped\\\",[1605,1582,1580]],[[64911,64911],\\\"mapped\\\",[1605,1582,1605]],[[64912,64913],\\\"disallowed\\\"],[[64914,64914],\\\"mapped\\\",[1605,1580,1582]],[[64915,64915],\\\"mapped\\\",[1607,1605,1580]],[[64916,64916],\\\"mapped\\\",[1607,1605,1605]],[[64917,64917],\\\"mapped\\\",[1606,1581,1605]],[[64918,64918],\\\"mapped\\\",[1606,1581,1609]],[[64919,64920],\\\"mapped\\\",[1606,1580,1605]],[[64921,64921],\\\"mapped\\\",[1606,1580,1609]],[[64922,64922],\\\"mapped\\\",[1606,1605,1610]],[[64923,64923],\\\"mapped\\\",[1606,1605,1609]],[[64924,64925],\\\"mapped\\\",[1610,1605,1605]],[[64926,64926],\\\"mapped\\\",[1576,1582,1610]],[[64927,64927],\\\"mapped\\\",[1578,1580,1610]],[[64928,64928],\\\"mapped\\\",[1578,1580,1609]],[[64929,64929],\\\"mapped\\\",[1578,1582,1610]],[[64930,64930],\\\"mapped\\\",[1578,1582,1609]],[[64931,64931],\\\"mapped\\\",[1578,1605,1610]],[[64932,64932],\\\"mapped\\\",[1578,1605,1609]],[[64933,64933],\\\"mapped\\\",[1580,1605,1610]],[[64934,64934],\\\"mapped\\\",[1580,1581,1609]],[[64935,64935],\\\"mapped\\\",[1580,1605,1609]],[[64936,64936],\\\"mapped\\\",[1587,1582,1609]],[[64937,64937],\\\"mapped\\\",[1589,1581,1610]],[[64938,64938],\\\"mapped\\\",[1588,1581,1610]],[[64939,64939],\\\"mapped\\\",[1590,1581,1610]],[[64940,64940],\\\"mapped\\\",[1604,1580,1610]],[[64941,64941],\\\"mapped\\\",[1604,1605,1610]],[[64942,64942],\\\"mapped\\\",[1610,1581,1610]],[[64943,64943],\\\"mapped\\\",[1610,1580,1610]],[[64944,64944],\\\"mapped\\\",[1610,1605,1610]],[[64945,64945],\\\"mapped\\\",[1605,1605,1610]],[[64946,64946],\\\"mapped\\\",[1602,1605,1610]],[[64947,64947],\\\"mapped\\\",[1606,1581,1610]],[[64948,64948],\\\"mapped\\\",[1602,1605,1581]],[[64949,64949],\\\"mapped\\\",[1604,1581,1605]],[[64950,64950],\\\"mapped\\\",[1593,1605,1610]],[[64951,64951],\\\"mapped\\\",[1603,1605,1610]],[[64952,64952],\\\"mapped\\\",[1606,1580,1581]],[[64953,64953],\\\"mapped\\\",[1605,1582,1610]],[[64954,64954],\\\"mapped\\\",[1604,1580,1605]],[[64955,64955],\\\"mapped\\\",[1603,1605,1605]],[[64956,64956],\\\"mapped\\\",[1604,1580,1605]],[[64957,64957],\\\"mapped\\\",[1606,1580,1581]],[[64958,64958],\\\"mapped\\\",[1580,1581,1610]],[[64959,64959],\\\"mapped\\\",[1581,1580,1610]],[[64960,64960],\\\"mapped\\\",[1605,1580,1610]],[[64961,64961],\\\"mapped\\\",[1601,1605,1610]],[[64962,64962],\\\"mapped\\\",[1576,1581,1610]],[[64963,64963],\\\"mapped\\\",[1603,1605,1605]],[[64964,64964],\\\"mapped\\\",[1593,1580,1605]],[[64965,64965],\\\"mapped\\\",[1589,1605,1605]],[[64966,64966],\\\"mapped\\\",[1587,1582,1610]],[[64967,64967],\\\"mapped\\\",[1606,1580,1610]],[[64968,64975],\\\"disallowed\\\"],[[64976,65007],\\\"disallowed\\\"],[[65008,65008],\\\"mapped\\\",[1589,1604,1746]],[[65009,65009],\\\"mapped\\\",[1602,1604,1746]],[[65010,65010],\\\"mapped\\\",[1575,1604,1604,1607]],[[65011,65011],\\\"mapped\\\",[1575,1603,1576,1585]],[[65012,65012],\\\"mapped\\\",[1605,1581,1605,1583]],[[65013,65013],\\\"mapped\\\",[1589,1604,1593,1605]],[[65014,65014],\\\"mapped\\\",[1585,1587,1608,1604]],[[65015,65015],\\\"mapped\\\",[1593,1604,1610,1607]],[[65016,65016],\\\"mapped\\\",[1608,1587,1604,1605]],[[65017,65017],\\\"mapped\\\",[1589,1604,1609]],[[65018,65018],\\\"disallowed_STD3_mapped\\\",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],\\\"disallowed_STD3_mapped\\\",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],\\\"mapped\\\",[1585,1740,1575,1604]],[[65021,65021],\\\"valid\\\",[],\\\"NV8\\\"],[[65022,65023],\\\"disallowed\\\"],[[65024,65039],\\\"ignored\\\"],[[65040,65040],\\\"disallowed_STD3_mapped\\\",[44]],[[65041,65041],\\\"mapped\\\",[12289]],[[65042,65042],\\\"disallowed\\\"],[[65043,65043],\\\"disallowed_STD3_mapped\\\",[58]],[[65044,65044],\\\"disallowed_STD3_mapped\\\",[59]],[[65045,65045],\\\"disallowed_STD3_mapped\\\",[33]],[[65046,65046],\\\"disallowed_STD3_mapped\\\",[63]],[[65047,65047],\\\"mapped\\\",[12310]],[[65048,65048],\\\"mapped\\\",[12311]],[[65049,65049],\\\"disallowed\\\"],[[65050,65055],\\\"disallowed\\\"],[[65056,65059],\\\"valid\\\"],[[65060,65062],\\\"valid\\\"],[[65063,65069],\\\"valid\\\"],[[65070,65071],\\\"valid\\\"],[[65072,65072],\\\"disallowed\\\"],[[65073,65073],\\\"mapped\\\",[8212]],[[65074,65074],\\\"mapped\\\",[8211]],[[65075,65076],\\\"disallowed_STD3_mapped\\\",[95]],[[65077,65077],\\\"disallowed_STD3_mapped\\\",[40]],[[65078,65078],\\\"disallowed_STD3_mapped\\\",[41]],[[65079,65079],\\\"disallowed_STD3_mapped\\\",[123]],[[65080,65080],\\\"disallowed_STD3_mapped\\\",[125]],[[65081,65081],\\\"mapped\\\",[12308]],[[65082,65082],\\\"mapped\\\",[12309]],[[65083,65083],\\\"mapped\\\",[12304]],[[65084,65084],\\\"mapped\\\",[12305]],[[65085,65085],\\\"mapped\\\",[12298]],[[65086,65086],\\\"mapped\\\",[12299]],[[65087,65087],\\\"mapped\\\",[12296]],[[65088,65088],\\\"mapped\\\",[12297]],[[65089,65089],\\\"mapped\\\",[12300]],[[65090,65090],\\\"mapped\\\",[12301]],[[65091,65091],\\\"mapped\\\",[12302]],[[65092,65092],\\\"mapped\\\",[12303]],[[65093,65094],\\\"valid\\\",[],\\\"NV8\\\"],[[65095,65095],\\\"disallowed_STD3_mapped\\\",[91]],[[65096,65096],\\\"disallowed_STD3_mapped\\\",[93]],[[65097,65100],\\\"disallowed_STD3_mapped\\\",[32,773]],[[65101,65103],\\\"disallowed_STD3_mapped\\\",[95]],[[65104,65104],\\\"disallowed_STD3_mapped\\\",[44]],[[65105,65105],\\\"mapped\\\",[12289]],[[65106,65106],\\\"disallowed\\\"],[[65107,65107],\\\"disallowed\\\"],[[65108,65108],\\\"disallowed_STD3_mapped\\\",[59]],[[65109,65109],\\\"disallowed_STD3_mapped\\\",[58]],[[65110,65110],\\\"disallowed_STD3_mapped\\\",[63]],[[65111,65111],\\\"disallowed_STD3_mapped\\\",[33]],[[65112,65112],\\\"mapped\\\",[8212]],[[65113,65113],\\\"disallowed_STD3_mapped\\\",[40]],[[65114,65114],\\\"disallowed_STD3_mapped\\\",[41]],[[65115,65115],\\\"disallowed_STD3_mapped\\\",[123]],[[65116,65116],\\\"disallowed_STD3_mapped\\\",[125]],[[65117,65117],\\\"mapped\\\",[12308]],[[65118,65118],\\\"mapped\\\",[12309]],[[65119,65119],\\\"disallowed_STD3_mapped\\\",[35]],[[65120,65120],\\\"disallowed_STD3_mapped\\\",[38]],[[65121,65121],\\\"disallowed_STD3_mapped\\\",[42]],[[65122,65122],\\\"disallowed_STD3_mapped\\\",[43]],[[65123,65123],\\\"mapped\\\",[45]],[[65124,65124],\\\"disallowed_STD3_mapped\\\",[60]],[[65125,65125],\\\"disallowed_STD3_mapped\\\",[62]],[[65126,65126],\\\"disallowed_STD3_mapped\\\",[61]],[[65127,65127],\\\"disallowed\\\"],[[65128,65128],\\\"disallowed_STD3_mapped\\\",[92]],[[65129,65129],\\\"disallowed_STD3_mapped\\\",[36]],[[65130,65130],\\\"disallowed_STD3_mapped\\\",[37]],[[65131,65131],\\\"disallowed_STD3_mapped\\\",[64]],[[65132,65135],\\\"disallowed\\\"],[[65136,65136],\\\"disallowed_STD3_mapped\\\",[32,1611]],[[65137,65137],\\\"mapped\\\",[1600,1611]],[[65138,65138],\\\"disallowed_STD3_mapped\\\",[32,1612]],[[65139,65139],\\\"valid\\\"],[[65140,65140],\\\"disallowed_STD3_mapped\\\",[32,1613]],[[65141,65141],\\\"disallowed\\\"],[[65142,65142],\\\"disallowed_STD3_mapped\\\",[32,1614]],[[65143,65143],\\\"mapped\\\",[1600,1614]],[[65144,65144],\\\"disallowed_STD3_mapped\\\",[32,1615]],[[65145,65145],\\\"mapped\\\",[1600,1615]],[[65146,65146],\\\"disallowed_STD3_mapped\\\",[32,1616]],[[65147,65147],\\\"mapped\\\",[1600,1616]],[[65148,65148],\\\"disallowed_STD3_mapped\\\",[32,1617]],[[65149,65149],\\\"mapped\\\",[1600,1617]],[[65150,65150],\\\"disallowed_STD3_mapped\\\",[32,1618]],[[65151,65151],\\\"mapped\\\",[1600,1618]],[[65152,65152],\\\"mapped\\\",[1569]],[[65153,65154],\\\"mapped\\\",[1570]],[[65155,65156],\\\"mapped\\\",[1571]],[[65157,65158],\\\"mapped\\\",[1572]],[[65159,65160],\\\"mapped\\\",[1573]],[[65161,65164],\\\"mapped\\\",[1574]],[[65165,65166],\\\"mapped\\\",[1575]],[[65167,65170],\\\"mapped\\\",[1576]],[[65171,65172],\\\"mapped\\\",[1577]],[[65173,65176],\\\"mapped\\\",[1578]],[[65177,65180],\\\"mapped\\\",[1579]],[[65181,65184],\\\"mapped\\\",[1580]],[[65185,65188],\\\"mapped\\\",[1581]],[[65189,65192],\\\"mapped\\\",[1582]],[[65193,65194],\\\"mapped\\\",[1583]],[[65195,65196],\\\"mapped\\\",[1584]],[[65197,65198],\\\"mapped\\\",[1585]],[[65199,65200],\\\"mapped\\\",[1586]],[[65201,65204],\\\"mapped\\\",[1587]],[[65205,65208],\\\"mapped\\\",[1588]],[[65209,65212],\\\"mapped\\\",[1589]],[[65213,65216],\\\"mapped\\\",[1590]],[[65217,65220],\\\"mapped\\\",[1591]],[[65221,65224],\\\"mapped\\\",[1592]],[[65225,65228],\\\"mapped\\\",[1593]],[[65229,65232],\\\"mapped\\\",[1594]],[[65233,65236],\\\"mapped\\\",[1601]],[[65237,65240],\\\"mapped\\\",[1602]],[[65241,65244],\\\"mapped\\\",[1603]],[[65245,65248],\\\"mapped\\\",[1604]],[[65249,65252],\\\"mapped\\\",[1605]],[[65253,65256],\\\"mapped\\\",[1606]],[[65257,65260],\\\"mapped\\\",[1607]],[[65261,65262],\\\"mapped\\\",[1608]],[[65263,65264],\\\"mapped\\\",[1609]],[[65265,65268],\\\"mapped\\\",[1610]],[[65269,65270],\\\"mapped\\\",[1604,1570]],[[65271,65272],\\\"mapped\\\",[1604,1571]],[[65273,65274],\\\"mapped\\\",[1604,1573]],[[65275,65276],\\\"mapped\\\",[1604,1575]],[[65277,65278],\\\"disallowed\\\"],[[65279,65279],\\\"ignored\\\"],[[65280,65280],\\\"disallowed\\\"],[[65281,65281],\\\"disallowed_STD3_mapped\\\",[33]],[[65282,65282],\\\"disallowed_STD3_mapped\\\",[34]],[[65283,65283],\\\"disallowed_STD3_mapped\\\",[35]],[[65284,65284],\\\"disallowed_STD3_mapped\\\",[36]],[[65285,65285],\\\"disallowed_STD3_mapped\\\",[37]],[[65286,65286],\\\"disallowed_STD3_mapped\\\",[38]],[[65287,65287],\\\"disallowed_STD3_mapped\\\",[39]],[[65288,65288],\\\"disallowed_STD3_mapped\\\",[40]],[[65289,65289],\\\"disallowed_STD3_mapped\\\",[41]],[[65290,65290],\\\"disallowed_STD3_mapped\\\",[42]],[[65291,65291],\\\"disallowed_STD3_mapped\\\",[43]],[[65292,65292],\\\"disallowed_STD3_mapped\\\",[44]],[[65293,65293],\\\"mapped\\\",[45]],[[65294,65294],\\\"mapped\\\",[46]],[[65295,65295],\\\"disallowed_STD3_mapped\\\",[47]],[[65296,65296],\\\"mapped\\\",[48]],[[65297,65297],\\\"mapped\\\",[49]],[[65298,65298],\\\"mapped\\\",[50]],[[65299,65299],\\\"mapped\\\",[51]],[[65300,65300],\\\"mapped\\\",[52]],[[65301,65301],\\\"mapped\\\",[53]],[[65302,65302],\\\"mapped\\\",[54]],[[65303,65303],\\\"mapped\\\",[55]],[[65304,65304],\\\"mapped\\\",[56]],[[65305,65305],\\\"mapped\\\",[57]],[[65306,65306],\\\"disallowed_STD3_mapped\\\",[58]],[[65307,65307],\\\"disallowed_STD3_mapped\\\",[59]],[[65308,65308],\\\"disallowed_STD3_mapped\\\",[60]],[[65309,65309],\\\"disallowed_STD3_mapped\\\",[61]],[[65310,65310],\\\"disallowed_STD3_mapped\\\",[62]],[[65311,65311],\\\"disallowed_STD3_mapped\\\",[63]],[[65312,65312],\\\"disallowed_STD3_mapped\\\",[64]],[[65313,65313],\\\"mapped\\\",[97]],[[65314,65314],\\\"mapped\\\",[98]],[[65315,65315],\\\"mapped\\\",[99]],[[65316,65316],\\\"mapped\\\",[100]],[[65317,65317],\\\"mapped\\\",[101]],[[65318,65318],\\\"mapped\\\",[102]],[[65319,65319],\\\"mapped\\\",[103]],[[65320,65320],\\\"mapped\\\",[104]],[[65321,65321],\\\"mapped\\\",[105]],[[65322,65322],\\\"mapped\\\",[106]],[[65323,65323],\\\"mapped\\\",[107]],[[65324,65324],\\\"mapped\\\",[108]],[[65325,65325],\\\"mapped\\\",[109]],[[65326,65326],\\\"mapped\\\",[110]],[[65327,65327],\\\"mapped\\\",[111]],[[65328,65328],\\\"mapped\\\",[112]],[[65329,65329],\\\"mapped\\\",[113]],[[65330,65330],\\\"mapped\\\",[114]],[[65331,65331],\\\"mapped\\\",[115]],[[65332,65332],\\\"mapped\\\",[116]],[[65333,65333],\\\"mapped\\\",[117]],[[65334,65334],\\\"mapped\\\",[118]],[[65335,65335],\\\"mapped\\\",[119]],[[65336,65336],\\\"mapped\\\",[120]],[[65337,65337],\\\"mapped\\\",[121]],[[65338,65338],\\\"mapped\\\",[122]],[[65339,65339],\\\"disallowed_STD3_mapped\\\",[91]],[[65340,65340],\\\"disallowed_STD3_mapped\\\",[92]],[[65341,65341],\\\"disallowed_STD3_mapped\\\",[93]],[[65342,65342],\\\"disallowed_STD3_mapped\\\",[94]],[[65343,65343],\\\"disallowed_STD3_mapped\\\",[95]],[[65344,65344],\\\"disallowed_STD3_mapped\\\",[96]],[[65345,65345],\\\"mapped\\\",[97]],[[65346,65346],\\\"mapped\\\",[98]],[[65347,65347],\\\"mapped\\\",[99]],[[65348,65348],\\\"mapped\\\",[100]],[[65349,65349],\\\"mapped\\\",[101]],[[65350,65350],\\\"mapped\\\",[102]],[[65351,65351],\\\"mapped\\\",[103]],[[65352,65352],\\\"mapped\\\",[104]],[[65353,65353],\\\"mapped\\\",[105]],[[65354,65354],\\\"mapped\\\",[106]],[[65355,65355],\\\"mapped\\\",[107]],[[65356,65356],\\\"mapped\\\",[108]],[[65357,65357],\\\"mapped\\\",[109]],[[65358,65358],\\\"mapped\\\",[110]],[[65359,65359],\\\"mapped\\\",[111]],[[65360,65360],\\\"mapped\\\",[112]],[[65361,65361],\\\"mapped\\\",[113]],[[65362,65362],\\\"mapped\\\",[114]],[[65363,65363],\\\"mapped\\\",[115]],[[65364,65364],\\\"mapped\\\",[116]],[[65365,65365],\\\"mapped\\\",[117]],[[65366,65366],\\\"mapped\\\",[118]],[[65367,65367],\\\"mapped\\\",[119]],[[65368,65368],\\\"mapped\\\",[120]],[[65369,65369],\\\"mapped\\\",[121]],[[65370,65370],\\\"mapped\\\",[122]],[[65371,65371],\\\"disallowed_STD3_mapped\\\",[123]],[[65372,65372],\\\"disallowed_STD3_mapped\\\",[124]],[[65373,65373],\\\"disallowed_STD3_mapped\\\",[125]],[[65374,65374],\\\"disallowed_STD3_mapped\\\",[126]],[[65375,65375],\\\"mapped\\\",[10629]],[[65376,65376],\\\"mapped\\\",[10630]],[[65377,65377],\\\"mapped\\\",[46]],[[65378,65378],\\\"mapped\\\",[12300]],[[65379,65379],\\\"mapped\\\",[12301]],[[65380,65380],\\\"mapped\\\",[12289]],[[65381,65381],\\\"mapped\\\",[12539]],[[65382,65382],\\\"mapped\\\",[12530]],[[65383,65383],\\\"mapped\\\",[12449]],[[65384,65384],\\\"mapped\\\",[12451]],[[65385,65385],\\\"mapped\\\",[12453]],[[65386,65386],\\\"mapped\\\",[12455]],[[65387,65387],\\\"mapped\\\",[12457]],[[65388,65388],\\\"mapped\\\",[12515]],[[65389,65389],\\\"mapped\\\",[12517]],[[65390,65390],\\\"mapped\\\",[12519]],[[65391,65391],\\\"mapped\\\",[12483]],[[65392,65392],\\\"mapped\\\",[12540]],[[65393,65393],\\\"mapped\\\",[12450]],[[65394,65394],\\\"mapped\\\",[12452]],[[65395,65395],\\\"mapped\\\",[12454]],[[65396,65396],\\\"mapped\\\",[12456]],[[65397,65397],\\\"mapped\\\",[12458]],[[65398,65398],\\\"mapped\\\",[12459]],[[65399,65399],\\\"mapped\\\",[12461]],[[65400,65400],\\\"mapped\\\",[12463]],[[65401,65401],\\\"mapped\\\",[12465]],[[65402,65402],\\\"mapped\\\",[12467]],[[65403,65403],\\\"mapped\\\",[12469]],[[65404,65404],\\\"mapped\\\",[12471]],[[65405,65405],\\\"mapped\\\",[12473]],[[65406,65406],\\\"mapped\\\",[12475]],[[65407,65407],\\\"mapped\\\",[12477]],[[65408,65408],\\\"mapped\\\",[12479]],[[65409,65409],\\\"mapped\\\",[12481]],[[65410,65410],\\\"mapped\\\",[12484]],[[65411,65411],\\\"mapped\\\",[12486]],[[65412,65412],\\\"mapped\\\",[12488]],[[65413,65413],\\\"mapped\\\",[12490]],[[65414,65414],\\\"mapped\\\",[12491]],[[65415,65415],\\\"mapped\\\",[12492]],[[65416,65416],\\\"mapped\\\",[12493]],[[65417,65417],\\\"mapped\\\",[12494]],[[65418,65418],\\\"mapped\\\",[12495]],[[65419,65419],\\\"mapped\\\",[12498]],[[65420,65420],\\\"mapped\\\",[12501]],[[65421,65421],\\\"mapped\\\",[12504]],[[65422,65422],\\\"mapped\\\",[12507]],[[65423,65423],\\\"mapped\\\",[12510]],[[65424,65424],\\\"mapped\\\",[12511]],[[65425,65425],\\\"mapped\\\",[12512]],[[65426,65426],\\\"mapped\\\",[12513]],[[65427,65427],\\\"mapped\\\",[12514]],[[65428,65428],\\\"mapped\\\",[12516]],[[65429,65429],\\\"mapped\\\",[12518]],[[65430,65430],\\\"mapped\\\",[12520]],[[65431,65431],\\\"mapped\\\",[12521]],[[65432,65432],\\\"mapped\\\",[12522]],[[65433,65433],\\\"mapped\\\",[12523]],[[65434,65434],\\\"mapped\\\",[12524]],[[65435,65435],\\\"mapped\\\",[12525]],[[65436,65436],\\\"mapped\\\",[12527]],[[65437,65437],\\\"mapped\\\",[12531]],[[65438,65438],\\\"mapped\\\",[12441]],[[65439,65439],\\\"mapped\\\",[12442]],[[65440,65440],\\\"disallowed\\\"],[[65441,65441],\\\"mapped\\\",[4352]],[[65442,65442],\\\"mapped\\\",[4353]],[[65443,65443],\\\"mapped\\\",[4522]],[[65444,65444],\\\"mapped\\\",[4354]],[[65445,65445],\\\"mapped\\\",[4524]],[[65446,65446],\\\"mapped\\\",[4525]],[[65447,65447],\\\"mapped\\\",[4355]],[[65448,65448],\\\"mapped\\\",[4356]],[[65449,65449],\\\"mapped\\\",[4357]],[[65450,65450],\\\"mapped\\\",[4528]],[[65451,65451],\\\"mapped\\\",[4529]],[[65452,65452],\\\"mapped\\\",[4530]],[[65453,65453],\\\"mapped\\\",[4531]],[[65454,65454],\\\"mapped\\\",[4532]],[[65455,65455],\\\"mapped\\\",[4533]],[[65456,65456],\\\"mapped\\\",[4378]],[[65457,65457],\\\"mapped\\\",[4358]],[[65458,65458],\\\"mapped\\\",[4359]],[[65459,65459],\\\"mapped\\\",[4360]],[[65460,65460],\\\"mapped\\\",[4385]],[[65461,65461],\\\"mapped\\\",[4361]],[[65462,65462],\\\"mapped\\\",[4362]],[[65463,65463],\\\"mapped\\\",[4363]],[[65464,65464],\\\"mapped\\\",[4364]],[[65465,65465],\\\"mapped\\\",[4365]],[[65466,65466],\\\"mapped\\\",[4366]],[[65467,65467],\\\"mapped\\\",[4367]],[[65468,65468],\\\"mapped\\\",[4368]],[[65469,65469],\\\"mapped\\\",[4369]],[[65470,65470],\\\"mapped\\\",[4370]],[[65471,65473],\\\"disallowed\\\"],[[65474,65474],\\\"mapped\\\",[4449]],[[65475,65475],\\\"mapped\\\",[4450]],[[65476,65476],\\\"mapped\\\",[4451]],[[65477,65477],\\\"mapped\\\",[4452]],[[65478,65478],\\\"mapped\\\",[4453]],[[65479,65479],\\\"mapped\\\",[4454]],[[65480,65481],\\\"disallowed\\\"],[[65482,65482],\\\"mapped\\\",[4455]],[[65483,65483],\\\"mapped\\\",[4456]],[[65484,65484],\\\"mapped\\\",[4457]],[[65485,65485],\\\"mapped\\\",[4458]],[[65486,65486],\\\"mapped\\\",[4459]],[[65487,65487],\\\"mapped\\\",[4460]],[[65488,65489],\\\"disallowed\\\"],[[65490,65490],\\\"mapped\\\",[4461]],[[65491,65491],\\\"mapped\\\",[4462]],[[65492,65492],\\\"mapped\\\",[4463]],[[65493,65493],\\\"mapped\\\",[4464]],[[65494,65494],\\\"mapped\\\",[4465]],[[65495,65495],\\\"mapped\\\",[4466]],[[65496,65497],\\\"disallowed\\\"],[[65498,65498],\\\"mapped\\\",[4467]],[[65499,65499],\\\"mapped\\\",[4468]],[[65500,65500],\\\"mapped\\\",[4469]],[[65501,65503],\\\"disallowed\\\"],[[65504,65504],\\\"mapped\\\",[162]],[[65505,65505],\\\"mapped\\\",[163]],[[65506,65506],\\\"mapped\\\",[172]],[[65507,65507],\\\"disallowed_STD3_mapped\\\",[32,772]],[[65508,65508],\\\"mapped\\\",[166]],[[65509,65509],\\\"mapped\\\",[165]],[[65510,65510],\\\"mapped\\\",[8361]],[[65511,65511],\\\"disallowed\\\"],[[65512,65512],\\\"mapped\\\",[9474]],[[65513,65513],\\\"mapped\\\",[8592]],[[65514,65514],\\\"mapped\\\",[8593]],[[65515,65515],\\\"mapped\\\",[8594]],[[65516,65516],\\\"mapped\\\",[8595]],[[65517,65517],\\\"mapped\\\",[9632]],[[65518,65518],\\\"mapped\\\",[9675]],[[65519,65528],\\\"disallowed\\\"],[[65529,65531],\\\"disallowed\\\"],[[65532,65532],\\\"disallowed\\\"],[[65533,65533],\\\"disallowed\\\"],[[65534,65535],\\\"disallowed\\\"],[[65536,65547],\\\"valid\\\"],[[65548,65548],\\\"disallowed\\\"],[[65549,65574],\\\"valid\\\"],[[65575,65575],\\\"disallowed\\\"],[[65576,65594],\\\"valid\\\"],[[65595,65595],\\\"disallowed\\\"],[[65596,65597],\\\"valid\\\"],[[65598,65598],\\\"disallowed\\\"],[[65599,65613],\\\"valid\\\"],[[65614,65615],\\\"disallowed\\\"],[[65616,65629],\\\"valid\\\"],[[65630,65663],\\\"disallowed\\\"],[[65664,65786],\\\"valid\\\"],[[65787,65791],\\\"disallowed\\\"],[[65792,65794],\\\"valid\\\",[],\\\"NV8\\\"],[[65795,65798],\\\"disallowed\\\"],[[65799,65843],\\\"valid\\\",[],\\\"NV8\\\"],[[65844,65846],\\\"disallowed\\\"],[[65847,65855],\\\"valid\\\",[],\\\"NV8\\\"],[[65856,65930],\\\"valid\\\",[],\\\"NV8\\\"],[[65931,65932],\\\"valid\\\",[],\\\"NV8\\\"],[[65933,65935],\\\"disallowed\\\"],[[65936,65947],\\\"valid\\\",[],\\\"NV8\\\"],[[65948,65951],\\\"disallowed\\\"],[[65952,65952],\\\"valid\\\",[],\\\"NV8\\\"],[[65953,65999],\\\"disallowed\\\"],[[66000,66044],\\\"valid\\\",[],\\\"NV8\\\"],[[66045,66045],\\\"valid\\\"],[[66046,66175],\\\"disallowed\\\"],[[66176,66204],\\\"valid\\\"],[[66205,66207],\\\"disallowed\\\"],[[66208,66256],\\\"valid\\\"],[[66257,66271],\\\"disallowed\\\"],[[66272,66272],\\\"valid\\\"],[[66273,66299],\\\"valid\\\",[],\\\"NV8\\\"],[[66300,66303],\\\"disallowed\\\"],[[66304,66334],\\\"valid\\\"],[[66335,66335],\\\"valid\\\"],[[66336,66339],\\\"valid\\\",[],\\\"NV8\\\"],[[66340,66351],\\\"disallowed\\\"],[[66352,66368],\\\"valid\\\"],[[66369,66369],\\\"valid\\\",[],\\\"NV8\\\"],[[66370,66377],\\\"valid\\\"],[[66378,66378],\\\"valid\\\",[],\\\"NV8\\\"],[[66379,66383],\\\"disallowed\\\"],[[66384,66426],\\\"valid\\\"],[[66427,66431],\\\"disallowed\\\"],[[66432,66461],\\\"valid\\\"],[[66462,66462],\\\"disallowed\\\"],[[66463,66463],\\\"valid\\\",[],\\\"NV8\\\"],[[66464,66499],\\\"valid\\\"],[[66500,66503],\\\"disallowed\\\"],[[66504,66511],\\\"valid\\\"],[[66512,66517],\\\"valid\\\",[],\\\"NV8\\\"],[[66518,66559],\\\"disallowed\\\"],[[66560,66560],\\\"mapped\\\",[66600]],[[66561,66561],\\\"mapped\\\",[66601]],[[66562,66562],\\\"mapped\\\",[66602]],[[66563,66563],\\\"mapped\\\",[66603]],[[66564,66564],\\\"mapped\\\",[66604]],[[66565,66565],\\\"mapped\\\",[66605]],[[66566,66566],\\\"mapped\\\",[66606]],[[66567,66567],\\\"mapped\\\",[66607]],[[66568,66568],\\\"mapped\\\",[66608]],[[66569,66569],\\\"mapped\\\",[66609]],[[66570,66570],\\\"mapped\\\",[66610]],[[66571,66571],\\\"mapped\\\",[66611]],[[66572,66572],\\\"mapped\\\",[66612]],[[66573,66573],\\\"mapped\\\",[66613]],[[66574,66574],\\\"mapped\\\",[66614]],[[66575,66575],\\\"mapped\\\",[66615]],[[66576,66576],\\\"mapped\\\",[66616]],[[66577,66577],\\\"mapped\\\",[66617]],[[66578,66578],\\\"mapped\\\",[66618]],[[66579,66579],\\\"mapped\\\",[66619]],[[66580,66580],\\\"mapped\\\",[66620]],[[66581,66581],\\\"mapped\\\",[66621]],[[66582,66582],\\\"mapped\\\",[66622]],[[66583,66583],\\\"mapped\\\",[66623]],[[66584,66584],\\\"mapped\\\",[66624]],[[66585,66585],\\\"mapped\\\",[66625]],[[66586,66586],\\\"mapped\\\",[66626]],[[66587,66587],\\\"mapped\\\",[66627]],[[66588,66588],\\\"mapped\\\",[66628]],[[66589,66589],\\\"mapped\\\",[66629]],[[66590,66590],\\\"mapped\\\",[66630]],[[66591,66591],\\\"mapped\\\",[66631]],[[66592,66592],\\\"mapped\\\",[66632]],[[66593,66593],\\\"mapped\\\",[66633]],[[66594,66594],\\\"mapped\\\",[66634]],[[66595,66595],\\\"mapped\\\",[66635]],[[66596,66596],\\\"mapped\\\",[66636]],[[66597,66597],\\\"mapped\\\",[66637]],[[66598,66598],\\\"mapped\\\",[66638]],[[66599,66599],\\\"mapped\\\",[66639]],[[66600,66637],\\\"valid\\\"],[[66638,66717],\\\"valid\\\"],[[66718,66719],\\\"disallowed\\\"],[[66720,66729],\\\"valid\\\"],[[66730,66815],\\\"disallowed\\\"],[[66816,66855],\\\"valid\\\"],[[66856,66863],\\\"disallowed\\\"],[[66864,66915],\\\"valid\\\"],[[66916,66926],\\\"disallowed\\\"],[[66927,66927],\\\"valid\\\",[],\\\"NV8\\\"],[[66928,67071],\\\"disallowed\\\"],[[67072,67382],\\\"valid\\\"],[[67383,67391],\\\"disallowed\\\"],[[67392,67413],\\\"valid\\\"],[[67414,67423],\\\"disallowed\\\"],[[67424,67431],\\\"valid\\\"],[[67432,67583],\\\"disallowed\\\"],[[67584,67589],\\\"valid\\\"],[[67590,67591],\\\"disallowed\\\"],[[67592,67592],\\\"valid\\\"],[[67593,67593],\\\"disallowed\\\"],[[67594,67637],\\\"valid\\\"],[[67638,67638],\\\"disallowed\\\"],[[67639,67640],\\\"valid\\\"],[[67641,67643],\\\"disallowed\\\"],[[67644,67644],\\\"valid\\\"],[[67645,67646],\\\"disallowed\\\"],[[67647,67647],\\\"valid\\\"],[[67648,67669],\\\"valid\\\"],[[67670,67670],\\\"disallowed\\\"],[[67671,67679],\\\"valid\\\",[],\\\"NV8\\\"],[[67680,67702],\\\"valid\\\"],[[67703,67711],\\\"valid\\\",[],\\\"NV8\\\"],[[67712,67742],\\\"valid\\\"],[[67743,67750],\\\"disallowed\\\"],[[67751,67759],\\\"valid\\\",[],\\\"NV8\\\"],[[67760,67807],\\\"disallowed\\\"],[[67808,67826],\\\"valid\\\"],[[67827,67827],\\\"disallowed\\\"],[[67828,67829],\\\"valid\\\"],[[67830,67834],\\\"disallowed\\\"],[[67835,67839],\\\"valid\\\",[],\\\"NV8\\\"],[[67840,67861],\\\"valid\\\"],[[67862,67865],\\\"valid\\\",[],\\\"NV8\\\"],[[67866,67867],\\\"valid\\\",[],\\\"NV8\\\"],[[67868,67870],\\\"disallowed\\\"],[[67871,67871],\\\"valid\\\",[],\\\"NV8\\\"],[[67872,67897],\\\"valid\\\"],[[67898,67902],\\\"disallowed\\\"],[[67903,67903],\\\"valid\\\",[],\\\"NV8\\\"],[[67904,67967],\\\"disallowed\\\"],[[67968,68023],\\\"valid\\\"],[[68024,68027],\\\"disallowed\\\"],[[68028,68029],\\\"valid\\\",[],\\\"NV8\\\"],[[68030,68031],\\\"valid\\\"],[[68032,68047],\\\"valid\\\",[],\\\"NV8\\\"],[[68048,68049],\\\"disallowed\\\"],[[68050,68095],\\\"valid\\\",[],\\\"NV8\\\"],[[68096,68099],\\\"valid\\\"],[[68100,68100],\\\"disallowed\\\"],[[68101,68102],\\\"valid\\\"],[[68103,68107],\\\"disallowed\\\"],[[68108,68115],\\\"valid\\\"],[[68116,68116],\\\"disallowed\\\"],[[68117,68119],\\\"valid\\\"],[[68120,68120],\\\"disallowed\\\"],[[68121,68147],\\\"valid\\\"],[[68148,68151],\\\"disallowed\\\"],[[68152,68154],\\\"valid\\\"],[[68155,68158],\\\"disallowed\\\"],[[68159,68159],\\\"valid\\\"],[[68160,68167],\\\"valid\\\",[],\\\"NV8\\\"],[[68168,68175],\\\"disallowed\\\"],[[68176,68184],\\\"valid\\\",[],\\\"NV8\\\"],[[68185,68191],\\\"disallowed\\\"],[[68192,68220],\\\"valid\\\"],[[68221,68223],\\\"valid\\\",[],\\\"NV8\\\"],[[68224,68252],\\\"valid\\\"],[[68253,68255],\\\"valid\\\",[],\\\"NV8\\\"],[[68256,68287],\\\"disallowed\\\"],[[68288,68295],\\\"valid\\\"],[[68296,68296],\\\"valid\\\",[],\\\"NV8\\\"],[[68297,68326],\\\"valid\\\"],[[68327,68330],\\\"disallowed\\\"],[[68331,68342],\\\"valid\\\",[],\\\"NV8\\\"],[[68343,68351],\\\"disallowed\\\"],[[68352,68405],\\\"valid\\\"],[[68406,68408],\\\"disallowed\\\"],[[68409,68415],\\\"valid\\\",[],\\\"NV8\\\"],[[68416,68437],\\\"valid\\\"],[[68438,68439],\\\"disallowed\\\"],[[68440,68447],\\\"valid\\\",[],\\\"NV8\\\"],[[68448,68466],\\\"valid\\\"],[[68467,68471],\\\"disallowed\\\"],[[68472,68479],\\\"valid\\\",[],\\\"NV8\\\"],[[68480,68497],\\\"valid\\\"],[[68498,68504],\\\"disallowed\\\"],[[68505,68508],\\\"valid\\\",[],\\\"NV8\\\"],[[68509,68520],\\\"disallowed\\\"],[[68521,68527],\\\"valid\\\",[],\\\"NV8\\\"],[[68528,68607],\\\"disallowed\\\"],[[68608,68680],\\\"valid\\\"],[[68681,68735],\\\"disallowed\\\"],[[68736,68736],\\\"mapped\\\",[68800]],[[68737,68737],\\\"mapped\\\",[68801]],[[68738,68738],\\\"mapped\\\",[68802]],[[68739,68739],\\\"mapped\\\",[68803]],[[68740,68740],\\\"mapped\\\",[68804]],[[68741,68741],\\\"mapped\\\",[68805]],[[68742,68742],\\\"mapped\\\",[68806]],[[68743,68743],\\\"mapped\\\",[68807]],[[68744,68744],\\\"mapped\\\",[68808]],[[68745,68745],\\\"mapped\\\",[68809]],[[68746,68746],\\\"mapped\\\",[68810]],[[68747,68747],\\\"mapped\\\",[68811]],[[68748,68748],\\\"mapped\\\",[68812]],[[68749,68749],\\\"mapped\\\",[68813]],[[68750,68750],\\\"mapped\\\",[68814]],[[68751,68751],\\\"mapped\\\",[68815]],[[68752,68752],\\\"mapped\\\",[68816]],[[68753,68753],\\\"mapped\\\",[68817]],[[68754,68754],\\\"mapped\\\",[68818]],[[68755,68755],\\\"mapped\\\",[68819]],[[68756,68756],\\\"mapped\\\",[68820]],[[68757,68757],\\\"mapped\\\",[68821]],[[68758,68758],\\\"mapped\\\",[68822]],[[68759,68759],\\\"mapped\\\",[68823]],[[68760,68760],\\\"mapped\\\",[68824]],[[68761,68761],\\\"mapped\\\",[68825]],[[68762,68762],\\\"mapped\\\",[68826]],[[68763,68763],\\\"mapped\\\",[68827]],[[68764,68764],\\\"mapped\\\",[68828]],[[68765,68765],\\\"mapped\\\",[68829]],[[68766,68766],\\\"mapped\\\",[68830]],[[68767,68767],\\\"mapped\\\",[68831]],[[68768,68768],\\\"mapped\\\",[68832]],[[68769,68769],\\\"mapped\\\",[68833]],[[68770,68770],\\\"mapped\\\",[68834]],[[68771,68771],\\\"mapped\\\",[68835]],[[68772,68772],\\\"mapped\\\",[68836]],[[68773,68773],\\\"mapped\\\",[68837]],[[68774,68774],\\\"mapped\\\",[68838]],[[68775,68775],\\\"mapped\\\",[68839]],[[68776,68776],\\\"mapped\\\",[68840]],[[68777,68777],\\\"mapped\\\",[68841]],[[68778,68778],\\\"mapped\\\",[68842]],[[68779,68779],\\\"mapped\\\",[68843]],[[68780,68780],\\\"mapped\\\",[68844]],[[68781,68781],\\\"mapped\\\",[68845]],[[68782,68782],\\\"mapped\\\",[68846]],[[68783,68783],\\\"mapped\\\",[68847]],[[68784,68784],\\\"mapped\\\",[68848]],[[68785,68785],\\\"mapped\\\",[68849]],[[68786,68786],\\\"mapped\\\",[68850]],[[68787,68799],\\\"disallowed\\\"],[[68800,68850],\\\"valid\\\"],[[68851,68857],\\\"disallowed\\\"],[[68858,68863],\\\"valid\\\",[],\\\"NV8\\\"],[[68864,69215],\\\"disallowed\\\"],[[69216,69246],\\\"valid\\\",[],\\\"NV8\\\"],[[69247,69631],\\\"disallowed\\\"],[[69632,69702],\\\"valid\\\"],[[69703,69709],\\\"valid\\\",[],\\\"NV8\\\"],[[69710,69713],\\\"disallowed\\\"],[[69714,69733],\\\"valid\\\",[],\\\"NV8\\\"],[[69734,69743],\\\"valid\\\"],[[69744,69758],\\\"disallowed\\\"],[[69759,69759],\\\"valid\\\"],[[69760,69818],\\\"valid\\\"],[[69819,69820],\\\"valid\\\",[],\\\"NV8\\\"],[[69821,69821],\\\"disallowed\\\"],[[69822,69825],\\\"valid\\\",[],\\\"NV8\\\"],[[69826,69839],\\\"disallowed\\\"],[[69840,69864],\\\"valid\\\"],[[69865,69871],\\\"disallowed\\\"],[[69872,69881],\\\"valid\\\"],[[69882,69887],\\\"disallowed\\\"],[[69888,69940],\\\"valid\\\"],[[69941,69941],\\\"disallowed\\\"],[[69942,69951],\\\"valid\\\"],[[69952,69955],\\\"valid\\\",[],\\\"NV8\\\"],[[69956,69967],\\\"disallowed\\\"],[[69968,70003],\\\"valid\\\"],[[70004,70005],\\\"valid\\\",[],\\\"NV8\\\"],[[70006,70006],\\\"valid\\\"],[[70007,70015],\\\"disallowed\\\"],[[70016,70084],\\\"valid\\\"],[[70085,70088],\\\"valid\\\",[],\\\"NV8\\\"],[[70089,70089],\\\"valid\\\",[],\\\"NV8\\\"],[[70090,70092],\\\"valid\\\"],[[70093,70093],\\\"valid\\\",[],\\\"NV8\\\"],[[70094,70095],\\\"disallowed\\\"],[[70096,70105],\\\"valid\\\"],[[70106,70106],\\\"valid\\\"],[[70107,70107],\\\"valid\\\",[],\\\"NV8\\\"],[[70108,70108],\\\"valid\\\"],[[70109,70111],\\\"valid\\\",[],\\\"NV8\\\"],[[70112,70112],\\\"disallowed\\\"],[[70113,70132],\\\"valid\\\",[],\\\"NV8\\\"],[[70133,70143],\\\"disallowed\\\"],[[70144,70161],\\\"valid\\\"],[[70162,70162],\\\"disallowed\\\"],[[70163,70199],\\\"valid\\\"],[[70200,70205],\\\"valid\\\",[],\\\"NV8\\\"],[[70206,70271],\\\"disallowed\\\"],[[70272,70278],\\\"valid\\\"],[[70279,70279],\\\"disallowed\\\"],[[70280,70280],\\\"valid\\\"],[[70281,70281],\\\"disallowed\\\"],[[70282,70285],\\\"valid\\\"],[[70286,70286],\\\"disallowed\\\"],[[70287,70301],\\\"valid\\\"],[[70302,70302],\\\"disallowed\\\"],[[70303,70312],\\\"valid\\\"],[[70313,70313],\\\"valid\\\",[],\\\"NV8\\\"],[[70314,70319],\\\"disallowed\\\"],[[70320,70378],\\\"valid\\\"],[[70379,70383],\\\"disallowed\\\"],[[70384,70393],\\\"valid\\\"],[[70394,70399],\\\"disallowed\\\"],[[70400,70400],\\\"valid\\\"],[[70401,70403],\\\"valid\\\"],[[70404,70404],\\\"disallowed\\\"],[[70405,70412],\\\"valid\\\"],[[70413,70414],\\\"disallowed\\\"],[[70415,70416],\\\"valid\\\"],[[70417,70418],\\\"disallowed\\\"],[[70419,70440],\\\"valid\\\"],[[70441,70441],\\\"disallowed\\\"],[[70442,70448],\\\"valid\\\"],[[70449,70449],\\\"disallowed\\\"],[[70450,70451],\\\"valid\\\"],[[70452,70452],\\\"disallowed\\\"],[[70453,70457],\\\"valid\\\"],[[70458,70459],\\\"disallowed\\\"],[[70460,70468],\\\"valid\\\"],[[70469,70470],\\\"disallowed\\\"],[[70471,70472],\\\"valid\\\"],[[70473,70474],\\\"disallowed\\\"],[[70475,70477],\\\"valid\\\"],[[70478,70479],\\\"disallowed\\\"],[[70480,70480],\\\"valid\\\"],[[70481,70486],\\\"disallowed\\\"],[[70487,70487],\\\"valid\\\"],[[70488,70492],\\\"disallowed\\\"],[[70493,70499],\\\"valid\\\"],[[70500,70501],\\\"disallowed\\\"],[[70502,70508],\\\"valid\\\"],[[70509,70511],\\\"disallowed\\\"],[[70512,70516],\\\"valid\\\"],[[70517,70783],\\\"disallowed\\\"],[[70784,70853],\\\"valid\\\"],[[70854,70854],\\\"valid\\\",[],\\\"NV8\\\"],[[70855,70855],\\\"valid\\\"],[[70856,70863],\\\"disallowed\\\"],[[70864,70873],\\\"valid\\\"],[[70874,71039],\\\"disallowed\\\"],[[71040,71093],\\\"valid\\\"],[[71094,71095],\\\"disallowed\\\"],[[71096,71104],\\\"valid\\\"],[[71105,71113],\\\"valid\\\",[],\\\"NV8\\\"],[[71114,71127],\\\"valid\\\",[],\\\"NV8\\\"],[[71128,71133],\\\"valid\\\"],[[71134,71167],\\\"disallowed\\\"],[[71168,71232],\\\"valid\\\"],[[71233,71235],\\\"valid\\\",[],\\\"NV8\\\"],[[71236,71236],\\\"valid\\\"],[[71237,71247],\\\"disallowed\\\"],[[71248,71257],\\\"valid\\\"],[[71258,71295],\\\"disallowed\\\"],[[71296,71351],\\\"valid\\\"],[[71352,71359],\\\"disallowed\\\"],[[71360,71369],\\\"valid\\\"],[[71370,71423],\\\"disallowed\\\"],[[71424,71449],\\\"valid\\\"],[[71450,71452],\\\"disallowed\\\"],[[71453,71467],\\\"valid\\\"],[[71468,71471],\\\"disallowed\\\"],[[71472,71481],\\\"valid\\\"],[[71482,71487],\\\"valid\\\",[],\\\"NV8\\\"],[[71488,71839],\\\"disallowed\\\"],[[71840,71840],\\\"mapped\\\",[71872]],[[71841,71841],\\\"mapped\\\",[71873]],[[71842,71842],\\\"mapped\\\",[71874]],[[71843,71843],\\\"mapped\\\",[71875]],[[71844,71844],\\\"mapped\\\",[71876]],[[71845,71845],\\\"mapped\\\",[71877]],[[71846,71846],\\\"mapped\\\",[71878]],[[71847,71847],\\\"mapped\\\",[71879]],[[71848,71848],\\\"mapped\\\",[71880]],[[71849,71849],\\\"mapped\\\",[71881]],[[71850,71850],\\\"mapped\\\",[71882]],[[71851,71851],\\\"mapped\\\",[71883]],[[71852,71852],\\\"mapped\\\",[71884]],[[71853,71853],\\\"mapped\\\",[71885]],[[71854,71854],\\\"mapped\\\",[71886]],[[71855,71855],\\\"mapped\\\",[71887]],[[71856,71856],\\\"mapped\\\",[71888]],[[71857,71857],\\\"mapped\\\",[71889]],[[71858,71858],\\\"mapped\\\",[71890]],[[71859,71859],\\\"mapped\\\",[71891]],[[71860,71860],\\\"mapped\\\",[71892]],[[71861,71861],\\\"mapped\\\",[71893]],[[71862,71862],\\\"mapped\\\",[71894]],[[71863,71863],\\\"mapped\\\",[71895]],[[71864,71864],\\\"mapped\\\",[71896]],[[71865,71865],\\\"mapped\\\",[71897]],[[71866,71866],\\\"mapped\\\",[71898]],[[71867,71867],\\\"mapped\\\",[71899]],[[71868,71868],\\\"mapped\\\",[71900]],[[71869,71869],\\\"mapped\\\",[71901]],[[71870,71870],\\\"mapped\\\",[71902]],[[71871,71871],\\\"mapped\\\",[71903]],[[71872,71913],\\\"valid\\\"],[[71914,71922],\\\"valid\\\",[],\\\"NV8\\\"],[[71923,71934],\\\"disallowed\\\"],[[71935,71935],\\\"valid\\\"],[[71936,72383],\\\"disallowed\\\"],[[72384,72440],\\\"valid\\\"],[[72441,73727],\\\"disallowed\\\"],[[73728,74606],\\\"valid\\\"],[[74607,74648],\\\"valid\\\"],[[74649,74649],\\\"valid\\\"],[[74650,74751],\\\"disallowed\\\"],[[74752,74850],\\\"valid\\\",[],\\\"NV8\\\"],[[74851,74862],\\\"valid\\\",[],\\\"NV8\\\"],[[74863,74863],\\\"disallowed\\\"],[[74864,74867],\\\"valid\\\",[],\\\"NV8\\\"],[[74868,74868],\\\"valid\\\",[],\\\"NV8\\\"],[[74869,74879],\\\"disallowed\\\"],[[74880,75075],\\\"valid\\\"],[[75076,77823],\\\"disallowed\\\"],[[77824,78894],\\\"valid\\\"],[[78895,82943],\\\"disallowed\\\"],[[82944,83526],\\\"valid\\\"],[[83527,92159],\\\"disallowed\\\"],[[92160,92728],\\\"valid\\\"],[[92729,92735],\\\"disallowed\\\"],[[92736,92766],\\\"valid\\\"],[[92767,92767],\\\"disallowed\\\"],[[92768,92777],\\\"valid\\\"],[[92778,92781],\\\"disallowed\\\"],[[92782,92783],\\\"valid\\\",[],\\\"NV8\\\"],[[92784,92879],\\\"disallowed\\\"],[[92880,92909],\\\"valid\\\"],[[92910,92911],\\\"disallowed\\\"],[[92912,92916],\\\"valid\\\"],[[92917,92917],\\\"valid\\\",[],\\\"NV8\\\"],[[92918,92927],\\\"disallowed\\\"],[[92928,92982],\\\"valid\\\"],[[92983,92991],\\\"valid\\\",[],\\\"NV8\\\"],[[92992,92995],\\\"valid\\\"],[[92996,92997],\\\"valid\\\",[],\\\"NV8\\\"],[[92998,93007],\\\"disallowed\\\"],[[93008,93017],\\\"valid\\\"],[[93018,93018],\\\"disallowed\\\"],[[93019,93025],\\\"valid\\\",[],\\\"NV8\\\"],[[93026,93026],\\\"disallowed\\\"],[[93027,93047],\\\"valid\\\"],[[93048,93052],\\\"disallowed\\\"],[[93053,93071],\\\"valid\\\"],[[93072,93951],\\\"disallowed\\\"],[[93952,94020],\\\"valid\\\"],[[94021,94031],\\\"disallowed\\\"],[[94032,94078],\\\"valid\\\"],[[94079,94094],\\\"disallowed\\\"],[[94095,94111],\\\"valid\\\"],[[94112,110591],\\\"disallowed\\\"],[[110592,110593],\\\"valid\\\"],[[110594,113663],\\\"disallowed\\\"],[[113664,113770],\\\"valid\\\"],[[113771,113775],\\\"disallowed\\\"],[[113776,113788],\\\"valid\\\"],[[113789,113791],\\\"disallowed\\\"],[[113792,113800],\\\"valid\\\"],[[113801,113807],\\\"disallowed\\\"],[[113808,113817],\\\"valid\\\"],[[113818,113819],\\\"disallowed\\\"],[[113820,113820],\\\"valid\\\",[],\\\"NV8\\\"],[[113821,113822],\\\"valid\\\"],[[113823,113823],\\\"valid\\\",[],\\\"NV8\\\"],[[113824,113827],\\\"ignored\\\"],[[113828,118783],\\\"disallowed\\\"],[[118784,119029],\\\"valid\\\",[],\\\"NV8\\\"],[[119030,119039],\\\"disallowed\\\"],[[119040,119078],\\\"valid\\\",[],\\\"NV8\\\"],[[119079,119080],\\\"disallowed\\\"],[[119081,119081],\\\"valid\\\",[],\\\"NV8\\\"],[[119082,119133],\\\"valid\\\",[],\\\"NV8\\\"],[[119134,119134],\\\"mapped\\\",[119127,119141]],[[119135,119135],\\\"mapped\\\",[119128,119141]],[[119136,119136],\\\"mapped\\\",[119128,119141,119150]],[[119137,119137],\\\"mapped\\\",[119128,119141,119151]],[[119138,119138],\\\"mapped\\\",[119128,119141,119152]],[[119139,119139],\\\"mapped\\\",[119128,119141,119153]],[[119140,119140],\\\"mapped\\\",[119128,119141,119154]],[[119141,119154],\\\"valid\\\",[],\\\"NV8\\\"],[[119155,119162],\\\"disallowed\\\"],[[119163,119226],\\\"valid\\\",[],\\\"NV8\\\"],[[119227,119227],\\\"mapped\\\",[119225,119141]],[[119228,119228],\\\"mapped\\\",[119226,119141]],[[119229,119229],\\\"mapped\\\",[119225,119141,119150]],[[119230,119230],\\\"mapped\\\",[119226,119141,119150]],[[119231,119231],\\\"mapped\\\",[119225,119141,119151]],[[119232,119232],\\\"mapped\\\",[119226,119141,119151]],[[119233,119261],\\\"valid\\\",[],\\\"NV8\\\"],[[119262,119272],\\\"valid\\\",[],\\\"NV8\\\"],[[119273,119295],\\\"disallowed\\\"],[[119296,119365],\\\"valid\\\",[],\\\"NV8\\\"],[[119366,119551],\\\"disallowed\\\"],[[119552,119638],\\\"valid\\\",[],\\\"NV8\\\"],[[119639,119647],\\\"disallowed\\\"],[[119648,119665],\\\"valid\\\",[],\\\"NV8\\\"],[[119666,119807],\\\"disallowed\\\"],[[119808,119808],\\\"mapped\\\",[97]],[[119809,119809],\\\"mapped\\\",[98]],[[119810,119810],\\\"mapped\\\",[99]],[[119811,119811],\\\"mapped\\\",[100]],[[119812,119812],\\\"mapped\\\",[101]],[[119813,119813],\\\"mapped\\\",[102]],[[119814,119814],\\\"mapped\\\",[103]],[[119815,119815],\\\"mapped\\\",[104]],[[119816,119816],\\\"mapped\\\",[105]],[[119817,119817],\\\"mapped\\\",[106]],[[119818,119818],\\\"mapped\\\",[107]],[[119819,119819],\\\"mapped\\\",[108]],[[119820,119820],\\\"mapped\\\",[109]],[[119821,119821],\\\"mapped\\\",[110]],[[119822,119822],\\\"mapped\\\",[111]],[[119823,119823],\\\"mapped\\\",[112]],[[119824,119824],\\\"mapped\\\",[113]],[[119825,119825],\\\"mapped\\\",[114]],[[119826,119826],\\\"mapped\\\",[115]],[[119827,119827],\\\"mapped\\\",[116]],[[119828,119828],\\\"mapped\\\",[117]],[[119829,119829],\\\"mapped\\\",[118]],[[119830,119830],\\\"mapped\\\",[119]],[[119831,119831],\\\"mapped\\\",[120]],[[119832,119832],\\\"mapped\\\",[121]],[[119833,119833],\\\"mapped\\\",[122]],[[119834,119834],\\\"mapped\\\",[97]],[[119835,119835],\\\"mapped\\\",[98]],[[119836,119836],\\\"mapped\\\",[99]],[[119837,119837],\\\"mapped\\\",[100]],[[119838,119838],\\\"mapped\\\",[101]],[[119839,119839],\\\"mapped\\\",[102]],[[119840,119840],\\\"mapped\\\",[103]],[[119841,119841],\\\"mapped\\\",[104]],[[119842,119842],\\\"mapped\\\",[105]],[[119843,119843],\\\"mapped\\\",[106]],[[119844,119844],\\\"mapped\\\",[107]],[[119845,119845],\\\"mapped\\\",[108]],[[119846,119846],\\\"mapped\\\",[109]],[[119847,119847],\\\"mapped\\\",[110]],[[119848,119848],\\\"mapped\\\",[111]],[[119849,119849],\\\"mapped\\\",[112]],[[119850,119850],\\\"mapped\\\",[113]],[[119851,119851],\\\"mapped\\\",[114]],[[119852,119852],\\\"mapped\\\",[115]],[[119853,119853],\\\"mapped\\\",[116]],[[119854,119854],\\\"mapped\\\",[117]],[[119855,119855],\\\"mapped\\\",[118]],[[119856,119856],\\\"mapped\\\",[119]],[[119857,119857],\\\"mapped\\\",[120]],[[119858,119858],\\\"mapped\\\",[121]],[[119859,119859],\\\"mapped\\\",[122]],[[119860,119860],\\\"mapped\\\",[97]],[[119861,119861],\\\"mapped\\\",[98]],[[119862,119862],\\\"mapped\\\",[99]],[[119863,119863],\\\"mapped\\\",[100]],[[119864,119864],\\\"mapped\\\",[101]],[[119865,119865],\\\"mapped\\\",[102]],[[119866,119866],\\\"mapped\\\",[103]],[[119867,119867],\\\"mapped\\\",[104]],[[119868,119868],\\\"mapped\\\",[105]],[[119869,119869],\\\"mapped\\\",[106]],[[119870,119870],\\\"mapped\\\",[107]],[[119871,119871],\\\"mapped\\\",[108]],[[119872,119872],\\\"mapped\\\",[109]],[[119873,119873],\\\"mapped\\\",[110]],[[119874,119874],\\\"mapped\\\",[111]],[[119875,119875],\\\"mapped\\\",[112]],[[119876,119876],\\\"mapped\\\",[113]],[[119877,119877],\\\"mapped\\\",[114]],[[119878,119878],\\\"mapped\\\",[115]],[[119879,119879],\\\"mapped\\\",[116]],[[119880,119880],\\\"mapped\\\",[117]],[[119881,119881],\\\"mapped\\\",[118]],[[119882,119882],\\\"mapped\\\",[119]],[[119883,119883],\\\"mapped\\\",[120]],[[119884,119884],\\\"mapped\\\",[121]],[[119885,119885],\\\"mapped\\\",[122]],[[119886,119886],\\\"mapped\\\",[97]],[[119887,119887],\\\"mapped\\\",[98]],[[119888,119888],\\\"mapped\\\",[99]],[[119889,119889],\\\"mapped\\\",[100]],[[119890,119890],\\\"mapped\\\",[101]],[[119891,119891],\\\"mapped\\\",[102]],[[119892,119892],\\\"mapped\\\",[103]],[[119893,119893],\\\"disallowed\\\"],[[119894,119894],\\\"mapped\\\",[105]],[[119895,119895],\\\"mapped\\\",[106]],[[119896,119896],\\\"mapped\\\",[107]],[[119897,119897],\\\"mapped\\\",[108]],[[119898,119898],\\\"mapped\\\",[109]],[[119899,119899],\\\"mapped\\\",[110]],[[119900,119900],\\\"mapped\\\",[111]],[[119901,119901],\\\"mapped\\\",[112]],[[119902,119902],\\\"mapped\\\",[113]],[[119903,119903],\\\"mapped\\\",[114]],[[119904,119904],\\\"mapped\\\",[115]],[[119905,119905],\\\"mapped\\\",[116]],[[119906,119906],\\\"mapped\\\",[117]],[[119907,119907],\\\"mapped\\\",[118]],[[119908,119908],\\\"mapped\\\",[119]],[[119909,119909],\\\"mapped\\\",[120]],[[119910,119910],\\\"mapped\\\",[121]],[[119911,119911],\\\"mapped\\\",[122]],[[119912,119912],\\\"mapped\\\",[97]],[[119913,119913],\\\"mapped\\\",[98]],[[119914,119914],\\\"mapped\\\",[99]],[[119915,119915],\\\"mapped\\\",[100]],[[119916,119916],\\\"mapped\\\",[101]],[[119917,119917],\\\"mapped\\\",[102]],[[119918,119918],\\\"mapped\\\",[103]],[[119919,119919],\\\"mapped\\\",[104]],[[119920,119920],\\\"mapped\\\",[105]],[[119921,119921],\\\"mapped\\\",[106]],[[119922,119922],\\\"mapped\\\",[107]],[[119923,119923],\\\"mapped\\\",[108]],[[119924,119924],\\\"mapped\\\",[109]],[[119925,119925],\\\"mapped\\\",[110]],[[119926,119926],\\\"mapped\\\",[111]],[[119927,119927],\\\"mapped\\\",[112]],[[119928,119928],\\\"mapped\\\",[113]],[[119929,119929],\\\"mapped\\\",[114]],[[119930,119930],\\\"mapped\\\",[115]],[[119931,119931],\\\"mapped\\\",[116]],[[119932,119932],\\\"mapped\\\",[117]],[[119933,119933],\\\"mapped\\\",[118]],[[119934,119934],\\\"mapped\\\",[119]],[[119935,119935],\\\"mapped\\\",[120]],[[119936,119936],\\\"mapped\\\",[121]],[[119937,119937],\\\"mapped\\\",[122]],[[119938,119938],\\\"mapped\\\",[97]],[[119939,119939],\\\"mapped\\\",[98]],[[119940,119940],\\\"mapped\\\",[99]],[[119941,119941],\\\"mapped\\\",[100]],[[119942,119942],\\\"mapped\\\",[101]],[[119943,119943],\\\"mapped\\\",[102]],[[119944,119944],\\\"mapped\\\",[103]],[[119945,119945],\\\"mapped\\\",[104]],[[119946,119946],\\\"mapped\\\",[105]],[[119947,119947],\\\"mapped\\\",[106]],[[119948,119948],\\\"mapped\\\",[107]],[[119949,119949],\\\"mapped\\\",[108]],[[119950,119950],\\\"mapped\\\",[109]],[[119951,119951],\\\"mapped\\\",[110]],[[119952,119952],\\\"mapped\\\",[111]],[[119953,119953],\\\"mapped\\\",[112]],[[119954,119954],\\\"mapped\\\",[113]],[[119955,119955],\\\"mapped\\\",[114]],[[119956,119956],\\\"mapped\\\",[115]],[[119957,119957],\\\"mapped\\\",[116]],[[119958,119958],\\\"mapped\\\",[117]],[[119959,119959],\\\"mapped\\\",[118]],[[119960,119960],\\\"mapped\\\",[119]],[[119961,119961],\\\"mapped\\\",[120]],[[119962,119962],\\\"mapped\\\",[121]],[[119963,119963],\\\"mapped\\\",[122]],[[119964,119964],\\\"mapped\\\",[97]],[[119965,119965],\\\"disallowed\\\"],[[119966,119966],\\\"mapped\\\",[99]],[[119967,119967],\\\"mapped\\\",[100]],[[119968,119969],\\\"disallowed\\\"],[[119970,119970],\\\"mapped\\\",[103]],[[119971,119972],\\\"disallowed\\\"],[[119973,119973],\\\"mapped\\\",[106]],[[119974,119974],\\\"mapped\\\",[107]],[[119975,119976],\\\"disallowed\\\"],[[119977,119977],\\\"mapped\\\",[110]],[[119978,119978],\\\"mapped\\\",[111]],[[119979,119979],\\\"mapped\\\",[112]],[[119980,119980],\\\"mapped\\\",[113]],[[119981,119981],\\\"disallowed\\\"],[[119982,119982],\\\"mapped\\\",[115]],[[119983,119983],\\\"mapped\\\",[116]],[[119984,119984],\\\"mapped\\\",[117]],[[119985,119985],\\\"mapped\\\",[118]],[[119986,119986],\\\"mapped\\\",[119]],[[119987,119987],\\\"mapped\\\",[120]],[[119988,119988],\\\"mapped\\\",[121]],[[119989,119989],\\\"mapped\\\",[122]],[[119990,119990],\\\"mapped\\\",[97]],[[119991,119991],\\\"mapped\\\",[98]],[[119992,119992],\\\"mapped\\\",[99]],[[119993,119993],\\\"mapped\\\",[100]],[[119994,119994],\\\"disallowed\\\"],[[119995,119995],\\\"mapped\\\",[102]],[[119996,119996],\\\"disallowed\\\"],[[119997,119997],\\\"mapped\\\",[104]],[[119998,119998],\\\"mapped\\\",[105]],[[119999,119999],\\\"mapped\\\",[106]],[[120000,120000],\\\"mapped\\\",[107]],[[120001,120001],\\\"mapped\\\",[108]],[[120002,120002],\\\"mapped\\\",[109]],[[120003,120003],\\\"mapped\\\",[110]],[[120004,120004],\\\"disallowed\\\"],[[120005,120005],\\\"mapped\\\",[112]],[[120006,120006],\\\"mapped\\\",[113]],[[120007,120007],\\\"mapped\\\",[114]],[[120008,120008],\\\"mapped\\\",[115]],[[120009,120009],\\\"mapped\\\",[116]],[[120010,120010],\\\"mapped\\\",[117]],[[120011,120011],\\\"mapped\\\",[118]],[[120012,120012],\\\"mapped\\\",[119]],[[120013,120013],\\\"mapped\\\",[120]],[[120014,120014],\\\"mapped\\\",[121]],[[120015,120015],\\\"mapped\\\",[122]],[[120016,120016],\\\"mapped\\\",[97]],[[120017,120017],\\\"mapped\\\",[98]],[[120018,120018],\\\"mapped\\\",[99]],[[120019,120019],\\\"mapped\\\",[100]],[[120020,120020],\\\"mapped\\\",[101]],[[120021,120021],\\\"mapped\\\",[102]],[[120022,120022],\\\"mapped\\\",[103]],[[120023,120023],\\\"mapped\\\",[104]],[[120024,120024],\\\"mapped\\\",[105]],[[120025,120025],\\\"mapped\\\",[106]],[[120026,120026],\\\"mapped\\\",[107]],[[120027,120027],\\\"mapped\\\",[108]],[[120028,120028],\\\"mapped\\\",[109]],[[120029,120029],\\\"mapped\\\",[110]],[[120030,120030],\\\"mapped\\\",[111]],[[120031,120031],\\\"mapped\\\",[112]],[[120032,120032],\\\"mapped\\\",[113]],[[120033,120033],\\\"mapped\\\",[114]],[[120034,120034],\\\"mapped\\\",[115]],[[120035,120035],\\\"mapped\\\",[116]],[[120036,120036],\\\"mapped\\\",[117]],[[120037,120037],\\\"mapped\\\",[118]],[[120038,120038],\\\"mapped\\\",[119]],[[120039,120039],\\\"mapped\\\",[120]],[[120040,120040],\\\"mapped\\\",[121]],[[120041,120041],\\\"mapped\\\",[122]],[[120042,120042],\\\"mapped\\\",[97]],[[120043,120043],\\\"mapped\\\",[98]],[[120044,120044],\\\"mapped\\\",[99]],[[120045,120045],\\\"mapped\\\",[100]],[[120046,120046],\\\"mapped\\\",[101]],[[120047,120047],\\\"mapped\\\",[102]],[[120048,120048],\\\"mapped\\\",[103]],[[120049,120049],\\\"mapped\\\",[104]],[[120050,120050],\\\"mapped\\\",[105]],[[120051,120051],\\\"mapped\\\",[106]],[[120052,120052],\\\"mapped\\\",[107]],[[120053,120053],\\\"mapped\\\",[108]],[[120054,120054],\\\"mapped\\\",[109]],[[120055,120055],\\\"mapped\\\",[110]],[[120056,120056],\\\"mapped\\\",[111]],[[120057,120057],\\\"mapped\\\",[112]],[[120058,120058],\\\"mapped\\\",[113]],[[120059,120059],\\\"mapped\\\",[114]],[[120060,120060],\\\"mapped\\\",[115]],[[120061,120061],\\\"mapped\\\",[116]],[[120062,120062],\\\"mapped\\\",[117]],[[120063,120063],\\\"mapped\\\",[118]],[[120064,120064],\\\"mapped\\\",[119]],[[120065,120065],\\\"mapped\\\",[120]],[[120066,120066],\\\"mapped\\\",[121]],[[120067,120067],\\\"mapped\\\",[122]],[[120068,120068],\\\"mapped\\\",[97]],[[120069,120069],\\\"mapped\\\",[98]],[[120070,120070],\\\"disallowed\\\"],[[120071,120071],\\\"mapped\\\",[100]],[[120072,120072],\\\"mapped\\\",[101]],[[120073,120073],\\\"mapped\\\",[102]],[[120074,120074],\\\"mapped\\\",[103]],[[120075,120076],\\\"disallowed\\\"],[[120077,120077],\\\"mapped\\\",[106]],[[120078,120078],\\\"mapped\\\",[107]],[[120079,120079],\\\"mapped\\\",[108]],[[120080,120080],\\\"mapped\\\",[109]],[[120081,120081],\\\"mapped\\\",[110]],[[120082,120082],\\\"mapped\\\",[111]],[[120083,120083],\\\"mapped\\\",[112]],[[120084,120084],\\\"mapped\\\",[113]],[[120085,120085],\\\"disallowed\\\"],[[120086,120086],\\\"mapped\\\",[115]],[[120087,120087],\\\"mapped\\\",[116]],[[120088,120088],\\\"mapped\\\",[117]],[[120089,120089],\\\"mapped\\\",[118]],[[120090,120090],\\\"mapped\\\",[119]],[[120091,120091],\\\"mapped\\\",[120]],[[120092,120092],\\\"mapped\\\",[121]],[[120093,120093],\\\"disallowed\\\"],[[120094,120094],\\\"mapped\\\",[97]],[[120095,120095],\\\"mapped\\\",[98]],[[120096,120096],\\\"mapped\\\",[99]],[[120097,120097],\\\"mapped\\\",[100]],[[120098,120098],\\\"mapped\\\",[101]],[[120099,120099],\\\"mapped\\\",[102]],[[120100,120100],\\\"mapped\\\",[103]],[[120101,120101],\\\"mapped\\\",[104]],[[120102,120102],\\\"mapped\\\",[105]],[[120103,120103],\\\"mapped\\\",[106]],[[120104,120104],\\\"mapped\\\",[107]],[[120105,120105],\\\"mapped\\\",[108]],[[120106,120106],\\\"mapped\\\",[109]],[[120107,120107],\\\"mapped\\\",[110]],[[120108,120108],\\\"mapped\\\",[111]],[[120109,120109],\\\"mapped\\\",[112]],[[120110,120110],\\\"mapped\\\",[113]],[[120111,120111],\\\"mapped\\\",[114]],[[120112,120112],\\\"mapped\\\",[115]],[[120113,120113],\\\"mapped\\\",[116]],[[120114,120114],\\\"mapped\\\",[117]],[[120115,120115],\\\"mapped\\\",[118]],[[120116,120116],\\\"mapped\\\",[119]],[[120117,120117],\\\"mapped\\\",[120]],[[120118,120118],\\\"mapped\\\",[121]],[[120119,120119],\\\"mapped\\\",[122]],[[120120,120120],\\\"mapped\\\",[97]],[[120121,120121],\\\"mapped\\\",[98]],[[120122,120122],\\\"disallowed\\\"],[[120123,120123],\\\"mapped\\\",[100]],[[120124,120124],\\\"mapped\\\",[101]],[[120125,120125],\\\"mapped\\\",[102]],[[120126,120126],\\\"mapped\\\",[103]],[[120127,120127],\\\"disallowed\\\"],[[120128,120128],\\\"mapped\\\",[105]],[[120129,120129],\\\"mapped\\\",[106]],[[120130,120130],\\\"mapped\\\",[107]],[[120131,120131],\\\"mapped\\\",[108]],[[120132,120132],\\\"mapped\\\",[109]],[[120133,120133],\\\"disallowed\\\"],[[120134,120134],\\\"mapped\\\",[111]],[[120135,120137],\\\"disallowed\\\"],[[120138,120138],\\\"mapped\\\",[115]],[[120139,120139],\\\"mapped\\\",[116]],[[120140,120140],\\\"mapped\\\",[117]],[[120141,120141],\\\"mapped\\\",[118]],[[120142,120142],\\\"mapped\\\",[119]],[[120143,120143],\\\"mapped\\\",[120]],[[120144,120144],\\\"mapped\\\",[121]],[[120145,120145],\\\"disallowed\\\"],[[120146,120146],\\\"mapped\\\",[97]],[[120147,120147],\\\"mapped\\\",[98]],[[120148,120148],\\\"mapped\\\",[99]],[[120149,120149],\\\"mapped\\\",[100]],[[120150,120150],\\\"mapped\\\",[101]],[[120151,120151],\\\"mapped\\\",[102]],[[120152,120152],\\\"mapped\\\",[103]],[[120153,120153],\\\"mapped\\\",[104]],[[120154,120154],\\\"mapped\\\",[105]],[[120155,120155],\\\"mapped\\\",[106]],[[120156,120156],\\\"mapped\\\",[107]],[[120157,120157],\\\"mapped\\\",[108]],[[120158,120158],\\\"mapped\\\",[109]],[[120159,120159],\\\"mapped\\\",[110]],[[120160,120160],\\\"mapped\\\",[111]],[[120161,120161],\\\"mapped\\\",[112]],[[120162,120162],\\\"mapped\\\",[113]],[[120163,120163],\\\"mapped\\\",[114]],[[120164,120164],\\\"mapped\\\",[115]],[[120165,120165],\\\"mapped\\\",[116]],[[120166,120166],\\\"mapped\\\",[117]],[[120167,120167],\\\"mapped\\\",[118]],[[120168,120168],\\\"mapped\\\",[119]],[[120169,120169],\\\"mapped\\\",[120]],[[120170,120170],\\\"mapped\\\",[121]],[[120171,120171],\\\"mapped\\\",[122]],[[120172,120172],\\\"mapped\\\",[97]],[[120173,120173],\\\"mapped\\\",[98]],[[120174,120174],\\\"mapped\\\",[99]],[[120175,120175],\\\"mapped\\\",[100]],[[120176,120176],\\\"mapped\\\",[101]],[[120177,120177],\\\"mapped\\\",[102]],[[120178,120178],\\\"mapped\\\",[103]],[[120179,120179],\\\"mapped\\\",[104]],[[120180,120180],\\\"mapped\\\",[105]],[[120181,120181],\\\"mapped\\\",[106]],[[120182,120182],\\\"mapped\\\",[107]],[[120183,120183],\\\"mapped\\\",[108]],[[120184,120184],\\\"mapped\\\",[109]],[[120185,120185],\\\"mapped\\\",[110]],[[120186,120186],\\\"mapped\\\",[111]],[[120187,120187],\\\"mapped\\\",[112]],[[120188,120188],\\\"mapped\\\",[113]],[[120189,120189],\\\"mapped\\\",[114]],[[120190,120190],\\\"mapped\\\",[115]],[[120191,120191],\\\"mapped\\\",[116]],[[120192,120192],\\\"mapped\\\",[117]],[[120193,120193],\\\"mapped\\\",[118]],[[120194,120194],\\\"mapped\\\",[119]],[[120195,120195],\\\"mapped\\\",[120]],[[120196,120196],\\\"mapped\\\",[121]],[[120197,120197],\\\"mapped\\\",[122]],[[120198,120198],\\\"mapped\\\",[97]],[[120199,120199],\\\"mapped\\\",[98]],[[120200,120200],\\\"mapped\\\",[99]],[[120201,120201],\\\"mapped\\\",[100]],[[120202,120202],\\\"mapped\\\",[101]],[[120203,120203],\\\"mapped\\\",[102]],[[120204,120204],\\\"mapped\\\",[103]],[[120205,120205],\\\"mapped\\\",[104]],[[120206,120206],\\\"mapped\\\",[105]],[[120207,120207],\\\"mapped\\\",[106]],[[120208,120208],\\\"mapped\\\",[107]],[[120209,120209],\\\"mapped\\\",[108]],[[120210,120210],\\\"mapped\\\",[109]],[[120211,120211],\\\"mapped\\\",[110]],[[120212,120212],\\\"mapped\\\",[111]],[[120213,120213],\\\"mapped\\\",[112]],[[120214,120214],\\\"mapped\\\",[113]],[[120215,120215],\\\"mapped\\\",[114]],[[120216,120216],\\\"mapped\\\",[115]],[[120217,120217],\\\"mapped\\\",[116]],[[120218,120218],\\\"mapped\\\",[117]],[[120219,120219],\\\"mapped\\\",[118]],[[120220,120220],\\\"mapped\\\",[119]],[[120221,120221],\\\"mapped\\\",[120]],[[120222,120222],\\\"mapped\\\",[121]],[[120223,120223],\\\"mapped\\\",[122]],[[120224,120224],\\\"mapped\\\",[97]],[[120225,120225],\\\"mapped\\\",[98]],[[120226,120226],\\\"mapped\\\",[99]],[[120227,120227],\\\"mapped\\\",[100]],[[120228,120228],\\\"mapped\\\",[101]],[[120229,120229],\\\"mapped\\\",[102]],[[120230,120230],\\\"mapped\\\",[103]],[[120231,120231],\\\"mapped\\\",[104]],[[120232,120232],\\\"mapped\\\",[105]],[[120233,120233],\\\"mapped\\\",[106]],[[120234,120234],\\\"mapped\\\",[107]],[[120235,120235],\\\"mapped\\\",[108]],[[120236,120236],\\\"mapped\\\",[109]],[[120237,120237],\\\"mapped\\\",[110]],[[120238,120238],\\\"mapped\\\",[111]],[[120239,120239],\\\"mapped\\\",[112]],[[120240,120240],\\\"mapped\\\",[113]],[[120241,120241],\\\"mapped\\\",[114]],[[120242,120242],\\\"mapped\\\",[115]],[[120243,120243],\\\"mapped\\\",[116]],[[120244,120244],\\\"mapped\\\",[117]],[[120245,120245],\\\"mapped\\\",[118]],[[120246,120246],\\\"mapped\\\",[119]],[[120247,120247],\\\"mapped\\\",[120]],[[120248,120248],\\\"mapped\\\",[121]],[[120249,120249],\\\"mapped\\\",[122]],[[120250,120250],\\\"mapped\\\",[97]],[[120251,120251],\\\"mapped\\\",[98]],[[120252,120252],\\\"mapped\\\",[99]],[[120253,120253],\\\"mapped\\\",[100]],[[120254,120254],\\\"mapped\\\",[101]],[[120255,120255],\\\"mapped\\\",[102]],[[120256,120256],\\\"mapped\\\",[103]],[[120257,120257],\\\"mapped\\\",[104]],[[120258,120258],\\\"mapped\\\",[105]],[[120259,120259],\\\"mapped\\\",[106]],[[120260,120260],\\\"mapped\\\",[107]],[[120261,120261],\\\"mapped\\\",[108]],[[120262,120262],\\\"mapped\\\",[109]],[[120263,120263],\\\"mapped\\\",[110]],[[120264,120264],\\\"mapped\\\",[111]],[[120265,120265],\\\"mapped\\\",[112]],[[120266,120266],\\\"mapped\\\",[113]],[[120267,120267],\\\"mapped\\\",[114]],[[120268,120268],\\\"mapped\\\",[115]],[[120269,120269],\\\"mapped\\\",[116]],[[120270,120270],\\\"mapped\\\",[117]],[[120271,120271],\\\"mapped\\\",[118]],[[120272,120272],\\\"mapped\\\",[119]],[[120273,120273],\\\"mapped\\\",[120]],[[120274,120274],\\\"mapped\\\",[121]],[[120275,120275],\\\"mapped\\\",[122]],[[120276,120276],\\\"mapped\\\",[97]],[[120277,120277],\\\"mapped\\\",[98]],[[120278,120278],\\\"mapped\\\",[99]],[[120279,120279],\\\"mapped\\\",[100]],[[120280,120280],\\\"mapped\\\",[101]],[[120281,120281],\\\"mapped\\\",[102]],[[120282,120282],\\\"mapped\\\",[103]],[[120283,120283],\\\"mapped\\\",[104]],[[120284,120284],\\\"mapped\\\",[105]],[[120285,120285],\\\"mapped\\\",[106]],[[120286,120286],\\\"mapped\\\",[107]],[[120287,120287],\\\"mapped\\\",[108]],[[120288,120288],\\\"mapped\\\",[109]],[[120289,120289],\\\"mapped\\\",[110]],[[120290,120290],\\\"mapped\\\",[111]],[[120291,120291],\\\"mapped\\\",[112]],[[120292,120292],\\\"mapped\\\",[113]],[[120293,120293],\\\"mapped\\\",[114]],[[120294,120294],\\\"mapped\\\",[115]],[[120295,120295],\\\"mapped\\\",[116]],[[120296,120296],\\\"mapped\\\",[117]],[[120297,120297],\\\"mapped\\\",[118]],[[120298,120298],\\\"mapped\\\",[119]],[[120299,120299],\\\"mapped\\\",[120]],[[120300,120300],\\\"mapped\\\",[121]],[[120301,120301],\\\"mapped\\\",[122]],[[120302,120302],\\\"mapped\\\",[97]],[[120303,120303],\\\"mapped\\\",[98]],[[120304,120304],\\\"mapped\\\",[99]],[[120305,120305],\\\"mapped\\\",[100]],[[120306,120306],\\\"mapped\\\",[101]],[[120307,120307],\\\"mapped\\\",[102]],[[120308,120308],\\\"mapped\\\",[103]],[[120309,120309],\\\"mapped\\\",[104]],[[120310,120310],\\\"mapped\\\",[105]],[[120311,120311],\\\"mapped\\\",[106]],[[120312,120312],\\\"mapped\\\",[107]],[[120313,120313],\\\"mapped\\\",[108]],[[120314,120314],\\\"mapped\\\",[109]],[[120315,120315],\\\"mapped\\\",[110]],[[120316,120316],\\\"mapped\\\",[111]],[[120317,120317],\\\"mapped\\\",[112]],[[120318,120318],\\\"mapped\\\",[113]],[[120319,120319],\\\"mapped\\\",[114]],[[120320,120320],\\\"mapped\\\",[115]],[[120321,120321],\\\"mapped\\\",[116]],[[120322,120322],\\\"mapped\\\",[117]],[[120323,120323],\\\"mapped\\\",[118]],[[120324,120324],\\\"mapped\\\",[119]],[[120325,120325],\\\"mapped\\\",[120]],[[120326,120326],\\\"mapped\\\",[121]],[[120327,120327],\\\"mapped\\\",[122]],[[120328,120328],\\\"mapped\\\",[97]],[[120329,120329],\\\"mapped\\\",[98]],[[120330,120330],\\\"mapped\\\",[99]],[[120331,120331],\\\"mapped\\\",[100]],[[120332,120332],\\\"mapped\\\",[101]],[[120333,120333],\\\"mapped\\\",[102]],[[120334,120334],\\\"mapped\\\",[103]],[[120335,120335],\\\"mapped\\\",[104]],[[120336,120336],\\\"mapped\\\",[105]],[[120337,120337],\\\"mapped\\\",[106]],[[120338,120338],\\\"mapped\\\",[107]],[[120339,120339],\\\"mapped\\\",[108]],[[120340,120340],\\\"mapped\\\",[109]],[[120341,120341],\\\"mapped\\\",[110]],[[120342,120342],\\\"mapped\\\",[111]],[[120343,120343],\\\"mapped\\\",[112]],[[120344,120344],\\\"mapped\\\",[113]],[[120345,120345],\\\"mapped\\\",[114]],[[120346,120346],\\\"mapped\\\",[115]],[[120347,120347],\\\"mapped\\\",[116]],[[120348,120348],\\\"mapped\\\",[117]],[[120349,120349],\\\"mapped\\\",[118]],[[120350,120350],\\\"mapped\\\",[119]],[[120351,120351],\\\"mapped\\\",[120]],[[120352,120352],\\\"mapped\\\",[121]],[[120353,120353],\\\"mapped\\\",[122]],[[120354,120354],\\\"mapped\\\",[97]],[[120355,120355],\\\"mapped\\\",[98]],[[120356,120356],\\\"mapped\\\",[99]],[[120357,120357],\\\"mapped\\\",[100]],[[120358,120358],\\\"mapped\\\",[101]],[[120359,120359],\\\"mapped\\\",[102]],[[120360,120360],\\\"mapped\\\",[103]],[[120361,120361],\\\"mapped\\\",[104]],[[120362,120362],\\\"mapped\\\",[105]],[[120363,120363],\\\"mapped\\\",[106]],[[120364,120364],\\\"mapped\\\",[107]],[[120365,120365],\\\"mapped\\\",[108]],[[120366,120366],\\\"mapped\\\",[109]],[[120367,120367],\\\"mapped\\\",[110]],[[120368,120368],\\\"mapped\\\",[111]],[[120369,120369],\\\"mapped\\\",[112]],[[120370,120370],\\\"mapped\\\",[113]],[[120371,120371],\\\"mapped\\\",[114]],[[120372,120372],\\\"mapped\\\",[115]],[[120373,120373],\\\"mapped\\\",[116]],[[120374,120374],\\\"mapped\\\",[117]],[[120375,120375],\\\"mapped\\\",[118]],[[120376,120376],\\\"mapped\\\",[119]],[[120377,120377],\\\"mapped\\\",[120]],[[120378,120378],\\\"mapped\\\",[121]],[[120379,120379],\\\"mapped\\\",[122]],[[120380,120380],\\\"mapped\\\",[97]],[[120381,120381],\\\"mapped\\\",[98]],[[120382,120382],\\\"mapped\\\",[99]],[[120383,120383],\\\"mapped\\\",[100]],[[120384,120384],\\\"mapped\\\",[101]],[[120385,120385],\\\"mapped\\\",[102]],[[120386,120386],\\\"mapped\\\",[103]],[[120387,120387],\\\"mapped\\\",[104]],[[120388,120388],\\\"mapped\\\",[105]],[[120389,120389],\\\"mapped\\\",[106]],[[120390,120390],\\\"mapped\\\",[107]],[[120391,120391],\\\"mapped\\\",[108]],[[120392,120392],\\\"mapped\\\",[109]],[[120393,120393],\\\"mapped\\\",[110]],[[120394,120394],\\\"mapped\\\",[111]],[[120395,120395],\\\"mapped\\\",[112]],[[120396,120396],\\\"mapped\\\",[113]],[[120397,120397],\\\"mapped\\\",[114]],[[120398,120398],\\\"mapped\\\",[115]],[[120399,120399],\\\"mapped\\\",[116]],[[120400,120400],\\\"mapped\\\",[117]],[[120401,120401],\\\"mapped\\\",[118]],[[120402,120402],\\\"mapped\\\",[119]],[[120403,120403],\\\"mapped\\\",[120]],[[120404,120404],\\\"mapped\\\",[121]],[[120405,120405],\\\"mapped\\\",[122]],[[120406,120406],\\\"mapped\\\",[97]],[[120407,120407],\\\"mapped\\\",[98]],[[120408,120408],\\\"mapped\\\",[99]],[[120409,120409],\\\"mapped\\\",[100]],[[120410,120410],\\\"mapped\\\",[101]],[[120411,120411],\\\"mapped\\\",[102]],[[120412,120412],\\\"mapped\\\",[103]],[[120413,120413],\\\"mapped\\\",[104]],[[120414,120414],\\\"mapped\\\",[105]],[[120415,120415],\\\"mapped\\\",[106]],[[120416,120416],\\\"mapped\\\",[107]],[[120417,120417],\\\"mapped\\\",[108]],[[120418,120418],\\\"mapped\\\",[109]],[[120419,120419],\\\"mapped\\\",[110]],[[120420,120420],\\\"mapped\\\",[111]],[[120421,120421],\\\"mapped\\\",[112]],[[120422,120422],\\\"mapped\\\",[113]],[[120423,120423],\\\"mapped\\\",[114]],[[120424,120424],\\\"mapped\\\",[115]],[[120425,120425],\\\"mapped\\\",[116]],[[120426,120426],\\\"mapped\\\",[117]],[[120427,120427],\\\"mapped\\\",[118]],[[120428,120428],\\\"mapped\\\",[119]],[[120429,120429],\\\"mapped\\\",[120]],[[120430,120430],\\\"mapped\\\",[121]],[[120431,120431],\\\"mapped\\\",[122]],[[120432,120432],\\\"mapped\\\",[97]],[[120433,120433],\\\"mapped\\\",[98]],[[120434,120434],\\\"mapped\\\",[99]],[[120435,120435],\\\"mapped\\\",[100]],[[120436,120436],\\\"mapped\\\",[101]],[[120437,120437],\\\"mapped\\\",[102]],[[120438,120438],\\\"mapped\\\",[103]],[[120439,120439],\\\"mapped\\\",[104]],[[120440,120440],\\\"mapped\\\",[105]],[[120441,120441],\\\"mapped\\\",[106]],[[120442,120442],\\\"mapped\\\",[107]],[[120443,120443],\\\"mapped\\\",[108]],[[120444,120444],\\\"mapped\\\",[109]],[[120445,120445],\\\"mapped\\\",[110]],[[120446,120446],\\\"mapped\\\",[111]],[[120447,120447],\\\"mapped\\\",[112]],[[120448,120448],\\\"mapped\\\",[113]],[[120449,120449],\\\"mapped\\\",[114]],[[120450,120450],\\\"mapped\\\",[115]],[[120451,120451],\\\"mapped\\\",[116]],[[120452,120452],\\\"mapped\\\",[117]],[[120453,120453],\\\"mapped\\\",[118]],[[120454,120454],\\\"mapped\\\",[119]],[[120455,120455],\\\"mapped\\\",[120]],[[120456,120456],\\\"mapped\\\",[121]],[[120457,120457],\\\"mapped\\\",[122]],[[120458,120458],\\\"mapped\\\",[97]],[[120459,120459],\\\"mapped\\\",[98]],[[120460,120460],\\\"mapped\\\",[99]],[[120461,120461],\\\"mapped\\\",[100]],[[120462,120462],\\\"mapped\\\",[101]],[[120463,120463],\\\"mapped\\\",[102]],[[120464,120464],\\\"mapped\\\",[103]],[[120465,120465],\\\"mapped\\\",[104]],[[120466,120466],\\\"mapped\\\",[105]],[[120467,120467],\\\"mapped\\\",[106]],[[120468,120468],\\\"mapped\\\",[107]],[[120469,120469],\\\"mapped\\\",[108]],[[120470,120470],\\\"mapped\\\",[109]],[[120471,120471],\\\"mapped\\\",[110]],[[120472,120472],\\\"mapped\\\",[111]],[[120473,120473],\\\"mapped\\\",[112]],[[120474,120474],\\\"mapped\\\",[113]],[[120475,120475],\\\"mapped\\\",[114]],[[120476,120476],\\\"mapped\\\",[115]],[[120477,120477],\\\"mapped\\\",[116]],[[120478,120478],\\\"mapped\\\",[117]],[[120479,120479],\\\"mapped\\\",[118]],[[120480,120480],\\\"mapped\\\",[119]],[[120481,120481],\\\"mapped\\\",[120]],[[120482,120482],\\\"mapped\\\",[121]],[[120483,120483],\\\"mapped\\\",[122]],[[120484,120484],\\\"mapped\\\",[305]],[[120485,120485],\\\"mapped\\\",[567]],[[120486,120487],\\\"disallowed\\\"],[[120488,120488],\\\"mapped\\\",[945]],[[120489,120489],\\\"mapped\\\",[946]],[[120490,120490],\\\"mapped\\\",[947]],[[120491,120491],\\\"mapped\\\",[948]],[[120492,120492],\\\"mapped\\\",[949]],[[120493,120493],\\\"mapped\\\",[950]],[[120494,120494],\\\"mapped\\\",[951]],[[120495,120495],\\\"mapped\\\",[952]],[[120496,120496],\\\"mapped\\\",[953]],[[120497,120497],\\\"mapped\\\",[954]],[[120498,120498],\\\"mapped\\\",[955]],[[120499,120499],\\\"mapped\\\",[956]],[[120500,120500],\\\"mapped\\\",[957]],[[120501,120501],\\\"mapped\\\",[958]],[[120502,120502],\\\"mapped\\\",[959]],[[120503,120503],\\\"mapped\\\",[960]],[[120504,120504],\\\"mapped\\\",[961]],[[120505,120505],\\\"mapped\\\",[952]],[[120506,120506],\\\"mapped\\\",[963]],[[120507,120507],\\\"mapped\\\",[964]],[[120508,120508],\\\"mapped\\\",[965]],[[120509,120509],\\\"mapped\\\",[966]],[[120510,120510],\\\"mapped\\\",[967]],[[120511,120511],\\\"mapped\\\",[968]],[[120512,120512],\\\"mapped\\\",[969]],[[120513,120513],\\\"mapped\\\",[8711]],[[120514,120514],\\\"mapped\\\",[945]],[[120515,120515],\\\"mapped\\\",[946]],[[120516,120516],\\\"mapped\\\",[947]],[[120517,120517],\\\"mapped\\\",[948]],[[120518,120518],\\\"mapped\\\",[949]],[[120519,120519],\\\"mapped\\\",[950]],[[120520,120520],\\\"mapped\\\",[951]],[[120521,120521],\\\"mapped\\\",[952]],[[120522,120522],\\\"mapped\\\",[953]],[[120523,120523],\\\"mapped\\\",[954]],[[120524,120524],\\\"mapped\\\",[955]],[[120525,120525],\\\"mapped\\\",[956]],[[120526,120526],\\\"mapped\\\",[957]],[[120527,120527],\\\"mapped\\\",[958]],[[120528,120528],\\\"mapped\\\",[959]],[[120529,120529],\\\"mapped\\\",[960]],[[120530,120530],\\\"mapped\\\",[961]],[[120531,120532],\\\"mapped\\\",[963]],[[120533,120533],\\\"mapped\\\",[964]],[[120534,120534],\\\"mapped\\\",[965]],[[120535,120535],\\\"mapped\\\",[966]],[[120536,120536],\\\"mapped\\\",[967]],[[120537,120537],\\\"mapped\\\",[968]],[[120538,120538],\\\"mapped\\\",[969]],[[120539,120539],\\\"mapped\\\",[8706]],[[120540,120540],\\\"mapped\\\",[949]],[[120541,120541],\\\"mapped\\\",[952]],[[120542,120542],\\\"mapped\\\",[954]],[[120543,120543],\\\"mapped\\\",[966]],[[120544,120544],\\\"mapped\\\",[961]],[[120545,120545],\\\"mapped\\\",[960]],[[120546,120546],\\\"mapped\\\",[945]],[[120547,120547],\\\"mapped\\\",[946]],[[120548,120548],\\\"mapped\\\",[947]],[[120549,120549],\\\"mapped\\\",[948]],[[120550,120550],\\\"mapped\\\",[949]],[[120551,120551],\\\"mapped\\\",[950]],[[120552,120552],\\\"mapped\\\",[951]],[[120553,120553],\\\"mapped\\\",[952]],[[120554,120554],\\\"mapped\\\",[953]],[[120555,120555],\\\"mapped\\\",[954]],[[120556,120556],\\\"mapped\\\",[955]],[[120557,120557],\\\"mapped\\\",[956]],[[120558,120558],\\\"mapped\\\",[957]],[[120559,120559],\\\"mapped\\\",[958]],[[120560,120560],\\\"mapped\\\",[959]],[[120561,120561],\\\"mapped\\\",[960]],[[120562,120562],\\\"mapped\\\",[961]],[[120563,120563],\\\"mapped\\\",[952]],[[120564,120564],\\\"mapped\\\",[963]],[[120565,120565],\\\"mapped\\\",[964]],[[120566,120566],\\\"mapped\\\",[965]],[[120567,120567],\\\"mapped\\\",[966]],[[120568,120568],\\\"mapped\\\",[967]],[[120569,120569],\\\"mapped\\\",[968]],[[120570,120570],\\\"mapped\\\",[969]],[[120571,120571],\\\"mapped\\\",[8711]],[[120572,120572],\\\"mapped\\\",[945]],[[120573,120573],\\\"mapped\\\",[946]],[[120574,120574],\\\"mapped\\\",[947]],[[120575,120575],\\\"mapped\\\",[948]],[[120576,120576],\\\"mapped\\\",[949]],[[120577,120577],\\\"mapped\\\",[950]],[[120578,120578],\\\"mapped\\\",[951]],[[120579,120579],\\\"mapped\\\",[952]],[[120580,120580],\\\"mapped\\\",[953]],[[120581,120581],\\\"mapped\\\",[954]],[[120582,120582],\\\"mapped\\\",[955]],[[120583,120583],\\\"mapped\\\",[956]],[[120584,120584],\\\"mapped\\\",[957]],[[120585,120585],\\\"mapped\\\",[958]],[[120586,120586],\\\"mapped\\\",[959]],[[120587,120587],\\\"mapped\\\",[960]],[[120588,120588],\\\"mapped\\\",[961]],[[120589,120590],\\\"mapped\\\",[963]],[[120591,120591],\\\"mapped\\\",[964]],[[120592,120592],\\\"mapped\\\",[965]],[[120593,120593],\\\"mapped\\\",[966]],[[120594,120594],\\\"mapped\\\",[967]],[[120595,120595],\\\"mapped\\\",[968]],[[120596,120596],\\\"mapped\\\",[969]],[[120597,120597],\\\"mapped\\\",[8706]],[[120598,120598],\\\"mapped\\\",[949]],[[120599,120599],\\\"mapped\\\",[952]],[[120600,120600],\\\"mapped\\\",[954]],[[120601,120601],\\\"mapped\\\",[966]],[[120602,120602],\\\"mapped\\\",[961]],[[120603,120603],\\\"mapped\\\",[960]],[[120604,120604],\\\"mapped\\\",[945]],[[120605,120605],\\\"mapped\\\",[946]],[[120606,120606],\\\"mapped\\\",[947]],[[120607,120607],\\\"mapped\\\",[948]],[[120608,120608],\\\"mapped\\\",[949]],[[120609,120609],\\\"mapped\\\",[950]],[[120610,120610],\\\"mapped\\\",[951]],[[120611,120611],\\\"mapped\\\",[952]],[[120612,120612],\\\"mapped\\\",[953]],[[120613,120613],\\\"mapped\\\",[954]],[[120614,120614],\\\"mapped\\\",[955]],[[120615,120615],\\\"mapped\\\",[956]],[[120616,120616],\\\"mapped\\\",[957]],[[120617,120617],\\\"mapped\\\",[958]],[[120618,120618],\\\"mapped\\\",[959]],[[120619,120619],\\\"mapped\\\",[960]],[[120620,120620],\\\"mapped\\\",[961]],[[120621,120621],\\\"mapped\\\",[952]],[[120622,120622],\\\"mapped\\\",[963]],[[120623,120623],\\\"mapped\\\",[964]],[[120624,120624],\\\"mapped\\\",[965]],[[120625,120625],\\\"mapped\\\",[966]],[[120626,120626],\\\"mapped\\\",[967]],[[120627,120627],\\\"mapped\\\",[968]],[[120628,120628],\\\"mapped\\\",[969]],[[120629,120629],\\\"mapped\\\",[8711]],[[120630,120630],\\\"mapped\\\",[945]],[[120631,120631],\\\"mapped\\\",[946]],[[120632,120632],\\\"mapped\\\",[947]],[[120633,120633],\\\"mapped\\\",[948]],[[120634,120634],\\\"mapped\\\",[949]],[[120635,120635],\\\"mapped\\\",[950]],[[120636,120636],\\\"mapped\\\",[951]],[[120637,120637],\\\"mapped\\\",[952]],[[120638,120638],\\\"mapped\\\",[953]],[[120639,120639],\\\"mapped\\\",[954]],[[120640,120640],\\\"mapped\\\",[955]],[[120641,120641],\\\"mapped\\\",[956]],[[120642,120642],\\\"mapped\\\",[957]],[[120643,120643],\\\"mapped\\\",[958]],[[120644,120644],\\\"mapped\\\",[959]],[[120645,120645],\\\"mapped\\\",[960]],[[120646,120646],\\\"mapped\\\",[961]],[[120647,120648],\\\"mapped\\\",[963]],[[120649,120649],\\\"mapped\\\",[964]],[[120650,120650],\\\"mapped\\\",[965]],[[120651,120651],\\\"mapped\\\",[966]],[[120652,120652],\\\"mapped\\\",[967]],[[120653,120653],\\\"mapped\\\",[968]],[[120654,120654],\\\"mapped\\\",[969]],[[120655,120655],\\\"mapped\\\",[8706]],[[120656,120656],\\\"mapped\\\",[949]],[[120657,120657],\\\"mapped\\\",[952]],[[120658,120658],\\\"mapped\\\",[954]],[[120659,120659],\\\"mapped\\\",[966]],[[120660,120660],\\\"mapped\\\",[961]],[[120661,120661],\\\"mapped\\\",[960]],[[120662,120662],\\\"mapped\\\",[945]],[[120663,120663],\\\"mapped\\\",[946]],[[120664,120664],\\\"mapped\\\",[947]],[[120665,120665],\\\"mapped\\\",[948]],[[120666,120666],\\\"mapped\\\",[949]],[[120667,120667],\\\"mapped\\\",[950]],[[120668,120668],\\\"mapped\\\",[951]],[[120669,120669],\\\"mapped\\\",[952]],[[120670,120670],\\\"mapped\\\",[953]],[[120671,120671],\\\"mapped\\\",[954]],[[120672,120672],\\\"mapped\\\",[955]],[[120673,120673],\\\"mapped\\\",[956]],[[120674,120674],\\\"mapped\\\",[957]],[[120675,120675],\\\"mapped\\\",[958]],[[120676,120676],\\\"mapped\\\",[959]],[[120677,120677],\\\"mapped\\\",[960]],[[120678,120678],\\\"mapped\\\",[961]],[[120679,120679],\\\"mapped\\\",[952]],[[120680,120680],\\\"mapped\\\",[963]],[[120681,120681],\\\"mapped\\\",[964]],[[120682,120682],\\\"mapped\\\",[965]],[[120683,120683],\\\"mapped\\\",[966]],[[120684,120684],\\\"mapped\\\",[967]],[[120685,120685],\\\"mapped\\\",[968]],[[120686,120686],\\\"mapped\\\",[969]],[[120687,120687],\\\"mapped\\\",[8711]],[[120688,120688],\\\"mapped\\\",[945]],[[120689,120689],\\\"mapped\\\",[946]],[[120690,120690],\\\"mapped\\\",[947]],[[120691,120691],\\\"mapped\\\",[948]],[[120692,120692],\\\"mapped\\\",[949]],[[120693,120693],\\\"mapped\\\",[950]],[[120694,120694],\\\"mapped\\\",[951]],[[120695,120695],\\\"mapped\\\",[952]],[[120696,120696],\\\"mapped\\\",[953]],[[120697,120697],\\\"mapped\\\",[954]],[[120698,120698],\\\"mapped\\\",[955]],[[120699,120699],\\\"mapped\\\",[956]],[[120700,120700],\\\"mapped\\\",[957]],[[120701,120701],\\\"mapped\\\",[958]],[[120702,120702],\\\"mapped\\\",[959]],[[120703,120703],\\\"mapped\\\",[960]],[[120704,120704],\\\"mapped\\\",[961]],[[120705,120706],\\\"mapped\\\",[963]],[[120707,120707],\\\"mapped\\\",[964]],[[120708,120708],\\\"mapped\\\",[965]],[[120709,120709],\\\"mapped\\\",[966]],[[120710,120710],\\\"mapped\\\",[967]],[[120711,120711],\\\"mapped\\\",[968]],[[120712,120712],\\\"mapped\\\",[969]],[[120713,120713],\\\"mapped\\\",[8706]],[[120714,120714],\\\"mapped\\\",[949]],[[120715,120715],\\\"mapped\\\",[952]],[[120716,120716],\\\"mapped\\\",[954]],[[120717,120717],\\\"mapped\\\",[966]],[[120718,120718],\\\"mapped\\\",[961]],[[120719,120719],\\\"mapped\\\",[960]],[[120720,120720],\\\"mapped\\\",[945]],[[120721,120721],\\\"mapped\\\",[946]],[[120722,120722],\\\"mapped\\\",[947]],[[120723,120723],\\\"mapped\\\",[948]],[[120724,120724],\\\"mapped\\\",[949]],[[120725,120725],\\\"mapped\\\",[950]],[[120726,120726],\\\"mapped\\\",[951]],[[120727,120727],\\\"mapped\\\",[952]],[[120728,120728],\\\"mapped\\\",[953]],[[120729,120729],\\\"mapped\\\",[954]],[[120730,120730],\\\"mapped\\\",[955]],[[120731,120731],\\\"mapped\\\",[956]],[[120732,120732],\\\"mapped\\\",[957]],[[120733,120733],\\\"mapped\\\",[958]],[[120734,120734],\\\"mapped\\\",[959]],[[120735,120735],\\\"mapped\\\",[960]],[[120736,120736],\\\"mapped\\\",[961]],[[120737,120737],\\\"mapped\\\",[952]],[[120738,120738],\\\"mapped\\\",[963]],[[120739,120739],\\\"mapped\\\",[964]],[[120740,120740],\\\"mapped\\\",[965]],[[120741,120741],\\\"mapped\\\",[966]],[[120742,120742],\\\"mapped\\\",[967]],[[120743,120743],\\\"mapped\\\",[968]],[[120744,120744],\\\"mapped\\\",[969]],[[120745,120745],\\\"mapped\\\",[8711]],[[120746,120746],\\\"mapped\\\",[945]],[[120747,120747],\\\"mapped\\\",[946]],[[120748,120748],\\\"mapped\\\",[947]],[[120749,120749],\\\"mapped\\\",[948]],[[120750,120750],\\\"mapped\\\",[949]],[[120751,120751],\\\"mapped\\\",[950]],[[120752,120752],\\\"mapped\\\",[951]],[[120753,120753],\\\"mapped\\\",[952]],[[120754,120754],\\\"mapped\\\",[953]],[[120755,120755],\\\"mapped\\\",[954]],[[120756,120756],\\\"mapped\\\",[955]],[[120757,120757],\\\"mapped\\\",[956]],[[120758,120758],\\\"mapped\\\",[957]],[[120759,120759],\\\"mapped\\\",[958]],[[120760,120760],\\\"mapped\\\",[959]],[[120761,120761],\\\"mapped\\\",[960]],[[120762,120762],\\\"mapped\\\",[961]],[[120763,120764],\\\"mapped\\\",[963]],[[120765,120765],\\\"mapped\\\",[964]],[[120766,120766],\\\"mapped\\\",[965]],[[120767,120767],\\\"mapped\\\",[966]],[[120768,120768],\\\"mapped\\\",[967]],[[120769,120769],\\\"mapped\\\",[968]],[[120770,120770],\\\"mapped\\\",[969]],[[120771,120771],\\\"mapped\\\",[8706]],[[120772,120772],\\\"mapped\\\",[949]],[[120773,120773],\\\"mapped\\\",[952]],[[120774,120774],\\\"mapped\\\",[954]],[[120775,120775],\\\"mapped\\\",[966]],[[120776,120776],\\\"mapped\\\",[961]],[[120777,120777],\\\"mapped\\\",[960]],[[120778,120779],\\\"mapped\\\",[989]],[[120780,120781],\\\"disallowed\\\"],[[120782,120782],\\\"mapped\\\",[48]],[[120783,120783],\\\"mapped\\\",[49]],[[120784,120784],\\\"mapped\\\",[50]],[[120785,120785],\\\"mapped\\\",[51]],[[120786,120786],\\\"mapped\\\",[52]],[[120787,120787],\\\"mapped\\\",[53]],[[120788,120788],\\\"mapped\\\",[54]],[[120789,120789],\\\"mapped\\\",[55]],[[120790,120790],\\\"mapped\\\",[56]],[[120791,120791],\\\"mapped\\\",[57]],[[120792,120792],\\\"mapped\\\",[48]],[[120793,120793],\\\"mapped\\\",[49]],[[120794,120794],\\\"mapped\\\",[50]],[[120795,120795],\\\"mapped\\\",[51]],[[120796,120796],\\\"mapped\\\",[52]],[[120797,120797],\\\"mapped\\\",[53]],[[120798,120798],\\\"mapped\\\",[54]],[[120799,120799],\\\"mapped\\\",[55]],[[120800,120800],\\\"mapped\\\",[56]],[[120801,120801],\\\"mapped\\\",[57]],[[120802,120802],\\\"mapped\\\",[48]],[[120803,120803],\\\"mapped\\\",[49]],[[120804,120804],\\\"mapped\\\",[50]],[[120805,120805],\\\"mapped\\\",[51]],[[120806,120806],\\\"mapped\\\",[52]],[[120807,120807],\\\"mapped\\\",[53]],[[120808,120808],\\\"mapped\\\",[54]],[[120809,120809],\\\"mapped\\\",[55]],[[120810,120810],\\\"mapped\\\",[56]],[[120811,120811],\\\"mapped\\\",[57]],[[120812,120812],\\\"mapped\\\",[48]],[[120813,120813],\\\"mapped\\\",[49]],[[120814,120814],\\\"mapped\\\",[50]],[[120815,120815],\\\"mapped\\\",[51]],[[120816,120816],\\\"mapped\\\",[52]],[[120817,120817],\\\"mapped\\\",[53]],[[120818,120818],\\\"mapped\\\",[54]],[[120819,120819],\\\"mapped\\\",[55]],[[120820,120820],\\\"mapped\\\",[56]],[[120821,120821],\\\"mapped\\\",[57]],[[120822,120822],\\\"mapped\\\",[48]],[[120823,120823],\\\"mapped\\\",[49]],[[120824,120824],\\\"mapped\\\",[50]],[[120825,120825],\\\"mapped\\\",[51]],[[120826,120826],\\\"mapped\\\",[52]],[[120827,120827],\\\"mapped\\\",[53]],[[120828,120828],\\\"mapped\\\",[54]],[[120829,120829],\\\"mapped\\\",[55]],[[120830,120830],\\\"mapped\\\",[56]],[[120831,120831],\\\"mapped\\\",[57]],[[120832,121343],\\\"valid\\\",[],\\\"NV8\\\"],[[121344,121398],\\\"valid\\\"],[[121399,121402],\\\"valid\\\",[],\\\"NV8\\\"],[[121403,121452],\\\"valid\\\"],[[121453,121460],\\\"valid\\\",[],\\\"NV8\\\"],[[121461,121461],\\\"valid\\\"],[[121462,121475],\\\"valid\\\",[],\\\"NV8\\\"],[[121476,121476],\\\"valid\\\"],[[121477,121483],\\\"valid\\\",[],\\\"NV8\\\"],[[121484,121498],\\\"disallowed\\\"],[[121499,121503],\\\"valid\\\"],[[121504,121504],\\\"disallowed\\\"],[[121505,121519],\\\"valid\\\"],[[121520,124927],\\\"disallowed\\\"],[[124928,125124],\\\"valid\\\"],[[125125,125126],\\\"disallowed\\\"],[[125127,125135],\\\"valid\\\",[],\\\"NV8\\\"],[[125136,125142],\\\"valid\\\"],[[125143,126463],\\\"disallowed\\\"],[[126464,126464],\\\"mapped\\\",[1575]],[[126465,126465],\\\"mapped\\\",[1576]],[[126466,126466],\\\"mapped\\\",[1580]],[[126467,126467],\\\"mapped\\\",[1583]],[[126468,126468],\\\"disallowed\\\"],[[126469,126469],\\\"mapped\\\",[1608]],[[126470,126470],\\\"mapped\\\",[1586]],[[126471,126471],\\\"mapped\\\",[1581]],[[126472,126472],\\\"mapped\\\",[1591]],[[126473,126473],\\\"mapped\\\",[1610]],[[126474,126474],\\\"mapped\\\",[1603]],[[126475,126475],\\\"mapped\\\",[1604]],[[126476,126476],\\\"mapped\\\",[1605]],[[126477,126477],\\\"mapped\\\",[1606]],[[126478,126478],\\\"mapped\\\",[1587]],[[126479,126479],\\\"mapped\\\",[1593]],[[126480,126480],\\\"mapped\\\",[1601]],[[126481,126481],\\\"mapped\\\",[1589]],[[126482,126482],\\\"mapped\\\",[1602]],[[126483,126483],\\\"mapped\\\",[1585]],[[126484,126484],\\\"mapped\\\",[1588]],[[126485,126485],\\\"mapped\\\",[1578]],[[126486,126486],\\\"mapped\\\",[1579]],[[126487,126487],\\\"mapped\\\",[1582]],[[126488,126488],\\\"mapped\\\",[1584]],[[126489,126489],\\\"mapped\\\",[1590]],[[126490,126490],\\\"mapped\\\",[1592]],[[126491,126491],\\\"mapped\\\",[1594]],[[126492,126492],\\\"mapped\\\",[1646]],[[126493,126493],\\\"mapped\\\",[1722]],[[126494,126494],\\\"mapped\\\",[1697]],[[126495,126495],\\\"mapped\\\",[1647]],[[126496,126496],\\\"disallowed\\\"],[[126497,126497],\\\"mapped\\\",[1576]],[[126498,126498],\\\"mapped\\\",[1580]],[[126499,126499],\\\"disallowed\\\"],[[126500,126500],\\\"mapped\\\",[1607]],[[126501,126502],\\\"disallowed\\\"],[[126503,126503],\\\"mapped\\\",[1581]],[[126504,126504],\\\"disallowed\\\"],[[126505,126505],\\\"mapped\\\",[1610]],[[126506,126506],\\\"mapped\\\",[1603]],[[126507,126507],\\\"mapped\\\",[1604]],[[126508,126508],\\\"mapped\\\",[1605]],[[126509,126509],\\\"mapped\\\",[1606]],[[126510,126510],\\\"mapped\\\",[1587]],[[126511,126511],\\\"mapped\\\",[1593]],[[126512,126512],\\\"mapped\\\",[1601]],[[126513,126513],\\\"mapped\\\",[1589]],[[126514,126514],\\\"mapped\\\",[1602]],[[126515,126515],\\\"disallowed\\\"],[[126516,126516],\\\"mapped\\\",[1588]],[[126517,126517],\\\"mapped\\\",[1578]],[[126518,126518],\\\"mapped\\\",[1579]],[[126519,126519],\\\"mapped\\\",[1582]],[[126520,126520],\\\"disallowed\\\"],[[126521,126521],\\\"mapped\\\",[1590]],[[126522,126522],\\\"disallowed\\\"],[[126523,126523],\\\"mapped\\\",[1594]],[[126524,126529],\\\"disallowed\\\"],[[126530,126530],\\\"mapped\\\",[1580]],[[126531,126534],\\\"disallowed\\\"],[[126535,126535],\\\"mapped\\\",[1581]],[[126536,126536],\\\"disallowed\\\"],[[126537,126537],\\\"mapped\\\",[1610]],[[126538,126538],\\\"disallowed\\\"],[[126539,126539],\\\"mapped\\\",[1604]],[[126540,126540],\\\"disallowed\\\"],[[126541,126541],\\\"mapped\\\",[1606]],[[126542,126542],\\\"mapped\\\",[1587]],[[126543,126543],\\\"mapped\\\",[1593]],[[126544,126544],\\\"disallowed\\\"],[[126545,126545],\\\"mapped\\\",[1589]],[[126546,126546],\\\"mapped\\\",[1602]],[[126547,126547],\\\"disallowed\\\"],[[126548,126548],\\\"mapped\\\",[1588]],[[126549,126550],\\\"disallowed\\\"],[[126551,126551],\\\"mapped\\\",[1582]],[[126552,126552],\\\"disallowed\\\"],[[126553,126553],\\\"mapped\\\",[1590]],[[126554,126554],\\\"disallowed\\\"],[[126555,126555],\\\"mapped\\\",[1594]],[[126556,126556],\\\"disallowed\\\"],[[126557,126557],\\\"mapped\\\",[1722]],[[126558,126558],\\\"disallowed\\\"],[[126559,126559],\\\"mapped\\\",[1647]],[[126560,126560],\\\"disallowed\\\"],[[126561,126561],\\\"mapped\\\",[1576]],[[126562,126562],\\\"mapped\\\",[1580]],[[126563,126563],\\\"disallowed\\\"],[[126564,126564],\\\"mapped\\\",[1607]],[[126565,126566],\\\"disallowed\\\"],[[126567,126567],\\\"mapped\\\",[1581]],[[126568,126568],\\\"mapped\\\",[1591]],[[126569,126569],\\\"mapped\\\",[1610]],[[126570,126570],\\\"mapped\\\",[1603]],[[126571,126571],\\\"disallowed\\\"],[[126572,126572],\\\"mapped\\\",[1605]],[[126573,126573],\\\"mapped\\\",[1606]],[[126574,126574],\\\"mapped\\\",[1587]],[[126575,126575],\\\"mapped\\\",[1593]],[[126576,126576],\\\"mapped\\\",[1601]],[[126577,126577],\\\"mapped\\\",[1589]],[[126578,126578],\\\"mapped\\\",[1602]],[[126579,126579],\\\"disallowed\\\"],[[126580,126580],\\\"mapped\\\",[1588]],[[126581,126581],\\\"mapped\\\",[1578]],[[126582,126582],\\\"mapped\\\",[1579]],[[126583,126583],\\\"mapped\\\",[1582]],[[126584,126584],\\\"disallowed\\\"],[[126585,126585],\\\"mapped\\\",[1590]],[[126586,126586],\\\"mapped\\\",[1592]],[[126587,126587],\\\"mapped\\\",[1594]],[[126588,126588],\\\"mapped\\\",[1646]],[[126589,126589],\\\"disallowed\\\"],[[126590,126590],\\\"mapped\\\",[1697]],[[126591,126591],\\\"disallowed\\\"],[[126592,126592],\\\"mapped\\\",[1575]],[[126593,126593],\\\"mapped\\\",[1576]],[[126594,126594],\\\"mapped\\\",[1580]],[[126595,126595],\\\"mapped\\\",[1583]],[[126596,126596],\\\"mapped\\\",[1607]],[[126597,126597],\\\"mapped\\\",[1608]],[[126598,126598],\\\"mapped\\\",[1586]],[[126599,126599],\\\"mapped\\\",[1581]],[[126600,126600],\\\"mapped\\\",[1591]],[[126601,126601],\\\"mapped\\\",[1610]],[[126602,126602],\\\"disallowed\\\"],[[126603,126603],\\\"mapped\\\",[1604]],[[126604,126604],\\\"mapped\\\",[1605]],[[126605,126605],\\\"mapped\\\",[1606]],[[126606,126606],\\\"mapped\\\",[1587]],[[126607,126607],\\\"mapped\\\",[1593]],[[126608,126608],\\\"mapped\\\",[1601]],[[126609,126609],\\\"mapped\\\",[1589]],[[126610,126610],\\\"mapped\\\",[1602]],[[126611,126611],\\\"mapped\\\",[1585]],[[126612,126612],\\\"mapped\\\",[1588]],[[126613,126613],\\\"mapped\\\",[1578]],[[126614,126614],\\\"mapped\\\",[1579]],[[126615,126615],\\\"mapped\\\",[1582]],[[126616,126616],\\\"mapped\\\",[1584]],[[126617,126617],\\\"mapped\\\",[1590]],[[126618,126618],\\\"mapped\\\",[1592]],[[126619,126619],\\\"mapped\\\",[1594]],[[126620,126624],\\\"disallowed\\\"],[[126625,126625],\\\"mapped\\\",[1576]],[[126626,126626],\\\"mapped\\\",[1580]],[[126627,126627],\\\"mapped\\\",[1583]],[[126628,126628],\\\"disallowed\\\"],[[126629,126629],\\\"mapped\\\",[1608]],[[126630,126630],\\\"mapped\\\",[1586]],[[126631,126631],\\\"mapped\\\",[1581]],[[126632,126632],\\\"mapped\\\",[1591]],[[126633,126633],\\\"mapped\\\",[1610]],[[126634,126634],\\\"disallowed\\\"],[[126635,126635],\\\"mapped\\\",[1604]],[[126636,126636],\\\"mapped\\\",[1605]],[[126637,126637],\\\"mapped\\\",[1606]],[[126638,126638],\\\"mapped\\\",[1587]],[[126639,126639],\\\"mapped\\\",[1593]],[[126640,126640],\\\"mapped\\\",[1601]],[[126641,126641],\\\"mapped\\\",[1589]],[[126642,126642],\\\"mapped\\\",[1602]],[[126643,126643],\\\"mapped\\\",[1585]],[[126644,126644],\\\"mapped\\\",[1588]],[[126645,126645],\\\"mapped\\\",[1578]],[[126646,126646],\\\"mapped\\\",[1579]],[[126647,126647],\\\"mapped\\\",[1582]],[[126648,126648],\\\"mapped\\\",[1584]],[[126649,126649],\\\"mapped\\\",[1590]],[[126650,126650],\\\"mapped\\\",[1592]],[[126651,126651],\\\"mapped\\\",[1594]],[[126652,126703],\\\"disallowed\\\"],[[126704,126705],\\\"valid\\\",[],\\\"NV8\\\"],[[126706,126975],\\\"disallowed\\\"],[[126976,127019],\\\"valid\\\",[],\\\"NV8\\\"],[[127020,127023],\\\"disallowed\\\"],[[127024,127123],\\\"valid\\\",[],\\\"NV8\\\"],[[127124,127135],\\\"disallowed\\\"],[[127136,127150],\\\"valid\\\",[],\\\"NV8\\\"],[[127151,127152],\\\"disallowed\\\"],[[127153,127166],\\\"valid\\\",[],\\\"NV8\\\"],[[127167,127167],\\\"valid\\\",[],\\\"NV8\\\"],[[127168,127168],\\\"disallowed\\\"],[[127169,127183],\\\"valid\\\",[],\\\"NV8\\\"],[[127184,127184],\\\"disallowed\\\"],[[127185,127199],\\\"valid\\\",[],\\\"NV8\\\"],[[127200,127221],\\\"valid\\\",[],\\\"NV8\\\"],[[127222,127231],\\\"disallowed\\\"],[[127232,127232],\\\"disallowed\\\"],[[127233,127233],\\\"disallowed_STD3_mapped\\\",[48,44]],[[127234,127234],\\\"disallowed_STD3_mapped\\\",[49,44]],[[127235,127235],\\\"disallowed_STD3_mapped\\\",[50,44]],[[127236,127236],\\\"disallowed_STD3_mapped\\\",[51,44]],[[127237,127237],\\\"disallowed_STD3_mapped\\\",[52,44]],[[127238,127238],\\\"disallowed_STD3_mapped\\\",[53,44]],[[127239,127239],\\\"disallowed_STD3_mapped\\\",[54,44]],[[127240,127240],\\\"disallowed_STD3_mapped\\\",[55,44]],[[127241,127241],\\\"disallowed_STD3_mapped\\\",[56,44]],[[127242,127242],\\\"disallowed_STD3_mapped\\\",[57,44]],[[127243,127244],\\\"valid\\\",[],\\\"NV8\\\"],[[127245,127247],\\\"disallowed\\\"],[[127248,127248],\\\"disallowed_STD3_mapped\\\",[40,97,41]],[[127249,127249],\\\"disallowed_STD3_mapped\\\",[40,98,41]],[[127250,127250],\\\"disallowed_STD3_mapped\\\",[40,99,41]],[[127251,127251],\\\"disallowed_STD3_mapped\\\",[40,100,41]],[[127252,127252],\\\"disallowed_STD3_mapped\\\",[40,101,41]],[[127253,127253],\\\"disallowed_STD3_mapped\\\",[40,102,41]],[[127254,127254],\\\"disallowed_STD3_mapped\\\",[40,103,41]],[[127255,127255],\\\"disallowed_STD3_mapped\\\",[40,104,41]],[[127256,127256],\\\"disallowed_STD3_mapped\\\",[40,105,41]],[[127257,127257],\\\"disallowed_STD3_mapped\\\",[40,106,41]],[[127258,127258],\\\"disallowed_STD3_mapped\\\",[40,107,41]],[[127259,127259],\\\"disallowed_STD3_mapped\\\",[40,108,41]],[[127260,127260],\\\"disallowed_STD3_mapped\\\",[40,109,41]],[[127261,127261],\\\"disallowed_STD3_mapped\\\",[40,110,41]],[[127262,127262],\\\"disallowed_STD3_mapped\\\",[40,111,41]],[[127263,127263],\\\"disallowed_STD3_mapped\\\",[40,112,41]],[[127264,127264],\\\"disallowed_STD3_mapped\\\",[40,113,41]],[[127265,127265],\\\"disallowed_STD3_mapped\\\",[40,114,41]],[[127266,127266],\\\"disallowed_STD3_mapped\\\",[40,115,41]],[[127267,127267],\\\"disallowed_STD3_mapped\\\",[40,116,41]],[[127268,127268],\\\"disallowed_STD3_mapped\\\",[40,117,41]],[[127269,127269],\\\"disallowed_STD3_mapped\\\",[40,118,41]],[[127270,127270],\\\"disallowed_STD3_mapped\\\",[40,119,41]],[[127271,127271],\\\"disallowed_STD3_mapped\\\",[40,120,41]],[[127272,127272],\\\"disallowed_STD3_mapped\\\",[40,121,41]],[[127273,127273],\\\"disallowed_STD3_mapped\\\",[40,122,41]],[[127274,127274],\\\"mapped\\\",[12308,115,12309]],[[127275,127275],\\\"mapped\\\",[99]],[[127276,127276],\\\"mapped\\\",[114]],[[127277,127277],\\\"mapped\\\",[99,100]],[[127278,127278],\\\"mapped\\\",[119,122]],[[127279,127279],\\\"disallowed\\\"],[[127280,127280],\\\"mapped\\\",[97]],[[127281,127281],\\\"mapped\\\",[98]],[[127282,127282],\\\"mapped\\\",[99]],[[127283,127283],\\\"mapped\\\",[100]],[[127284,127284],\\\"mapped\\\",[101]],[[127285,127285],\\\"mapped\\\",[102]],[[127286,127286],\\\"mapped\\\",[103]],[[127287,127287],\\\"mapped\\\",[104]],[[127288,127288],\\\"mapped\\\",[105]],[[127289,127289],\\\"mapped\\\",[106]],[[127290,127290],\\\"mapped\\\",[107]],[[127291,127291],\\\"mapped\\\",[108]],[[127292,127292],\\\"mapped\\\",[109]],[[127293,127293],\\\"mapped\\\",[110]],[[127294,127294],\\\"mapped\\\",[111]],[[127295,127295],\\\"mapped\\\",[112]],[[127296,127296],\\\"mapped\\\",[113]],[[127297,127297],\\\"mapped\\\",[114]],[[127298,127298],\\\"mapped\\\",[115]],[[127299,127299],\\\"mapped\\\",[116]],[[127300,127300],\\\"mapped\\\",[117]],[[127301,127301],\\\"mapped\\\",[118]],[[127302,127302],\\\"mapped\\\",[119]],[[127303,127303],\\\"mapped\\\",[120]],[[127304,127304],\\\"mapped\\\",[121]],[[127305,127305],\\\"mapped\\\",[122]],[[127306,127306],\\\"mapped\\\",[104,118]],[[127307,127307],\\\"mapped\\\",[109,118]],[[127308,127308],\\\"mapped\\\",[115,100]],[[127309,127309],\\\"mapped\\\",[115,115]],[[127310,127310],\\\"mapped\\\",[112,112,118]],[[127311,127311],\\\"mapped\\\",[119,99]],[[127312,127318],\\\"valid\\\",[],\\\"NV8\\\"],[[127319,127319],\\\"valid\\\",[],\\\"NV8\\\"],[[127320,127326],\\\"valid\\\",[],\\\"NV8\\\"],[[127327,127327],\\\"valid\\\",[],\\\"NV8\\\"],[[127328,127337],\\\"valid\\\",[],\\\"NV8\\\"],[[127338,127338],\\\"mapped\\\",[109,99]],[[127339,127339],\\\"mapped\\\",[109,100]],[[127340,127343],\\\"disallowed\\\"],[[127344,127352],\\\"valid\\\",[],\\\"NV8\\\"],[[127353,127353],\\\"valid\\\",[],\\\"NV8\\\"],[[127354,127354],\\\"valid\\\",[],\\\"NV8\\\"],[[127355,127356],\\\"valid\\\",[],\\\"NV8\\\"],[[127357,127358],\\\"valid\\\",[],\\\"NV8\\\"],[[127359,127359],\\\"valid\\\",[],\\\"NV8\\\"],[[127360,127369],\\\"valid\\\",[],\\\"NV8\\\"],[[127370,127373],\\\"valid\\\",[],\\\"NV8\\\"],[[127374,127375],\\\"valid\\\",[],\\\"NV8\\\"],[[127376,127376],\\\"mapped\\\",[100,106]],[[127377,127386],\\\"valid\\\",[],\\\"NV8\\\"],[[127387,127461],\\\"disallowed\\\"],[[127462,127487],\\\"valid\\\",[],\\\"NV8\\\"],[[127488,127488],\\\"mapped\\\",[12411,12363]],[[127489,127489],\\\"mapped\\\",[12467,12467]],[[127490,127490],\\\"mapped\\\",[12469]],[[127491,127503],\\\"disallowed\\\"],[[127504,127504],\\\"mapped\\\",[25163]],[[127505,127505],\\\"mapped\\\",[23383]],[[127506,127506],\\\"mapped\\\",[21452]],[[127507,127507],\\\"mapped\\\",[12487]],[[127508,127508],\\\"mapped\\\",[20108]],[[127509,127509],\\\"mapped\\\",[22810]],[[127510,127510],\\\"mapped\\\",[35299]],[[127511,127511],\\\"mapped\\\",[22825]],[[127512,127512],\\\"mapped\\\",[20132]],[[127513,127513],\\\"mapped\\\",[26144]],[[127514,127514],\\\"mapped\\\",[28961]],[[127515,127515],\\\"mapped\\\",[26009]],[[127516,127516],\\\"mapped\\\",[21069]],[[127517,127517],\\\"mapped\\\",[24460]],[[127518,127518],\\\"mapped\\\",[20877]],[[127519,127519],\\\"mapped\\\",[26032]],[[127520,127520],\\\"mapped\\\",[21021]],[[127521,127521],\\\"mapped\\\",[32066]],[[127522,127522],\\\"mapped\\\",[29983]],[[127523,127523],\\\"mapped\\\",[36009]],[[127524,127524],\\\"mapped\\\",[22768]],[[127525,127525],\\\"mapped\\\",[21561]],[[127526,127526],\\\"mapped\\\",[28436]],[[127527,127527],\\\"mapped\\\",[25237]],[[127528,127528],\\\"mapped\\\",[25429]],[[127529,127529],\\\"mapped\\\",[19968]],[[127530,127530],\\\"mapped\\\",[19977]],[[127531,127531],\\\"mapped\\\",[36938]],[[127532,127532],\\\"mapped\\\",[24038]],[[127533,127533],\\\"mapped\\\",[20013]],[[127534,127534],\\\"mapped\\\",[21491]],[[127535,127535],\\\"mapped\\\",[25351]],[[127536,127536],\\\"mapped\\\",[36208]],[[127537,127537],\\\"mapped\\\",[25171]],[[127538,127538],\\\"mapped\\\",[31105]],[[127539,127539],\\\"mapped\\\",[31354]],[[127540,127540],\\\"mapped\\\",[21512]],[[127541,127541],\\\"mapped\\\",[28288]],[[127542,127542],\\\"mapped\\\",[26377]],[[127543,127543],\\\"mapped\\\",[26376]],[[127544,127544],\\\"mapped\\\",[30003]],[[127545,127545],\\\"mapped\\\",[21106]],[[127546,127546],\\\"mapped\\\",[21942]],[[127547,127551],\\\"disallowed\\\"],[[127552,127552],\\\"mapped\\\",[12308,26412,12309]],[[127553,127553],\\\"mapped\\\",[12308,19977,12309]],[[127554,127554],\\\"mapped\\\",[12308,20108,12309]],[[127555,127555],\\\"mapped\\\",[12308,23433,12309]],[[127556,127556],\\\"mapped\\\",[12308,28857,12309]],[[127557,127557],\\\"mapped\\\",[12308,25171,12309]],[[127558,127558],\\\"mapped\\\",[12308,30423,12309]],[[127559,127559],\\\"mapped\\\",[12308,21213,12309]],[[127560,127560],\\\"mapped\\\",[12308,25943,12309]],[[127561,127567],\\\"disallowed\\\"],[[127568,127568],\\\"mapped\\\",[24471]],[[127569,127569],\\\"mapped\\\",[21487]],[[127570,127743],\\\"disallowed\\\"],[[127744,127776],\\\"valid\\\",[],\\\"NV8\\\"],[[127777,127788],\\\"valid\\\",[],\\\"NV8\\\"],[[127789,127791],\\\"valid\\\",[],\\\"NV8\\\"],[[127792,127797],\\\"valid\\\",[],\\\"NV8\\\"],[[127798,127798],\\\"valid\\\",[],\\\"NV8\\\"],[[127799,127868],\\\"valid\\\",[],\\\"NV8\\\"],[[127869,127869],\\\"valid\\\",[],\\\"NV8\\\"],[[127870,127871],\\\"valid\\\",[],\\\"NV8\\\"],[[127872,127891],\\\"valid\\\",[],\\\"NV8\\\"],[[127892,127903],\\\"valid\\\",[],\\\"NV8\\\"],[[127904,127940],\\\"valid\\\",[],\\\"NV8\\\"],[[127941,127941],\\\"valid\\\",[],\\\"NV8\\\"],[[127942,127946],\\\"valid\\\",[],\\\"NV8\\\"],[[127947,127950],\\\"valid\\\",[],\\\"NV8\\\"],[[127951,127955],\\\"valid\\\",[],\\\"NV8\\\"],[[127956,127967],\\\"valid\\\",[],\\\"NV8\\\"],[[127968,127984],\\\"valid\\\",[],\\\"NV8\\\"],[[127985,127991],\\\"valid\\\",[],\\\"NV8\\\"],[[127992,127999],\\\"valid\\\",[],\\\"NV8\\\"],[[128000,128062],\\\"valid\\\",[],\\\"NV8\\\"],[[128063,128063],\\\"valid\\\",[],\\\"NV8\\\"],[[128064,128064],\\\"valid\\\",[],\\\"NV8\\\"],[[128065,128065],\\\"valid\\\",[],\\\"NV8\\\"],[[128066,128247],\\\"valid\\\",[],\\\"NV8\\\"],[[128248,128248],\\\"valid\\\",[],\\\"NV8\\\"],[[128249,128252],\\\"valid\\\",[],\\\"NV8\\\"],[[128253,128254],\\\"valid\\\",[],\\\"NV8\\\"],[[128255,128255],\\\"valid\\\",[],\\\"NV8\\\"],[[128256,128317],\\\"valid\\\",[],\\\"NV8\\\"],[[128318,128319],\\\"valid\\\",[],\\\"NV8\\\"],[[128320,128323],\\\"valid\\\",[],\\\"NV8\\\"],[[128324,128330],\\\"valid\\\",[],\\\"NV8\\\"],[[128331,128335],\\\"valid\\\",[],\\\"NV8\\\"],[[128336,128359],\\\"valid\\\",[],\\\"NV8\\\"],[[128360,128377],\\\"valid\\\",[],\\\"NV8\\\"],[[128378,128378],\\\"disallowed\\\"],[[128379,128419],\\\"valid\\\",[],\\\"NV8\\\"],[[128420,128420],\\\"disallowed\\\"],[[128421,128506],\\\"valid\\\",[],\\\"NV8\\\"],[[128507,128511],\\\"valid\\\",[],\\\"NV8\\\"],[[128512,128512],\\\"valid\\\",[],\\\"NV8\\\"],[[128513,128528],\\\"valid\\\",[],\\\"NV8\\\"],[[128529,128529],\\\"valid\\\",[],\\\"NV8\\\"],[[128530,128532],\\\"valid\\\",[],\\\"NV8\\\"],[[128533,128533],\\\"valid\\\",[],\\\"NV8\\\"],[[128534,128534],\\\"valid\\\",[],\\\"NV8\\\"],[[128535,128535],\\\"valid\\\",[],\\\"NV8\\\"],[[128536,128536],\\\"valid\\\",[],\\\"NV8\\\"],[[128537,128537],\\\"valid\\\",[],\\\"NV8\\\"],[[128538,128538],\\\"valid\\\",[],\\\"NV8\\\"],[[128539,128539],\\\"valid\\\",[],\\\"NV8\\\"],[[128540,128542],\\\"valid\\\",[],\\\"NV8\\\"],[[128543,128543],\\\"valid\\\",[],\\\"NV8\\\"],[[128544,128549],\\\"valid\\\",[],\\\"NV8\\\"],[[128550,128551],\\\"valid\\\",[],\\\"NV8\\\"],[[128552,128555],\\\"valid\\\",[],\\\"NV8\\\"],[[128556,128556],\\\"valid\\\",[],\\\"NV8\\\"],[[128557,128557],\\\"valid\\\",[],\\\"NV8\\\"],[[128558,128559],\\\"valid\\\",[],\\\"NV8\\\"],[[128560,128563],\\\"valid\\\",[],\\\"NV8\\\"],[[128564,128564],\\\"valid\\\",[],\\\"NV8\\\"],[[128565,128576],\\\"valid\\\",[],\\\"NV8\\\"],[[128577,128578],\\\"valid\\\",[],\\\"NV8\\\"],[[128579,128580],\\\"valid\\\",[],\\\"NV8\\\"],[[128581,128591],\\\"valid\\\",[],\\\"NV8\\\"],[[128592,128639],\\\"valid\\\",[],\\\"NV8\\\"],[[128640,128709],\\\"valid\\\",[],\\\"NV8\\\"],[[128710,128719],\\\"valid\\\",[],\\\"NV8\\\"],[[128720,128720],\\\"valid\\\",[],\\\"NV8\\\"],[[128721,128735],\\\"disallowed\\\"],[[128736,128748],\\\"valid\\\",[],\\\"NV8\\\"],[[128749,128751],\\\"disallowed\\\"],[[128752,128755],\\\"valid\\\",[],\\\"NV8\\\"],[[128756,128767],\\\"disallowed\\\"],[[128768,128883],\\\"valid\\\",[],\\\"NV8\\\"],[[128884,128895],\\\"disallowed\\\"],[[128896,128980],\\\"valid\\\",[],\\\"NV8\\\"],[[128981,129023],\\\"disallowed\\\"],[[129024,129035],\\\"valid\\\",[],\\\"NV8\\\"],[[129036,129039],\\\"disallowed\\\"],[[129040,129095],\\\"valid\\\",[],\\\"NV8\\\"],[[129096,129103],\\\"disallowed\\\"],[[129104,129113],\\\"valid\\\",[],\\\"NV8\\\"],[[129114,129119],\\\"disallowed\\\"],[[129120,129159],\\\"valid\\\",[],\\\"NV8\\\"],[[129160,129167],\\\"disallowed\\\"],[[129168,129197],\\\"valid\\\",[],\\\"NV8\\\"],[[129198,129295],\\\"disallowed\\\"],[[129296,129304],\\\"valid\\\",[],\\\"NV8\\\"],[[129305,129407],\\\"disallowed\\\"],[[129408,129412],\\\"valid\\\",[],\\\"NV8\\\"],[[129413,129471],\\\"disallowed\\\"],[[129472,129472],\\\"valid\\\",[],\\\"NV8\\\"],[[129473,131069],\\\"disallowed\\\"],[[131070,131071],\\\"disallowed\\\"],[[131072,173782],\\\"valid\\\"],[[173783,173823],\\\"disallowed\\\"],[[173824,177972],\\\"valid\\\"],[[177973,177983],\\\"disallowed\\\"],[[177984,178205],\\\"valid\\\"],[[178206,178207],\\\"disallowed\\\"],[[178208,183969],\\\"valid\\\"],[[183970,194559],\\\"disallowed\\\"],[[194560,194560],\\\"mapped\\\",[20029]],[[194561,194561],\\\"mapped\\\",[20024]],[[194562,194562],\\\"mapped\\\",[20033]],[[194563,194563],\\\"mapped\\\",[131362]],[[194564,194564],\\\"mapped\\\",[20320]],[[194565,194565],\\\"mapped\\\",[20398]],[[194566,194566],\\\"mapped\\\",[20411]],[[194567,194567],\\\"mapped\\\",[20482]],[[194568,194568],\\\"mapped\\\",[20602]],[[194569,194569],\\\"mapped\\\",[20633]],[[194570,194570],\\\"mapped\\\",[20711]],[[194571,194571],\\\"mapped\\\",[20687]],[[194572,194572],\\\"mapped\\\",[13470]],[[194573,194573],\\\"mapped\\\",[132666]],[[194574,194574],\\\"mapped\\\",[20813]],[[194575,194575],\\\"mapped\\\",[20820]],[[194576,194576],\\\"mapped\\\",[20836]],[[194577,194577],\\\"mapped\\\",[20855]],[[194578,194578],\\\"mapped\\\",[132380]],[[194579,194579],\\\"mapped\\\",[13497]],[[194580,194580],\\\"mapped\\\",[20839]],[[194581,194581],\\\"mapped\\\",[20877]],[[194582,194582],\\\"mapped\\\",[132427]],[[194583,194583],\\\"mapped\\\",[20887]],[[194584,194584],\\\"mapped\\\",[20900]],[[194585,194585],\\\"mapped\\\",[20172]],[[194586,194586],\\\"mapped\\\",[20908]],[[194587,194587],\\\"mapped\\\",[20917]],[[194588,194588],\\\"mapped\\\",[168415]],[[194589,194589],\\\"mapped\\\",[20981]],[[194590,194590],\\\"mapped\\\",[20995]],[[194591,194591],\\\"mapped\\\",[13535]],[[194592,194592],\\\"mapped\\\",[21051]],[[194593,194593],\\\"mapped\\\",[21062]],[[194594,194594],\\\"mapped\\\",[21106]],[[194595,194595],\\\"mapped\\\",[21111]],[[194596,194596],\\\"mapped\\\",[13589]],[[194597,194597],\\\"mapped\\\",[21191]],[[194598,194598],\\\"mapped\\\",[21193]],[[194599,194599],\\\"mapped\\\",[21220]],[[194600,194600],\\\"mapped\\\",[21242]],[[194601,194601],\\\"mapped\\\",[21253]],[[194602,194602],\\\"mapped\\\",[21254]],[[194603,194603],\\\"mapped\\\",[21271]],[[194604,194604],\\\"mapped\\\",[21321]],[[194605,194605],\\\"mapped\\\",[21329]],[[194606,194606],\\\"mapped\\\",[21338]],[[194607,194607],\\\"mapped\\\",[21363]],[[194608,194608],\\\"mapped\\\",[21373]],[[194609,194611],\\\"mapped\\\",[21375]],[[194612,194612],\\\"mapped\\\",[133676]],[[194613,194613],\\\"mapped\\\",[28784]],[[194614,194614],\\\"mapped\\\",[21450]],[[194615,194615],\\\"mapped\\\",[21471]],[[194616,194616],\\\"mapped\\\",[133987]],[[194617,194617],\\\"mapped\\\",[21483]],[[194618,194618],\\\"mapped\\\",[21489]],[[194619,194619],\\\"mapped\\\",[21510]],[[194620,194620],\\\"mapped\\\",[21662]],[[194621,194621],\\\"mapped\\\",[21560]],[[194622,194622],\\\"mapped\\\",[21576]],[[194623,194623],\\\"mapped\\\",[21608]],[[194624,194624],\\\"mapped\\\",[21666]],[[194625,194625],\\\"mapped\\\",[21750]],[[194626,194626],\\\"mapped\\\",[21776]],[[194627,194627],\\\"mapped\\\",[21843]],[[194628,194628],\\\"mapped\\\",[21859]],[[194629,194630],\\\"mapped\\\",[21892]],[[194631,194631],\\\"mapped\\\",[21913]],[[194632,194632],\\\"mapped\\\",[21931]],[[194633,194633],\\\"mapped\\\",[21939]],[[194634,194634],\\\"mapped\\\",[21954]],[[194635,194635],\\\"mapped\\\",[22294]],[[194636,194636],\\\"mapped\\\",[22022]],[[194637,194637],\\\"mapped\\\",[22295]],[[194638,194638],\\\"mapped\\\",[22097]],[[194639,194639],\\\"mapped\\\",[22132]],[[194640,194640],\\\"mapped\\\",[20999]],[[194641,194641],\\\"mapped\\\",[22766]],[[194642,194642],\\\"mapped\\\",[22478]],[[194643,194643],\\\"mapped\\\",[22516]],[[194644,194644],\\\"mapped\\\",[22541]],[[194645,194645],\\\"mapped\\\",[22411]],[[194646,194646],\\\"mapped\\\",[22578]],[[194647,194647],\\\"mapped\\\",[22577]],[[194648,194648],\\\"mapped\\\",[22700]],[[194649,194649],\\\"mapped\\\",[136420]],[[194650,194650],\\\"mapped\\\",[22770]],[[194651,194651],\\\"mapped\\\",[22775]],[[194652,194652],\\\"mapped\\\",[22790]],[[194653,194653],\\\"mapped\\\",[22810]],[[194654,194654],\\\"mapped\\\",[22818]],[[194655,194655],\\\"mapped\\\",[22882]],[[194656,194656],\\\"mapped\\\",[136872]],[[194657,194657],\\\"mapped\\\",[136938]],[[194658,194658],\\\"mapped\\\",[23020]],[[194659,194659],\\\"mapped\\\",[23067]],[[194660,194660],\\\"mapped\\\",[23079]],[[194661,194661],\\\"mapped\\\",[23000]],[[194662,194662],\\\"mapped\\\",[23142]],[[194663,194663],\\\"mapped\\\",[14062]],[[194664,194664],\\\"disallowed\\\"],[[194665,194665],\\\"mapped\\\",[23304]],[[194666,194667],\\\"mapped\\\",[23358]],[[194668,194668],\\\"mapped\\\",[137672]],[[194669,194669],\\\"mapped\\\",[23491]],[[194670,194670],\\\"mapped\\\",[23512]],[[194671,194671],\\\"mapped\\\",[23527]],[[194672,194672],\\\"mapped\\\",[23539]],[[194673,194673],\\\"mapped\\\",[138008]],[[194674,194674],\\\"mapped\\\",[23551]],[[194675,194675],\\\"mapped\\\",[23558]],[[194676,194676],\\\"disallowed\\\"],[[194677,194677],\\\"mapped\\\",[23586]],[[194678,194678],\\\"mapped\\\",[14209]],[[194679,194679],\\\"mapped\\\",[23648]],[[194680,194680],\\\"mapped\\\",[23662]],[[194681,194681],\\\"mapped\\\",[23744]],[[194682,194682],\\\"mapped\\\",[23693]],[[194683,194683],\\\"mapped\\\",[138724]],[[194684,194684],\\\"mapped\\\",[23875]],[[194685,194685],\\\"mapped\\\",[138726]],[[194686,194686],\\\"mapped\\\",[23918]],[[194687,194687],\\\"mapped\\\",[23915]],[[194688,194688],\\\"mapped\\\",[23932]],[[194689,194689],\\\"mapped\\\",[24033]],[[194690,194690],\\\"mapped\\\",[24034]],[[194691,194691],\\\"mapped\\\",[14383]],[[194692,194692],\\\"mapped\\\",[24061]],[[194693,194693],\\\"mapped\\\",[24104]],[[194694,194694],\\\"mapped\\\",[24125]],[[194695,194695],\\\"mapped\\\",[24169]],[[194696,194696],\\\"mapped\\\",[14434]],[[194697,194697],\\\"mapped\\\",[139651]],[[194698,194698],\\\"mapped\\\",[14460]],[[194699,194699],\\\"mapped\\\",[24240]],[[194700,194700],\\\"mapped\\\",[24243]],[[194701,194701],\\\"mapped\\\",[24246]],[[194702,194702],\\\"mapped\\\",[24266]],[[194703,194703],\\\"mapped\\\",[172946]],[[194704,194704],\\\"mapped\\\",[24318]],[[194705,194706],\\\"mapped\\\",[140081]],[[194707,194707],\\\"mapped\\\",[33281]],[[194708,194709],\\\"mapped\\\",[24354]],[[194710,194710],\\\"mapped\\\",[14535]],[[194711,194711],\\\"mapped\\\",[144056]],[[194712,194712],\\\"mapped\\\",[156122]],[[194713,194713],\\\"mapped\\\",[24418]],[[194714,194714],\\\"mapped\\\",[24427]],[[194715,194715],\\\"mapped\\\",[14563]],[[194716,194716],\\\"mapped\\\",[24474]],[[194717,194717],\\\"mapped\\\",[24525]],[[194718,194718],\\\"mapped\\\",[24535]],[[194719,194719],\\\"mapped\\\",[24569]],[[194720,194720],\\\"mapped\\\",[24705]],[[194721,194721],\\\"mapped\\\",[14650]],[[194722,194722],\\\"mapped\\\",[14620]],[[194723,194723],\\\"mapped\\\",[24724]],[[194724,194724],\\\"mapped\\\",[141012]],[[194725,194725],\\\"mapped\\\",[24775]],[[194726,194726],\\\"mapped\\\",[24904]],[[194727,194727],\\\"mapped\\\",[24908]],[[194728,194728],\\\"mapped\\\",[24910]],[[194729,194729],\\\"mapped\\\",[24908]],[[194730,194730],\\\"mapped\\\",[24954]],[[194731,194731],\\\"mapped\\\",[24974]],[[194732,194732],\\\"mapped\\\",[25010]],[[194733,194733],\\\"mapped\\\",[24996]],[[194734,194734],\\\"mapped\\\",[25007]],[[194735,194735],\\\"mapped\\\",[25054]],[[194736,194736],\\\"mapped\\\",[25074]],[[194737,194737],\\\"mapped\\\",[25078]],[[194738,194738],\\\"mapped\\\",[25104]],[[194739,194739],\\\"mapped\\\",[25115]],[[194740,194740],\\\"mapped\\\",[25181]],[[194741,194741],\\\"mapped\\\",[25265]],[[194742,194742],\\\"mapped\\\",[25300]],[[194743,194743],\\\"mapped\\\",[25424]],[[194744,194744],\\\"mapped\\\",[142092]],[[194745,194745],\\\"mapped\\\",[25405]],[[194746,194746],\\\"mapped\\\",[25340]],[[194747,194747],\\\"mapped\\\",[25448]],[[194748,194748],\\\"mapped\\\",[25475]],[[194749,194749],\\\"mapped\\\",[25572]],[[194750,194750],\\\"mapped\\\",[142321]],[[194751,194751],\\\"mapped\\\",[25634]],[[194752,194752],\\\"mapped\\\",[25541]],[[194753,194753],\\\"mapped\\\",[25513]],[[194754,194754],\\\"mapped\\\",[14894]],[[194755,194755],\\\"mapped\\\",[25705]],[[194756,194756],\\\"mapped\\\",[25726]],[[194757,194757],\\\"mapped\\\",[25757]],[[194758,194758],\\\"mapped\\\",[25719]],[[194759,194759],\\\"mapped\\\",[14956]],[[194760,194760],\\\"mapped\\\",[25935]],[[194761,194761],\\\"mapped\\\",[25964]],[[194762,194762],\\\"mapped\\\",[143370]],[[194763,194763],\\\"mapped\\\",[26083]],[[194764,194764],\\\"mapped\\\",[26360]],[[194765,194765],\\\"mapped\\\",[26185]],[[194766,194766],\\\"mapped\\\",[15129]],[[194767,194767],\\\"mapped\\\",[26257]],[[194768,194768],\\\"mapped\\\",[15112]],[[194769,194769],\\\"mapped\\\",[15076]],[[194770,194770],\\\"mapped\\\",[20882]],[[194771,194771],\\\"mapped\\\",[20885]],[[194772,194772],\\\"mapped\\\",[26368]],[[194773,194773],\\\"mapped\\\",[26268]],[[194774,194774],\\\"mapped\\\",[32941]],[[194775,194775],\\\"mapped\\\",[17369]],[[194776,194776],\\\"mapped\\\",[26391]],[[194777,194777],\\\"mapped\\\",[26395]],[[194778,194778],\\\"mapped\\\",[26401]],[[194779,194779],\\\"mapped\\\",[26462]],[[194780,194780],\\\"mapped\\\",[26451]],[[194781,194781],\\\"mapped\\\",[144323]],[[194782,194782],\\\"mapped\\\",[15177]],[[194783,194783],\\\"mapped\\\",[26618]],[[194784,194784],\\\"mapped\\\",[26501]],[[194785,194785],\\\"mapped\\\",[26706]],[[194786,194786],\\\"mapped\\\",[26757]],[[194787,194787],\\\"mapped\\\",[144493]],[[194788,194788],\\\"mapped\\\",[26766]],[[194789,194789],\\\"mapped\\\",[26655]],[[194790,194790],\\\"mapped\\\",[26900]],[[194791,194791],\\\"mapped\\\",[15261]],[[194792,194792],\\\"mapped\\\",[26946]],[[194793,194793],\\\"mapped\\\",[27043]],[[194794,194794],\\\"mapped\\\",[27114]],[[194795,194795],\\\"mapped\\\",[27304]],[[194796,194796],\\\"mapped\\\",[145059]],[[194797,194797],\\\"mapped\\\",[27355]],[[194798,194798],\\\"mapped\\\",[15384]],[[194799,194799],\\\"mapped\\\",[27425]],[[194800,194800],\\\"mapped\\\",[145575]],[[194801,194801],\\\"mapped\\\",[27476]],[[194802,194802],\\\"mapped\\\",[15438]],[[194803,194803],\\\"mapped\\\",[27506]],[[194804,194804],\\\"mapped\\\",[27551]],[[194805,194805],\\\"mapped\\\",[27578]],[[194806,194806],\\\"mapped\\\",[27579]],[[194807,194807],\\\"mapped\\\",[146061]],[[194808,194808],\\\"mapped\\\",[138507]],[[194809,194809],\\\"mapped\\\",[146170]],[[194810,194810],\\\"mapped\\\",[27726]],[[194811,194811],\\\"mapped\\\",[146620]],[[194812,194812],\\\"mapped\\\",[27839]],[[194813,194813],\\\"mapped\\\",[27853]],[[194814,194814],\\\"mapped\\\",[27751]],[[194815,194815],\\\"mapped\\\",[27926]],[[194816,194816],\\\"mapped\\\",[27966]],[[194817,194817],\\\"mapped\\\",[28023]],[[194818,194818],\\\"mapped\\\",[27969]],[[194819,194819],\\\"mapped\\\",[28009]],[[194820,194820],\\\"mapped\\\",[28024]],[[194821,194821],\\\"mapped\\\",[28037]],[[194822,194822],\\\"mapped\\\",[146718]],[[194823,194823],\\\"mapped\\\",[27956]],[[194824,194824],\\\"mapped\\\",[28207]],[[194825,194825],\\\"mapped\\\",[28270]],[[194826,194826],\\\"mapped\\\",[15667]],[[194827,194827],\\\"mapped\\\",[28363]],[[194828,194828],\\\"mapped\\\",[28359]],[[194829,194829],\\\"mapped\\\",[147153]],[[194830,194830],\\\"mapped\\\",[28153]],[[194831,194831],\\\"mapped\\\",[28526]],[[194832,194832],\\\"mapped\\\",[147294]],[[194833,194833],\\\"mapped\\\",[147342]],[[194834,194834],\\\"mapped\\\",[28614]],[[194835,194835],\\\"mapped\\\",[28729]],[[194836,194836],\\\"mapped\\\",[28702]],[[194837,194837],\\\"mapped\\\",[28699]],[[194838,194838],\\\"mapped\\\",[15766]],[[194839,194839],\\\"mapped\\\",[28746]],[[194840,194840],\\\"mapped\\\",[28797]],[[194841,194841],\\\"mapped\\\",[28791]],[[194842,194842],\\\"mapped\\\",[28845]],[[194843,194843],\\\"mapped\\\",[132389]],[[194844,194844],\\\"mapped\\\",[28997]],[[194845,194845],\\\"mapped\\\",[148067]],[[194846,194846],\\\"mapped\\\",[29084]],[[194847,194847],\\\"disallowed\\\"],[[194848,194848],\\\"mapped\\\",[29224]],[[194849,194849],\\\"mapped\\\",[29237]],[[194850,194850],\\\"mapped\\\",[29264]],[[194851,194851],\\\"mapped\\\",[149000]],[[194852,194852],\\\"mapped\\\",[29312]],[[194853,194853],\\\"mapped\\\",[29333]],[[194854,194854],\\\"mapped\\\",[149301]],[[194855,194855],\\\"mapped\\\",[149524]],[[194856,194856],\\\"mapped\\\",[29562]],[[194857,194857],\\\"mapped\\\",[29579]],[[194858,194858],\\\"mapped\\\",[16044]],[[194859,194859],\\\"mapped\\\",[29605]],[[194860,194861],\\\"mapped\\\",[16056]],[[194862,194862],\\\"mapped\\\",[29767]],[[194863,194863],\\\"mapped\\\",[29788]],[[194864,194864],\\\"mapped\\\",[29809]],[[194865,194865],\\\"mapped\\\",[29829]],[[194866,194866],\\\"mapped\\\",[29898]],[[194867,194867],\\\"mapped\\\",[16155]],[[194868,194868],\\\"mapped\\\",[29988]],[[194869,194869],\\\"mapped\\\",[150582]],[[194870,194870],\\\"mapped\\\",[30014]],[[194871,194871],\\\"mapped\\\",[150674]],[[194872,194872],\\\"mapped\\\",[30064]],[[194873,194873],\\\"mapped\\\",[139679]],[[194874,194874],\\\"mapped\\\",[30224]],[[194875,194875],\\\"mapped\\\",[151457]],[[194876,194876],\\\"mapped\\\",[151480]],[[194877,194877],\\\"mapped\\\",[151620]],[[194878,194878],\\\"mapped\\\",[16380]],[[194879,194879],\\\"mapped\\\",[16392]],[[194880,194880],\\\"mapped\\\",[30452]],[[194881,194881],\\\"mapped\\\",[151795]],[[194882,194882],\\\"mapped\\\",[151794]],[[194883,194883],\\\"mapped\\\",[151833]],[[194884,194884],\\\"mapped\\\",[151859]],[[194885,194885],\\\"mapped\\\",[30494]],[[194886,194887],\\\"mapped\\\",[30495]],[[194888,194888],\\\"mapped\\\",[30538]],[[194889,194889],\\\"mapped\\\",[16441]],[[194890,194890],\\\"mapped\\\",[30603]],[[194891,194891],\\\"mapped\\\",[16454]],[[194892,194892],\\\"mapped\\\",[16534]],[[194893,194893],\\\"mapped\\\",[152605]],[[194894,194894],\\\"mapped\\\",[30798]],[[194895,194895],\\\"mapped\\\",[30860]],[[194896,194896],\\\"mapped\\\",[30924]],[[194897,194897],\\\"mapped\\\",[16611]],[[194898,194898],\\\"mapped\\\",[153126]],[[194899,194899],\\\"mapped\\\",[31062]],[[194900,194900],\\\"mapped\\\",[153242]],[[194901,194901],\\\"mapped\\\",[153285]],[[194902,194902],\\\"mapped\\\",[31119]],[[194903,194903],\\\"mapped\\\",[31211]],[[194904,194904],\\\"mapped\\\",[16687]],[[194905,194905],\\\"mapped\\\",[31296]],[[194906,194906],\\\"mapped\\\",[31306]],[[194907,194907],\\\"mapped\\\",[31311]],[[194908,194908],\\\"mapped\\\",[153980]],[[194909,194910],\\\"mapped\\\",[154279]],[[194911,194911],\\\"disallowed\\\"],[[194912,194912],\\\"mapped\\\",[16898]],[[194913,194913],\\\"mapped\\\",[154539]],[[194914,194914],\\\"mapped\\\",[31686]],[[194915,194915],\\\"mapped\\\",[31689]],[[194916,194916],\\\"mapped\\\",[16935]],[[194917,194917],\\\"mapped\\\",[154752]],[[194918,194918],\\\"mapped\\\",[31954]],[[194919,194919],\\\"mapped\\\",[17056]],[[194920,194920],\\\"mapped\\\",[31976]],[[194921,194921],\\\"mapped\\\",[31971]],[[194922,194922],\\\"mapped\\\",[32000]],[[194923,194923],\\\"mapped\\\",[155526]],[[194924,194924],\\\"mapped\\\",[32099]],[[194925,194925],\\\"mapped\\\",[17153]],[[194926,194926],\\\"mapped\\\",[32199]],[[194927,194927],\\\"mapped\\\",[32258]],[[194928,194928],\\\"mapped\\\",[32325]],[[194929,194929],\\\"mapped\\\",[17204]],[[194930,194930],\\\"mapped\\\",[156200]],[[194931,194931],\\\"mapped\\\",[156231]],[[194932,194932],\\\"mapped\\\",[17241]],[[194933,194933],\\\"mapped\\\",[156377]],[[194934,194934],\\\"mapped\\\",[32634]],[[194935,194935],\\\"mapped\\\",[156478]],[[194936,194936],\\\"mapped\\\",[32661]],[[194937,194937],\\\"mapped\\\",[32762]],[[194938,194938],\\\"mapped\\\",[32773]],[[194939,194939],\\\"mapped\\\",[156890]],[[194940,194940],\\\"mapped\\\",[156963]],[[194941,194941],\\\"mapped\\\",[32864]],[[194942,194942],\\\"mapped\\\",[157096]],[[194943,194943],\\\"mapped\\\",[32880]],[[194944,194944],\\\"mapped\\\",[144223]],[[194945,194945],\\\"mapped\\\",[17365]],[[194946,194946],\\\"mapped\\\",[32946]],[[194947,194947],\\\"mapped\\\",[33027]],[[194948,194948],\\\"mapped\\\",[17419]],[[194949,194949],\\\"mapped\\\",[33086]],[[194950,194950],\\\"mapped\\\",[23221]],[[194951,194951],\\\"mapped\\\",[157607]],[[194952,194952],\\\"mapped\\\",[157621]],[[194953,194953],\\\"mapped\\\",[144275]],[[194954,194954],\\\"mapped\\\",[144284]],[[194955,194955],\\\"mapped\\\",[33281]],[[194956,194956],\\\"mapped\\\",[33284]],[[194957,194957],\\\"mapped\\\",[36766]],[[194958,194958],\\\"mapped\\\",[17515]],[[194959,194959],\\\"mapped\\\",[33425]],[[194960,194960],\\\"mapped\\\",[33419]],[[194961,194961],\\\"mapped\\\",[33437]],[[194962,194962],\\\"mapped\\\",[21171]],[[194963,194963],\\\"mapped\\\",[33457]],[[194964,194964],\\\"mapped\\\",[33459]],[[194965,194965],\\\"mapped\\\",[33469]],[[194966,194966],\\\"mapped\\\",[33510]],[[194967,194967],\\\"mapped\\\",[158524]],[[194968,194968],\\\"mapped\\\",[33509]],[[194969,194969],\\\"mapped\\\",[33565]],[[194970,194970],\\\"mapped\\\",[33635]],[[194971,194971],\\\"mapped\\\",[33709]],[[194972,194972],\\\"mapped\\\",[33571]],[[194973,194973],\\\"mapped\\\",[33725]],[[194974,194974],\\\"mapped\\\",[33767]],[[194975,194975],\\\"mapped\\\",[33879]],[[194976,194976],\\\"mapped\\\",[33619]],[[194977,194977],\\\"mapped\\\",[33738]],[[194978,194978],\\\"mapped\\\",[33740]],[[194979,194979],\\\"mapped\\\",[33756]],[[194980,194980],\\\"mapped\\\",[158774]],[[194981,194981],\\\"mapped\\\",[159083]],[[194982,194982],\\\"mapped\\\",[158933]],[[194983,194983],\\\"mapped\\\",[17707]],[[194984,194984],\\\"mapped\\\",[34033]],[[194985,194985],\\\"mapped\\\",[34035]],[[194986,194986],\\\"mapped\\\",[34070]],[[194987,194987],\\\"mapped\\\",[160714]],[[194988,194988],\\\"mapped\\\",[34148]],[[194989,194989],\\\"mapped\\\",[159532]],[[194990,194990],\\\"mapped\\\",[17757]],[[194991,194991],\\\"mapped\\\",[17761]],[[194992,194992],\\\"mapped\\\",[159665]],[[194993,194993],\\\"mapped\\\",[159954]],[[194994,194994],\\\"mapped\\\",[17771]],[[194995,194995],\\\"mapped\\\",[34384]],[[194996,194996],\\\"mapped\\\",[34396]],[[194997,194997],\\\"mapped\\\",[34407]],[[194998,194998],\\\"mapped\\\",[34409]],[[194999,194999],\\\"mapped\\\",[34473]],[[195000,195000],\\\"mapped\\\",[34440]],[[195001,195001],\\\"mapped\\\",[34574]],[[195002,195002],\\\"mapped\\\",[34530]],[[195003,195003],\\\"mapped\\\",[34681]],[[195004,195004],\\\"mapped\\\",[34600]],[[195005,195005],\\\"mapped\\\",[34667]],[[195006,195006],\\\"mapped\\\",[34694]],[[195007,195007],\\\"disallowed\\\"],[[195008,195008],\\\"mapped\\\",[34785]],[[195009,195009],\\\"mapped\\\",[34817]],[[195010,195010],\\\"mapped\\\",[17913]],[[195011,195011],\\\"mapped\\\",[34912]],[[195012,195012],\\\"mapped\\\",[34915]],[[195013,195013],\\\"mapped\\\",[161383]],[[195014,195014],\\\"mapped\\\",[35031]],[[195015,195015],\\\"mapped\\\",[35038]],[[195016,195016],\\\"mapped\\\",[17973]],[[195017,195017],\\\"mapped\\\",[35066]],[[195018,195018],\\\"mapped\\\",[13499]],[[195019,195019],\\\"mapped\\\",[161966]],[[195020,195020],\\\"mapped\\\",[162150]],[[195021,195021],\\\"mapped\\\",[18110]],[[195022,195022],\\\"mapped\\\",[18119]],[[195023,195023],\\\"mapped\\\",[35488]],[[195024,195024],\\\"mapped\\\",[35565]],[[195025,195025],\\\"mapped\\\",[35722]],[[195026,195026],\\\"mapped\\\",[35925]],[[195027,195027],\\\"mapped\\\",[162984]],[[195028,195028],\\\"mapped\\\",[36011]],[[195029,195029],\\\"mapped\\\",[36033]],[[195030,195030],\\\"mapped\\\",[36123]],[[195031,195031],\\\"mapped\\\",[36215]],[[195032,195032],\\\"mapped\\\",[163631]],[[195033,195033],\\\"mapped\\\",[133124]],[[195034,195034],\\\"mapped\\\",[36299]],[[195035,195035],\\\"mapped\\\",[36284]],[[195036,195036],\\\"mapped\\\",[36336]],[[195037,195037],\\\"mapped\\\",[133342]],[[195038,195038],\\\"mapped\\\",[36564]],[[195039,195039],\\\"mapped\\\",[36664]],[[195040,195040],\\\"mapped\\\",[165330]],[[195041,195041],\\\"mapped\\\",[165357]],[[195042,195042],\\\"mapped\\\",[37012]],[[195043,195043],\\\"mapped\\\",[37105]],[[195044,195044],\\\"mapped\\\",[37137]],[[195045,195045],\\\"mapped\\\",[165678]],[[195046,195046],\\\"mapped\\\",[37147]],[[195047,195047],\\\"mapped\\\",[37432]],[[195048,195048],\\\"mapped\\\",[37591]],[[195049,195049],\\\"mapped\\\",[37592]],[[195050,195050],\\\"mapped\\\",[37500]],[[195051,195051],\\\"mapped\\\",[37881]],[[195052,195052],\\\"mapped\\\",[37909]],[[195053,195053],\\\"mapped\\\",[166906]],[[195054,195054],\\\"mapped\\\",[38283]],[[195055,195055],\\\"mapped\\\",[18837]],[[195056,195056],\\\"mapped\\\",[38327]],[[195057,195057],\\\"mapped\\\",[167287]],[[195058,195058],\\\"mapped\\\",[18918]],[[195059,195059],\\\"mapped\\\",[38595]],[[195060,195060],\\\"mapped\\\",[23986]],[[195061,195061],\\\"mapped\\\",[38691]],[[195062,195062],\\\"mapped\\\",[168261]],[[195063,195063],\\\"mapped\\\",[168474]],[[195064,195064],\\\"mapped\\\",[19054]],[[195065,195065],\\\"mapped\\\",[19062]],[[195066,195066],\\\"mapped\\\",[38880]],[[195067,195067],\\\"mapped\\\",[168970]],[[195068,195068],\\\"mapped\\\",[19122]],[[195069,195069],\\\"mapped\\\",[169110]],[[195070,195071],\\\"mapped\\\",[38923]],[[195072,195072],\\\"mapped\\\",[38953]],[[195073,195073],\\\"mapped\\\",[169398]],[[195074,195074],\\\"mapped\\\",[39138]],[[195075,195075],\\\"mapped\\\",[19251]],[[195076,195076],\\\"mapped\\\",[39209]],[[195077,195077],\\\"mapped\\\",[39335]],[[195078,195078],\\\"mapped\\\",[39362]],[[195079,195079],\\\"mapped\\\",[39422]],[[195080,195080],\\\"mapped\\\",[19406]],[[195081,195081],\\\"mapped\\\",[170800]],[[195082,195082],\\\"mapped\\\",[39698]],[[195083,195083],\\\"mapped\\\",[40000]],[[195084,195084],\\\"mapped\\\",[40189]],[[195085,195085],\\\"mapped\\\",[19662]],[[195086,195086],\\\"mapped\\\",[19693]],[[195087,195087],\\\"mapped\\\",[40295]],[[195088,195088],\\\"mapped\\\",[172238]],[[195089,195089],\\\"mapped\\\",[19704]],[[195090,195090],\\\"mapped\\\",[172293]],[[195091,195091],\\\"mapped\\\",[172558]],[[195092,195092],\\\"mapped\\\",[172689]],[[195093,195093],\\\"mapped\\\",[40635]],[[195094,195094],\\\"mapped\\\",[19798]],[[195095,195095],\\\"mapped\\\",[40697]],[[195096,195096],\\\"mapped\\\",[40702]],[[195097,195097],\\\"mapped\\\",[40709]],[[195098,195098],\\\"mapped\\\",[40719]],[[195099,195099],\\\"mapped\\\",[40726]],[[195100,195100],\\\"mapped\\\",[40763]],[[195101,195101],\\\"mapped\\\",[173568]],[[195102,196605],\\\"disallowed\\\"],[[196606,196607],\\\"disallowed\\\"],[[196608,262141],\\\"disallowed\\\"],[[262142,262143],\\\"disallowed\\\"],[[262144,327677],\\\"disallowed\\\"],[[327678,327679],\\\"disallowed\\\"],[[327680,393213],\\\"disallowed\\\"],[[393214,393215],\\\"disallowed\\\"],[[393216,458749],\\\"disallowed\\\"],[[458750,458751],\\\"disallowed\\\"],[[458752,524285],\\\"disallowed\\\"],[[524286,524287],\\\"disallowed\\\"],[[524288,589821],\\\"disallowed\\\"],[[589822,589823],\\\"disallowed\\\"],[[589824,655357],\\\"disallowed\\\"],[[655358,655359],\\\"disallowed\\\"],[[655360,720893],\\\"disallowed\\\"],[[720894,720895],\\\"disallowed\\\"],[[720896,786429],\\\"disallowed\\\"],[[786430,786431],\\\"disallowed\\\"],[[786432,851965],\\\"disallowed\\\"],[[851966,851967],\\\"disallowed\\\"],[[851968,917501],\\\"disallowed\\\"],[[917502,917503],\\\"disallowed\\\"],[[917504,917504],\\\"disallowed\\\"],[[917505,917505],\\\"disallowed\\\"],[[917506,917535],\\\"disallowed\\\"],[[917536,917631],\\\"disallowed\\\"],[[917632,917759],\\\"disallowed\\\"],[[917760,917999],\\\"ignored\\\"],[[918000,983037],\\\"disallowed\\\"],[[983038,983039],\\\"disallowed\\\"],[[983040,1048573],\\\"disallowed\\\"],[[1048574,1048575],\\\"disallowed\\\"],[[1048576,1114109],\\\"disallowed\\\"],[[1114110,1114111],\\\"disallowed\\\"]]\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdHI0Ni9saWIvbWFwcGluZ1RhYmxlLmpzb24uanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/tr46/lib/mappingTable.json\n");

/***/ }),

/***/ "../../node_modules/tslib/tslib.js":
/*!**************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/tslib/tslib.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (exports) { factory(createExporter(root, createExporter(exports))); }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    }\r\n    else {}\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/tslib/tslib.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/index.js":
/*!******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v1.js */ \"../../node_modules/uuid/dist/v1.js\"));\n\nvar _v2 = _interopRequireDefault(__webpack_require__(/*! ./v3.js */ \"../../node_modules/uuid/dist/v3.js\"));\n\nvar _v3 = _interopRequireDefault(__webpack_require__(/*! ./v4.js */ \"../../node_modules/uuid/dist/v4.js\"));\n\nvar _v4 = _interopRequireDefault(__webpack_require__(/*! ./v5.js */ \"../../node_modules/uuid/dist/v5.js\"));\n\nvar _nil = _interopRequireDefault(__webpack_require__(/*! ./nil.js */ \"../../node_modules/uuid/dist/nil.js\"));\n\nvar _version = _interopRequireDefault(__webpack_require__(/*! ./version.js */ \"../../node_modules/uuid/dist/version.js\"));\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"../../node_modules/uuid/dist/validate.js\"));\n\nvar _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ \"../../node_modules/uuid/dist/stringify.js\"));\n\nvar _parse = _interopRequireDefault(__webpack_require__(/*! ./parse.js */ \"../../node_modules/uuid/dist/parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9pbmRleC5qcz81ZmVjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELGdDQUFnQyxtQkFBTyxDQUFDLG1EQUFTOztBQUVqRCxpQ0FBaUMsbUJBQU8sQ0FBQyxtREFBUzs7QUFFbEQsaUNBQWlDLG1CQUFPLENBQUMsbURBQVM7O0FBRWxELGlDQUFpQyxtQkFBTyxDQUFDLG1EQUFTOztBQUVsRCxrQ0FBa0MsbUJBQU8sQ0FBQyxxREFBVTs7QUFFcEQsc0NBQXNDLG1CQUFPLENBQUMsNkRBQWM7O0FBRTVELHVDQUF1QyxtQkFBTyxDQUFDLCtEQUFlOztBQUU5RCx3Q0FBd0MsbUJBQU8sQ0FBQyxpRUFBZ0I7O0FBRWhFLG9DQUFvQyxtQkFBTyxDQUFDLHlEQUFZOztBQUV4RCxzQ0FBc0MsdUNBQXVDLGdCQUFnQiIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2MVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInYzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92Mi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInY0XCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92My5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInY1XCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92NC5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5JTFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfbmlsLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidmVyc2lvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdmVyc2lvbi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInZhbGlkYXRlXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92YWxpZGF0ZS5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInN0cmluZ2lmeVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc3RyaW5naWZ5LmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3BhcnNlLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG52YXIgX3YgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3YxLmpzXCIpKTtcblxudmFyIF92MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdjMuanNcIikpO1xuXG52YXIgX3YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92NC5qc1wiKSk7XG5cbnZhciBfdjQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Y1LmpzXCIpKTtcblxudmFyIF9uaWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL25pbC5qc1wiKSk7XG5cbnZhciBfdmVyc2lvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmVyc2lvbi5qc1wiKSk7XG5cbnZhciBfdmFsaWRhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZhbGlkYXRlLmpzXCIpKTtcblxudmFyIF9zdHJpbmdpZnkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3N0cmluZ2lmeS5qc1wiKSk7XG5cbnZhciBfcGFyc2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3BhcnNlLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/index.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/md5.js":
/*!****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/md5.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ \"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9tZDUuanM/NWNkNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHFDQUFxQyxtQkFBTyxDQUFDLHNCQUFROztBQUVyRCxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvbWQ1LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfY3J5cHRvID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiY3J5cHRvXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gbWQ1KGJ5dGVzKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIGJ5dGVzID0gQnVmZmVyLmZyb20oYnl0ZXMpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBieXRlcyA9PT0gJ3N0cmluZycpIHtcbiAgICBieXRlcyA9IEJ1ZmZlci5mcm9tKGJ5dGVzLCAndXRmOCcpO1xuICB9XG5cbiAgcmV0dXJuIF9jcnlwdG8uZGVmYXVsdC5jcmVhdGVIYXNoKCdtZDUnKS51cGRhdGUoYnl0ZXMpLmRpZ2VzdCgpO1xufVxuXG52YXIgX2RlZmF1bHQgPSBtZDU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/md5.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/nil.js":
/*!****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/nil.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9uaWwuanM/YTA0MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L25pbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9kZWZhdWx0ID0gJzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCc7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/nil.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/parse.js":
/*!******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/parse.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"../../node_modules/uuid/dist/validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9wYXJzZS5qcz81ZDA0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsdUNBQXVDLG1CQUFPLENBQUMsK0RBQWU7O0FBRTlELHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlDQUFpQzs7QUFFakM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9COztBQUVwQjtBQUNBLG9CQUFvQjs7QUFFcEI7QUFDQSxvQkFBb0I7O0FBRXBCO0FBQ0Esb0JBQW9CO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3BhcnNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfdmFsaWRhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZhbGlkYXRlLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcGFyc2UodXVpZCkge1xuICBpZiAoISgwLCBfdmFsaWRhdGUuZGVmYXVsdCkodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgbGV0IHY7XG4gIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDE2KTsgLy8gUGFyc2UgIyMjIyMjIyMtLi4uLi0uLi4uLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDAsIDgpLCAxNikpID4+PiAyNDtcbiAgYXJyWzFdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMl0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzNdID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLSMjIyMtLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFycls0XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSg5LCAxMyksIDE2KSkgPj4+IDg7XG4gIGFycls1XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLSMjIyMtLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNl0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTQsIDE4KSwgMTYpKSA+Pj4gODtcbiAgYXJyWzddID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0jIyMjLS4uLi4uLi4uLi4uLlxuXG4gIGFycls4XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxOSwgMjMpLCAxNikpID4+PiA4O1xuICBhcnJbOV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0uLi4uLS4uLi4tIyMjIyMjIyMjIyMjXG4gIC8vIChVc2UgXCIvXCIgdG8gYXZvaWQgMzItYml0IHRydW5jYXRpb24gd2hlbiBiaXQtc2hpZnRpbmcgaGlnaC1vcmRlciBieXRlcylcblxuICBhcnJbMTBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDI0LCAzNiksIDE2KSkgLyAweDEwMDAwMDAwMDAwICYgMHhmZjtcbiAgYXJyWzExXSA9IHYgLyAweDEwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMl0gPSB2ID4+PiAyNCAmIDB4ZmY7XG4gIGFyclsxM10gPSB2ID4+PiAxNiAmIDB4ZmY7XG4gIGFyclsxNF0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzE1XSA9IHYgJiAweGZmO1xuICByZXR1cm4gYXJyO1xufVxuXG52YXIgX2RlZmF1bHQgPSBwYXJzZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/parse.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/regex.js":
/*!******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/regex.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9yZWdleC5qcz85OGFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw2QkFBNkIsRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLFVBQVUsR0FBRztBQUMzRiIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3JlZ2V4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX2RlZmF1bHQgPSAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/regex.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/rng.js":
/*!****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/rng.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ \"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9ybmcuanM/ODhjYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHFDQUFxQyxtQkFBTyxDQUFDLHNCQUFROztBQUVyRCxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Ysc0NBQXNDOztBQUV0Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3Qvcm5nLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBybmc7XG5cbnZhciBfY3J5cHRvID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiY3J5cHRvXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuY29uc3Qgcm5kczhQb29sID0gbmV3IFVpbnQ4QXJyYXkoMjU2KTsgLy8gIyBvZiByYW5kb20gdmFsdWVzIHRvIHByZS1hbGxvY2F0ZVxuXG5sZXQgcG9vbFB0ciA9IHJuZHM4UG9vbC5sZW5ndGg7XG5cbmZ1bmN0aW9uIHJuZygpIHtcbiAgaWYgKHBvb2xQdHIgPiBybmRzOFBvb2wubGVuZ3RoIC0gMTYpIHtcbiAgICBfY3J5cHRvLmRlZmF1bHQucmFuZG9tRmlsbFN5bmMocm5kczhQb29sKTtcblxuICAgIHBvb2xQdHIgPSAwO1xuICB9XG5cbiAgcmV0dXJuIHJuZHM4UG9vbC5zbGljZShwb29sUHRyLCBwb29sUHRyICs9IDE2KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/rng.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/sha1.js":
/*!*****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/sha1.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ \"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9zaGExLmpzPzE3YTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQSxxQ0FBcUMsbUJBQU8sQ0FBQyxzQkFBUTs7QUFFckQsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3NoYTEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9jcnlwdG8gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjcnlwdG9cIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBzaGExKGJ5dGVzKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIGJ5dGVzID0gQnVmZmVyLmZyb20oYnl0ZXMpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBieXRlcyA9PT0gJ3N0cmluZycpIHtcbiAgICBieXRlcyA9IEJ1ZmZlci5mcm9tKGJ5dGVzLCAndXRmOCcpO1xuICB9XG5cbiAgcmV0dXJuIF9jcnlwdG8uZGVmYXVsdC5jcmVhdGVIYXNoKCdzaGExJykudXBkYXRlKGJ5dGVzKS5kaWdlc3QoKTtcbn1cblxudmFyIF9kZWZhdWx0ID0gc2hhMTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/sha1.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/stringify.js":
/*!**********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/stringify.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"../../node_modules/uuid/dist/validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9zdHJpbmdpZnkuanM/NDFkMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHVDQUF1QyxtQkFBTyxDQUFDLCtEQUFlOztBQUU5RCxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyZ0JBQTJnQjtBQUMzZ0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3N0cmluZ2lmeS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3ZhbGlkYXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92YWxpZGF0ZS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuY29uc3QgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIGNvbnN0IHV1aWQgPSAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoISgwLCBfdmFsaWRhdGUuZGVmYXVsdCkodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgcmV0dXJuIHV1aWQ7XG59XG5cbnZhciBfZGVmYXVsdCA9IHN0cmluZ2lmeTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/stringify.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/v1.js":
/*!***************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/v1.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ \"../../node_modules/uuid/dist/rng.js\"));\n\nvar _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ \"../../node_modules/uuid/dist/stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92MS5qcz8yODAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsa0NBQWtDLG1CQUFPLENBQUMscURBQVU7O0FBRXBELHdDQUF3QyxtQkFBTyxDQUFDLGlFQUFnQjs7QUFFaEUsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYzs7O0FBR2Q7QUFDQSxtQkFBbUI7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0U7QUFDL0U7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7O0FBR0EsdUVBQXVFO0FBQ3ZFOztBQUVBLDJFQUEyRTs7QUFFM0UsK0RBQStEOztBQUUvRDtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUI7O0FBRXZCLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQSxzQkFBc0I7O0FBRXRCLG1DQUFtQzs7QUFFbkMsNkJBQTZCOztBQUU3QixpQ0FBaUM7O0FBRWpDLDJCQUEyQjs7QUFFM0IsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92MS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3JuZyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcm5nLmpzXCIpKTtcblxudmFyIF9zdHJpbmdpZnkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3N0cmluZ2lmeS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vICoqYHYxKClgIC0gR2VuZXJhdGUgdGltZS1iYXNlZCBVVUlEKipcbi8vXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vTGlvc0svVVVJRC5qc1xuLy8gYW5kIGh0dHA6Ly9kb2NzLnB5dGhvbi5vcmcvbGlicmFyeS91dWlkLmh0bWxcbmxldCBfbm9kZUlkO1xuXG5sZXQgX2Nsb2Nrc2VxOyAvLyBQcmV2aW91cyB1dWlkIGNyZWF0aW9uIHRpbWVcblxuXG5sZXQgX2xhc3RNU2VjcyA9IDA7XG5sZXQgX2xhc3ROU2VjcyA9IDA7IC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQgZm9yIEFQSSBkZXRhaWxzXG5cbmZ1bmN0aW9uIHYxKG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIGxldCBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuICBjb25zdCBiID0gYnVmIHx8IG5ldyBBcnJheSgxNik7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsZXQgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICBsZXQgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxOyAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcblxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICBjb25zdCBzZWVkQnl0ZXMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgX3JuZy5kZWZhdWx0KSgpO1xuXG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuNSwgY3JlYXRlIGFuZCA0OC1iaXQgbm9kZSBpZCwgKDQ3IHJhbmRvbSBiaXRzICsgbXVsdGljYXN0IGJpdCA9IDEpXG4gICAgICBub2RlID0gX25vZGVJZCA9IFtzZWVkQnl0ZXNbMF0gfCAweDAxLCBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XV07XG4gICAgfVxuXG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9IC8vIFVVSUQgdGltZXN0YW1wcyBhcmUgMTAwIG5hbm8tc2Vjb25kIHVuaXRzIHNpbmNlIHRoZSBHcmVnb3JpYW4gZXBvY2gsXG4gIC8vICgxNTgyLTEwLTE1IDAwOjAwKS4gIEpTTnVtYmVycyBhcmVuJ3QgcHJlY2lzZSBlbm91Z2ggZm9yIHRoaXMsIHNvXG4gIC8vIHRpbWUgaXMgaGFuZGxlZCBpbnRlcm5hbGx5IGFzICdtc2VjcycgKGludGVnZXIgbWlsbGlzZWNvbmRzKSBhbmQgJ25zZWNzJ1xuICAvLyAoMTAwLW5hbm9zZWNvbmRzIG9mZnNldCBmcm9tIG1zZWNzKSBzaW5jZSB1bml4IGVwb2NoLCAxOTcwLTAxLTAxIDAwOjAwLlxuXG5cbiAgbGV0IG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IERhdGUubm93KCk7IC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcblxuICBsZXQgbnNlY3MgPSBvcHRpb25zLm5zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5zZWNzIDogX2xhc3ROU2VjcyArIDE7IC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcblxuICBjb25zdCBkdCA9IG1zZWNzIC0gX2xhc3RNU2VjcyArIChuc2VjcyAtIF9sYXN0TlNlY3MpIC8gMTAwMDA7IC8vIFBlciA0LjIuMS4yLCBCdW1wIGNsb2Nrc2VxIG9uIGNsb2NrIHJlZ3Jlc3Npb25cblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9IC8vIFJlc2V0IG5zZWNzIGlmIGNsb2NrIHJlZ3Jlc3NlcyAobmV3IGNsb2Nrc2VxKSBvciB3ZSd2ZSBtb3ZlZCBvbnRvIGEgbmV3XG4gIC8vIHRpbWUgaW50ZXJ2YWxcblxuXG4gIGlmICgoZHQgPCAwIHx8IG1zZWNzID4gX2xhc3RNU2VjcykgJiYgb3B0aW9ucy5uc2VjcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbnNlY3MgPSAwO1xuICB9IC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcblxuXG4gIGlmIChuc2VjcyA+PSAxMDAwMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInV1aWQudjEoKTogQ2FuJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjXCIpO1xuICB9XG5cbiAgX2xhc3RNU2VjcyA9IG1zZWNzO1xuICBfbGFzdE5TZWNzID0gbnNlY3M7XG4gIF9jbG9ja3NlcSA9IGNsb2Nrc2VxOyAvLyBQZXIgNC4xLjQgLSBDb252ZXJ0IGZyb20gdW5peCBlcG9jaCB0byBHcmVnb3JpYW4gZXBvY2hcblxuICBtc2VjcyArPSAxMjIxOTI5MjgwMDAwMDsgLy8gYHRpbWVfbG93YFxuXG4gIGNvbnN0IHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjsgLy8gYHRpbWVfbWlkYFxuXG4gIGNvbnN0IHRtaCA9IG1zZWNzIC8gMHgxMDAwMDAwMDAgKiAxMDAwMCAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjsgLy8gYHRpbWVfaGlnaF9hbmRfdmVyc2lvbmBcblxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG5cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7IC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDsgLy8gYGNsb2NrX3NlcV9sb3dgXG5cbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmOyAvLyBgbm9kZWBcblxuICBmb3IgKGxldCBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgfHwgKDAsIF9zdHJpbmdpZnkuZGVmYXVsdCkoYik7XG59XG5cbnZhciBfZGVmYXVsdCA9IHYxO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/v1.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/v3.js":
/*!***************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/v3.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ \"../../node_modules/uuid/dist/v35.js\"));\n\nvar _md = _interopRequireDefault(__webpack_require__(/*! ./md5.js */ \"../../node_modules/uuid/dist/md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92My5qcz9iZDA0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsZ0NBQWdDLG1CQUFPLENBQUMscURBQVU7O0FBRWxELGlDQUFpQyxtQkFBTyxDQUFDLHFEQUFVOztBQUVuRCxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92MzUuanNcIikpO1xuXG52YXIgX21kID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9tZDUuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5jb25zdCB2MyA9ICgwLCBfdi5kZWZhdWx0KSgndjMnLCAweDMwLCBfbWQuZGVmYXVsdCk7XG52YXIgX2RlZmF1bHQgPSB2MztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/v3.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/v35.js":
/*!****************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/v35.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ \"../../node_modules/uuid/dist/stringify.js\"));\n\nvar _parse = _interopRequireDefault(__webpack_require__(/*! ./parse.js */ \"../../node_modules/uuid/dist/parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92MzUuanM/YmU5YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7O0FBRUEsd0NBQXdDLG1CQUFPLENBQUMsaUVBQWdCOztBQUVoRSxvQ0FBb0MsbUJBQU8sQ0FBQyx5REFBWTs7QUFFeEQsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0EsMENBQTBDOztBQUUxQzs7QUFFQSxpQkFBaUIsZ0JBQWdCO0FBQ2pDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHFCQUFxQixRQUFRO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0EsNkJBQTZCO0FBQzdCLEdBQUcsZUFBZTs7O0FBR2xCO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjM1LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbmV4cG9ydHMuVVJMID0gZXhwb3J0cy5ETlMgPSB2b2lkIDA7XG5cbnZhciBfc3RyaW5naWZ5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zdHJpbmdpZnkuanNcIikpO1xuXG52YXIgX3BhcnNlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wYXJzZS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIHN0cmluZ1RvQnl0ZXMoc3RyKSB7XG4gIHN0ciA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzdHIpKTsgLy8gVVRGOCBlc2NhcGVcblxuICBjb25zdCBieXRlcyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgKytpKSB7XG4gICAgYnl0ZXMucHVzaChzdHIuY2hhckNvZGVBdChpKSk7XG4gIH1cblxuICByZXR1cm4gYnl0ZXM7XG59XG5cbmNvbnN0IEROUyA9ICc2YmE3YjgxMC05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0cy5ETlMgPSBETlM7XG5jb25zdCBVUkwgPSAnNmJhN2I4MTEtOWRhZC0xMWQxLTgwYjQtMDBjMDRmZDQzMGM4JztcbmV4cG9ydHMuVVJMID0gVVJMO1xuXG5mdW5jdGlvbiBfZGVmYXVsdChuYW1lLCB2ZXJzaW9uLCBoYXNoZnVuYykge1xuICBmdW5jdGlvbiBnZW5lcmF0ZVVVSUQodmFsdWUsIG5hbWVzcGFjZSwgYnVmLCBvZmZzZXQpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSBzdHJpbmdUb0J5dGVzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG5hbWVzcGFjZSA9ICgwLCBfcGFyc2UuZGVmYXVsdCkobmFtZXNwYWNlKTtcbiAgICB9XG5cbiAgICBpZiAobmFtZXNwYWNlLmxlbmd0aCAhPT0gMTYpIHtcbiAgICAgIHRocm93IFR5cGVFcnJvcignTmFtZXNwYWNlIG11c3QgYmUgYXJyYXktbGlrZSAoMTYgaXRlcmFibGUgaW50ZWdlciB2YWx1ZXMsIDAtMjU1KScpO1xuICAgIH0gLy8gQ29tcHV0ZSBoYXNoIG9mIG5hbWVzcGFjZSBhbmQgdmFsdWUsIFBlciA0LjNcbiAgICAvLyBGdXR1cmU6IFVzZSBzcHJlYWQgc3ludGF4IHdoZW4gc3VwcG9ydGVkIG9uIGFsbCBwbGF0Zm9ybXMsIGUuZy4gYGJ5dGVzID1cbiAgICAvLyBoYXNoZnVuYyhbLi4ubmFtZXNwYWNlLCAuLi4gdmFsdWVdKWBcblxuXG4gICAgbGV0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoMTYgKyB2YWx1ZS5sZW5ndGgpO1xuICAgIGJ5dGVzLnNldChuYW1lc3BhY2UpO1xuICAgIGJ5dGVzLnNldCh2YWx1ZSwgbmFtZXNwYWNlLmxlbmd0aCk7XG4gICAgYnl0ZXMgPSBoYXNoZnVuYyhieXRlcyk7XG4gICAgYnl0ZXNbNl0gPSBieXRlc1s2XSAmIDB4MGYgfCB2ZXJzaW9uO1xuICAgIGJ5dGVzWzhdID0gYnl0ZXNbOF0gJiAweDNmIHwgMHg4MDtcblxuICAgIGlmIChidWYpIHtcbiAgICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgICAgYnVmW29mZnNldCArIGldID0gYnl0ZXNbaV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBidWY7XG4gICAgfVxuXG4gICAgcmV0dXJuICgwLCBfc3RyaW5naWZ5LmRlZmF1bHQpKGJ5dGVzKTtcbiAgfSAvLyBGdW5jdGlvbiNuYW1lIGlzIG5vdCBzZXR0YWJsZSBvbiBzb21lIHBsYXRmb3JtcyAoIzI3MClcblxuXG4gIHRyeSB7XG4gICAgZ2VuZXJhdGVVVUlELm5hbWUgPSBuYW1lOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgfSBjYXRjaCAoZXJyKSB7fSAvLyBGb3IgQ29tbW9uSlMgZGVmYXVsdCBleHBvcnQgc3VwcG9ydFxuXG5cbiAgZ2VuZXJhdGVVVUlELkROUyA9IEROUztcbiAgZ2VuZXJhdGVVVUlELlVSTCA9IFVSTDtcbiAgcmV0dXJuIGdlbmVyYXRlVVVJRDtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/v35.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/v4.js":
/*!***************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/v4.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ \"../../node_modules/uuid/dist/rng.js\"));\n\nvar _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ \"../../node_modules/uuid/dist/stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92NC5qcz81ZmY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsa0NBQWtDLG1CQUFPLENBQUMscURBQVU7O0FBRXBELHdDQUF3QyxtQkFBTyxDQUFDLGlFQUFnQjs7QUFFaEUsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7O0FBRUEsaUVBQWlFOzs7QUFHakU7QUFDQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7O0FBRUEsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3Y0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfcm5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ybmcuanNcIikpO1xuXG52YXIgX3N0cmluZ2lmeSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc3RyaW5naWZ5LmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgY29uc3Qgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBfcm5nLmRlZmF1bHQpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuICgwLCBfc3RyaW5naWZ5LmRlZmF1bHQpKHJuZHMpO1xufVxuXG52YXIgX2RlZmF1bHQgPSB2NDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/v4.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/v5.js":
/*!***************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/v5.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ \"../../node_modules/uuid/dist/v35.js\"));\n\nvar _sha = _interopRequireDefault(__webpack_require__(/*! ./sha1.js */ \"../../node_modules/uuid/dist/sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92NS5qcz9hYzUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsZ0NBQWdDLG1CQUFPLENBQUMscURBQVU7O0FBRWxELGtDQUFrQyxtQkFBTyxDQUFDLHVEQUFXOztBQUVyRCxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92MzUuanNcIikpO1xuXG52YXIgX3NoYSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2hhMS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmNvbnN0IHY1ID0gKDAsIF92LmRlZmF1bHQpKCd2NScsIDB4NTAsIF9zaGEuZGVmYXVsdCk7XG52YXIgX2RlZmF1bHQgPSB2NTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/v5.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/validate.js":
/*!*********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/validate.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(__webpack_require__(/*! ./regex.js */ \"../../node_modules/uuid/dist/regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92YWxpZGF0ZS5qcz84MTk2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsb0NBQW9DLG1CQUFPLENBQUMseURBQVk7O0FBRXhELHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3ZhbGlkYXRlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfcmVnZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3JlZ2V4LmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIF9yZWdleC5kZWZhdWx0LnRlc3QodXVpZCk7XG59XG5cbnZhciBfZGVmYXVsdCA9IHZhbGlkYXRlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/validate.js\n");

/***/ }),

/***/ "../../node_modules/uuid/dist/version.js":
/*!********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/uuid/dist/version.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"../../node_modules/uuid/dist/validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92ZXJzaW9uLmpzPzc1YmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQSx1Q0FBdUMsbUJBQU8sQ0FBQywrREFBZTs7QUFFOUQsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3ZlcnNpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92YWxpZGF0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmFsaWRhdGUuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiB2ZXJzaW9uKHV1aWQpIHtcbiAgaWYgKCEoMCwgX3ZhbGlkYXRlLmRlZmF1bHQpKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdJbnZhbGlkIFVVSUQnKTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZUludCh1dWlkLnN1YnN0cigxNCwgMSksIDE2KTtcbn1cblxudmFyIF9kZWZhdWx0ID0gdmVyc2lvbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/uuid/dist/version.js\n");

/***/ }),

/***/ "../../node_modules/webidl-conversions/lib/index.js":
/*!*******************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/webidl-conversions/lib/index.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/webidl-conversions/lib/index.js\n");

/***/ }),

/***/ "../../node_modules/whatwg-url/lib/URL-impl.js":
/*!**************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/whatwg-url/lib/URL-impl.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst usm = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3doYXR3Zy11cmwvbGliL1VSTC1pbXBsLmpzPzJiMWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixZQUFZLG1CQUFPLENBQUMsbUZBQXFCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4Q0FBOEMsc0JBQXNCO0FBQ3BFO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdDQUFnQyxnREFBZ0Q7QUFDaEY7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMEJBQTBCLHdDQUF3QztBQUNsRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQiw0Q0FBNEM7QUFDdEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDRCQUE0Qix3Q0FBd0M7QUFDcEU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQiw4Q0FBOEM7QUFDeEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw4QkFBOEIsOEJBQThCO0FBQzVEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOEJBQThCLDRDQUE0QztBQUMxRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvd2hhdHdnLXVybC9saWIvVVJMLWltcGwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IHVzbSA9IHJlcXVpcmUoXCIuL3VybC1zdGF0ZS1tYWNoaW5lXCIpO1xuXG5leHBvcnRzLmltcGxlbWVudGF0aW9uID0gY2xhc3MgVVJMSW1wbCB7XG4gIGNvbnN0cnVjdG9yKGNvbnN0cnVjdG9yQXJncykge1xuICAgIGNvbnN0IHVybCA9IGNvbnN0cnVjdG9yQXJnc1swXTtcbiAgICBjb25zdCBiYXNlID0gY29uc3RydWN0b3JBcmdzWzFdO1xuXG4gICAgbGV0IHBhcnNlZEJhc2UgPSBudWxsO1xuICAgIGlmIChiYXNlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHBhcnNlZEJhc2UgPSB1c20uYmFzaWNVUkxQYXJzZShiYXNlKTtcbiAgICAgIGlmIChwYXJzZWRCYXNlID09PSBcImZhaWx1cmVcIikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBiYXNlIFVSTFwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBwYXJzZWRVUkwgPSB1c20uYmFzaWNVUkxQYXJzZSh1cmwsIHsgYmFzZVVSTDogcGFyc2VkQmFzZSB9KTtcbiAgICBpZiAocGFyc2VkVVJMID09PSBcImZhaWx1cmVcIikge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgVVJMXCIpO1xuICAgIH1cblxuICAgIHRoaXMuX3VybCA9IHBhcnNlZFVSTDtcblxuICAgIC8vIFRPRE86IHF1ZXJ5IHN0dWZmXG4gIH1cblxuICBnZXQgaHJlZigpIHtcbiAgICByZXR1cm4gdXNtLnNlcmlhbGl6ZVVSTCh0aGlzLl91cmwpO1xuICB9XG5cbiAgc2V0IGhyZWYodikge1xuICAgIGNvbnN0IHBhcnNlZFVSTCA9IHVzbS5iYXNpY1VSTFBhcnNlKHYpO1xuICAgIGlmIChwYXJzZWRVUkwgPT09IFwiZmFpbHVyZVwiKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBVUkxcIik7XG4gICAgfVxuXG4gICAgdGhpcy5fdXJsID0gcGFyc2VkVVJMO1xuICB9XG5cbiAgZ2V0IG9yaWdpbigpIHtcbiAgICByZXR1cm4gdXNtLnNlcmlhbGl6ZVVSTE9yaWdpbih0aGlzLl91cmwpO1xuICB9XG5cbiAgZ2V0IHByb3RvY29sKCkge1xuICAgIHJldHVybiB0aGlzLl91cmwuc2NoZW1lICsgXCI6XCI7XG4gIH1cblxuICBzZXQgcHJvdG9jb2wodikge1xuICAgIHVzbS5iYXNpY1VSTFBhcnNlKHYgKyBcIjpcIiwgeyB1cmw6IHRoaXMuX3VybCwgc3RhdGVPdmVycmlkZTogXCJzY2hlbWUgc3RhcnRcIiB9KTtcbiAgfVxuXG4gIGdldCB1c2VybmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdXJsLnVzZXJuYW1lO1xuICB9XG5cbiAgc2V0IHVzZXJuYW1lKHYpIHtcbiAgICBpZiAodXNtLmNhbm5vdEhhdmVBVXNlcm5hbWVQYXNzd29yZFBvcnQodGhpcy5fdXJsKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHVzbS5zZXRUaGVVc2VybmFtZSh0aGlzLl91cmwsIHYpO1xuICB9XG5cbiAgZ2V0IHBhc3N3b3JkKCkge1xuICAgIHJldHVybiB0aGlzLl91cmwucGFzc3dvcmQ7XG4gIH1cblxuICBzZXQgcGFzc3dvcmQodikge1xuICAgIGlmICh1c20uY2Fubm90SGF2ZUFVc2VybmFtZVBhc3N3b3JkUG9ydCh0aGlzLl91cmwpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdXNtLnNldFRoZVBhc3N3b3JkKHRoaXMuX3VybCwgdik7XG4gIH1cblxuICBnZXQgaG9zdCgpIHtcbiAgICBjb25zdCB1cmwgPSB0aGlzLl91cmw7XG5cbiAgICBpZiAodXJsLmhvc3QgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cblxuICAgIGlmICh1cmwucG9ydCA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHVzbS5zZXJpYWxpemVIb3N0KHVybC5ob3N0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXNtLnNlcmlhbGl6ZUhvc3QodXJsLmhvc3QpICsgXCI6XCIgKyB1c20uc2VyaWFsaXplSW50ZWdlcih1cmwucG9ydCk7XG4gIH1cblxuICBzZXQgaG9zdCh2KSB7XG4gICAgaWYgKHRoaXMuX3VybC5jYW5ub3RCZUFCYXNlVVJMKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdXNtLmJhc2ljVVJMUGFyc2UodiwgeyB1cmw6IHRoaXMuX3VybCwgc3RhdGVPdmVycmlkZTogXCJob3N0XCIgfSk7XG4gIH1cblxuICBnZXQgaG9zdG5hbWUoKSB7XG4gICAgaWYgKHRoaXMuX3VybC5ob3N0ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gdXNtLnNlcmlhbGl6ZUhvc3QodGhpcy5fdXJsLmhvc3QpO1xuICB9XG5cbiAgc2V0IGhvc3RuYW1lKHYpIHtcbiAgICBpZiAodGhpcy5fdXJsLmNhbm5vdEJlQUJhc2VVUkwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB1c20uYmFzaWNVUkxQYXJzZSh2LCB7IHVybDogdGhpcy5fdXJsLCBzdGF0ZU92ZXJyaWRlOiBcImhvc3RuYW1lXCIgfSk7XG4gIH1cblxuICBnZXQgcG9ydCgpIHtcbiAgICBpZiAodGhpcy5fdXJsLnBvcnQgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cblxuICAgIHJldHVybiB1c20uc2VyaWFsaXplSW50ZWdlcih0aGlzLl91cmwucG9ydCk7XG4gIH1cblxuICBzZXQgcG9ydCh2KSB7XG4gICAgaWYgKHVzbS5jYW5ub3RIYXZlQVVzZXJuYW1lUGFzc3dvcmRQb3J0KHRoaXMuX3VybCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodiA9PT0gXCJcIikge1xuICAgICAgdGhpcy5fdXJsLnBvcnQgPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICB1c20uYmFzaWNVUkxQYXJzZSh2LCB7IHVybDogdGhpcy5fdXJsLCBzdGF0ZU92ZXJyaWRlOiBcInBvcnRcIiB9KTtcbiAgICB9XG4gIH1cblxuICBnZXQgcGF0aG5hbWUoKSB7XG4gICAgaWYgKHRoaXMuX3VybC5jYW5ub3RCZUFCYXNlVVJMKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdXJsLnBhdGhbMF07XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3VybC5wYXRoLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiL1wiICsgdGhpcy5fdXJsLnBhdGguam9pbihcIi9cIik7XG4gIH1cblxuICBzZXQgcGF0aG5hbWUodikge1xuICAgIGlmICh0aGlzLl91cmwuY2Fubm90QmVBQmFzZVVSTCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX3VybC5wYXRoID0gW107XG4gICAgdXNtLmJhc2ljVVJMUGFyc2UodiwgeyB1cmw6IHRoaXMuX3VybCwgc3RhdGVPdmVycmlkZTogXCJwYXRoIHN0YXJ0XCIgfSk7XG4gIH1cblxuICBnZXQgc2VhcmNoKCkge1xuICAgIGlmICh0aGlzLl91cmwucXVlcnkgPT09IG51bGwgfHwgdGhpcy5fdXJsLnF1ZXJ5ID09PSBcIlwiKSB7XG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gXCI/XCIgKyB0aGlzLl91cmwucXVlcnk7XG4gIH1cblxuICBzZXQgc2VhcmNoKHYpIHtcbiAgICAvLyBUT0RPOiBxdWVyeSBzdHVmZlxuXG4gICAgY29uc3QgdXJsID0gdGhpcy5fdXJsO1xuXG4gICAgaWYgKHYgPT09IFwiXCIpIHtcbiAgICAgIHVybC5xdWVyeSA9IG51bGw7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgaW5wdXQgPSB2WzBdID09PSBcIj9cIiA/IHYuc3Vic3RyaW5nKDEpIDogdjtcbiAgICB1cmwucXVlcnkgPSBcIlwiO1xuICAgIHVzbS5iYXNpY1VSTFBhcnNlKGlucHV0LCB7IHVybCwgc3RhdGVPdmVycmlkZTogXCJxdWVyeVwiIH0pO1xuICB9XG5cbiAgZ2V0IGhhc2goKSB7XG4gICAgaWYgKHRoaXMuX3VybC5mcmFnbWVudCA9PT0gbnVsbCB8fCB0aGlzLl91cmwuZnJhZ21lbnQgPT09IFwiXCIpIHtcbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cblxuICAgIHJldHVybiBcIiNcIiArIHRoaXMuX3VybC5mcmFnbWVudDtcbiAgfVxuXG4gIHNldCBoYXNoKHYpIHtcbiAgICBpZiAodiA9PT0gXCJcIikge1xuICAgICAgdGhpcy5fdXJsLmZyYWdtZW50ID0gbnVsbDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBpbnB1dCA9IHZbMF0gPT09IFwiI1wiID8gdi5zdWJzdHJpbmcoMSkgOiB2O1xuICAgIHRoaXMuX3VybC5mcmFnbWVudCA9IFwiXCI7XG4gICAgdXNtLmJhc2ljVVJMUGFyc2UoaW5wdXQsIHsgdXJsOiB0aGlzLl91cmwsIHN0YXRlT3ZlcnJpZGU6IFwiZnJhZ21lbnRcIiB9KTtcbiAgfVxuXG4gIHRvSlNPTigpIHtcbiAgICByZXR1cm4gdGhpcy5ocmVmO1xuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/whatwg-url/lib/URL-impl.js\n");

/***/ }),

/***/ "../../node_modules/whatwg-url/lib/URL.js":
/*!*********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/whatwg-url/lib/URL.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst conversions = __webpack_require__(/*! webidl-conversions */ \"../../node_modules/webidl-conversions/lib/index.js\");\nconst utils = __webpack_require__(/*! ./utils.js */ \"../../node_modules/whatwg-url/lib/utils.js\");\nconst Impl = __webpack_require__(/*! .//URL-impl.js */ \"../../node_modules/whatwg-url/lib/URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3doYXR3Zy11cmwvbGliL1VSTC5qcz80ZTQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLG9CQUFvQixtQkFBTyxDQUFDLDhFQUFvQjtBQUNoRCxjQUFjLG1CQUFPLENBQUMsOERBQVk7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLHFFQUFnQjs7QUFFckM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrQkFBK0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrQkFBK0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLENBQUM7OztBQUdEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsYUFBYSxXQUFXO0FBQ3hCLGFBQWE7QUFDYjtBQUNBIiwiZmlsZSI6Ii4uLy4uL25vZGVfbW9kdWxlcy93aGF0d2ctdXJsL2xpYi9VUkwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgY29udmVyc2lvbnMgPSByZXF1aXJlKFwid2ViaWRsLWNvbnZlcnNpb25zXCIpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmNvbnN0IEltcGwgPSByZXF1aXJlKFwiLi8vVVJMLWltcGwuanNcIik7XG5cbmNvbnN0IGltcGwgPSB1dGlscy5pbXBsU3ltYm9sO1xuXG5mdW5jdGlvbiBVUkwodXJsKSB7XG4gIGlmICghdGhpcyB8fCB0aGlzW2ltcGxdIHx8ICEodGhpcyBpbnN0YW5jZW9mIFVSTCkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmFpbGVkIHRvIGNvbnN0cnVjdCAnVVJMJzogUGxlYXNlIHVzZSB0aGUgJ25ldycgb3BlcmF0b3IsIHRoaXMgRE9NIG9iamVjdCBjb25zdHJ1Y3RvciBjYW5ub3QgYmUgY2FsbGVkIGFzIGEgZnVuY3Rpb24uXCIpO1xuICB9XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdVUkwnOiAxIGFyZ3VtZW50IHJlcXVpcmVkLCBidXQgb25seSBcIiArIGFyZ3VtZW50cy5sZW5ndGggKyBcIiBwcmVzZW50LlwiKTtcbiAgfVxuICBjb25zdCBhcmdzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAmJiBpIDwgMjsgKytpKSB7XG4gICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpXTtcbiAgfVxuICBhcmdzWzBdID0gY29udmVyc2lvbnNbXCJVU1ZTdHJpbmdcIl0oYXJnc1swXSk7XG4gIGlmIChhcmdzWzFdICE9PSB1bmRlZmluZWQpIHtcbiAgYXJnc1sxXSA9IGNvbnZlcnNpb25zW1wiVVNWU3RyaW5nXCJdKGFyZ3NbMV0pO1xuICB9XG5cbiAgbW9kdWxlLmV4cG9ydHMuc2V0dXAodGhpcywgYXJncyk7XG59XG5cblVSTC5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKCkge1xuICBpZiAoIXRoaXMgfHwgIW1vZHVsZS5leHBvcnRzLmlzKHRoaXMpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIklsbGVnYWwgaW52b2NhdGlvblwiKTtcbiAgfVxuICBjb25zdCBhcmdzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAmJiBpIDwgMDsgKytpKSB7XG4gICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpXTtcbiAgfVxuICByZXR1cm4gdGhpc1tpbXBsXS50b0pTT04uYXBwbHkodGhpc1tpbXBsXSwgYXJncyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KFVSTC5wcm90b3R5cGUsIFwiaHJlZlwiLCB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpc1tpbXBsXS5ocmVmO1xuICB9LFxuICBzZXQoVikge1xuICAgIFYgPSBjb252ZXJzaW9uc1tcIlVTVlN0cmluZ1wiXShWKTtcbiAgICB0aGlzW2ltcGxdLmhyZWYgPSBWO1xuICB9LFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pO1xuXG5VUkwucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICBpZiAoIXRoaXMgfHwgIW1vZHVsZS5leHBvcnRzLmlzKHRoaXMpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIklsbGVnYWwgaW52b2NhdGlvblwiKTtcbiAgfVxuICByZXR1cm4gdGhpcy5ocmVmO1xufTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFVSTC5wcm90b3R5cGUsIFwib3JpZ2luXCIsIHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiB0aGlzW2ltcGxdLm9yaWdpbjtcbiAgfSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFVSTC5wcm90b3R5cGUsIFwicHJvdG9jb2xcIiwge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXNbaW1wbF0ucHJvdG9jb2w7XG4gIH0sXG4gIHNldChWKSB7XG4gICAgViA9IGNvbnZlcnNpb25zW1wiVVNWU3RyaW5nXCJdKFYpO1xuICAgIHRoaXNbaW1wbF0ucHJvdG9jb2wgPSBWO1xuICB9LFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoVVJMLnByb3RvdHlwZSwgXCJ1c2VybmFtZVwiLCB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpc1tpbXBsXS51c2VybmFtZTtcbiAgfSxcbiAgc2V0KFYpIHtcbiAgICBWID0gY29udmVyc2lvbnNbXCJVU1ZTdHJpbmdcIl0oVik7XG4gICAgdGhpc1tpbXBsXS51c2VybmFtZSA9IFY7XG4gIH0sXG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShVUkwucHJvdG90eXBlLCBcInBhc3N3b3JkXCIsIHtcbiAgZ2V0KCkge1xuICAgIHJldHVybiB0aGlzW2ltcGxdLnBhc3N3b3JkO1xuICB9LFxuICBzZXQoVikge1xuICAgIFYgPSBjb252ZXJzaW9uc1tcIlVTVlN0cmluZ1wiXShWKTtcbiAgICB0aGlzW2ltcGxdLnBhc3N3b3JkID0gVjtcbiAgfSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFVSTC5wcm90b3R5cGUsIFwiaG9zdFwiLCB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpc1tpbXBsXS5ob3N0O1xuICB9LFxuICBzZXQoVikge1xuICAgIFYgPSBjb252ZXJzaW9uc1tcIlVTVlN0cmluZ1wiXShWKTtcbiAgICB0aGlzW2ltcGxdLmhvc3QgPSBWO1xuICB9LFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoVVJMLnByb3RvdHlwZSwgXCJob3N0bmFtZVwiLCB7XG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpc1tpbXBsXS5ob3N0bmFtZTtcbiAgfSxcbiAgc2V0KFYpIHtcbiAgICBWID0gY29udmVyc2lvbnNbXCJVU1ZTdHJpbmdcIl0oVik7XG4gICAgdGhpc1tpbXBsXS5ob3N0bmFtZSA9IFY7XG4gIH0sXG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShVUkwucHJvdG90eXBlLCBcInBvcnRcIiwge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXNbaW1wbF0ucG9ydDtcbiAgfSxcbiAgc2V0KFYpIHtcbiAgICBWID0gY29udmVyc2lvbnNbXCJVU1ZTdHJpbmdcIl0oVik7XG4gICAgdGhpc1tpbXBsXS5wb3J0ID0gVjtcbiAgfSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFVSTC5wcm90b3R5cGUsIFwicGF0aG5hbWVcIiwge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXNbaW1wbF0ucGF0aG5hbWU7XG4gIH0sXG4gIHNldChWKSB7XG4gICAgViA9IGNvbnZlcnNpb25zW1wiVVNWU3RyaW5nXCJdKFYpO1xuICAgIHRoaXNbaW1wbF0ucGF0aG5hbWUgPSBWO1xuICB9LFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoVVJMLnByb3RvdHlwZSwgXCJzZWFyY2hcIiwge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXNbaW1wbF0uc2VhcmNoO1xuICB9LFxuICBzZXQoVikge1xuICAgIFYgPSBjb252ZXJzaW9uc1tcIlVTVlN0cmluZ1wiXShWKTtcbiAgICB0aGlzW2ltcGxdLnNlYXJjaCA9IFY7XG4gIH0sXG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShVUkwucHJvdG90eXBlLCBcImhhc2hcIiwge1xuICBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXNbaW1wbF0uaGFzaDtcbiAgfSxcbiAgc2V0KFYpIHtcbiAgICBWID0gY29udmVyc2lvbnNbXCJVU1ZTdHJpbmdcIl0oVik7XG4gICAgdGhpc1tpbXBsXS5oYXNoID0gVjtcbiAgfSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXMob2JqKSB7XG4gICAgcmV0dXJuICEhb2JqICYmIG9ialtpbXBsXSBpbnN0YW5jZW9mIEltcGwuaW1wbGVtZW50YXRpb247XG4gIH0sXG4gIGNyZWF0ZShjb25zdHJ1Y3RvckFyZ3MsIHByaXZhdGVEYXRhKSB7XG4gICAgbGV0IG9iaiA9IE9iamVjdC5jcmVhdGUoVVJMLnByb3RvdHlwZSk7XG4gICAgdGhpcy5zZXR1cChvYmosIGNvbnN0cnVjdG9yQXJncywgcHJpdmF0ZURhdGEpO1xuICAgIHJldHVybiBvYmo7XG4gIH0sXG4gIHNldHVwKG9iaiwgY29uc3RydWN0b3JBcmdzLCBwcml2YXRlRGF0YSkge1xuICAgIGlmICghcHJpdmF0ZURhdGEpIHByaXZhdGVEYXRhID0ge307XG4gICAgcHJpdmF0ZURhdGEud3JhcHBlciA9IG9iajtcblxuICAgIG9ialtpbXBsXSA9IG5ldyBJbXBsLmltcGxlbWVudGF0aW9uKGNvbnN0cnVjdG9yQXJncywgcHJpdmF0ZURhdGEpO1xuICAgIG9ialtpbXBsXVt1dGlscy53cmFwcGVyU3ltYm9sXSA9IG9iajtcbiAgfSxcbiAgaW50ZXJmYWNlOiBVUkwsXG4gIGV4cG9zZToge1xuICAgIFdpbmRvdzogeyBVUkw6IFVSTCB9LFxuICAgIFdvcmtlcjogeyBVUkw6IFVSTCB9XG4gIH1cbn07XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/whatwg-url/lib/URL.js\n");

/***/ }),

/***/ "../../node_modules/whatwg-url/lib/public-api.js":
/*!****************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/whatwg-url/lib/public-api.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.URL = __webpack_require__(/*! ./URL */ \"../../node_modules/whatwg-url/lib/URL.js\").interface;\nexports.serializeURL = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").serializeURL;\nexports.serializeURLOrigin = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").serializeURLOrigin;\nexports.basicURLParse = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").basicURLParse;\nexports.setTheUsername = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").setTheUsername;\nexports.setThePassword = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").setThePassword;\nexports.serializeHost = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").serializeHost;\nexports.serializeInteger = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").serializeInteger;\nexports.parseURL = __webpack_require__(/*! ./url-state-machine */ \"../../node_modules/whatwg-url/lib/url-state-machine.js\").parseURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3doYXR3Zy11cmwvbGliL3B1YmxpYy1hcGkuanM/YWUxZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsdURBQU87QUFDN0IsdUJBQXVCLG1CQUFPLENBQUMsbUZBQXFCO0FBQ3BELDZCQUE2QixtQkFBTyxDQUFDLG1GQUFxQjtBQUMxRCx3QkFBd0IsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDckQseUJBQXlCLG1CQUFPLENBQUMsbUZBQXFCO0FBQ3RELHlCQUF5QixtQkFBTyxDQUFDLG1GQUFxQjtBQUN0RCx3QkFBd0IsbUJBQU8sQ0FBQyxtRkFBcUI7QUFDckQsMkJBQTJCLG1CQUFPLENBQUMsbUZBQXFCO0FBQ3hELG1CQUFtQixtQkFBTyxDQUFDLG1GQUFxQiIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvd2hhdHdnLXVybC9saWIvcHVibGljLWFwaS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLlVSTCA9IHJlcXVpcmUoXCIuL1VSTFwiKS5pbnRlcmZhY2U7XG5leHBvcnRzLnNlcmlhbGl6ZVVSTCA9IHJlcXVpcmUoXCIuL3VybC1zdGF0ZS1tYWNoaW5lXCIpLnNlcmlhbGl6ZVVSTDtcbmV4cG9ydHMuc2VyaWFsaXplVVJMT3JpZ2luID0gcmVxdWlyZShcIi4vdXJsLXN0YXRlLW1hY2hpbmVcIikuc2VyaWFsaXplVVJMT3JpZ2luO1xuZXhwb3J0cy5iYXNpY1VSTFBhcnNlID0gcmVxdWlyZShcIi4vdXJsLXN0YXRlLW1hY2hpbmVcIikuYmFzaWNVUkxQYXJzZTtcbmV4cG9ydHMuc2V0VGhlVXNlcm5hbWUgPSByZXF1aXJlKFwiLi91cmwtc3RhdGUtbWFjaGluZVwiKS5zZXRUaGVVc2VybmFtZTtcbmV4cG9ydHMuc2V0VGhlUGFzc3dvcmQgPSByZXF1aXJlKFwiLi91cmwtc3RhdGUtbWFjaGluZVwiKS5zZXRUaGVQYXNzd29yZDtcbmV4cG9ydHMuc2VyaWFsaXplSG9zdCA9IHJlcXVpcmUoXCIuL3VybC1zdGF0ZS1tYWNoaW5lXCIpLnNlcmlhbGl6ZUhvc3Q7XG5leHBvcnRzLnNlcmlhbGl6ZUludGVnZXIgPSByZXF1aXJlKFwiLi91cmwtc3RhdGUtbWFjaGluZVwiKS5zZXJpYWxpemVJbnRlZ2VyO1xuZXhwb3J0cy5wYXJzZVVSTCA9IHJlcXVpcmUoXCIuL3VybC1zdGF0ZS1tYWNoaW5lXCIpLnBhcnNlVVJMO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/whatwg-url/lib/public-api.js\n");

/***/ }),

/***/ "../../node_modules/whatwg-url/lib/url-state-machine.js":
/*!***********************************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/whatwg-url/lib/url-state-machine.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nconst punycode = __webpack_require__(/*! punycode */ \"punycode\");\r\nconst tr46 = __webpack_require__(/*! tr46 */ \"../../node_modules/tr46/index.js\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/whatwg-url/lib/url-state-machine.js\n");

/***/ }),

/***/ "../../node_modules/whatwg-url/lib/utils.js":
/*!***********************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/whatwg-url/lib/utils.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3doYXR3Zy11cmwvbGliL3V0aWxzLmpzPzBlM2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvd2hhdHdnLXVybC9saWIvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMubWl4aW4gPSBmdW5jdGlvbiBtaXhpbih0YXJnZXQsIHNvdXJjZSkge1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoc291cmNlKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5c1tpXSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleXNbaV0pKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMud3JhcHBlclN5bWJvbCA9IFN5bWJvbChcIndyYXBwZXJcIik7XG5tb2R1bGUuZXhwb3J0cy5pbXBsU3ltYm9sID0gU3ltYm9sKFwiaW1wbFwiKTtcblxubW9kdWxlLmV4cG9ydHMud3JhcHBlckZvckltcGwgPSBmdW5jdGlvbiAoaW1wbCkge1xuICByZXR1cm4gaW1wbFttb2R1bGUuZXhwb3J0cy53cmFwcGVyU3ltYm9sXTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLmltcGxGb3JXcmFwcGVyID0gZnVuY3Rpb24gKHdyYXBwZXIpIHtcbiAgcmV0dXJuIHdyYXBwZXJbbW9kdWxlLmV4cG9ydHMuaW1wbFN5bWJvbF07XG59O1xuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/whatwg-url/lib/utils.js\n");

/***/ }),

/***/ "../../node_modules/xtend/immutable.js":
/*!******************************************************************************************!*\
  !*** /Users/thinh/Development/work/web3-react-connector/node_modules/xtend/immutable.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL3RoaW5oL0RldmVsb3BtZW50L3dvcmsvd2ViMy1yZWFjdC1jb25uZWN0b3Ivbm9kZV9tb2R1bGVzL3h0ZW5kL2ltbXV0YWJsZS5qcz80MzJkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsbUJBQW1CLHNCQUFzQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMveHRlbmQvaW1tdXRhYmxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBleHRlbmRcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZXh0ZW5kKCkge1xuICAgIHZhciB0YXJnZXQgPSB7fVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXVxuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/xtend/immutable.js\n");

/***/ }),

/***/ "./components/Spinner.tsx":
/*!********************************!*\
  !*** ./components/Spinner.tsx ***!
  \********************************/
/*! exports provided: Spinner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Spinner\", function() { return Spinner; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _jsxFileName = \"/Users/thinh/Development/work/web3-react-connector/example/v6/components/Spinner.tsx\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n // <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->\n\nfunction Spinner(_ref) {\n  let {\n    color\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"color\"]);\n\n  return __jsx(\"svg\", _extends({\n    width: \"38\",\n    height: \"38\",\n    viewBox: \"0 0 38 38\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    stroke: color\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }), __jsx(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"g\", {\n    transform: \"translate(1 1)\",\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"circle\", {\n    strokeOpacity: \".5\",\n    cx: \"18\",\n    cy: \"18\",\n    r: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }), __jsx(\"path\", {\n    d: \"M36 18c0-9.94-8.06-18-18-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, __jsx(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    from: \"0 18 18\",\n    to: \"360 18 18\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  })))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL1NwaW5uZXIudHN4PzM4NTciXSwibmFtZXMiOlsiU3Bpbm5lciIsImNvbG9yIiwicmVzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztDQUVBOztBQUNPLFNBQVNBLE9BQVQsT0FBMEM7QUFBQSxNQUF6QjtBQUFFQztBQUFGLEdBQXlCO0FBQUEsTUFBYkMsSUFBYTs7QUFDL0MsU0FDRTtBQUFLLFNBQUssRUFBQyxJQUFYO0FBQWdCLFVBQU0sRUFBQyxJQUF2QjtBQUE0QixXQUFPLEVBQUMsV0FBcEM7QUFBZ0QsU0FBSyxFQUFDLDRCQUF0RDtBQUFtRixVQUFNLEVBQUVEO0FBQTNGLEtBQXNHQyxJQUF0RztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQ0U7QUFBRyxRQUFJLEVBQUMsTUFBUjtBQUFlLFlBQVEsRUFBQyxTQUF4QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBRyxhQUFTLEVBQUMsZ0JBQWI7QUFBOEIsZUFBVyxFQUFDLEdBQTFDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FDRTtBQUFRLGlCQUFhLEVBQUMsSUFBdEI7QUFBMkIsTUFBRSxFQUFDLElBQTlCO0FBQW1DLE1BQUUsRUFBQyxJQUF0QztBQUEyQyxLQUFDLEVBQUMsSUFBN0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQURGLEVBRUU7QUFBTSxLQUFDLEVBQUMsNkJBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUNFO0FBQ0UsaUJBQWEsRUFBQyxXQURoQjtBQUVFLFFBQUksRUFBQyxRQUZQO0FBR0UsUUFBSSxFQUFDLFNBSFA7QUFJRSxNQUFFLEVBQUMsV0FKTDtBQUtFLE9BQUcsRUFBQyxJQUxOO0FBTUUsZUFBVyxFQUFDLFlBTmQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQURGLENBRkYsQ0FERixDQURGLENBREY7QUFtQkQiLCJmaWxlIjoiLi9jb21wb25lbnRzL1NwaW5uZXIudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG4vLyA8IS0tIEJ5IFNhbSBIZXJiZXJ0IChAc2hlcmIpLCBmb3IgZXZlcnlvbmUuIE1vcmUgQCBodHRwOi8vZ29vLmdsLzdBSnpiTCAtLT5cbmV4cG9ydCBmdW5jdGlvbiBTcGlubmVyKHsgY29sb3IsIC4uLnJlc3QgfTogYW55KSB7XG4gIHJldHVybiAoXG4gICAgPHN2ZyB3aWR0aD1cIjM4XCIgaGVpZ2h0PVwiMzhcIiB2aWV3Qm94PVwiMCAwIDM4IDM4XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHN0cm9rZT17Y29sb3J9IHsuLi5yZXN0fT5cbiAgICAgIDxnIGZpbGw9XCJub25lXCIgZmlsbFJ1bGU9XCJldmVub2RkXCI+XG4gICAgICAgIDxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgxIDEpXCIgc3Ryb2tlV2lkdGg9XCIyXCI+XG4gICAgICAgICAgPGNpcmNsZSBzdHJva2VPcGFjaXR5PVwiLjVcIiBjeD1cIjE4XCIgY3k9XCIxOFwiIHI9XCIxOFwiIC8+XG4gICAgICAgICAgPHBhdGggZD1cIk0zNiAxOGMwLTkuOTQtOC4wNi0xOC0xOC0xOFwiPlxuICAgICAgICAgICAgPGFuaW1hdGVUcmFuc2Zvcm1cbiAgICAgICAgICAgICAgYXR0cmlidXRlTmFtZT1cInRyYW5zZm9ybVwiXG4gICAgICAgICAgICAgIHR5cGU9XCJyb3RhdGVcIlxuICAgICAgICAgICAgICBmcm9tPVwiMCAxOCAxOFwiXG4gICAgICAgICAgICAgIHRvPVwiMzYwIDE4IDE4XCJcbiAgICAgICAgICAgICAgZHVyPVwiMXNcIlxuICAgICAgICAgICAgICByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3BhdGg+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvZz5cbiAgICA8L3N2Zz5cbiAgKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Spinner.tsx\n");

/***/ }),

/***/ "./connectors.ts":
/*!***********************!*\
  !*** ./connectors.ts ***!
  \***********************/
/*! exports provided: injected, bitski */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"injected\", function() { return injected; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bitski\", function() { return bitski; });\n/* harmony import */ var _web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-react/injected-connector */ \"@web3-react/injected-connector\");\n/* harmony import */ var _web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dist__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dist */ \"../../dist/index.js\");\n/* harmony import */ var _dist__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_dist__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst injected = new _web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_0__[\"InjectedConnector\"]({\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\nconst bitski = new _dist__WEBPACK_IMPORTED_MODULE_1__[\"BitskiConnector\"]({\n  clientId: 'd551e9cc-d393-40be-b444-8bc7da7a32b0',\n  chainId: 1,\n  callbackUrl: 'http://localhost:3000/callback.html'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb25uZWN0b3JzLnRzPzI5NjYiXSwibmFtZXMiOlsiaW5qZWN0ZWQiLCJJbmplY3RlZENvbm5lY3RvciIsInN1cHBvcnRlZENoYWluSWRzIiwiYml0c2tpIiwiQml0c2tpQ29ubmVjdG9yIiwiY2xpZW50SWQiLCJjaGFpbklkIiwiY2FsbGJhY2tVcmwiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUVPLE1BQU1BLFFBQVEsR0FBRyxJQUFJQyxnRkFBSixDQUFzQjtBQUFFQyxtQkFBaUIsRUFBRSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxFQUFiO0FBQXJCLENBQXRCLENBQWpCO0FBRUEsTUFBTUMsTUFBTSxHQUFHLElBQUlDLHFEQUFKLENBQW9CO0FBQ3hDQyxVQUFRLEVBQUUsc0NBRDhCO0FBRXhDQyxTQUFPLEVBQUUsQ0FGK0I7QUFHeENDLGFBQVcsRUFBRTtBQUgyQixDQUFwQixDQUFmIiwiZmlsZSI6Ii4vY29ubmVjdG9ycy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGVkQ29ubmVjdG9yIH0gZnJvbSAnQHdlYjMtcmVhY3QvaW5qZWN0ZWQtY29ubmVjdG9yJztcblxuaW1wb3J0IHsgQml0c2tpQ29ubmVjdG9yIH0gZnJvbSAnLi4vLi4vZGlzdCc7XG5cbmV4cG9ydCBjb25zdCBpbmplY3RlZCA9IG5ldyBJbmplY3RlZENvbm5lY3Rvcih7IHN1cHBvcnRlZENoYWluSWRzOiBbMSwgMywgNCwgNSwgNDJdIH0pO1xuXG5leHBvcnQgY29uc3QgYml0c2tpID0gbmV3IEJpdHNraUNvbm5lY3Rvcih7XG4gIGNsaWVudElkOiAnZDU1MWU5Y2MtZDM5My00MGJlLWI0NDQtOGJjN2RhN2EzMmIwJyxcbiAgY2hhaW5JZDogMSxcbiAgY2FsbGJhY2tVcmw6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvY2FsbGJhY2suaHRtbCdcbn0pO1xuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./connectors.ts\n");

/***/ }),

/***/ "./hooks.ts":
/*!******************!*\
  !*** ./hooks.ts ***!
  \******************/
/*! exports provided: useEagerConnect, useInactiveListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useEagerConnect\", function() { return useEagerConnect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useInactiveListener\", function() { return useInactiveListener; });\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-react/core */ \"@web3-react/core\");\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_web3_react_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _connectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connectors */ \"./connectors.ts\");\n\n\n\nfunction useEagerConnect() {\n  const {\n    activate,\n    active\n  } = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_0__[\"useWeb3React\"])();\n  const {\n    0: tried,\n    1: setTried\n  } = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);\n  Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(() => {\n    _connectors__WEBPACK_IMPORTED_MODULE_2__[\"injected\"].isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(_connectors__WEBPACK_IMPORTED_MODULE_2__[\"injected\"], undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n\n  Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n  return tried;\n}\nfunction useInactiveListener(suppress = false) {\n  const {\n    active,\n    error,\n    activate\n  } = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_0__[\"useWeb3React\"])();\n  Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(_connectors__WEBPACK_IMPORTED_MODULE_2__[\"injected\"]);\n      };\n\n      const handleChainChanged = chainId => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(_connectors__WEBPACK_IMPORTED_MODULE_2__[\"injected\"]);\n      };\n\n      const handleAccountsChanged = accounts => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n\n        if (accounts.length > 0) {\n          activate(_connectors__WEBPACK_IMPORTED_MODULE_2__[\"injected\"]);\n        }\n      };\n\n      const handleNetworkChanged = networkId => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(_connectors__WEBPACK_IMPORTED_MODULE_2__[\"injected\"]);\n      };\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ob29rcy50cz9kYjU3Il0sIm5hbWVzIjpbInVzZUVhZ2VyQ29ubmVjdCIsImFjdGl2YXRlIiwiYWN0aXZlIiwidXNlV2ViM1JlYWN0IiwidHJpZWQiLCJzZXRUcmllZCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiaW5qZWN0ZWQiLCJpc0F1dGhvcml6ZWQiLCJ0aGVuIiwidW5kZWZpbmVkIiwiY2F0Y2giLCJ1c2VJbmFjdGl2ZUxpc3RlbmVyIiwic3VwcHJlc3MiLCJlcnJvciIsImV0aGVyZXVtIiwid2luZG93Iiwib24iLCJoYW5kbGVDb25uZWN0IiwiY29uc29sZSIsImxvZyIsImhhbmRsZUNoYWluQ2hhbmdlZCIsImNoYWluSWQiLCJoYW5kbGVBY2NvdW50c0NoYW5nZWQiLCJhY2NvdW50cyIsImxlbmd0aCIsImhhbmRsZU5ldHdvcmtDaGFuZ2VkIiwibmV0d29ya0lkIiwicmVtb3ZlTGlzdGVuZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFTyxTQUFTQSxlQUFULEdBQTJCO0FBQ2hDLFFBQU07QUFBRUMsWUFBRjtBQUFZQztBQUFaLE1BQXVCQyxxRUFBWSxFQUF6QztBQUVBLFFBQU07QUFBQSxPQUFDQyxLQUFEO0FBQUEsT0FBUUM7QUFBUixNQUFvQkMsc0RBQVEsQ0FBQyxLQUFELENBQWxDO0FBRUFDLHlEQUFTLENBQUMsTUFBTTtBQUNkQyx3REFBUSxDQUFDQyxZQUFULEdBQXdCQyxJQUF4QixDQUE4QkQsWUFBRCxJQUEyQjtBQUN0RCxVQUFJQSxZQUFKLEVBQWtCO0FBQ2hCUixnQkFBUSxDQUFDTyxvREFBRCxFQUFXRyxTQUFYLEVBQXNCLElBQXRCLENBQVIsQ0FBb0NDLEtBQXBDLENBQTBDLE1BQU07QUFDOUNQLGtCQUFRLENBQUMsSUFBRCxDQUFSO0FBQ0QsU0FGRDtBQUdELE9BSkQsTUFJTztBQUNMQSxnQkFBUSxDQUFDLElBQUQsQ0FBUjtBQUNEO0FBQ0YsS0FSRDtBQVNELEdBVlEsRUFVTixFQVZNLENBQVQsQ0FMZ0MsQ0FlekI7QUFFUDs7QUFDQUUseURBQVMsQ0FBQyxNQUFNO0FBQ2QsUUFBSSxDQUFDSCxLQUFELElBQVVGLE1BQWQsRUFBc0I7QUFDcEJHLGNBQVEsQ0FBQyxJQUFELENBQVI7QUFDRDtBQUNGLEdBSlEsRUFJTixDQUFDRCxLQUFELEVBQVFGLE1BQVIsQ0FKTSxDQUFUO0FBTUEsU0FBT0UsS0FBUDtBQUNEO0FBRU0sU0FBU1MsbUJBQVQsQ0FBNkJDLFFBQWlCLEdBQUcsS0FBakQsRUFBd0Q7QUFDN0QsUUFBTTtBQUFFWixVQUFGO0FBQVVhLFNBQVY7QUFBaUJkO0FBQWpCLE1BQThCRSxxRUFBWSxFQUFoRDtBQUVBSSx5REFBUyxDQUFDLE1BQVc7QUFDbkIsVUFBTTtBQUFFUztBQUFGLFFBQWVDLE1BQXJCOztBQUNBLFFBQUlELFFBQVEsSUFBSUEsUUFBUSxDQUFDRSxFQUFyQixJQUEyQixDQUFDaEIsTUFBNUIsSUFBc0MsQ0FBQ2EsS0FBdkMsSUFBZ0QsQ0FBQ0QsUUFBckQsRUFBK0Q7QUFDN0QsWUFBTUssYUFBYSxHQUFHLE1BQU07QUFDMUJDLGVBQU8sQ0FBQ0MsR0FBUixDQUFZLDBCQUFaO0FBQ0FwQixnQkFBUSxDQUFDTyxvREFBRCxDQUFSO0FBQ0QsT0FIRDs7QUFJQSxZQUFNYyxrQkFBa0IsR0FBSUMsT0FBRCxJQUE4QjtBQUN2REgsZUFBTyxDQUFDQyxHQUFSLENBQVksNENBQVosRUFBMERFLE9BQTFEO0FBQ0F0QixnQkFBUSxDQUFDTyxvREFBRCxDQUFSO0FBQ0QsT0FIRDs7QUFJQSxZQUFNZ0IscUJBQXFCLEdBQUlDLFFBQUQsSUFBd0I7QUFDcERMLGVBQU8sQ0FBQ0MsR0FBUixDQUFZLCtDQUFaLEVBQTZESSxRQUE3RDs7QUFDQSxZQUFJQSxRQUFRLENBQUNDLE1BQVQsR0FBa0IsQ0FBdEIsRUFBeUI7QUFDdkJ6QixrQkFBUSxDQUFDTyxvREFBRCxDQUFSO0FBQ0Q7QUFDRixPQUxEOztBQU1BLFlBQU1tQixvQkFBb0IsR0FBSUMsU0FBRCxJQUFnQztBQUMzRFIsZUFBTyxDQUFDQyxHQUFSLENBQVksOENBQVosRUFBNERPLFNBQTVEO0FBQ0EzQixnQkFBUSxDQUFDTyxvREFBRCxDQUFSO0FBQ0QsT0FIRDs7QUFLQVEsY0FBUSxDQUFDRSxFQUFULENBQVksU0FBWixFQUF1QkMsYUFBdkI7QUFDQUgsY0FBUSxDQUFDRSxFQUFULENBQVksY0FBWixFQUE0Qkksa0JBQTVCO0FBQ0FOLGNBQVEsQ0FBQ0UsRUFBVCxDQUFZLGlCQUFaLEVBQStCTSxxQkFBL0I7QUFDQVIsY0FBUSxDQUFDRSxFQUFULENBQVksZ0JBQVosRUFBOEJTLG9CQUE5QjtBQUVBLGFBQU8sTUFBTTtBQUNYLFlBQUlYLFFBQVEsQ0FBQ2EsY0FBYixFQUE2QjtBQUMzQmIsa0JBQVEsQ0FBQ2EsY0FBVCxDQUF3QixTQUF4QixFQUFtQ1YsYUFBbkM7QUFDQUgsa0JBQVEsQ0FBQ2EsY0FBVCxDQUF3QixjQUF4QixFQUF3Q1Asa0JBQXhDO0FBQ0FOLGtCQUFRLENBQUNhLGNBQVQsQ0FBd0IsaUJBQXhCLEVBQTJDTCxxQkFBM0M7QUFDQVIsa0JBQVEsQ0FBQ2EsY0FBVCxDQUF3QixnQkFBeEIsRUFBMENGLG9CQUExQztBQUNEO0FBQ0YsT0FQRDtBQVFEO0FBQ0YsR0FwQ1EsRUFvQ04sQ0FBQ3pCLE1BQUQsRUFBU2EsS0FBVCxFQUFnQkQsUUFBaEIsRUFBMEJiLFFBQTFCLENBcENNLENBQVQ7QUFxQ0QiLCJmaWxlIjoiLi9ob29rcy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVdlYjNSZWFjdCB9IGZyb20gJ0B3ZWIzLXJlYWN0L2NvcmUnXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IGluamVjdGVkIH0gZnJvbSAnLi9jb25uZWN0b3JzJ1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlRWFnZXJDb25uZWN0KCkge1xuICBjb25zdCB7IGFjdGl2YXRlLCBhY3RpdmUgfSA9IHVzZVdlYjNSZWFjdCgpXG5cbiAgY29uc3QgW3RyaWVkLCBzZXRUcmllZF0gPSB1c2VTdGF0ZShmYWxzZSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGluamVjdGVkLmlzQXV0aG9yaXplZCgpLnRoZW4oKGlzQXV0aG9yaXplZDogYm9vbGVhbikgPT4ge1xuICAgICAgaWYgKGlzQXV0aG9yaXplZCkge1xuICAgICAgICBhY3RpdmF0ZShpbmplY3RlZCwgdW5kZWZpbmVkLCB0cnVlKS5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgc2V0VHJpZWQodHJ1ZSlcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRyaWVkKHRydWUpXG4gICAgICB9XG4gICAgfSlcbiAgfSwgW10pIC8vIGludGVudGlvbmFsbHkgb25seSBydW5uaW5nIG9uIG1vdW50IChtYWtlIHN1cmUgaXQncyBvbmx5IG1vdW50ZWQgb25jZSA6KSlcblxuICAvLyBpZiB0aGUgY29ubmVjdGlvbiB3b3JrZWQsIHdhaXQgdW50aWwgd2UgZ2V0IGNvbmZpcm1hdGlvbiBvZiB0aGF0IHRvIGZsaXAgdGhlIGZsYWdcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXRyaWVkICYmIGFjdGl2ZSkge1xuICAgICAgc2V0VHJpZWQodHJ1ZSlcbiAgICB9XG4gIH0sIFt0cmllZCwgYWN0aXZlXSlcblxuICByZXR1cm4gdHJpZWRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUluYWN0aXZlTGlzdGVuZXIoc3VwcHJlc3M6IGJvb2xlYW4gPSBmYWxzZSkge1xuICBjb25zdCB7IGFjdGl2ZSwgZXJyb3IsIGFjdGl2YXRlIH0gPSB1c2VXZWIzUmVhY3QoKVxuXG4gIHVzZUVmZmVjdCgoKTogYW55ID0+IHtcbiAgICBjb25zdCB7IGV0aGVyZXVtIH0gPSB3aW5kb3cgYXMgYW55XG4gICAgaWYgKGV0aGVyZXVtICYmIGV0aGVyZXVtLm9uICYmICFhY3RpdmUgJiYgIWVycm9yICYmICFzdXBwcmVzcykge1xuICAgICAgY29uc3QgaGFuZGxlQ29ubmVjdCA9ICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJIYW5kbGluZyAnY29ubmVjdCcgZXZlbnRcIilcbiAgICAgICAgYWN0aXZhdGUoaW5qZWN0ZWQpXG4gICAgICB9XG4gICAgICBjb25zdCBoYW5kbGVDaGFpbkNoYW5nZWQgPSAoY2hhaW5JZDogc3RyaW5nIHwgbnVtYmVyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiSGFuZGxpbmcgJ2NoYWluQ2hhbmdlZCcgZXZlbnQgd2l0aCBwYXlsb2FkXCIsIGNoYWluSWQpXG4gICAgICAgIGFjdGl2YXRlKGluamVjdGVkKVxuICAgICAgfVxuICAgICAgY29uc3QgaGFuZGxlQWNjb3VudHNDaGFuZ2VkID0gKGFjY291bnRzOiBzdHJpbmdbXSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkhhbmRsaW5nICdhY2NvdW50c0NoYW5nZWQnIGV2ZW50IHdpdGggcGF5bG9hZFwiLCBhY2NvdW50cylcbiAgICAgICAgaWYgKGFjY291bnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBhY3RpdmF0ZShpbmplY3RlZClcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgaGFuZGxlTmV0d29ya0NoYW5nZWQgPSAobmV0d29ya0lkOiBzdHJpbmcgfCBudW1iZXIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJIYW5kbGluZyAnbmV0d29ya0NoYW5nZWQnIGV2ZW50IHdpdGggcGF5bG9hZFwiLCBuZXR3b3JrSWQpXG4gICAgICAgIGFjdGl2YXRlKGluamVjdGVkKVxuICAgICAgfVxuXG4gICAgICBldGhlcmV1bS5vbignY29ubmVjdCcsIGhhbmRsZUNvbm5lY3QpXG4gICAgICBldGhlcmV1bS5vbignY2hhaW5DaGFuZ2VkJywgaGFuZGxlQ2hhaW5DaGFuZ2VkKVxuICAgICAgZXRoZXJldW0ub24oJ2FjY291bnRzQ2hhbmdlZCcsIGhhbmRsZUFjY291bnRzQ2hhbmdlZClcbiAgICAgIGV0aGVyZXVtLm9uKCduZXR3b3JrQ2hhbmdlZCcsIGhhbmRsZU5ldHdvcmtDaGFuZ2VkKVxuXG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBpZiAoZXRoZXJldW0ucmVtb3ZlTGlzdGVuZXIpIHtcbiAgICAgICAgICBldGhlcmV1bS5yZW1vdmVMaXN0ZW5lcignY29ubmVjdCcsIGhhbmRsZUNvbm5lY3QpXG4gICAgICAgICAgZXRoZXJldW0ucmVtb3ZlTGlzdGVuZXIoJ2NoYWluQ2hhbmdlZCcsIGhhbmRsZUNoYWluQ2hhbmdlZClcbiAgICAgICAgICBldGhlcmV1bS5yZW1vdmVMaXN0ZW5lcignYWNjb3VudHNDaGFuZ2VkJywgaGFuZGxlQWNjb3VudHNDaGFuZ2VkKVxuICAgICAgICAgIGV0aGVyZXVtLnJlbW92ZUxpc3RlbmVyKCduZXR3b3JrQ2hhbmdlZCcsIGhhbmRsZU5ldHdvcmtDaGFuZ2VkKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCBbYWN0aXZlLCBlcnJvciwgc3VwcHJlc3MsIGFjdGl2YXRlXSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks.ts\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9tb2R1bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/providers */ \"@ethersproject/providers\");\n/* harmony import */ var _ethersproject_providers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ethersproject_providers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ethersproject_units__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/units */ \"@ethersproject/units\");\n/* harmony import */ var _ethersproject_units__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ethersproject_units__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3-react/core */ \"@web3-react/core\");\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3-react/injected-connector */ \"@web3-react/injected-connector\");\n/* harmony import */ var _web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_Spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Spinner */ \"./components/Spinner.tsx\");\n/* harmony import */ var _connectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../connectors */ \"./connectors.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../hooks */ \"./hooks.ts\");\nvar _jsxFileName = \"/Users/thinh/Development/work/web3-react-connector/example/v6/pages/index.tsx\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;\n\n\n\n\n\n\n\n\nvar ConnectorNames;\n\n(function (ConnectorNames) {\n  ConnectorNames[\"Injected\"] = \"Injected\";\n  ConnectorNames[\"Bitski\"] = \"Bitski\";\n})(ConnectorNames || (ConnectorNames = {}));\n\nconst connectorsByName = {\n  [ConnectorNames.Injected]: _connectors__WEBPACK_IMPORTED_MODULE_6__[\"injected\"],\n  [ConnectorNames.Bitski]: _connectors__WEBPACK_IMPORTED_MODULE_6__[\"bitski\"]\n};\n\nfunction getErrorMessage(error) {\n  if (error instanceof _web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_3__[\"NoEthereumProviderError\"]) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n  } else if (error instanceof _web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"UnsupportedChainIdError\"]) {\n    return \"You're connected to an unsupported network.\";\n  } else if (error instanceof _web3_react_injected_connector__WEBPACK_IMPORTED_MODULE_3__[\"UserRejectedRequestError\"]) {\n    return 'Please authorize this website to access your Ethereum account.';\n  } else {\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n  }\n}\n\nfunction getLibrary(provider) {\n  console.log(provider);\n  const library = new _ethersproject_providers__WEBPACK_IMPORTED_MODULE_0__[\"Web3Provider\"](provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n  return __jsx(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"Web3ReactProvider\"], {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n});\n\nfunction ChainId() {\n  const {\n    chainId\n  } = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"useWeb3React\"])();\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Chain Id\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"chain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"\\u26D3\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, chainId !== null && chainId !== void 0 ? chainId : ''));\n}\n\nfunction BlockNumber() {\n  const {\n    chainId,\n    library\n  } = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"useWeb3React\"])();\n  const [blockNumber, setBlockNumber] = react__WEBPACK_IMPORTED_MODULE_4___default.a.useState();\n  react__WEBPACK_IMPORTED_MODULE_4___default.a.useEffect(() => {\n    if (!!library) {\n      debugger;\n      let stale = false;\n      library.getBlockNumber().then(blockNumber => {\n        if (!stale) {\n          setBlockNumber(blockNumber);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBlockNumber(null);\n        }\n      });\n\n      const updateBlockNumber = blockNumber => {\n        setBlockNumber(blockNumber);\n      };\n\n      library.on('block', updateBlockNumber);\n      return () => {\n        stale = true;\n        library.removeListener('block', updateBlockNumber);\n        setBlockNumber(undefined);\n      };\n    }\n  }, [library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Block Number\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDD22\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, blockNumber === null ? 'Error' : blockNumber !== null && blockNumber !== void 0 ? blockNumber : ''));\n}\n\nfunction Account() {\n  const {\n    account\n  } = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"useWeb3React\"])();\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Account\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"robot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDD16\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, account === null ? '-' : account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : ''));\n}\n\nfunction Balance() {\n  const {\n    account,\n    library,\n    chainId\n  } = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"useWeb3React\"])();\n  const [balance, setBalance] = react__WEBPACK_IMPORTED_MODULE_4___default.a.useState();\n  react__WEBPACK_IMPORTED_MODULE_4___default.a.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n      library.getBalance(account).then(balance => {\n        if (!stale) {\n          setBalance(balance);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBalance(null);\n        }\n      });\n      return () => {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"Balance\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCB0\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, balance === null ? 'Error' : balance ? `Ξ${Object(_ethersproject_units__WEBPACK_IMPORTED_MODULE_1__[\"formatEther\"])(balance)}` : ''));\n}\n\nfunction Header() {\n  const {\n    active,\n    error\n  } = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"useWeb3React\"])();\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"h1\", {\n    style: {\n      margin: '1rem',\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, active ? '🟢' : error ? '🔴' : '🟠'), __jsx(\"h3\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: '1fr min-content 1fr',\n      maxWidth: '20rem',\n      lineHeight: '2rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(ChainId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }), __jsx(BlockNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }), __jsx(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }), __jsx(Balance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction App() {\n  const context = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[\"useWeb3React\"])();\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    error\n  } = context; // handle logic to recognize the connector currently being activated\n\n  const [activatingConnector, setActivatingConnector] = react__WEBPACK_IMPORTED_MODULE_4___default.a.useState();\n  react__WEBPACK_IMPORTED_MODULE_4___default.a.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\n  const triedEager = Object(_hooks__WEBPACK_IMPORTED_MODULE_7__[\"useEagerConnect\"])(); // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\n  Object(_hooks__WEBPACK_IMPORTED_MODULE_7__[\"useInactiveListener\"])(!triedEager || !!activatingConnector);\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }), __jsx(\"hr\", {\n    style: {\n      margin: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: '1fr 1fr',\n      maxWidth: '20rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, Object.keys(connectorsByName).map(name => {\n    const currentConnector = connectorsByName[name];\n    const activating = currentConnector === activatingConnector;\n    const connected = currentConnector === connector;\n    const disabled = !triedEager || !!activatingConnector || connected || !!error;\n    return __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n        cursor: disabled ? 'unset' : 'pointer',\n        position: 'relative'\n      },\n      disabled: disabled,\n      key: name,\n      onClick: () => {\n        setActivatingConnector(currentConnector);\n        activate(connectorsByName[name]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        color: 'black',\n        margin: '0 0 0 1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, activating && __jsx(_components_Spinner__WEBPACK_IMPORTED_MODULE_5__[\"Spinner\"], {\n      color: 'black',\n      style: {\n        height: '25%',\n        marginLeft: '-1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 32\n      }\n    }), connected && __jsx(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    }, \"\\u2705\")), name);\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, (active || error) && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      marginTop: '2rem',\n      borderRadius: '1rem',\n      borderColor: 'red',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      deactivate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, \"Deactivate\"), !!error && __jsx(\"h4\", {\n    style: {\n      marginTop: '1rem',\n      marginBottom: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error))), __jsx(\"hr\", {\n    style: {\n      margin: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: 'fit-content',\n      maxWidth: '20rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, !!(library && account) && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      borderRadius: '1rem',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      library.getSigner(account).signMessage('👋').then(signature => {\n        window.alert(`Success!\\n\\n${signature}`);\n      }).catch(error => {\n        window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''));\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, \"Sign Message\"), connector === connectorsByName[ConnectorNames.Bitski] && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      borderRadius: '1rem',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      ;\n      connector.close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, \"Kill Bitski Session\")));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "@ethersproject/providers":
/*!*******************************************!*\
  !*** external "@ethersproject/providers" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"@ethersproject/providers\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJAZXRoZXJzcHJvamVjdC9wcm92aWRlcnNcIj9lZjFjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IkBldGhlcnNwcm9qZWN0L3Byb3ZpZGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIkBldGhlcnNwcm9qZWN0L3Byb3ZpZGVyc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///@ethersproject/providers\n");

/***/ }),

/***/ "@ethersproject/units":
/*!***************************************!*\
  !*** external "@ethersproject/units" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"@ethersproject/units\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJAZXRoZXJzcHJvamVjdC91bml0c1wiPzhmMmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiQGV0aGVyc3Byb2plY3QvdW5pdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJAZXRoZXJzcHJvamVjdC91bml0c1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///@ethersproject/units\n");

/***/ }),

/***/ "@web3-react/core":
/*!***********************************!*\
  !*** external "@web3-react/core" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"@web3-react/core\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJAd2ViMy1yZWFjdC9jb3JlXCI/ODZjMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJAd2ViMy1yZWFjdC9jb3JlLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiQHdlYjMtcmVhY3QvY29yZVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///@web3-react/core\n");

/***/ }),

/***/ "@web3-react/injected-connector":
/*!*************************************************!*\
  !*** external "@web3-react/injected-connector" ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"@web3-react/injected-connector\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJAd2ViMy1yZWFjdC9pbmplY3RlZC1jb25uZWN0b3JcIj9kMjVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IkB3ZWIzLXJlYWN0L2luamVjdGVkLWNvbm5lY3Rvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIkB3ZWIzLXJlYWN0L2luamVjdGVkLWNvbm5lY3RvclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///@web3-react/injected-connector\n");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"buffer\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJidWZmZXJcIj9iZmZhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImJ1ZmZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJ1ZmZlclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///buffer\n");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"crypto\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjcnlwdG9cIj80Yzc2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImNyeXB0by5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImNyeXB0b1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///crypto\n");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"events\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJldmVudHNcIj83YTdlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImV2ZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImV2ZW50c1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///events\n");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"http\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJodHRwXCI/OGQxOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJodHRwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiaHR0cFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///http\n");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"https\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJodHRwc1wiP2Q1NTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiaHR0cHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJodHRwc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///https\n");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"punycode\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwdW55Y29kZVwiPzczMzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicHVueWNvZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJwdW55Y29kZVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///punycode\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"stream\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJzdHJlYW1cIj83NTdmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6InN0cmVhbS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInN0cmVhbVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///stream\n");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"url\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ1cmxcIj82MWU4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6InVybC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInVybFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///url\n");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"util\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ1dGlsXCI/YmUwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJ1dGlsLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwidXRpbFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///util\n");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"zlib\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ6bGliXCI/ZTU5MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJ6bGliLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiemxpYlwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///zlib\n");

/***/ })

/******/ });